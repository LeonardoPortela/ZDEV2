FUNCTION Z_LES_VERIFICA_PED_ADM.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_TKNUM) TYPE  TKNUM
*"  EXCEPTIONS
*"      ADIANTAMENTO
*"      PEDAGIO
*"----------------------------------------------------------------------

  DATA: WA_VTTK      TYPE VTTK,
        WA_ZLEST0027 TYPE ZLEST0027,
        VG_BRANCH    TYPE J_1BBRANC_,
        VG_TDLNR     TYPE TDLNR,
        WA_ZLEST0103 TYPE ZLEST0103,
        WK_VTTP      TYPE VTTP,
        WK_LIPS      TYPE LIPS,
        WK_ZLEST0090 TYPE ZLEST0090,
        IT_ZLEST0002 TYPE TABLE OF ZLEST0002 WITH HEADER LINE,
        VAR_QTD_EIXO TYPE I,
        WA_ZLEST0091 TYPE ZLEST0091,
        WA_CARD      TYPE ZLEST0002_CARD,
        WA_VTPA      TYPE VTPA,
        WA_LFA1      TYPE LFA1,
        WA_KNA1      TYPE KNA1,
        WA_ZLEST0084 TYPE ZLEST0084.

  DATA: ANSWER TYPE C.

  SELECT SINGLE * INTO WA_VTTK
    FROM VTTK
   WHERE TKNUM EQ P_TKNUM.

  "Margem de Adiantamento
  SELECT SINGLE BUKRS
    INTO VL_BUKRS
    FROM TTDS
   WHERE TPLST = WA_VTTK-TPLST.

  VG_BRANCH = WA_VTTK-TPLST.
  VG_TDLNR  = WA_VTTK-TDLNR.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      INPUT  = VG_BRANCH
    IMPORTING
      OUTPUT = VG_BRANCH.

  CALL FUNCTION 'Z_CENTRO_REAL_VIRTUAL'
    EXPORTING
      CENTRO               = VG_BRANCH
    IMPORTING
      CENTRO_OUT           = VG_BRANCH
    EXCEPTIONS
      INFORMAR_CENTRO      = 1
      NAO_CENTRO_R_VIRTUAL = 2
      INFORMAR_CENTRO_OUT  = 3
      INFORMAR_CENTRO_V    = 4
      OTHERS               = 5.

  IF SY-SUBRC IS NOT INITIAL.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING ADIANTAMENTO.
  ENDIF.

  DATA: LT_PC_VEICULOS TYPE RANGE OF ZPC_VEICULO.

  LT_PC_VEICULOS = VALUE #( SIGN = 'I'  OPTION = 'EQ' ( LOW = WA_VTTK-TEXT1(7) ) ( LOW = WA_VTTK-TEXT2(7) ) ( LOW = WA_VTTK-TEXT3(7) ) ( LOW = WA_VTTK-TEXT4(7) ) ).
  DELETE LT_PC_VEICULOS WHERE LOW EQ SPACE.

  IF LT_PC_VEICULOS IS NOT INITIAL.
    SELECT *
      FROM ZLEST0002
      INTO TABLE IT_ZLEST0002
     WHERE PC_VEICULO IN LT_PC_VEICULOS.
  ENDIF.

  IF WA_VTTK-TEXT1 IS NOT INITIAL.
    READ TABLE IT_ZLEST0002 WITH KEY PC_VEICULO = WA_VTTK-TEXT1(7).
    IF SY-SUBRC IS INITIAL.
      SELECT SINGLE * INTO WA_ZLEST0103
        FROM ZLEST0103
       WHERE BUKRS  EQ VL_BUKRS
         AND BRANCH EQ VG_BRANCH
         AND TDLNR  EQ IT_ZLEST0002-PROPRIETARIO.
    ENDIF.
  ELSE.
    SY-SUBRC = 4.
  ENDIF.

  IF SY-SUBRC IS NOT INITIAL.
    SELECT SINGLE * INTO WA_ZLEST0103
      FROM ZLEST0103
     WHERE BUKRS  = VL_BUKRS
       AND BRANCH = VG_BRANCH
       AND TDLNR  = SPACE.
  ENDIF.

  IF SY-SUBRC IS NOT INITIAL.
    MESSAGE E031(ZLES) WITH VL_BUKRS VG_BRANCH RAISING ADIANTAMENTO.
  ENDIF.

  CHECK IT_ZLEST0002[] IS NOT INITIAL.

  CHECK WA_VTTK-ROUTE IS NOT INITIAL.

  "Verifica Itinerário sem determinação p/ pedágio Sim/Não (ZLES0027)!
  SELECT SINGLE * INTO WA_ZLEST0027
    FROM ZLEST0027
   WHERE ROUTE = WA_VTTK-ROUTE.

  IF SY-SUBRC IS NOT INITIAL.
    MESSAGE E092(ZLES) RAISING PEDAGIO.
  ENDIF.

  "Tem Pedágio
  CHECK WA_ZLEST0027-CK_PEDAGIO EQ ABAP_TRUE.

  SELECT SINGLE * FROM VTTP INTO WK_VTTP WHERE TKNUM EQ WA_VTTK-TKNUM.
  SELECT SINGLE * FROM LIPS INTO WK_LIPS WHERE VBELN EQ WK_VTTP-VBELN.

  CHECK SY-SUBRC IS INITIAL.

  CALL FUNCTION 'Z_CENTRO_REAL_VIRTUAL'
    EXPORTING
      CENTRO               = WK_LIPS-WERKS
    IMPORTING
      CENTRO_REAL          = WK_ZLEST0090-WERKS
    EXCEPTIONS
      INFORMAR_CENTRO      = 1
      NAO_CENTRO_R_VIRTUAL = 2
      INFORMAR_CENTRO_OUT  = 3
      INFORMAR_CENTRO_V    = 4
      OTHERS               = 5.

  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  SELECT SINGLE * FROM ZLEST0090 INTO WK_ZLEST0090 WHERE WERKS EQ WK_ZLEST0090-WERKS AND TP_OP EQ 'E'.

  "Somente continuar se for eletrônico o agente de pedágio
  CHECK SY-SUBRC IS INITIAL.

  VAR_QTD_EIXO = 0.

  LOOP AT IT_ZLEST0002.
    VAR_QTD_EIXO = VAR_QTD_EIXO + IT_ZLEST0002-QT_EIXO.
  ENDLOOP.

  SELECT SINGLE * FROM ZLEST0091 INTO WA_ZLEST0091
   WHERE QTD_EIXO EQ VAR_QTD_EIXO.

  IF SY-SUBRC IS NOT INITIAL.
    MESSAGE E096(ZLES) WITH VAR_QTD_EIXO RAISING PEDAGIO.
  ENDIF.

*  SELECT SINGLE * INTO WA_CARD
*    FROM ZLEST0002_CARD
*   WHERE PC_VEICULO EQ WA_VTTK-TEXT1(7).
*
*  IF SY-SUBRC IS NOT INITIAL.
*    MESSAGE E097(ZLES) WITH WA_VTTK-TEXT1(7) RAISING PEDAGIO.
*  ENDIF.

  "Busca de Rota TipFrete """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

  "PC - Ponto de Coleta
  CLEAR: WA_VTPA.
  SELECT SINGLE * INTO WA_VTPA
    FROM VTPA
   WHERE VBELN EQ WA_VTTK-TKNUM
     AND PARVW EQ 'PC'.
  CHECK SY-SUBRC IS INITIAL.

  SELECT SINGLE * FROM LFA1 INTO WA_LFA1 WHERE LIFNR EQ WA_VTPA-LIFNR.
  CHECK SY-SUBRC IS INITIAL.

  "LR - Local de Entrega
  CLEAR: WA_VTPA.
  SELECT SINGLE * INTO WA_VTPA
    FROM VTPA
    WHERE VBELN EQ WA_VTTK-TKNUM
      AND PARVW EQ 'LR'.

  CHECK SY-SUBRC IS INITIAL.

  SELECT SINGLE * FROM KNA1 INTO WA_KNA1 WHERE KUNNR EQ WA_VTPA-KUNNR.
  CHECK SY-SUBRC IS INITIAL.

  "Verificar Método da Filial para Pedágio
  SELECT * INTO TABLE @DATA(IT_ZLEST0090) FROM ZLEST0090
    WHERE BUKRS      EQ @VL_BUKRS
      AND WERKS      EQ @VG_BRANCH
      AND TP_SERVICO EQ '1'.

  LOOP AT IT_ZLEST0090 INTO DATA(WA_ZLEST0090).
    CASE WA_ZLEST0090-TP_ADM.
      WHEN '03'."	REPOM S.A.

        SELECT SINGLE * INTO @DATA(WA_J_1BBRANCH)
          FROM J_1BBRANCH
         WHERE BRANCH EQ @VG_TDLNR+6(4).

        SELECT * INTO TABLE @DATA(IT_ZLEST0121)
          FROM ZLEST0121
         WHERE BUKRS          EQ @WA_J_1BBRANCH-BUKRS
           AND BRANCH         EQ @WA_J_1BBRANCH-BRANCH
           AND CD_PAIS        EQ 'BR'
           AND CD_CID_ORIGEM  EQ @WA_LFA1-TXJCD
           AND CD_CID_DESTINO EQ @WA_KNA1-TXJCD.

        "135  Não Encontrado Rota REPOM, de &1 para &2 e Filial &3!
        IF SY-SUBRC IS NOT INITIAL.

          READ TABLE IT_ZLEST0090 WITH KEY CK_DEFAULT = ABAP_TRUE INTO DATA(WA_PEDAGIO_DEFAUL).
          IF ( WA_PEDAGIO_DEFAUL-TP_ADM EQ '03' ) AND ( WA_PEDAGIO_DEFAUL-TP_OP EQ 'E' ).
            MESSAGE I135(ZLES) WITH WA_LFA1-TXJCD WA_KNA1-TXJCD WA_J_1BBRANCH-BRANCH.
            MESSAGE S136(ZLES) INTO DATA(LC_TEXTO).

            CALL FUNCTION 'POPUP_TO_CONFIRM'
              EXPORTING
                TITLEBAR              = 'Atenção!'
                TEXT_QUESTION         = LC_TEXTO
                TEXT_BUTTON_1         = 'Sim'
                ICON_BUTTON_1         = 'ICON_CHECKED'
                TEXT_BUTTON_2         = 'Não'
                ICON_BUTTON_2         = 'ICON_INCOMPLETE'
                DEFAULT_BUTTON        = '2'
                DISPLAY_CANCEL_BUTTON = ' '
              IMPORTING
                ANSWER                = ANSWER
              EXCEPTIONS
                TEXT_NOT_FOUND        = 1
                OTHERS                = 2.

            IF SY-SUBRC IS NOT INITIAL OR ANSWER NE '1'.
              MESSAGE S135(ZLES) WITH WA_LFA1-TXJCD WA_KNA1-TXJCD WA_J_1BBRANCH-BRANCH RAISING PEDAGIO.
            ENDIF.
          ENDIF.
        ENDIF.

      WHEN '09'."	(TipFrete) UNIK S.A.
        SELECT SINGLE * INTO WA_ZLEST0084
          FROM ZLEST0084
         WHERE MUNIC_ORIGEM  EQ WA_LFA1-TXJCD+3(12)
           AND MUNIC_DESTINO EQ WA_KNA1-TXJCD+3(12)
           AND CAT_VEICULO   EQ WA_ZLEST0091-CATEGORIA
           AND PRIORIDADE    EQ ABAP_TRUE.

        IF SY-SUBRC IS NOT INITIAL.
          READ TABLE IT_ZLEST0090 WITH KEY CK_DEFAULT = ABAP_TRUE INTO WA_PEDAGIO_DEFAUL.
          IF WA_PEDAGIO_DEFAUL-TP_ADM EQ '09'.
            MESSAGE E098(ZLES) WITH WA_LFA1-TXJCD WA_KNA1-TXJCD WA_ZLEST0091-CATEGORIA RAISING PEDAGIO.
          ENDIF.
        ENDIF.

    ENDCASE.
  ENDLOOP.

  IF WA_VTTK-DALEN LT WA_ZLEST0084-DT_VIGENCIA.
    MESSAGE E099 RAISING PEDAGIO.
  ENDIF.

ENDFUNCTION.
