FUNCTION Z_LES_REGISTRAR_COMBOIO_LOGONE.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(EMPRESA) TYPE  ZLEST0063-BUKRS
*"     REFERENCE(FILIAL) TYPE  ZLEST0063-WERKS
*"     REFERENCE(ANO) TYPE  ZLEST0063-ANO_VIAGEM
*"     REFERENCE(VIAGEM) TYPE  ZLEST0063-NR_VIAGEM
*"     REFERENCE(DATA_SAIDA_ORIGEM) TYPE  SY-DATUM
*"     REFERENCE(HORA_SAIDA_ORIGEM) TYPE  SY-UZEIT
*"     REFERENCE(DATA_PREVISAO_CHEGADA) TYPE  SY-DATUM
*"     REFERENCE(HORA_PREVISAO_CHEGADA) TYPE  SY-UZEIT
*"     REFERENCE(COMMIT) TYPE  ABAP_BOOL DEFAULT ABAP_TRUE
*"     REFERENCE(CD_DESTINO) TYPE  ZCHAR02 OPTIONAL
*"  EXPORTING
*"     REFERENCE(DATA_COMBOIO) TYPE  ZLESE0005
*"     REFERENCE(XML_COMBOIO) TYPE  STRING
*"  EXCEPTIONS
*"      CTE_UNAUTHORIZED
*"      BARCACA_WITHOUT_NF_VINCULADAS
*"      COMBOIO_NOT_FOUND
*"      SERVICE_ERROR
*"      UNKNOWN_ERROR
*"      OAUTH_PARAMETERS_NOT_FOUND
*"      COMBOIO_ALREADY_SENDED
*"----------------------------------------------------------------------
  DATA HTTP_CLIENT             TYPE REF TO IF_HTTP_CLIENT.
  DATA XML_RETURN              TYPE REF TO CL_XML_DOCUMENT.
  DATA LOGONE_BARCACAS         TYPE TABLE OF ZLESE0003.
  DATA LOGONE_NOTAS_VINCULADAS TYPE TABLE OF ZLESE0002.
  DATA LOGONE_REBOCADORES      TYPE TABLE OF ZLESE0004.
  DATA LOGONE_NOTA_VINCULADA   TYPE ZLESE0002.
  DATA CTE_AUTHORIZED          TYPE ABAP_BOOL.
  DATA WL_BRANCH_DETAIL        TYPE BAPIBRANCH.
  DATA V_RESULTADO             TYPE STRING.
  DATA V_RETURN_CODE           TYPE I.
  DATA V_PESO_UTIL             TYPE ZLEST0073-PESO_ORIGEM.

  "//Get service characteristic
  CASE CD_DESTINO.
    WHEN '01'. "Barcarena

      SELECT SINGLE *
        FROM ZAUTH_WEBSERVICE
        INTO @DATA(_AUTH_SERVICE)
       WHERE SERVICE = 'LOGONE_REGISTRAR_COMBOIO_TRANSITO'.

      IF ( _AUTH_SERVICE-URL IS INITIAL ).
        MESSAGE E111(ZLES) WITH '(Logone Barcarena)' RAISING OAUTH_PARAMETERS_NOT_FOUND.
      ENDIF.

    WHEN '02'. "Itaituba

      SELECT SINGLE *
        FROM ZAUTH_WEBSERVICE
        INTO _AUTH_SERVICE
       WHERE SERVICE = 'LOGONE_REG_COMBOIO_TRANSITO_ITAITUBA'.

      IF ( _AUTH_SERVICE-URL IS INITIAL ).
        MESSAGE E111(ZLES) WITH '(Logone Itaituba)' RAISING OAUTH_PARAMETERS_NOT_FOUND.
      ENDIF.

  ENDCASE.

  IF ( _AUTH_SERVICE-URL IS INITIAL ).
    MESSAGE E111(ZLES) RAISING OAUTH_PARAMETERS_NOT_FOUND.
  ENDIF.

  "//Seleciona comboio
  SELECT SINGLE *
    FROM ZLEST0056
    INTO COMBOIO
   WHERE BUKRS      EQ EMPRESA
     AND WERKS      EQ FILIAL
     AND ANO_VIAGEM EQ ANO
     AND NR_VIAGEM  EQ VIAGEM.

  IF SY-SUBRC <> 0.
    MESSAGE E108(ZLES) WITH EMPRESA FILIAL ANO VIAGEM RAISING COMBOIO_NOT_FOUND.
*  ELSEIF COMBOIO-ENVIADO_LOGONE = ABAP_TRUE.
*    MESSAGE E115(ZLES) RAISING COMBOIO_ALREADY_SENDED.
  ENDIF.

  "//Seleciona comboios
  SELECT *
    FROM ZLEST0063
    INTO TABLE COMBOIOS
   WHERE BUKRS      EQ EMPRESA
     AND WERKS      EQ FILIAL
     AND ANO_VIAGEM EQ ANO
     AND NR_VIAGEM  EQ VIAGEM.

  "//Seleciona notas fiscais vinculadas aos comboios
  SELECT *
    FROM ZLEST0060
    INTO TABLE NOTAS_VINCULADAS
 FOR ALL ENTRIES IN COMBOIOS
   WHERE BUKRS      EQ COMBOIOS-BUKRS
     AND WERKS      EQ COMBOIOS-WERKS
     AND ANO_VIAGEM EQ COMBOIOS-ANO_VIAGEM
     AND NOME_EMB   EQ COMBOIOS-NOME_EMB
     AND NR_VIAGEM  EQ COMBOIOS-NR_VIAGEM.

  LOOP AT COMBOIOS INTO DATA(_COMBOIO).
    CASE _COMBOIO-EMBARCACAO.
      WHEN TIPO_EMBARCACAO-BARCACA.
        LOOP AT NOTAS_VINCULADAS
            INTO DATA(_NOTA_VINCULADA) WHERE ( BUKRS      = _COMBOIO-BUKRS      )
                                         AND ( WERKS      = _COMBOIO-WERKS      )
                                         AND ( ANO_VIAGEM = _COMBOIO-ANO_VIAGEM )
                                         AND ( NOME_EMB   = _COMBOIO-NOME_EMB   ).

          PERFORM CTE_IS_AUTHORIZED
            USING _NOTA_VINCULADA-DOCNUM
                  CTE_AUTHORIZED.

          IF ( CTE_AUTHORIZED = ABAP_FALSE ).
            MESSAGE E106(ZLES) WITH _NOTA_VINCULADA-NFNUM _COMBOIO-NOME_EMB RAISING CTE_UNAUTHORIZED.
          ENDIF.

          "Check Status Expedição
          DATA(_ST_EXP) = '0'.

          SELECT SINGLE *
            FROM ZLEST0073 INTO @DATA(_WL_0073)
           WHERE CHAVE_NFE EQ @_NOTA_VINCULADA-CHAVE_NFE.

          IF ( SY-SUBRC EQ 0 ) AND ( _NOTA_VINCULADA-CHAVE_NFE IS NOT INITIAL ) AND
             ( _WL_0073-PESO_ORIGEM EQ _WL_0073-PESO_VINCULADO ) AND
             ( _WL_0073-PESO_VINCULADO > 0 ).
            _ST_EXP = '1'.
          ENDIF.

          CLEAR: V_PESO_UTIL.

          SELECT SINGLE *
            FROM ZSDT0001 INTO @DATA(WL_ZSDT0001)
           WHERE CH_REFERENCIA EQ @_NOTA_VINCULADA-CH_REFERENCIA.

          IF SY-SUBRC EQ 0.
            CALL FUNCTION 'Z_LES_RETENCAO_AQUA'
              EXPORTING
                I_BUKRS         = WL_ZSDT0001-BUKRS
                I_BRANCH        = WL_ZSDT0001-BRANCH
                I_LIFNR         = WL_ZSDT0001-PARID
                I_PESO          = WL_ZSDT0001-PESO_SUBTOTAL
                I_PESO_FISCAL   = WL_ZSDT0001-PESO_FISCAL
              IMPORTING
                E_PESO_LIQUIDO  = V_PESO_UTIL.

            IF V_PESO_UTIL IS INITIAL.
              V_PESO_UTIL = WL_ZSDT0001-PESO_FISCAL.
            ENDIF.

          ENDIF.

          APPEND VALUE #( CHAVENFE   = _NOTA_VINCULADA-CHAVE_NFE
                          ST_EXP     = _ST_EXP
                          PESO_TOTAL = V_PESO_UTIL
                          PESO       = COND #( WHEN _NOTA_VINCULADA-PESO_LIQ_RET IS NOT INITIAL
                                               THEN _NOTA_VINCULADA-PESO_LIQ_RET
                                               ELSE _NOTA_VINCULADA-PESO_FISCAL )
                                             ) TO LOGONE_NOTAS_VINCULADAS.
        ENDLOOP.

        IF ( SY-SUBRC <> 0 ).
          MESSAGE E107(ZLES) WITH _COMBOIO-NOME_EMB RAISING BARCACA_WITHOUT_NF_VINCULADAS.
        ENDIF.

        APPEND VALUE #( IDENTIFICADOR = _COMBOIO-NOME_EMB
                        NOTASFISCAIS  = LOGONE_NOTAS_VINCULADAS
                      ) TO LOGONE_BARCACAS.

        CLEAR LOGONE_NOTAS_VINCULADAS.

      WHEN TIPO_EMBARCACAO-EMPURRADOR OR TIPO_EMBARCACAO-REBOCADOR.
        APPEND VALUE #( IDENTIFICADOR = _COMBOIO-NOME_EMB ) TO LOGONE_REBOCADORES.
    ENDCASE.
  ENDLOOP.

  "//Convert date and time to external format
  PERFORM DATE_AND_TIME_TO_EXTERNAL
    USING DATA_SAIDA_ORIGEM HORA_SAIDA_ORIGEM DATA_COMBOIO-DATA_SAIDA_ORIGEM.

  PERFORM DATE_AND_TIME_TO_EXTERNAL
    USING DATA_PREVISAO_CHEGADA HORA_PREVISAO_CHEGADA DATA_COMBOIO-DATA_PREVISAO_CHEGADA.

  DATA_COMBOIO-IDENTIFICADOR = _COMBOIO-BUKRS && _COMBOIO-WERKS && _COMBOIO-ANO_VIAGEM && _COMBOIO-NR_VIAGEM.
  DATA_COMBOIO-BARCACAS      = LOGONE_BARCACAS.
  DATA_COMBOIO-REBOCADORES   = LOGONE_REBOCADORES.

  CLEAR: WL_BRANCH_DETAIL.
  CALL FUNCTION 'BAPI_BRANCH_GETDETAIL'
    EXPORTING
      COMPANY         =  _COMBOIO-BUKRS
      BRANCH          =  _COMBOIO-WERKS
    IMPORTING
      BRANCH_DETAIL    = WL_BRANCH_DETAIL.

  IF WL_BRANCH_DETAIL-CGC_NUMBER IS NOT INITIAL.
    DATA_COMBOIO-CNPJ_TRANSPORTADOR = WL_BRANCH_DETAIL-CGC_NUMBER.
  ENDIF.

  "//Set XML data
  PERFORM MONTAR_XML_LOGONE
    USING
     DATA_COMBOIO
     CD_DESTINO
     _AUTH_SERVICE-USERNAME
     _AUTH_SERVICE-PASSWORD
     XML_COMBOIO.

  CHECK ( COMMIT = ABAP_TRUE ).

  CASE CD_DESTINO.
    WHEN '01'. "Barcarena

      CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
        EXPORTING
          PERCENTAGE = SY-TABIX
          TEXT       = TEXT-002.

    WHEN '02'. "Itaituba
      CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
        EXPORTING
          PERCENTAGE = SY-TABIX
          TEXT       = TEXT-004.

  ENDCASE.

  "//Call service
  CALL METHOD CL_HTTP_CLIENT=>CREATE_BY_URL
    EXPORTING
      URL                = CONV #( _AUTH_SERVICE-URL )
    IMPORTING
      CLIENT             = HTTP_CLIENT
    EXCEPTIONS
      ARGUMENT_NOT_FOUND = 1
      PLUGIN_NOT_ACTIVE  = 2
      INTERNAL_ERROR     = 3
      OTHERS             = 4.

  CALL METHOD HTTP_CLIENT->REQUEST->SET_HEADER_FIELD
    EXPORTING
      NAME  = '~request_method'
      VALUE = 'POST'.

  CALL METHOD HTTP_CLIENT->REQUEST->SET_HEADER_FIELD
    EXPORTING
      NAME  = '~server_protocol'
      VALUE = 'HTTP/1.1'.

  CALL METHOD HTTP_CLIENT->REQUEST->SET_HEADER_FIELD
    EXPORTING
      NAME  = 'Content-Type'
      VALUE = 'application/xml; charset=UTF-8'.

  CALL METHOD HTTP_CLIENT->REQUEST->SET_CDATA
    EXPORTING
      DATA   = XML_COMBOIO
      OFFSET = 0
      LENGTH = STRLEN( XML_COMBOIO ).

  HTTP_CLIENT->SEND( ).

  CALL METHOD HTTP_CLIENT->RECEIVE
    EXCEPTIONS
      HTTP_COMMUNICATION_FAILURE = 1
      HTTP_INVALID_STATE         = 2
      HTTP_PROCESSING_FAILED     = 3
      OTHERS                     = 4.

  "//Check return content
  CREATE OBJECT XML_RETURN.

  CALL METHOD XML_RETURN->PARSE_STRING
    EXPORTING
      STREAM = HTTP_CLIENT->RESPONSE->GET_CDATA( ).

  HTTP_CLIENT->RESPONSE->GET_STATUS( IMPORTING CODE = V_RETURN_CODE ).

  V_RESULTADO = HTTP_CLIENT->RESPONSE->GET_CDATA( ).

  CALL METHOD XML_RETURN->FIND_NODE_TABLE
    EXPORTING
      TABNAME = 'RetornoVO'
    IMPORTING
      T_NODES = DATA(_NODES).

  TRY.
      DATA(_CODE)    = CAST IF_IXML_NODE( _NODES[ 1 ]-NODE )->GET_VALUE( ).
      DATA(_MESSAGE) = CAST IF_IXML_NODE( _NODES[ 2 ]-NODE )->GET_VALUE( ).
    CATCH CX_SY_ITAB_LINE_NOT_FOUND.
  ENDTRY.

  IF ( _CODE = 0 ).
    IF _MESSAGE IS NOT INITIAL.
      MESSAGE |{ _MESSAGE } - (LOGONE)| TYPE 'E' RAISING SERVICE_ERROR.
    ELSE.
      MESSAGE E110(ZLES) RAISING UNKNOWN_ERROR.
    ENDIF.

*  ELSE.
*    COMBOIO-ENVIADO_LOGONE = ABAP_TRUE.

*    UPDATE ZLEST0056 FROM COMBOIO.
*    COMMIT WORK.
  ENDIF.
ENDFUNCTION.
