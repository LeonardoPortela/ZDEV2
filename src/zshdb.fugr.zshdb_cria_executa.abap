FUNCTION ZSHDB_CRIA_EXECUTA.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(TCODE) TYPE  TCODE
*"     REFERENCE(PARAMS) TYPE  CTU_PARAMS OPTIONAL
*"     REFERENCE(I_CALLBACK_PROGRAM) TYPE  SY-REPID OPTIONAL
*"     REFERENCE(I_CALLBACK_FORMNAME) TYPE  SLIS_FORMNAME OPTIONAL
*"  EXPORTING
*"     REFERENCE(SHDBNR) TYPE  ZSHDBT0001-SHDBNR
*"  TABLES
*"      T_BDC STRUCTURE  BDCDATA
*"      T_RETURN STRUCTURE  BAPIRETURN OPTIONAL
*"  EXCEPTIONS
*"      INTERVAL_NUMBER_NOT_FOUND
*"----------------------------------------------------------------------
  DATA: WL_NR_RANGE TYPE INRI-NRRANGENR,
        WL_OBJECT   TYPE INRI-OBJECT,
        TL_SHDB     TYPE TABLE OF ZSHDBT0001 WITH HEADER LINE,
        WL_SETLEAF  TYPE SETLEAF,
        TL_SETLINET      TYPE TABLE OF SETLEAF WITH HEADER LINE,
        WL_CONT     TYPE SY-TABIX,
        I_HEAD      TYPE TBTCJOB.

  DATA:   WL_JOB_ID   LIKE TBTCJOB-JOBCOUNT.
  DATA:   WL_JOBN(32).

  DATA: BEGIN OF I_STEPLIST OCCURS 10.
          INCLUDE STRUCTURE TBTCSTEP.
  DATA: END OF I_STEPLIST.
  DATA : C_NO(1) TYPE C . "value 'N', " Criação do job

  DATA: WL_TBTCJOB  TYPE  TBTCJOB,
        WL_TBTCSTRT TYPE  TBTCSTRT.

  DATA: LV_REPNAME LIKE  RSVAR-REPORT.           " for variant handling
  DATA: IV_VARNAME LIKE  RALDB-VARIANT VALUE 'SAP_UPGRADE'.
  DATA: IV_VARIANTTEXT  LIKE  VARIT-VTEXT VALUE 'Upgrade variant'.
  DATA: WL_SUBRC TYPE SY-SUBRC.
  DATA: TT_REPORTPARAM TYPE TABLE OF  RSPARAMS WITH HEADER LINE.

  WL_NR_RANGE = '1'.
  WL_OBJECT = 'ZSHDB_NR'.
  REFRESH: TL_SHDB, TT_REPORTPARAM.
  CLEAR: SHDBNR, WL_JOBN, WL_JOB_ID, WL_TBTCJOB, WL_TBTCSTRT.


  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      NR_RANGE_NR             = WL_NR_RANGE
      OBJECT                  = WL_OBJECT
    IMPORTING
      NUMBER                  = SHDBNR
    EXCEPTIONS
      INTERVAL_NOT_FOUND      = 1
      NUMBER_RANGE_NOT_INTERN = 2
      OBJECT_NOT_FOUND        = 3
      QUANTITY_IS_0           = 4
      QUANTITY_IS_NOT_1       = 5
      INTERVAL_OVERFLOW       = 6
      BUFFER_OVERFLOW         = 7
      OTHERS                  = 8.
  IF SY-SUBRC NE 0.
    CLEAR: SHDBNR.
    MESSAGE E836(SD) WITH 'O intervalo de numeração,'
                          'não foi encontrado!' .
  ENDIF.

  CLEAR: WL_CONT.
  LOOP AT T_BDC.
    ADD 1 TO WL_CONT.
    MOVE-CORRESPONDING: T_BDC TO TL_SHDB.
    MOVE: TCODE         TO TL_SHDB-TCODE,
          T_BDC-PROGRAM TO TL_SHDB-PROGRAMA,
          SHDBNR        TO TL_SHDB-SHDBNR,
          WL_CONT       TO TL_SHDB-LINNUM.



    APPEND TL_SHDB.
    CLEAR: TL_SHDB.
  ENDLOOP.

  MODIFY ZSHDBT0001 FROM TABLE TL_SHDB.
  COMMIT WORK AND WAIT.

  SELECT SINGLE *
   FROM SETLEAF
   INTO WL_SETLEAF
    WHERE SETNAME EQ 'MAGGI_JOB_USER'.


  CONCATENATE 'ZEXEC_SHDB' TCODE SHDBNR INTO WL_JOBN SEPARATED BY '|'.


  I_HEAD-JOBNAME = WL_JOBN. " Nome do JOBi_head-sdlstrtdt = sy-datum. " Dia
  I_HEAD-SDLSTRTTM = SY-UZEIT + 20. " Hora de inícioPassa para o Job o nome da Classe de Jobs da Tabela
  I_HEAD-STEPCOUNT = 1.

  TT_REPORTPARAM-SELNAME = 'S_SHDBNR'.
  TT_REPORTPARAM-KIND =  'S'.
  TT_REPORTPARAM-SIGN = 'I'.
  TT_REPORTPARAM-OPTION = 'EQ'.
  TT_REPORTPARAM-LOW = SHDBNR.
  APPEND TT_REPORTPARAM.
  CLEAR TT_REPORTPARAM.

  IF I_CALLBACK_PROGRAM IS NOT INITIAL.
    TT_REPORTPARAM-SELNAME = 'P_PROG'.
    TT_REPORTPARAM-KIND =  'P'.
    TT_REPORTPARAM-SIGN = 'I'.
    TT_REPORTPARAM-OPTION = 'EQ'.
    TT_REPORTPARAM-LOW = I_CALLBACK_PROGRAM.
    APPEND TT_REPORTPARAM.
  ENDIF.

  IF I_CALLBACK_FORMNAME IS NOT INITIAL.
    CLEAR TT_REPORTPARAM.
    TT_REPORTPARAM-SELNAME = 'P_FORM'.
    TT_REPORTPARAM-KIND =  'P'.
    TT_REPORTPARAM-SIGN = 'I'.
    TT_REPORTPARAM-OPTION = 'EQ'.
    TT_REPORTPARAM-LOW = I_CALLBACK_FORMNAME.
    APPEND TT_REPORTPARAM.
    CLEAR TT_REPORTPARAM.
  ENDIF.

  TT_REPORTPARAM-SELNAME = 'P_DISM'.
  TT_REPORTPARAM-KIND =  'P'.
  TT_REPORTPARAM-SIGN = 'I'.
  TT_REPORTPARAM-OPTION = 'EQ'.
  TT_REPORTPARAM-LOW = PARAMS-DISMODE.
  APPEND TT_REPORTPARAM.
  CLEAR TT_REPORTPARAM.

  TT_REPORTPARAM-SELNAME = 'P_UPDM'.
  TT_REPORTPARAM-KIND =  'P'.
  TT_REPORTPARAM-SIGN = 'I'.
  TT_REPORTPARAM-OPTION = 'EQ'.
  TT_REPORTPARAM-LOW = PARAMS-UPDMODE.
  APPEND TT_REPORTPARAM.
  CLEAR TT_REPORTPARAM.

  TT_REPORTPARAM-SELNAME = 'P_DEFS'.
  TT_REPORTPARAM-KIND =  'P'.
  TT_REPORTPARAM-SIGN = 'I'.
  TT_REPORTPARAM-OPTION = 'EQ'.
  TT_REPORTPARAM-LOW = PARAMS-DEFSIZE.
  APPEND TT_REPORTPARAM.
  CLEAR TT_REPORTPARAM.

  TT_REPORTPARAM-SELNAME = 'P_RACO'.
  TT_REPORTPARAM-KIND =  'P'.
  TT_REPORTPARAM-SIGN = 'I'.
  TT_REPORTPARAM-OPTION = 'EQ'.
  TT_REPORTPARAM-LOW = PARAMS-RACOMMIT.
  APPEND TT_REPORTPARAM.
  CLEAR TT_REPORTPARAM.

  TT_REPORTPARAM-SELNAME = 'P_NOBI'.
  TT_REPORTPARAM-KIND =  'P'.
  TT_REPORTPARAM-SIGN = 'I'.
  TT_REPORTPARAM-OPTION = 'EQ'.
  TT_REPORTPARAM-LOW = PARAMS-NOBINPT.
  APPEND TT_REPORTPARAM.
  CLEAR TT_REPORTPARAM.

  LV_REPNAME = 'Z_EXEC_SHDB'.
*    Write the variant first (Insert or Update)
  CALL FUNCTION 'SUBST_WRITE_UPGRADE_VARIANT'
    EXPORTING
      IV_REPORTNAME         = LV_REPNAME
      IV_VARIANTNAME        = IV_VARNAME
      IV_VARIANTTEXT        = IV_VARIANTTEXT
    IMPORTING
      EV_FUNCRC             = WL_SUBRC
    TABLES
      TT_REPORTPARAM        = TT_REPORTPARAM
    EXCEPTIONS
      EXIST_CHECK_FAILED    = 1
      UPDATE_FAILED         = 2
      UPDATE_NOT_AUTHORIZED = 3
      UPDATE_NO_REPORT      = 4
      UPDATE_NO_VARIANT     = 5
      UPDATE_VARIANT_LOCKED = 6
      INSERT_FAILED         = 7
      INSERT_NOT_AUTHORIZED = 8
      INSERT_NO_REPORT      = 9
      INSERT_VARIANT_EXISTS = 10
      INSERT_VARIANT_LOCKED = 11
      OTHERS                = 12.

  I_STEPLIST-PARAMETER = IV_VARNAME. " Nome da variante
  I_STEPLIST-PROGRAM = 'Z_EXEC_SHDB'. " Nome do programa de INBOUNDPassa para o Job o nome da Classe de Jobs da Tabela ZTUP_SERVIDOR
  I_STEPLIST-TYP = 'A'. " Tipo de Job
  I_STEPLIST-AUTHCKNAM = WL_SETLEAF-VALFROM.
  I_STEPLIST-LANGUAGE = SY-LANGU.
  I_STEPLIST-ARCUSER = WL_SETLEAF-VALFROM.

  APPEND I_STEPLIST.


  C_NO = 'N'.
  CALL FUNCTION 'BP_JOB_CREATE'
    EXPORTING
      JOB_CR_DIALOG       = C_NO " Coloque 'Y' se quiser ver
      JOB_CR_HEAD_INP     = I_HEAD " os valores atribuidos
    IMPORTING
      JOB_CR_HEAD_OUT     = WL_TBTCJOB
      JOB_CR_STDT_OUT     = WL_TBTCSTRT
    TABLES
      JOB_CR_STEPLIST     = I_STEPLIST
    EXCEPTIONS
      CANT_CREATE_JOB     = 1
      INVALID_DIALOG_TYPE = 2
      INVALID_JOB_DATA    = 3
      JOB_CREATE_CANCELED = 4
      OTHERS              = 5.

  CALL FUNCTION 'JOB_CLOSE'
    EXPORTING
      JOBNAME   = WL_JOBN
      JOBCOUNT  = WL_TBTCJOB-JOBCOUNT
      STRTIMMED = 'X'.


ENDFUNCTION.
