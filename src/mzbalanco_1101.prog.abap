TABLES: D020S.

*----------------------------------------------------------------------*
***INCLUDE MZBALANCO_1101 .
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF SCREEN 1102 AS SUBSCREEN.
SELECTION-SCREEN BEGIN OF BLOCK Z102 WITH FRAME TITLE TEXT-008.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 01(10) TEXT-001 FOR FIELD P_BUKRS.
PARAMETERS: P_BUKRS TYPE BUKRS OBLIGATORY MATCHCODE OBJECT C_T001.
SELECTION-SCREEN POSITION 20.
PARAMETERS: P_BUTXT TYPE C LENGTH 50 DEFAULT TEXT-060."'<Informe empresa do Demonstrativo>'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(10) TEXT-002 FOR FIELD P_GJAHR.
PARAMETERS: P_GJAHR TYPE GJAHR OBLIGATORY.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(10) TEXT-003 FOR FIELD P_MONAT.
PARAMETERS: P_MONAT TYPE MONAT OBLIGATORY.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(10) TEXT-004 FOR FIELD P_WAERS.
PARAMETERS: P_WAERS TYPE WAERS OBLIGATORY DEFAULT 'BRL' MATCHCODE OBJECT H_TCURC.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(10) TEXT-061 FOR FIELD P_MONAT.
PARAMETERS: P_CMONAT TYPE MONAT.
SELECTION-SCREEN COMMENT 17(10) TEXT-062 FOR FIELD P_MONAT.
PARAMETERS: P_CGJAHR TYPE GJAHR.
SELECTION-SCREEN END OF LINE.

*SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF BLOCK Z102A WITH FRAME TITLE TEXT-009.
PARAMETERS: P_DEM1 TYPE C RADIOBUTTON GROUP DEM DEFAULT 'X' USER-COMMAND OK_DEM1.
PARAMETERS: P_DEM2 TYPE C RADIOBUTTON GROUP DEM.
SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) TEXT-007 FOR FIELD P_ESTR.
PARAMETERS: P_ESTR TYPE VERSN_011 MATCHCODE OBJECT ZH_ZGLT046.
SELECTION-SCREEN POSITION 30.
PARAMETERS: P_ESTT TYPE C LENGTH 50 DEFAULT TEXT-060."'<Informe estrutura do Demonstrativo>'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) TEXT-014 FOR FIELD T_DRE1 MODIF ID DRE.
PARAMETERS: T_DRE1 TYPE VERSN_011 MATCHCODE OBJECT ZVERSN_DRE0000 MODIF ID DRE.
SELECTION-SCREEN POSITION 30.
SELECTION-SCREEN COMMENT 30(20) TEXT-015 FOR FIELD T_DRE2 MODIF ID DRE.
PARAMETERS: T_DRE2 TYPE VERSN_011 MATCHCODE OBJECT ZVERSN_DRE0000 MODIF ID DRE.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: P_VCSV TYPE CHAR01 AS CHECKBOX.
SELECTION-SCREEN COMMENT 03(73) TEXT-010.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: P_ZERAD TYPE CHAR01 AS CHECKBOX DEFAULT ABAP_TRUE.
SELECTION-SCREEN COMMENT 03(73) TEXT-013.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK Z102A.

SELECTION-SCREEN BEGIN OF BLOCK Z103A WITH FRAME TITLE TEXT-012.
PARAMETERS: VARIANT LIKE DISVARIANT-VARIANT.
SELECTION-SCREEN END OF BLOCK Z103A.

" Parâmetro para consolidação de empresa """"""""""""""""""""""""""""""""""""""""""""""""""
SELECTION-SCREEN BEGIN OF BLOCK Z104A WITH FRAME TITLE TEXT-058.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: P_CONSO TYPE CHAR01 AS CHECKBOX USER-COMMAND ACT DEFAULT ABAP_FALSE.
SELECTION-SCREEN COMMENT 03(73) TEXT-059.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) TEXT-016 FOR FIELD P_BUKR2 MODIF ID A.
PARAMETERS: P_BUKR2 TYPE ZGL020_DRE_DADOS-BUKRS MODIF ID A.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) TEXT-014 FOR FIELD T_DRE3 MODIF ID A.
PARAMETERS: T_DRE3 TYPE VERSN_011 MATCHCODE OBJECT ZVERSN_DRE0000 MODIF ID A.
SELECTION-SCREEN POSITION 30.
SELECTION-SCREEN COMMENT 30(20) TEXT-015 FOR FIELD T_DRE4 MODIF ID A.
PARAMETERS: T_DRE4 TYPE VERSN_011 MATCHCODE OBJECT ZVERSN_DRE0000 MODIF ID A.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK Z104A.
" Parâmetro para consolidação de empresa """"""""""""""""""""""""""""""""""""""""""""""""""

PARAMETERS: P_FILE TYPE IBIPPARMS-PATH NO-DISPLAY.

SELECTION-SCREEN END OF BLOCK Z102.
SELECTION-SCREEN END OF SCREEN 1102.



  "PERFORM INIT_VARIANT.
  "PERFORM VARIANT_DEFAULT USING VARIANT.

*---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR VARIANT.
  PERFORM VARIANT_F4 USING VARIANT.

AT SELECTION-SCREEN ON P_BUKRS.
  SELECT SINGLE BUTXT INTO P_BUTXT FROM T001 WHERE BUKRS EQ P_BUKRS.

AT SELECTION-SCREEN ON P_BUKR2.

  DATA: IT_ZGLT057 TYPE TABLE OF ZGLT057 WITH HEADER LINE.

  CLEAR: IT_ZGLT057[].

  IF P_BUKR2 IS NOT INITIAL.
    SELECT * INTO TABLE IT_ZGLT057
      FROM ZGLT057
     WHERE BUKRS_1 EQ P_BUKRS
       AND BUKRS_2 EQ P_BUKR2.

    IF IT_ZGLT057[] IS INITIAL.
      MESSAGE E019 WITH P_BUKRS P_BUKR2.
    ENDIF.
  ENDIF.

AT SELECTION-SCREEN ON P_ESTR.

  DATA: WA_46 TYPE ZGLT046.

  IF SY-UCOMM EQ 'OK_DEM1'.

    CLEAR: SY-UCOMM.

    DATA: VG_TIPO TYPE ZDE_VERSNT.
    CLEAR: P_ESTT.

    IF SY-TCODE EQ 'ZGL036'.
      VG_TIPO = '3'.
    ELSE.
      CASE P_DEM1.
        WHEN ABAP_TRUE.
          VG_TIPO = '1'.
        WHEN ABAP_FALSE.
          VG_TIPO = '2'.
      ENDCASE.
    ENDIF.

    SELECT SINGLE * INTO WA_46 FROM ZGLT046 WHERE VERSNT EQ VG_TIPO.
    IF SY-SUBRC IS NOT INITIAL.
      CLEAR: P_ESTT, P_ESTR.
      "Estrutura para Este tipo de Demonstrativo não Cadastrada!
      MESSAGE S015 DISPLAY LIKE 'E'.
    ELSE.
      P_ESTT = WA_46-VSTXT.
      P_ESTR = WA_46-VERSN.
    ENDIF.

    IF P_BUKRS IS NOT INITIAL.
      SELECT SINGLE BUTXT INTO P_BUTXT FROM T001 WHERE BUKRS EQ P_BUKRS.
    ENDIF.

  ELSEIF SY-UCOMM EQ 'GERAR'.

    IF P_ESTR IS INITIAL.
      "Deve ser informado uma Estrutura p/ Demonstrativo!
      MESSAGE E016.
    ENDIF.

    IF ( P_CMONAT IS INITIAL AND P_CGJAHR IS NOT INITIAL ) OR ( P_CMONAT IS NOT INITIAL AND P_CGJAHR IS INITIAL ).
      "Para comparação deverá ser informado Mês e Ano de comparação
      MESSAGE E026.
    ENDIF.

    IF SY-TCODE EQ 'ZGL036'.
      VG_TIPO = '3'.
    ELSE.
      CASE P_DEM1.
        WHEN ABAP_TRUE.
          VG_TIPO = '1'.
        WHEN ABAP_FALSE.
          VG_TIPO = '2'.
      ENDCASE.
    ENDIF.

    SELECT SINGLE * INTO WA_46 FROM ZGLT046 WHERE VERSNT EQ VG_TIPO AND VERSN EQ P_ESTR.

    IF SY-SUBRC IS NOT INITIAL.
      "Estrutura &1 não compatível com Demonstrativo Selecionado!
      MESSAGE E013 WITH P_ESTR.
    ENDIF.

  ENDIF.

AT SELECTION-SCREEN OUTPUT.

  DATA: WA_ZGLT046 TYPE ZGLT046,
        VG_TIPO    TYPE ZDE_VERSNT,
        WA_ZGLT061 TYPE ZGLT061.

  IF SY-TCODE EQ 'ZGL035'.

    CASE P_DEM1.
      WHEN ABAP_TRUE.
        VG_TIPO = '1'.
      WHEN ABAP_FALSE.
        VG_TIPO = '2'.
    ENDCASE.

    IF P_ESTR IS INITIAL.
      SELECT * INTO WA_ZGLT046 FROM ZGLT046  UP TO 1 ROWS WHERE VERSNT EQ VG_TIPO.
        P_ESTR = WA_ZGLT046-VERSN.
        P_ESTT = WA_ZGLT046-VSTXT.
      ENDSELECT.
    ENDIF.

    LOOP AT SCREEN.

      IF ( SCREEN-GROUP1 EQ 'DRE' ).
        IF P_DEM1 EQ ABAP_TRUE.
          SCREEN-ACTIVE = 0.
          MODIFY SCREEN.
        ENDIF.
      ENDIF.

      IF ( SCREEN-NAME EQ 'P_BUTXT' ) OR
         ( SCREEN-NAME EQ 'P_DESC'  ) OR
         ( SCREEN-NAME EQ 'P_OPCA'  ) OR
         ( SCREEN-NAME EQ 'P_ESTT'  ).
        SCREEN-INPUT      = 0.
        SCREEN-DISPLAY_3D = 0.
      ENDIF.
      IF P_CONSO = 'X'.
        IF SCREEN-GROUP1 = 'A'.
          SCREEN-ACTIVE = 1.
        ENDIF.
      ELSE.
        IF SCREEN-GROUP1 = 'A'.
          SCREEN-ACTIVE = 0.
          CLEAR: P_BUKR2.
        ENDIF.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ELSE.

    VG_TIPO = '3'.

    IF R_ESTR IS INITIAL.
      SELECT * INTO WA_ZGLT046 FROM ZGLT046  UP TO 1 ROWS WHERE VERSNT EQ VG_TIPO.
        R_ESTR = WA_ZGLT046-VERSN.
        R_ESTT = WA_ZGLT046-VSTXT.
      ENDSELECT.
    ENDIF.

    LOOP AT SCREEN.
      IF ( SCREEN-NAME EQ 'R_BUTXT' ) OR
         ( SCREEN-NAME EQ 'R_DESC'  ) OR
         ( SCREEN-NAME EQ 'R_OPCA'  ) OR
         ( SCREEN-NAME EQ 'R_ESTT'  ).
        SCREEN-INPUT      = 0.
        SCREEN-DISPLAY_3D = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.

  ENDIF.

  IF ( P_DEM2 IS NOT INITIAL ) AND ( P_BUKRS IS NOT INITIAL ) AND ( P_GJAHR IS NOT INITIAL ).

    IF T_DRE1 IS INITIAL.
      SELECT SINGLE *
        INTO WA_ZGLT061 FROM ZGLT061
       WHERE BUKRS EQ P_BUKRS
         AND GJAHR EQ P_GJAHR.

      IF SY-SUBRC IS INITIAL.
        T_DRE1 = WA_ZGLT061-VERSN.
      ENDIF.
    ENDIF.

    IF T_DRE2 IS INITIAL.
      WA_ZGLT061-GJAHR = P_GJAHR - 1.
      SELECT SINGLE *
        INTO WA_ZGLT061 FROM ZGLT061
       WHERE BUKRS EQ P_BUKRS
         AND GJAHR EQ WA_ZGLT061-GJAHR.

      IF SY-SUBRC IS INITIAL.
        T_DRE2 = WA_ZGLT061-VERSN.
      ENDIF.
    ENDIF.

    IF P_BUKR2 IS NOT INITIAL.
      IF T_DRE3 IS INITIAL.
        SELECT SINGLE *
          INTO WA_ZGLT061 FROM ZGLT061
         WHERE BUKRS EQ P_BUKR2
           AND GJAHR EQ P_GJAHR.

        IF SY-SUBRC IS INITIAL.
          T_DRE3 = WA_ZGLT061-VERSN.
        ENDIF.
      ENDIF.

      IF T_DRE4 IS INITIAL.
        WA_ZGLT061-GJAHR = P_GJAHR - 1.
        SELECT SINGLE *
          INTO WA_ZGLT061 FROM ZGLT061
         WHERE BUKRS EQ P_BUKR2
           AND GJAHR EQ WA_ZGLT061-GJAHR.

        IF SY-SUBRC IS INITIAL.
          T_DRE4 = WA_ZGLT061-VERSN.
        ENDIF.
      ENDIF.
    ENDIF.

  ENDIF.

*&---------------------------------------------------------------------*
*&      Module  STATUS_1101  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_1101 OUTPUT.

  IF TL_1101_01 IS INITIAL.
    TL_1101_01 = TL_1100.
  ENDIF.

  CASE TL_1101_01.
    WHEN TL_1100.
      SET PF-STATUS 'PF1102'.
      SET TITLEBAR 'TL1102'.
  ENDCASE.

  IF P_BUKRS IS INITIAL.
    SELECT SINGLE *
       FROM USR05
       INTO @DATA(_USR05)
       WHERE BNAME = @SY-UNAME
       AND PARID   = 'BUK'.
    IF SY-SUBRC = 0.
      P_BUKRS = _USR05-PARVA+0(4).
    ENDIF.
  ENDIF.

ENDMODULE.                 " STATUS_1101  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1101_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1101_EXIT INPUT.

  CASE TL_1101_01.
    WHEN TL_1100.
      LEAVE PROGRAM.
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_1101_EXIT  INPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1101  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1101 INPUT.

  DATA: CK_CONTINUA(1).

  IF TL_1101_01 EQ TL_1100.
    CASE OK_CODE_1101.
      WHEN OK_GERAR.
        PERFORM INIT_VARIANT.
        PERFORM VALIDAR_ESTRUTURA CHANGING CK_CONTINUA.
        IF CK_CONTINUA EQ ABAP_TRUE.
          PERFORM CHAMA_TREE_VIEW.
        ENDIF.
    ENDCASE.
  ENDIF.

  IF ( TL_1101_01 EQ TL_1103 ) OR ( TL_1101_01 EQ TL_1104 ).
    CASE OK_CODE_1101.
      WHEN OK_BACK.
        CLEAR: IT_CONTAS_SOLTAS[], IT_CONTAS_SALDO[].
        TL_1101_01 = TL_1100.
        LEAVE TO SCREEN 1101.
    ENDCASE.
  ENDIF.

ENDMODULE.                 " USER_COMMAND_1101  INPUT

*&---------------------------------------------------------------------*
*&      Form  CHAMA_TREE_VIEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CHAMA_TREE_VIEW .
  IF P_DEM1 EQ ABAP_TRUE.
    TL_1101_01 = TL_1103.
  ELSE.
    TL_1101_01 = TL_1104.
  ENDIF.
ENDFORM.                    " CHAMA_TREE_VIEW

*&---------------------------------------------------------------------*
*&      Form  VALIDAR_ESTRUTURA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM VALIDAR_ESTRUTURA CHANGING CONTINUA.

  DATA: VG_TIPO    TYPE ZDE_VERSNT,
        WA_ZGLT046 TYPE ZGLT046,
        WA_DRE     TYPE ZGL015_DRE_EST01,
        WA_PERMI   TYPE ZGL015_DRE_EST08.

  CONTINUA = ABAP_TRUE.

  CASE P_DEM1.
    WHEN ABAP_TRUE.
      VG_TIPO = '1'.
    WHEN ABAP_FALSE.
      VG_TIPO = '2'.
  ENDCASE.

  SELECT SINGLE *
    INTO WA_ZGLT046
    FROM ZGLT046
   WHERE VERSN  EQ P_ESTR
     AND VERSNT EQ VG_TIPO.

  IF SY-SUBRC IS NOT INITIAL.
    CONTINUA = ABAP_FALSE.
    MESSAGE S013 WITH P_ESTR.
  ENDIF.

  IF P_CONSO IS NOT INITIAL.
    IF P_BUKR2 IS INITIAL.
      CONTINUA = ABAP_FALSE.
      MESSAGE S020.
    ENDIF.
  ENDIF.

  IF P_DEM2 EQ ABAP_TRUE.
    IF T_DRE1 IS INITIAL.
      CONTINUA = ABAP_FALSE.
      MESSAGE S021.
    ELSE.
      SELECT SINGLE * INTO WA_DRE
        FROM ZGL015_DRE_EST01
       WHERE BUKRS EQ P_BUKRS
         AND VERSN EQ T_DRE1.

      IF NOT SY-SUBRC IS INITIAL.

        SELECT SINGLE * INTO WA_PERMI
          FROM ZGL015_DRE_EST08
         WHERE VERSN    EQ T_DRE1
           AND BUKRS_B  EQ P_BUKRS.

        IF NOT SY-SUBRC IS INITIAL.
          CONTINUA = ABAP_FALSE.
          MESSAGE S025 WITH T_DRE1 P_BUKRS.
        ENDIF.

      ENDIF.
    ENDIF.
    IF T_DRE2 IS INITIAL.
      CONTINUA = ABAP_FALSE.
      MESSAGE S022.
    ELSE.
      SELECT SINGLE * INTO WA_DRE
        FROM ZGL015_DRE_EST01
       WHERE BUKRS EQ P_BUKRS
         AND VERSN EQ T_DRE2.

      IF NOT SY-SUBRC IS INITIAL.

        SELECT SINGLE * INTO WA_PERMI
          FROM ZGL015_DRE_EST08
         WHERE VERSN    EQ T_DRE2
           AND BUKRS_B  EQ P_BUKRS.

        IF NOT SY-SUBRC IS INITIAL.
          CONTINUA = ABAP_FALSE.
          MESSAGE S025 WITH T_DRE2 P_BUKRS.
        ENDIF.

      ENDIF.
    ENDIF.
  ENDIF.

  IF P_CONSO EQ ABAP_TRUE AND P_DEM2 EQ ABAP_TRUE.
    IF T_DRE3 IS INITIAL.
      CONTINUA = ABAP_FALSE.
      MESSAGE S023.
    ELSE.
      SELECT SINGLE * INTO WA_DRE
        FROM ZGL015_DRE_EST01
       WHERE BUKRS EQ P_BUKR2
         AND VERSN EQ T_DRE3.

      IF NOT SY-SUBRC IS INITIAL.

        SELECT SINGLE * INTO WA_PERMI
          FROM ZGL015_DRE_EST08
         WHERE VERSN    EQ T_DRE3
           AND BUKRS_B  EQ P_BUKR2.

        IF NOT SY-SUBRC IS INITIAL.
          CONTINUA = ABAP_FALSE.
          MESSAGE S025 WITH T_DRE3 P_BUKR2.
        ENDIF.

      ENDIF.
    ENDIF.
    IF T_DRE4 IS INITIAL.
      CONTINUA = ABAP_FALSE.
      MESSAGE S024.
    ELSE.
      SELECT SINGLE *
        INTO WA_DRE
        FROM ZGL015_DRE_EST01
       WHERE BUKRS EQ P_BUKR2
         AND VERSN EQ T_DRE4.

      IF NOT SY-SUBRC IS INITIAL.
        SELECT SINGLE * INTO WA_PERMI
          FROM ZGL015_DRE_EST08
         WHERE VERSN    EQ T_DRE4
           AND BUKRS_B  EQ P_BUKR2.

        IF NOT SY-SUBRC IS INITIAL.
          CONTINUA = ABAP_FALSE.
          MESSAGE S025 WITH T_DRE4 P_BUKR2.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.                    " VALIDAR_ESTRUTURA

*&---------------------------------------------------------------------*
*&      Module  STATUS_1103_1104  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_1103_1104 OUTPUT.

  DATA: WA_FCODE1103 TYPE SY-UCOMM,
        IT_FCODE1103 LIKE TABLE OF WA_FCODE1103.

  CASE TL_1101_01.
    WHEN TL_1103 OR TL_1104.

      CLEAR: IT_FCODE1103.

      IF IT_CONTAS_SOLTAS[] IS INITIAL.
        WA_FCODE1103 = OK_EXCECAO.
        APPEND WA_FCODE1103 TO IT_FCODE1103.
      ENDIF.

      IF IT_CONTAS_SALDO[] IS INITIAL.
        WA_FCODE1103 = OK_EXCECAO2.
        APPEND WA_FCODE1103 TO IT_FCODE1103.
      ENDIF.

      IF IT_REMOVIDO_CONA[] IS INITIAL AND IT_REMOVIDO_CONS[] IS INITIAL.
        WA_FCODE1103 = OK_REG_EXC_CS.
        APPEND WA_FCODE1103 TO IT_FCODE1103.
      ENDIF.

      IF ( P_CONSO IS INITIAL ) OR ( P_DEM1 IS NOT INITIAL ).
        WA_FCODE1103 = OK_ELIMINAD.
        APPEND WA_FCODE1103 TO IT_FCODE1103.
      ENDIF.

      SET PF-STATUS 'PF1103' EXCLUDING IT_FCODE1103.
      SET TITLEBAR 'TL1103'.
  ENDCASE.

ENDMODULE.                 " STATUS_1103_1104  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  init_variant
*&---------------------------------------------------------------------*
FORM INIT_VARIANT.

  CLEAR G_VARIANT.
  G_REPID              = SY-REPID.
  D020S-PROG           = G_REPID.
  D020S-DNUM           = SY-DYNNR.
  G_VARIANT-REPORT     = G_REPID.
  G_VARIANT-USERNAME   = SY-UNAME.

ENDFORM.                               " init_variant

*&---------------------------------------------------------------------*
*&      Form  VARIANT_F4
*&---------------------------------------------------------------------*
FORM VARIANT_F4 USING    P_VARIANT.

  DATA: GX_VARIANT LIKE DISVARIANT.

  DATA H_EXIT.

  PERFORM INIT_VARIANT.

  CLEAR GX_VARIANT.

  CALL FUNCTION 'LVC_VARIANT_F4'
    EXPORTING
      IS_VARIANT    = G_VARIANT
      I_SAVE        = 'A'
    IMPORTING
      E_EXIT        = H_EXIT
      ES_VARIANT    = GX_VARIANT
    EXCEPTIONS
      NOT_FOUND     = 1
      PROGRAM_ERROR = 2
      OTHERS        = 3.

  IF SY-SUBRC <> 0.
    MESSAGE I000(0K) WITH TEXT-101.
  ENDIF.

  IF H_EXIT IS INITIAL.
    G_VARIANT-VARIANT = GX_VARIANT-VARIANT.
    P_VARIANT         = GX_VARIANT-VARIANT.
  ENDIF.

ENDFORM.                               " VARIANT_F4

*&---------------------------------------------------------------------*
*&      Form  variant_default
*&---------------------------------------------------------------------*
FORM VARIANT_DEFAULT USING P_VARIANT LIKE G_VARIANT-VARIANT.

  GX_VARIANT = G_VARIANT.

  IF NOT P_VARIANT IS INITIAL.
    GX_VARIANT-VARIANT = P_VARIANT.
  ENDIF.

  CALL FUNCTION 'LVC_VARIANT_DEFAULT_GET'
    EXPORTING
      I_SAVE        = 'A'
    CHANGING
      CS_VARIANT    = GX_VARIANT
    EXCEPTIONS
      WRONG_INPUT   = 1
      NOT_FOUND     = 2
      PROGRAM_ERROR = 3
      OTHERS        = 4.

  CASE SY-SUBRC.
    WHEN 0.
      P_VARIANT = GX_VARIANT-VARIANT.
    WHEN 2.
      CLEAR P_VARIANT.
  ENDCASE.

ENDFORM.                               " variant_default
