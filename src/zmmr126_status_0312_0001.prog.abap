*----------------------------------------------------------------------*
***INCLUDE ZMMR126_STATUS_0312.
*----------------------------------------------------------------------*

CLASS LCL_ALV_TOOLBAR_0312A DEFINITION.
  PUBLIC SECTION.
    METHODS: CONSTRUCTOR         IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,
      ON_TOOLBAR          FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID IMPORTING E_OBJECT,
      HANDLE_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID IMPORTING E_UCOMM.
ENDCLASS.

CLASS LCL_ALV_TOOLBAR_0312B DEFINITION.
  PUBLIC SECTION.
    METHODS: CONSTRUCTOR         IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,
      ON_TOOLBAR          FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID IMPORTING E_OBJECT,
      HANDLE_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID IMPORTING E_UCOMM.
ENDCLASS.

CLASS LCL_EVENT_RECEIVER_0312A DEFINITION.
  PUBLIC SECTION.
    DATA: VALIDAR_DATA  TYPE C,
          ERROR_IN_DATA TYPE C.

    METHODS: DATA_CHANGED_FINISHED FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID IMPORTING E_MODIFIED ET_GOOD_CELLS.

    METHODS: DATA_CHANGED FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID IMPORTING ER_DATA_CHANGED.

    METHODS: SUBTOTAL_TEXT FOR EVENT SUBTOTAL_TEXT OF CL_GUI_ALV_GRID IMPORTING ES_SUBTOTTXT_INFO EP_SUBTOT_LINE E_EVENT_DATA.

  PRIVATE SECTION.

    METHODS: PERFORM_SEMANTIC_CHECKS
      IMPORTING
        PR_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL.

ENDCLASS.                    "lcl_event_receiver DEFINITION


DATA: EVENT_HANDLER_0312A TYPE REF TO LCL_EVENT_RECEIVER_0312A.

DATA: CTL_CCCONTAINER_0312A    TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      CTL_ALV_0312A            TYPE REF TO CL_GUI_ALV_GRID,
      IT_FIELDCATALOG_0312A    TYPE LVC_T_FCAT,
      GS_VARIANT_0312A         TYPE DISVARIANT,
      GS_LAYOUT_0312A          TYPE LVC_S_LAYO,
      OBG_TOOLBAR_0312A        TYPE REF TO LCL_ALV_TOOLBAR_0312A,
      OBJ_TOOLBARMANAGER_0312A TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      GS_SCROLL_COL_0312A      TYPE LVC_S_COL,
      GS_SCROLL_ROW_0312A      TYPE LVC_S_ROID,
      WA_STABLE_0312A          TYPE LVC_S_STBL.

DATA: CTL_CCCONTAINER_0312B    TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      CTL_ALV_0312B            TYPE REF TO CL_GUI_ALV_GRID,
      IT_FIELDCATALOG_0312B    TYPE LVC_T_FCAT,
      GS_VARIANT_0312B         TYPE DISVARIANT,
      GS_LAYOUT_0312B          TYPE LVC_S_LAYO,
      OBG_TOOLBAR_0312B        TYPE REF TO LCL_ALV_TOOLBAR_0312B,
      OBJ_TOOLBARMANAGER_0312B TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      GS_SCROLL_COL_0312B      TYPE LVC_S_COL,
      GS_SCROLL_ROW_0312B      TYPE LVC_S_ROID,
      WA_STABLE_0312B          TYPE LVC_S_STBL.

CLASS LCL_ALV_TOOLBAR_0312A IMPLEMENTATION.

  METHOD CONSTRUCTOR.
*   Create ALV toolbar manager instance
    CREATE OBJECT OBJ_TOOLBARMANAGER_0312A
      EXPORTING
        IO_ALV_GRID = IO_ALV_GRID.

  ENDMETHOD.                    "constructor

  METHOD ON_TOOLBAR.

    DATA: TY_TOOLBAR   TYPE STB_BUTTON.

*    "Separador
    CLEAR TY_TOOLBAR.
    TY_TOOLBAR-BUTN_TYPE = 3.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.

*039  Consultar Take UP's
*040  Vincular Take UP
*041  Desvincular Take UP

    CLEAR TY_TOOLBAR.
    TY_TOOLBAR-ICON      = ICON_REFRESH.
    TY_TOOLBAR-FUNCTION  = 'TAKEUP'.
    TY_TOOLBAR-QUICKINFO = TEXT-039.
    TY_TOOLBAR-TEXT      = TEXT-039.
    TY_TOOLBAR-BUTN_TYPE = 0.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.

*    "Separador
    CLEAR TY_TOOLBAR.
    TY_TOOLBAR-BUTN_TYPE = 3.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.

    CLEAR TY_TOOLBAR.
    TY_TOOLBAR-ICON      = ICON_ARROW_RIGHT.
    TY_TOOLBAR-FUNCTION  = 'TAKEUPV'.
    TY_TOOLBAR-QUICKINFO = TEXT-040.
    TY_TOOLBAR-TEXT      = TEXT-040.
    TY_TOOLBAR-BUTN_TYPE = 0.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.

    CALL METHOD OBJ_TOOLBARMANAGER_0312A->REORGANIZE
      EXPORTING
        IO_ALV_TOOLBAR = E_OBJECT.

  ENDMETHOD.                    "on_toolbar

  METHOD HANDLE_USER_COMMAND.

    DATA: ET_INDEX_ROWS	TYPE LVC_T_ROW.

    CALL METHOD CTL_ALV_0312A->GET_SELECTED_ROWS
      IMPORTING
        ET_INDEX_ROWS = ET_INDEX_ROWS.

    CASE E_UCOMM.
      WHEN 'TAKEUP'.

        DESCRIBE TABLE IT_NOTAS LINES DATA(LINHAS_NOTA).

        IF NOT ( LINHAS_NOTA EQ 0 OR LINHAS_NOTA GT 1 AND WA_NOTA_SELECIONADA IS INITIAL ) AND NOT ( LINHAS_NOTA GT 1 AND WA_NOTA_SELECIONADA IS NOT INITIAL ).
          READ TABLE IT_NOTAS INDEX 1 INTO WA_NOTA_SELECIONADA.
        ENDIF.

        CHECK WA_NOTA_SELECIONADA IS NOT INITIAL.

        "Consumir WebService
        CLEAR: IT_TAKES_SALDO[], IT_TAKES_SALDO.

        DATA: OB_WEB_SERVICE TYPE REF TO ZCL_WEBSERVICE.

        TRY .

            DATA(LC_ID_PRODUTO) = ZDE_ZSDT0001CG_ALV-ID_PRODUTO.

            CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
              EXPORTING
                INPUT  = LC_ID_PRODUTO
              IMPORTING
                OUTPUT = LC_ID_PRODUTO.

            CREATE OBJECT OB_WEB_SERVICE.
            OB_WEB_SERVICE->SET_TIPO( I_TIPO = 'O' ).
            OB_WEB_SERVICE->SET_SERVICO( I_SERVICO = 'SA' ).
            DATA(VAR_URL)  = OB_WEB_SERVICE->GET_URI( ) &&
                             '/' && ZDE_ZSDT0001CG_ALV-NR_SAFRA &&
                             '/' && WA_NOTA_SELECIONADA-ID_FORNECEDOR &&
                             '/' && LC_ID_PRODUTO .
            "&& '/' && ZDE_ZSDT0001CG_ALV-ID_BRANCH.

            DATA(VAR_HTTP) = OB_WEB_SERVICE->URL( I_URL = CONV #( VAR_URL ) ). "Recupear qual é a URL que é preciso atribuir ao HEADER do WebService.
            OB_WEB_SERVICE->ZIF_WEBSERVICE~ABRIR_CONEXAO( I_HTTP = VAR_HTTP ).

            CALL METHOD VAR_HTTP->REQUEST->SET_HEADER_FIELD
              EXPORTING
                NAME  = '~request_method'
                VALUE = 'GET'.

            OB_WEB_SERVICE->ZIF_WEBSERVICE~CONSULTAR(
               EXPORTING
                 I_HTTP                     = VAR_HTTP
               IMPORTING
                 E_CODE                     = DATA(E_CODE)
                 E_REASON                   = DATA(E_REASON)
               RECEIVING
                 E_RESULTADO                = DATA(JSON_RETORNO)
               EXCEPTIONS
                 HTTP_COMMUNICATION_FAILURE = 1
                 HTTP_INVALID_STATE         = 2
                 HTTP_PROCESSING_FAILED     = 3
                 HTTP_INVALID_TIMEOUT       = 4
                 OTHERS                     = 5 ).

            IF SY-SUBRC IS NOT INITIAL.
              CLEAR OB_WEB_SERVICE.
              MESSAGE ID SY-MSGID TYPE 'I' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE SY-MSGTY.
              EXIT.
            ENDIF.

            CLEAR OB_WEB_SERVICE.

          CATCH ZCX_WEBSERVICE INTO DATA(LC_EXCEPTION).
            CLEAR OB_WEB_SERVICE.
        ENDTRY.

        IF E_CODE EQ '200'.

          DATA: IT_SALDO_OPUS TYPE ZDE_LINHA_SALDO_OPUS_T,
                WA_ALV_VINC   TYPE ZDE_ZSDT0001TK_ALV_VINC.

          /UI2/CL_JSON=>DESERIALIZE( EXPORTING JSON = JSON_RETORNO CHANGING DATA = IT_SALDO_OPUS ).

          LOOP AT IT_SALDO_OPUS INTO DATA(WA_SALDO_OPUS).
            CLEAR: WA_ALV_VINC.

            CONDENSE WA_SALDO_OPUS-CODIGOTAKEUP.

            CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
              EXPORTING
                INPUT  = WA_SALDO_OPUS-CODIGOTAKEUP
              IMPORTING
                OUTPUT = WA_SALDO_OPUS-CODIGOTAKEUP.

            CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
              EXPORTING
                INPUT  = WA_SALDO_OPUS-NUMEROBLOCO
              IMPORTING
                OUTPUT = WA_SALDO_OPUS-NUMEROBLOCO.

            WA_ALV_VINC-ID_TAKEUP    = WA_SALDO_OPUS-CODIGOTAKEUP.
            WA_ALV_VINC-NU_BLOCO     = WA_SALDO_OPUS-NUMEROBLOCO.
            WA_ALV_VINC-QT_BLOCO     = WA_SALDO_OPUS-QUANTIDADESALDOVOLUME.
            WA_ALV_VINC-QT_SALDO     = WA_SALDO_OPUS-QUANTIDADESALDOVOLUME.
            WA_ALV_VINC-QT_VINCULADA = 0.
            WA_ALV_VINC-QT_VINCULAR  = WA_SALDO_OPUS-QUANTIDADESALDOVOLUME.
            APPEND WA_ALV_VINC TO IT_TAKES_SALDO.
          ENDLOOP.

          "ID_TAKEUP  1 Tipo  ZDE_ID_TAKEUP NUMC  10  0 Identificador do Take UP
          "NU_BLOCO 1 Tipo  ZDE_NM_BLOCO_ALGODAO  NUMC  10  0 Número do Bloco de Algodão
          "QT_BLOCO 1 Tipo  ZDE_QTD_BLOCO_ALGODAO DEC 9 0 Qtd. Total Bloco
          "QT_SALDO 1 Tipo  ZDE_QTD_SALDO_ALGODAO DEC 9 0 Qtd. Saldo Bloco
          "QT_VINCULADA 1 Tipo  ZDE_QTD_VINC_ALGODAO  DEC 9 0 Quantidade Vinculada de Algodão
          "QT_VINCULAR  1 Tipo  ZDE_QTD_VINCULAR_ALGODAO  DEC 9 0 Quantidade a Vincular de Algodão
          "QT_VINCULADA_NOTA  1 Tipo  ZDE_QTD_VINC_ALGODAO  DEC 9 0 Quantidade Vinculada de Algodão
          "QT_VINCULADA_ORIGINAL  1 Tipo  ZDE_QTD_VINC_ALGODAO  DEC 9 0 Quantidade Vinculada de Algodão
          "QT_VINCULADA_NOTA_ORIGINAL 1 Tipo  ZDE_QTD_VINC_ALGODAO  DEC 9 0 Quantidade Vinculada de Algodão
          "IT_TAKES_SALDO
          "APPEND VALUE #( ID_TAKEUP = 84 NU_BLOCO = 01 QT_BLOCO = 500000 QT_SALDO = 500000 QT_VINCULADA = 0 QT_VINCULAR  = 500000 ) TO IT_TAKES_SALDO.
          "APPEND VALUE #( ID_TAKEUP = 85 NU_BLOCO = 23 QT_BLOCO = 550000 QT_SALDO = 550000 QT_VINCULADA = 0 QT_VINCULAR  = 550000 ) TO IT_TAKES_SALDO.

        ENDIF.

        PERFORM REAJUSTAR_ORIGINAL.
        PERFORM REAJUSTAR_SALDOS.

        CTL_ALV_0312A->REFRESH_TABLE_DISPLAY( ).

      WHEN 'TAKEUPV'.

        LOOP AT ET_INDEX_ROWS INTO DATA(WA_LINHA) WHERE ROWTYPE IS INITIAL.
          READ TABLE IT_TAKES_SALDO INTO DATA(WA_SALDO) INDEX WA_LINHA-INDEX.
          PERFORM VINCULAR_TAKE_UP_NOTA USING WA_SALDO.
        ENDLOOP.
        PERFORM REAJUSTAR_SALDOS.

        WA_STABLE_0312B-ROW = ABAP_TRUE.
        WA_STABLE_0312B-COL = ABAP_TRUE.

        CALL METHOD CTL_ALV_0312B->REFRESH_TABLE_DISPLAY
          EXPORTING
            IS_STABLE = WA_STABLE_0312B.

        WA_STABLE_0312A-ROW = ABAP_TRUE.
        WA_STABLE_0312A-COL = ABAP_TRUE.

        CALL METHOD CTL_ALV_0312A->REFRESH_TABLE_DISPLAY
          EXPORTING
            IS_STABLE = WA_STABLE_0312A.

    ENDCASE.

  ENDMETHOD. "zm_handle_user_command

ENDCLASS.

CLASS LCL_ALV_TOOLBAR_0312B IMPLEMENTATION.

  METHOD CONSTRUCTOR.
*   Create ALV toolbar manager instance
    CREATE OBJECT OBJ_TOOLBARMANAGER_0312B
      EXPORTING
        IO_ALV_GRID = IO_ALV_GRID.

  ENDMETHOD.                    "constructor

  METHOD ON_TOOLBAR.

    DATA: TY_TOOLBAR   TYPE STB_BUTTON.
*    "Separador
    TY_TOOLBAR-BUTN_TYPE = 3.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.

*    "Marcar Todos os Documentos
    CLEAR TY_TOOLBAR.
    TY_TOOLBAR-ICON      = ICON_ARROW_LEFT.
    TY_TOOLBAR-FUNCTION  = 'TAKEUPD'.
    TY_TOOLBAR-QUICKINFO = TEXT-041.
    TY_TOOLBAR-TEXT      = TEXT-041.
    TY_TOOLBAR-BUTN_TYPE = 0.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.

    CALL METHOD OBJ_TOOLBARMANAGER_0312B->REORGANIZE
      EXPORTING
        IO_ALV_TOOLBAR = E_OBJECT.

  ENDMETHOD.                    "on_toolbar

  METHOD HANDLE_USER_COMMAND.

    DATA: ET_INDEX_ROWS	TYPE LVC_T_ROW.
    DATA: IT_DELETE TYPE TABLE OF ZDE_ZSDT0001TK_ALV.

    CALL METHOD CTL_ALV_0312B->GET_SELECTED_ROWS
      IMPORTING
        ET_INDEX_ROWS = ET_INDEX_ROWS.

    CASE E_UCOMM.
      WHEN 'TAKEUPD'.
*        CLEAR: IT_DELETE[], IT_DELETE.
*
*        LOOP AT ET_INDEX_ROWS INTO DATA(WA_INDEX_ROWS).
*          READ TABLE IT_TAKES_VINCU INTO DATA(WA_TAKES_VINCU) INDEX 1.
*          APPEND WA_TAKES_VINCU TO IT_DELETE.
*        ENDLOOP.
*
*        LOOP AT IT_DELETE INTO DATA(WA_DELETE).
*          DELETE IT_TAKES_VINCU WHERE ID_NOTA EQ WA_DELETE-ID_NOTA AND ID_TAKEUP EQ WA_DELETE-ID_TAKEUP AND NU_BLOCO EQ WA_DELETE-NU_BLOCO.
*          OBJETO->SET_EXC_TAKE_UP( EXPORTING I_TAKEUP = WA_DELETE ).
*        ENDLOOP.
*
*        PERFORM REAJUSTAR_SALDOS.
*
*        WA_STABLE_0312A-ROW = ABAP_TRUE.
*        WA_STABLE_0312A-COL = ABAP_TRUE.
*        CALL METHOD CTL_ALV_0312A->REFRESH_TABLE_DISPLAY
*          EXPORTING
*            IS_STABLE = WA_STABLE_0312A.
*
*        WA_STABLE_0312B-ROW = ABAP_TRUE.
*        WA_STABLE_0312B-COL = ABAP_TRUE.
*        CALL METHOD CTL_ALV_0312B->REFRESH_TABLE_DISPLAY
*          EXPORTING
*            IS_STABLE = WA_STABLE_0312B.

    ENDCASE.

  ENDMETHOD. "zm_handle_user_command

ENDCLASS.


CLASS LCL_EVENT_RECEIVER_0312A IMPLEMENTATION.

  METHOD SUBTOTAL_TEXT.

    DATA: LC_QT_VINCULAR TYPE ZDE_QTD_VINCULAR_ALGODAO,
          LC_TAKES_SALDO TYPE ZDE_ZSDT0001TK_ALV_VINC.

    FIELD-SYMBOLS: <FS>  TYPE ANY.
    FIELD-SYMBOLS: <FS2> TYPE ANY.
    ASSIGN E_EVENT_DATA->M_DATA->* TO <FS>.

    IF SY-SUBRC EQ 0.

      IF ES_SUBTOTTXT_INFO(11) EQ 'QT_VINCULAR'.

        ASSIGN EP_SUBTOT_LINE->* TO <FS2>.

        LC_QT_VINCULAR = 0.
        LOOP AT IT_TAKES_SALDO INTO DATA(WA_TAKES_SALDO).
          ADD WA_TAKES_SALDO-QT_VINCULAR TO LC_QT_VINCULAR.
        ENDLOOP.

        LC_TAKES_SALDO = <FS2>.
        LC_TAKES_SALDO-QT_VINCULAR = LC_QT_VINCULAR.
        <FS2> = LC_TAKES_SALDO.

      ENDIF.

    ENDIF.

  ENDMETHOD.

  METHOD DATA_CHANGED.

    ERROR_IN_DATA = SPACE.
    CALL METHOD PERFORM_SEMANTIC_CHECKS( ER_DATA_CHANGED ).
    IF ERROR_IN_DATA = 'X'.
      CALL METHOD ER_DATA_CHANGED->DISPLAY_PROTOCOL.
    ELSE.
    ENDIF.

  ENDMETHOD.

  METHOD DATA_CHANGED_FINISHED.



  ENDMETHOD.

  METHOD PERFORM_SEMANTIC_CHECKS.

    DATA: LC_QT_VINCULAR TYPE ZDE_QTD_VINCULAR_ALGODAO,
          LV_VALUE       TYPE LVC_VALUE,
          LV_VALUE2      TYPE LVC_VALUE.

    ERROR_IN_DATA = ABAP_FALSE.

    LOOP AT PR_DATA_CHANGED->MT_GOOD_CELLS INTO DATA(LS_GOOD) WHERE FIELDNAME = 'QT_VINCULAR'.
      LV_VALUE = LS_GOOD-VALUE.
      CONDENSE LV_VALUE NO-GAPS.
      LC_QT_VINCULAR = LV_VALUE.

      READ TABLE IT_TAKES_SALDO INTO DATA(WA_TAKES_SALDO) INDEX LS_GOOD-ROW_ID.
      IF WA_TAKES_SALDO-QT_SALDO LT LC_QT_VINCULAR.

        WRITE WA_TAKES_SALDO-QT_SALDO TO LV_VALUE.
        CONDENSE LV_VALUE NO-GAPS.
        WRITE LC_QT_VINCULAR TO LV_VALUE2.
        CONDENSE LV_VALUE2 NO-GAPS.

        "Se Estiver Errado o Valor
        CALL METHOD PR_DATA_CHANGED->ADD_PROTOCOL_ENTRY
          EXPORTING
            I_MSGID     = 'ZCARGA'
            I_MSGNO     = '259'
            I_MSGTY     = 'E'
            I_MSGV1     = LV_VALUE
            I_MSGV2     = LV_VALUE2
            I_FIELDNAME = LS_GOOD-FIELDNAME
            I_ROW_ID    = LS_GOOD-ROW_ID.

        ERROR_IN_DATA = ABAP_TRUE.
      ENDIF.
    ENDLOOP.

    CHECK ERROR_IN_DATA EQ ABAP_FALSE.

    LOOP AT PR_DATA_CHANGED->MT_ROID_FRONT INTO DATA(WA_TOTAL) WHERE ROW_ID IS INITIAL.



    ENDLOOP.

  ENDMETHOD.

ENDCLASS.                    "LCL_EVENT_RECEIVER_0312A IMPLEMENTATION



*&---------------------------------------------------------------------*
*&      Module  STATUS_0312  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0312 OUTPUT.

  DATA: IT_FUNCTION TYPE UI_FUNCTIONS.

  IF CTL_ALV_0312A IS INITIAL.

    CREATE OBJECT CTL_CCCONTAINER_0312A
      EXPORTING
        CONTAINER_NAME = 'ALV_0312A'.

    CREATE OBJECT CTL_ALV_0312A
      EXPORTING
        I_PARENT = CTL_CCCONTAINER_0312A.

    PERFORM FILL_IT_FIELDCATALOG_0312A.

    PERFORM FILL_GS_VARIANT_0312A.

    GS_LAYOUT_0312A-SEL_MODE   = 'A'.
    GS_LAYOUT_0312A-ZEBRA      = ABAP_FALSE.
    GS_LAYOUT_0312A-CWIDTH_OPT = ABAP_FALSE.

    CREATE OBJECT OBG_TOOLBAR_0312A
      EXPORTING
        IO_ALV_GRID = CTL_ALV_0312A.

    SET HANDLER OBG_TOOLBAR_0312A->ON_TOOLBAR FOR CTL_ALV_0312A.
    SET HANDLER OBG_TOOLBAR_0312A->HANDLE_USER_COMMAND FOR CTL_ALV_0312A.

    APPEND CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL TO IT_FUNCTION.

    PERFORM TEXTO_NOTA_SELECIONADA CHANGING GS_LAYOUT_0312A-GRID_TITLE.

    CALL METHOD CTL_ALV_0312A->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT_0312A
        IS_VARIANT           = GS_VARIANT_0312A
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_FUNCTION
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG_0312A
        IT_OUTTAB            = IT_TAKES_SALDO[].

    CALL METHOD CTL_ALV_0312A->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

    CALL METHOD CTL_ALV_0312A->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.

    CREATE OBJECT EVENT_HANDLER_0312A.
    SET HANDLER EVENT_HANDLER_0312A->DATA_CHANGED_FINISHED FOR CTL_ALV_0312A.
    SET HANDLER EVENT_HANDLER_0312A->DATA_CHANGED          FOR CTL_ALV_0312A.
    SET HANDLER EVENT_HANDLER_0312A->SUBTOTAL_TEXT         FOR CTL_ALV_0312A.

  ENDIF.

  IF CTL_ALV_0312B IS INITIAL.

    CREATE OBJECT CTL_CCCONTAINER_0312B
      EXPORTING
        CONTAINER_NAME = 'ALV_0312B'.

    CREATE OBJECT CTL_ALV_0312B
      EXPORTING
        I_PARENT = CTL_CCCONTAINER_0312B.

    PERFORM FILL_IT_FIELDCATALOG_0312B.

    PERFORM FILL_GS_VARIANT_0312B.

    GS_LAYOUT_0312B-SEL_MODE   = 'A'.
    GS_LAYOUT_0312B-ZEBRA      = ABAP_FALSE.
    GS_LAYOUT_0312B-CWIDTH_OPT = ABAP_FALSE.

    CREATE OBJECT OBG_TOOLBAR_0312B
      EXPORTING
        IO_ALV_GRID = CTL_ALV_0312B.

    SET HANDLER OBG_TOOLBAR_0312B->ON_TOOLBAR FOR CTL_ALV_0312B.
    SET HANDLER OBG_TOOLBAR_0312B->HANDLE_USER_COMMAND FOR CTL_ALV_0312B.

    CALL METHOD CTL_ALV_0312B->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT_0312B
        IS_VARIANT           = GS_VARIANT_0312B
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_FUNCTION
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG_0312B
        IT_OUTTAB            = IT_TAKES_VINCU[].

  ENDIF.

  WA_STABLE_0312A-ROW = ABAP_TRUE.
  WA_STABLE_0312A-COL = ABAP_TRUE.

  CALL METHOD CTL_ALV_0312A->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE = WA_STABLE_0312A.

  WA_STABLE_0312B-ROW = ABAP_TRUE.
  WA_STABLE_0312B-COL = ABAP_TRUE.

  CALL METHOD CTL_ALV_0312B->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE = WA_STABLE_0312B.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  FILL_GS_VARIANT_0312A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_GS_VARIANT_0312A.

  GS_VARIANT_0312A-REPORT      = SY-REPID.
  GS_VARIANT_0312A-HANDLE      = '0312'.
  GS_VARIANT_0312A-LOG_GROUP   = ABAP_FALSE.
  GS_VARIANT_0312A-USERNAME    = ABAP_FALSE.
  GS_VARIANT_0312A-VARIANT     = ABAP_FALSE.
  GS_VARIANT_0312A-TEXT        = ABAP_FALSE.
  GS_VARIANT_0312A-DEPENDVARS  = ABAP_FALSE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG_0312A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG_0312A .

  FIELD-SYMBOLS: <FS_CAT> TYPE LVC_S_FCAT.

  CLEAR: IT_FIELDCATALOG_0312A[].

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZDE_ZSDT0001TK_ALV_VINC'
    CHANGING
      CT_FIELDCAT      = IT_FIELDCATALOG_0312A.

  LOOP AT IT_FIELDCATALOG_0312A ASSIGNING <FS_CAT>.

    <FS_CAT>-TABNAME = 'ZDE_ZSDT0001TK_ALV_VINC'.

    CASE <FS_CAT>-FIELDNAME.
      WHEN 'ID_TAKEUP' OR 'NU_BLOCO'.
        <FS_CAT>-JUST      = 'C'.
        <FS_CAT>-OUTPUTLEN = 08.
      WHEN 'QT_BLOCO' OR 'QT_SALDO' OR 'QT_VINCULADA' .
        <FS_CAT>-DO_SUM = ABAP_TRUE.
        <FS_CAT>-OUTPUTLEN = 13.
      WHEN 'QT_VINCULAR'.
        <FS_CAT>-DO_SUM = ABAP_TRUE.
        <FS_CAT>-EDIT = ABAP_TRUE.
        <FS_CAT>-OUTPUTLEN = 13.
      WHEN OTHERS.
        <FS_CAT>-NO_OUT = ABAP_TRUE.
    ENDCASE.

  ENDLOOP.

ENDFORM.



*&---------------------------------------------------------------------*
*&      Form  FILL_GS_VARIANT_0312A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_GS_VARIANT_0312B.

  GS_VARIANT_0312B-REPORT      = SY-REPID.
  GS_VARIANT_0312B-HANDLE      = '0311'.
  GS_VARIANT_0312B-LOG_GROUP   = ABAP_FALSE.
  GS_VARIANT_0312B-USERNAME    = ABAP_FALSE.
  GS_VARIANT_0312B-VARIANT     = ABAP_FALSE.
  GS_VARIANT_0312B-TEXT        = ABAP_FALSE.
  GS_VARIANT_0312B-DEPENDVARS  = ABAP_FALSE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG_0312A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG_0312B .

  DATA: LC_COL_POS  TYPE LVC_COLPOS.

  FIELD-SYMBOLS: <FS_CAT> TYPE LVC_S_FCAT.

  CLEAR: IT_FIELDCATALOG_0312B[].

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZDE_ZSDT0001TK_ALV'
    CHANGING
      CT_FIELDCAT      = IT_FIELDCATALOG_0312B.

  LOOP AT IT_FIELDCATALOG_0312B ASSIGNING <FS_CAT>.

    <FS_CAT>-TABNAME = 'ZDE_ZSDT0001TK_ALV'.

    CASE <FS_CAT>-FIELDNAME.
      WHEN 'ID_TAKEUP' OR 'NU_BLOCO'.
        <FS_CAT>-JUST = 'C'.
        <FS_CAT>-OUTPUTLEN = 10.
      WHEN 'QT_VINCULADA'.
        <FS_CAT>-DO_SUM = ABAP_TRUE.
        <FS_CAT>-OUTPUTLEN = 15.
      WHEN OTHERS.
        <FS_CAT>-NO_OUT = ABAP_TRUE.
    ENDCASE.

  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  VINCULAR_TAKE_UP_NOTA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_SALDO  text
*----------------------------------------------------------------------*
FORM VINCULAR_TAKE_UP_NOTA  USING P_WA_SALDO TYPE ZDE_ZSDT0001TK_ALV_VINC.

  DATA: LC_TOTAL_VINC_NOTA TYPE ZDE_QTD_VINC_ALGODAO,
        LC_QTD_PERMITIDA   TYPE ZDE_QTD_VINC_ALGODAO.

  DESCRIBE TABLE IT_NOTAS LINES DATA(LINHAS_NOTA).

  IF NOT ( LINHAS_NOTA EQ 0 OR LINHAS_NOTA GT 1 AND WA_NOTA_SELECIONADA IS INITIAL ) AND NOT ( LINHAS_NOTA GT 1 AND WA_NOTA_SELECIONADA IS NOT INITIAL ).
    READ TABLE IT_NOTAS INDEX 1 INTO WA_NOTA_SELECIONADA.
  ENDIF.

  CHECK WA_NOTA_SELECIONADA IS NOT INITIAL.

  "Total já vinculado
  LC_TOTAL_VINC_NOTA = 0.
  LOOP AT IT_TAKES_VINCU INTO DATA(WA_VINCULADO) WHERE ID_NOTA EQ WA_NOTA_SELECIONADA-ID_NOTA.
    ADD WA_VINCULADO-QT_VINCULADA TO LC_TOTAL_VINC_NOTA.
  ENDLOOP.

  LC_QTD_PERMITIDA = WA_NOTA_SELECIONADA-NR_QUANTIDADE - LC_TOTAL_VINC_NOTA.

  IF LC_QTD_PERMITIDA GT P_WA_SALDO-QT_VINCULAR.
    LC_QTD_PERMITIDA = P_WA_SALDO-QT_VINCULAR.
  ENDIF.

  CHECK LC_QTD_PERMITIDA GT 0.

  DATA: I_TAKEUP TYPE ZDE_ZSDT0001TK_ALV.
  I_TAKEUP-ID_CARGA = WA_NOTA_SELECIONADA-ID_CARGA.
  I_TAKEUP-ID_NOTA = WA_NOTA_SELECIONADA-ID_NOTA.
  I_TAKEUP-ID_TAKEUP = P_WA_SALDO-ID_TAKEUP.
  I_TAKEUP-NU_BLOCO = P_WA_SALDO-NU_BLOCO.
  I_TAKEUP-QT_VINCULADA = LC_QTD_PERMITIDA.

  TRY .
      OBJETO->SET_ADD_TAKE_UP( EXPORTING I_TAKEUP = I_TAKEUP IMPORTING E_TAKEUP = DATA(E_TAKEUP) ).

      CHECK E_TAKEUP IS NOT INITIAL.

      READ TABLE IT_TAKES_VINCU ASSIGNING FIELD-SYMBOL(<FS_TAKE>)
      WITH KEY ID_NOTA = E_TAKEUP-ID_NOTA
               ID_TAKEUP = E_TAKEUP-ID_TAKEUP
               NU_BLOCO = E_TAKEUP-NU_BLOCO.

      IF SY-SUBRC IS INITIAL.
        MOVE-CORRESPONDING E_TAKEUP TO <FS_TAKE>.
      ELSE.
        APPEND E_TAKEUP TO IT_TAKES_VINCU.
      ENDIF.

    CATCH ZCX_CARGA INTO EX_CARGA.    "
      EX_CARGA->PUBLISHED_ERRO( EXPORTING I_MSGTY = 'S'  I_MSGTY_DISPLAY = 'E' ).
  ENDTRY.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  REAJUSTAR_SALDOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM REAJUSTAR_SALDOS .

  DATA: LC_TOTAL_VINC TYPE ZDE_QTD_VINC_ALGODAO.

  LOOP AT IT_TAKES_SALDO ASSIGNING FIELD-SYMBOL(<FS_TAKES>).

    LC_TOTAL_VINC = 0.
    LOOP AT IT_TAKES_VINCU INTO DATA(WA_VINCULADO)
      WHERE ID_TAKEUP = <FS_TAKES>-ID_TAKEUP
        AND NU_BLOCO  = <FS_TAKES>-NU_BLOCO.
      ADD WA_VINCULADO-QT_VINCULADA TO LC_TOTAL_VINC.
    ENDLOOP.

    "QT_VINCULADA_ORIGINAL       somente carregada após o retorno do WebService
    "QT_VINCULADA_NOTA_ORIGINAL  somente carregada após o retorno do WebService

    <FS_TAKES>-QT_VINCULADA_NOTA = LC_TOTAL_VINC.
    <FS_TAKES>-QT_SALDO     = ( <FS_TAKES>-QT_BLOCO - <FS_TAKES>-QT_VINCULADA_ORIGINAL ) - LC_TOTAL_VINC.
    <FS_TAKES>-QT_VINCULADA = <FS_TAKES>-QT_VINCULADA_ORIGINAL + ( <FS_TAKES>-QT_VINCULADA_NOTA - <FS_TAKES>-QT_VINCULADA_ORIGINAL ).
    <FS_TAKES>-QT_VINCULAR  = ( <FS_TAKES>-QT_BLOCO - <FS_TAKES>-QT_VINCULADA ).

  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  TEXTO_NOTA_SELECIONADA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GS_LAYOUT_0312B_GRID_TITLE  text
*----------------------------------------------------------------------*
FORM TEXTO_NOTA_SELECIONADA  CHANGING P_TITLE TYPE LVC_TITLE.

  DESCRIBE TABLE IT_NOTAS LINES DATA(LINHAS_NOTA).

  IF NOT ( LINHAS_NOTA EQ 0 OR LINHAS_NOTA GT 1 AND WA_NOTA_SELECIONADA IS INITIAL ) AND NOT ( LINHAS_NOTA GT 1 AND WA_NOTA_SELECIONADA IS NOT INITIAL ).
    READ TABLE IT_NOTAS INDEX 1 INTO WA_NOTA_SELECIONADA.
  ENDIF.

  CHECK WA_NOTA_SELECIONADA IS NOT INITIAL.

  DATA: LC_DATA TYPE C LENGTH 10.
  WRITE WA_NOTA_SELECIONADA-DT_EMISSAO TO LC_DATA.

  DATA(P_NOTA) = ZCL_STRING=>TRIM( I_STR = CONV #( WA_NOTA_SELECIONADA-NR_NOTA ) ) && '-' &&
                 ZCL_STRING=>TRIM( I_STR = CONV #( WA_NOTA_SELECIONADA-NM_SERIE ) ).

  CONCATENATE 'Nota:' P_NOTA 'Dt.Emissão:' LC_DATA INTO P_TITLE SEPARATED BY SPACE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  REAJUSTAR_ORIGINAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM REAJUSTAR_ORIGINAL .

  CHECK OBJETO->CARGA-ID_CARGA IS NOT INITIAL.

  SELECT * INTO TABLE @DATA(IT_ZSDT0001TK)
    FROM ZSDT0001TK
   WHERE ID_CARGA EQ @OBJETO->CARGA-ID_CARGA.

  LOOP AT IT_ZSDT0001TK INTO DATA(WA_ZSDT0001TK).

    READ TABLE IT_TAKES_SALDO WITH KEY ID_TAKEUP = WA_ZSDT0001TK-ID_TAKEUP NU_BLOCO = WA_ZSDT0001TK-NU_BLOCO ASSIGNING FIELD-SYMBOL(<FS_TAKEUP>).
    IF SY-SUBRC IS INITIAL.
      ADD WA_ZSDT0001TK-QT_VINCULADA TO <FS_TAKEUP>-QT_VINCULADA_NOTA_ORIGINAL.
    ENDIF.

  ENDLOOP.

ENDFORM.
