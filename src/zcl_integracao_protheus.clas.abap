class ZCL_INTEGRACAO_PROTHEUS definition
  public
  final
  create public .

public section.

  interfaces ZIF_INTEGRACAO_INJECT .
  interfaces ZIF_INTEGRACAO_PROTHEUS .

  methods CONSTRUCTOR .
protected section.
private section.
ENDCLASS.



CLASS ZCL_INTEGRACAO_PROTHEUS IMPLEMENTATION.


  METHOD CONSTRUCTOR.

    ME->ZIF_INTEGRACAO_INJECT~AT_ID_INTERFACE  = ZIF_INTEGRACAO=>AT_ID_INTERFACE_PROTHEUS.
    ME->ZIF_INTEGRACAO_INJECT~AT_TP_INTEGRACAO = ZIF_INTEGRACAO=>AT_TP_INTEGRACAO_INBOUND.

    ME->ZIF_INTEGRACAO_INJECT~AT_REFERENCIA-TP_REFERENCIA = 'PROTHEUS'.
    ME->ZIF_INTEGRACAO_INJECT~AT_TP_CANAL = ZIF_INTEGRACAO=>AT_TP_CANAL_COMUNICA_HTTP.
*    ME->ZIF_INTEGRACAO_INJECT~AT_AUTENTICA_OPUS = ZIF_INTEGRACAO=>AT_ID_INTERFACE_AUT_OPUS_NAO.
*    ME->ZIF_INTEGRACAO_INJECT~AT_SEND_AUTENTICAO = ZIF_INTEGRACAO=>AT_ID_INTERFACE_AUT_SEND_NAO.

  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_INJECT~GET_HEADER_REQUEST_HTTP.

    r_if_integracao_inject = me.
    e_header_fields = me->zif_integracao_inject~at_header_fields.

  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_INJECT~SET_BEFORE_ERROR_OUTBOUND_MSG.

    R_IF_INTEGRACAO_INJECT = ME.
    E_SUCESSO = ABAP_FALSE.

  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_INJECT~SET_BEFORE_SEND_OUTBOUND_MSG.
    r_if_integracao_inject = me.
  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_INJECT~SET_HEADER_REQUEST_HTTP.

    r_if_integracao_inject = me.
    me->zif_integracao_inject~at_header_fields = i_header_fields.

  ENDMETHOD.


  METHOD zif_integracao_inject~set_integrar_inbound.

    DATA: i_inbound       TYPE ZPME0032_T,
          L_FATURA        TYPE ZPME0033_T.



    r_if_integracao_inject = me.

    /ui2/cl_json=>deserialize( EXPORTING json = i_msg_inbound CHANGING data = i_inbound ).

    CALL FUNCTION 'ZPM_IMP_FATURA_DO_PROTHEUS'
      EXPORTING
        i_fatura   = i_inbound
      IMPORTING
        L_FATURA = L_FATURA.


    e_sucesso = abap_true.



  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_INJECT~SET_INTEGRAR_RETORNO.

    "Metodo para Integrar InBound

    R_IF_INTEGRACAO_INJECT = ME.
    E_SUCESSO = ABAP_TRUE.

  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_INJECT~SET_PROCESSA_INBOUND.

    E_SUCESSO = ABAP_TRUE.

    R_IF_INTEGRACAO_INJECT = ME.

  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_INJECT~SET_PROCESSA_RETORNO.

    "Metodo para processoamento de InBound

    R_IF_INTEGRACAO_INJECT = ME.
    E_SUCESSO = ABAP_TRUE.

  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_PROTHEUS~GET_INSTANCE.
    IF ZIF_INTEGRACAO_PROTHEUS~AT_IF_INTE_PROTHEUS IS NOT BOUND.
      CREATE OBJECT ZIF_INTEGRACAO_PROTHEUS~AT_IF_INTE_PROTHEUS TYPE ZCL_INTEGRACAO_PROTHEUS.
    ENDIF.
    R_IF_INTEGRACAO_PROTHEUS = ZIF_INTEGRACAO_PROTHEUS~AT_IF_INTE_PROTHEUS.
  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_PROTHEUS~SET_DS_DATA.

    DATA: I_INBOUND TYPE ZPME0032_T.

    "Incluir Texto JSON para integração
    R_IF_INTEGRACAO_PROTHEUS = ME.
    ME->ZIF_INTEGRACAO_INJECT~AT_INFO_REQUEST_HTTP = I_INFO.

    /ui2/cl_json=>deserialize( EXPORTING json = i_info-ds_body CHANGING data = i_inbound ).

    me->zif_integracao_inject~at_referencia-id_referencia = 'FATURA_COMB_FROTA'.



  ENDMETHOD.


  METHOD ZIF_INTEGRACAO_PROTHEUS~SET_SEND_MSG.


    DATA: I_INBOUND TYPE ZPME0032_T.
    DATA: LC_INTEGRACAO TYPE REF TO ZCL_INTEGRACAO.

    R_IF_INTEGRACAO_PROTHEUS = ME.

    /UI2/CL_JSON=>DESERIALIZE( EXPORTING JSON = ME->ZIF_INTEGRACAO_INJECT~AT_INFO_REQUEST_HTTP-DS_BODY CHANGING DATA = I_INBOUND ).

    ME->ZIF_INTEGRACAO_INJECT~AT_INFO_REQUEST_HTTP-DS_FUNCAO_PROCESSA = 'pm_protheus_fatura'.

    CREATE OBJECT LC_INTEGRACAO.

    LC_INTEGRACAO->ZIF_INTEGRACAO~SET_MSG_INJECT( I_MSG = CAST #( ME )
      )->SET_NEW_MSG( IMPORTING E_ID_INTEGRACAO = ME->ZIF_INTEGRACAO_PROTHEUS~AT_ID_INTEGRACAO
      )->SET_PROCESSAR_RETORNO(
      )->SET_INTEGRAR_RETORNO(
           IMPORTING
             E_DATA_RETORNO =  DATA(E_DATA_RETORNO)
             E_ZINTEGRACAO_LOG = E_ZINTEGRACAO_LOG
      )->GET_REGISTRO( IMPORTING E_INTEGRACAO = DATA(E_INTEGRACAO)
      )->FREE(
      ).

    E_MSG = E_DATA_RETORNO.
    E_PROTOCOLO = ZCL_STRING=>LPAD( I_STR  = CONV #( E_INTEGRACAO-ID_INTEGRACAO ) I_QTD  = 15 I_CHAR = '0'  ).

    CLEAR: LC_INTEGRACAO.

  ENDMETHOD.
ENDCLASS.
