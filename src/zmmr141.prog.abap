*&---------------------------------------------------------------------*
*& Report  ZMMR141
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZMMR141.

TABLES: ZMMT0095.


DATA: IT_SAIDA     TYPE STANDARD TABLE OF ZMMT0095,
      IT_SAIDA_AUX TYPE STANDARD TABLE OF ZMMT0095,
      WA_SAIDA     TYPE ZMMT0095,
      WA_SAIDA_AUX TYPE ZMMT0095.


CLASS: LCL_ALV_TOOLBAR DEFINITION DEFERRED.


DATA: G_CONTAINER          TYPE SCRFNAME,
      G_GRID               TYPE REF TO CL_GUI_ALV_GRID,
      G_CUSTOM_CONTAINER   TYPE REF TO CL_GUI_CUSTOM_CONTAINER,

      GT_FIELDCAT          TYPE LVC_T_FCAT,
      GS_LAYOUT            TYPE LVC_S_LAYO,
      I_SELECTED_ROWS      TYPE LVC_T_ROW,

      TG_SELECTEDCELL      TYPE LVC_T_CELL,
      WG_SELECTEDCELL      TYPE LVC_S_CELL,
      TG_SELECTEDROW       TYPE LVC_T_ROW,
      WG_SELECTEDROW       TYPE LVC_S_ROW,
      TY_TOOLBAR           TYPE STB_BUTTON,
      WA_STABLE            TYPE LVC_S_STBL,
      OBG_TOOLBAR          TYPE REF TO LCL_ALV_TOOLBAR,
      C_ALV_TOOLBARMANAGER TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      TG_MSG_RET           TYPE TABLE OF ZFIWRS0002 WITH HEADER LINE.


DATA: WL_REPID    TYPE SY-REPID,
      TL_FUNCTION TYPE UI_FUNCTIONS,
      WL_FUNCTION LIKE TL_FUNCTION WITH HEADER LINE.

DATA: LT_CELLTAB TYPE LVC_T_STYL.

INITIALIZATION.

START-OF-SELECTION.

  CALL SCREEN 0100.


CLASS LCL_ALV_TOOLBAR DEFINITION.
  PUBLIC SECTION.

    METHODS: CONSTRUCTOR
      IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,

      ON_TOOLBAR FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID
        IMPORTING E_OBJECT,

      HANDLE_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID
        IMPORTING E_UCOMM.
ENDCLASS.

CLASS LCL_EVENT_HANDLER DEFINITION.

  PUBLIC SECTION.
    CLASS-METHODS:
      ON_DOUBLE_CLICK FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID
        IMPORTING E_ROW E_COLUMN.

    CLASS-METHODS:
      ON_DATA_CHANGED  FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID
        IMPORTING ER_DATA_CHANGED E_ONF4 E_ONF4_BEFORE E_ONF4_AFTER E_UCOMM.

    CLASS-METHODS:
      ON_DATA_CHANGED_FINISHED FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID
        IMPORTING E_MODIFIED ET_GOOD_CELLS.

    CLASS-METHODS:
      ON_BUTTON_CLICK FOR EVENT BUTTON_CLICK OF CL_GUI_ALV_GRID
        IMPORTING ES_COL_ID ES_ROW_NO.

ENDCLASS.


CLASS LCL_ALV_TOOLBAR IMPLEMENTATION.

  METHOD CONSTRUCTOR.
    CREATE OBJECT C_ALV_TOOLBARMANAGER
      EXPORTING
        IO_ALV_GRID = IO_ALV_GRID.
  ENDMETHOD.

  METHOD ON_TOOLBAR.

    CLEAR TY_TOOLBAR.
    TY_TOOLBAR-ICON       = ICON_INSERT_ROW.
    TY_TOOLBAR-FUNCTION   = 'INSERIR'.
    TY_TOOLBAR-BUTN_TYPE  = 0.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.


    TY_TOOLBAR-ICON       = ICON_DELETE_ROW.
    TY_TOOLBAR-FUNCTION   = 'ELIMINAR'.
    TY_TOOLBAR-BUTN_TYPE  = 0.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.


    CALL METHOD C_ALV_TOOLBARMANAGER->REORGANIZE
      EXPORTING
        IO_ALV_TOOLBAR = E_OBJECT.
  ENDMETHOD.

  METHOD HANDLE_USER_COMMAND.
    DATA: WL_INSERT LIKE LINE OF IT_SAIDA,
          ANS       TYPE C.

    CASE E_UCOMM.
      WHEN 'INSERIR'.

        APPEND WL_INSERT  TO IT_SAIDA.

      WHEN 'ELIMINAR'.
        CLEAR ANS.

        CALL METHOD G_GRID->GET_SELECTED_ROWS
          IMPORTING
            ET_INDEX_ROWS = TG_SELECTEDROW.

        CALL FUNCTION 'POPUP_TO_CONFIRM'
          EXPORTING
            TITLEBAR      = 'Confirmação'
            TEXT_QUESTION = 'Deseja eliminar a(s) linha(s) selecionada(s)?'
            TEXT_BUTTON_1 = 'Sim'
            ICON_BUTTON_1 = 'ICON_CHECKED'
            TEXT_BUTTON_2 = 'Não'
            ICON_BUTTON_2 = 'ICON_CANCEL'
            POPUP_TYPE    = 'ICON_MESSAGE_ERROR'
          IMPORTING
            ANSWER        = ANS.

        CASE ANS.
          WHEN 2 OR 'A'.
            LEAVE TO CURRENT TRANSACTION.
          WHEN 1.
            PERFORM EXCLUIR_DADOS.
        ENDCASE.
    ENDCASE.

    IF G_GRID IS NOT INITIAL.
      CALL METHOD G_GRID->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    ENDIF.

  ENDMETHOD.

ENDCLASS.


CLASS LCL_EVENT_HANDLER IMPLEMENTATION.
  METHOD ON_DOUBLE_CLICK.

  ENDMETHOD.

  METHOD ON_DATA_CHANGED.

    DATA: LS_GOOD  TYPE LVC_S_MODI,
          LV_VALUE TYPE LVC_VALUE,
          VL_VALUE TYPE LVC_VALUE.
  ENDMETHOD.


  METHOD ON_DATA_CHANGED_FINISHED.
    DATA: LS_GOOD  TYPE LVC_S_MODI,
          LV_VALUE TYPE LVC_VALUE,
          VL_VALUE TYPE LVC_VALUE.
  ENDMETHOD.


  METHOD ON_BUTTON_CLICK.

    CALL METHOD G_GRID->REFRESH_TABLE_DISPLAY
      EXPORTING
        IS_STABLE = WA_STABLE.

  ENDMETHOD.

ENDCLASS.


FORM SELECIONA_DADOS.

  SELECT *  FROM ZMMT0095
    INTO TABLE IT_SAIDA.

ENDFORM.

FORM EXCLUIR_DADOS.
  LOOP AT TG_SELECTEDROW INTO WG_SELECTEDROW.
    READ TABLE IT_SAIDA INTO WA_SAIDA INDEX WG_SELECTEDROW-INDEX.
    DELETE ZMMT0095 FROM WA_SAIDA.
  ENDLOOP.

  CLEAR WA_SAIDA.

  REFRESH IT_SAIDA.

  PERFORM SELECIONA_DADOS.

  CALL METHOD G_GRID->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE = WA_STABLE.
ENDFORM.

FORM SALVAR_DADOS.

  MOVE-CORRESPONDING IT_SAIDA TO IT_SAIDA_AUX.

  IF IT_SAIDA[] IS NOT INITIAL.
    MODIFY ZMMT0095 FROM TABLE IT_SAIDA_AUX.
    MESSAGE TEXT-001 TYPE 'S'.
    FREE IT_SAIDA_AUX.
  ENDIF.
ENDFORM.


FORM CREATE_ALV CHANGING PT_FIELDCAT TYPE LVC_T_FCAT.

  IF G_CONTAINER IS INITIAL.
    WA_STABLE = 'X'.
    G_CONTAINER = 'CONTAINER'.

    CREATE OBJECT G_CUSTOM_CONTAINER
      EXPORTING
        CONTAINER_NAME = G_CONTAINER.


    CREATE OBJECT G_GRID
      EXPORTING
        I_PARENT = G_CUSTOM_CONTAINER.

    CREATE OBJECT OBG_TOOLBAR
      EXPORTING
        IO_ALV_GRID = G_GRID.

    SET HANDLER OBG_TOOLBAR->ON_TOOLBAR FOR G_GRID.
    SET HANDLER OBG_TOOLBAR->HANDLE_USER_COMMAND FOR G_GRID.

    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_CHECK.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
    APPEND WL_FUNCTION TO TL_FUNCTION.

    PERFORM SELECIONA_DADOS.

    PERFORM BUILD_FIELDCAT CHANGING PT_FIELDCAT.

    CALL METHOD CL_GUI_CFW=>FLUSH.

    CALL METHOD G_GRID->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IT_TOOLBAR_EXCLUDING = TL_FUNCTION
      CHANGING
        IT_FIELDCATALOG      = PT_FIELDCAT
        IT_OUTTAB            = IT_SAIDA.

    SET HANDLER:
      LCL_EVENT_HANDLER=>ON_BUTTON_CLICK FOR G_GRID,
      LCL_EVENT_HANDLER=>ON_DATA_CHANGED FOR G_GRID,
      LCL_EVENT_HANDLER=>ON_DATA_CHANGED_FINISHED FOR G_GRID.

    CALL METHOD G_GRID->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

    CALL METHOD G_GRID->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.

    CALL METHOD G_GRID->SET_READY_FOR_INPUT
      EXPORTING
        I_READY_FOR_INPUT = 1.

  ELSE.

    CALL METHOD G_GRID->REFRESH_TABLE_DISPLAY
      EXPORTING
        IS_STABLE = WA_STABLE.
  ENDIF.

ENDFORM.


FORM BUILD_FIELDCAT CHANGING PT_FIELDCAT TYPE LVC_T_FCAT.

  DATA LS_FCAT TYPE LVC_S_FCAT.
  CLEAR PT_FIELDCAT.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZMMT0095'
    CHANGING
      CT_FIELDCAT      = PT_FIELDCAT.

  CLEAR LS_FCAT.

  LOOP AT PT_FIELDCAT INTO LS_FCAT.

    IF LS_FCAT-FIELDNAME EQ 'BUKRS'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = 'T001'.
      LS_FCAT-OUTPUTLEN = 7.
      LS_FCAT-COLTEXT = 'Empresa'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.
    ELSEIF LS_FCAT-FIELDNAME EQ 'WERKS'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = 'T001W'.
      LS_FCAT-OUTPUTLEN = 6 .
      LS_FCAT-COLTEXT = 'Centro'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.
    ELSEIF LS_FCAT-FIELDNAME EQ 'ATAGE'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = '!'.
      LS_FCAT-OUTPUTLEN = 15.
      LS_FCAT-COLTEXT = 'Qntd. dias Atraso'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.
    ELSEIF LS_FCAT-FIELDNAME EQ 'EMAIL_01'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = '!'.
      LS_FCAT-OUTPUTLEN = 25.
      LS_FCAT-COLTEXT = 'E-mail 01'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.
    ELSEIF LS_FCAT-FIELDNAME EQ 'EMAIL_02'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = '!'.
      LS_FCAT-OUTPUTLEN = 25.
      LS_FCAT-COLTEXT = 'E-mail 02'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.

    ELSEIF LS_FCAT-FIELDNAME EQ 'EMAIL_03'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = '!'.
      LS_FCAT-OUTPUTLEN = 25.
      LS_FCAT-COLTEXT = 'E-mail 03'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.

    ELSEIF LS_FCAT-FIELDNAME EQ 'EMAIL_04'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = '!'.
      LS_FCAT-OUTPUTLEN = 25.
      LS_FCAT-COLTEXT = 'E-mail 04'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.

    ELSEIF LS_FCAT-FIELDNAME EQ 'EMAIL_05'.
      LS_FCAT-EDIT = 'X'.
      LS_FCAT-CHECKTABLE = '!'.
      LS_FCAT-OUTPUTLEN = 25.
      LS_FCAT-COLTEXT = 'E-mail 05'.
      MODIFY PT_FIELDCAT FROM LS_FCAT.

    ENDIF.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'STATUS'.
  SET TITLEBAR 'TITULO'.

  IF G_CUSTOM_CONTAINER IS INITIAL.
    PERFORM CREATE_ALV CHANGING GT_FIELDCAT.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.
  CASE SY-UCOMM.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'SALVAR'.
      PERFORM SALVAR_DADOS.
  ENDCASE.

  IF G_CUSTOM_CONTAINER IS INITIAL.
    PERFORM CREATE_ALV CHANGING GT_FIELDCAT.
  ENDIF.


ENDMODULE.
