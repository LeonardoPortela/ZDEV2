*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0200 OUTPUT.
  SET PF-STATUS '0200'.
  IF D_BUTT1 = 'BTN1'.
    SET TITLEBAR '0300'.
  ELSEIF D_BUTT1 = 'BTN2'.
    SET TITLEBAR '0200'.
  ELSE.
    SET TITLEBAR '0400'.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  TRATA_FIELDS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE TRATA_FIELDS OUTPUT.
  LOOP AT TG_FIELDS.
    LOOP AT SCREEN.
      IF SCREEN-NAME EQ TG_FIELDS-CAMPO
      OR SCREEN-GROUP1 EQ TG_FIELDS-GROUP1.
        SCREEN-INPUT     = TG_FIELDS-VALUE.
        SCREEN-INVISIBLE = TG_FIELDS-INVISIBLE.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDLOOP.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CRIA_OBJETOS2  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CRIA_OBJETOS2 OUTPUT.
  WA_STABLE-ROW = 'X'.
  WA_STABLE-COL = 'X'.

  IF G_CUSTOM_CONTAINER2 IS INITIAL.
    CLEAR WA_LAYOUT.
    WA_LAYOUT-CWIDTH_OPT  = C_X.
    WA_LAYOUT-ZEBRA       = C_X.
    WA_LAYOUT-NO_ROWMARK  = C_X.
    WA_LAYOUT-SEL_MODE    = 'A'.
    WA_LAYOUT-STYLEFNAME  = 'STYLE'.
    WA_LAYOUT-BOX_FNAME   = 'MARK'.

    CREATE OBJECT G_CUSTOM_CONTAINER2
      EXPORTING
        CONTAINER_NAME = G_CONTAINER2.

    CREATE OBJECT SPLITTER
      EXPORTING
        PARENT  = G_CUSTOM_CONTAINER2
        ROWS    = 2
        COLUMNS = 1.

    CALL METHOD SPLITTER->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 1
      RECEIVING
        CONTAINER = CONTAINER_2.

    CREATE OBJECT GRID2
      EXPORTING
        I_PARENT = CONTAINER_2.

    CREATE OBJECT OBG_TOOLBAR
      EXPORTING
        IO_ALV_GRID = GRID2.

*      * Register event handler
    SET HANDLER OBG_TOOLBAR->ON_TOOLBAR FOR GRID2.
    SET HANDLER OBG_TOOLBAR->HANDLE_USER_COMMAND FOR GRID2.

    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_CHECK.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
    APPEND WL_FUNCTION TO TL_FUNCTION.

    IF D_BUTT1 = 'BTN1'.
      PERFORM F_MONTAR_LAYOUT3 USING SPACE.
    ELSEIF D_BUTT1 = 'BTN2'.
      PERFORM F_MONTAR_LAYOUT2 USING SPACE.
    ELSEIF D_BUTT1 = 'BTN3'.
      PERFORM F_MONTAR_LAYOUT4 USING SPACE.
    ELSEIF D_BUTT1 = 'BTN4'.

    ENDIF.


    IF D_BUTT1 = 'BTN1'.
      CALL METHOD GRID2->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
          IT_TOOLBAR_EXCLUDING = TL_FUNCTION
          IS_LAYOUT            = WA_LAYOUT
        CHANGING
          IT_FIELDCATALOG      = T_FIELDCATALOG[]
          IT_OUTTAB            = IT_SAIDA_0300[].
    ELSEIF D_BUTT1 = 'BTN2'.
      CALL METHOD GRID2->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
          IT_TOOLBAR_EXCLUDING = TL_FUNCTION
          IS_LAYOUT            = WA_LAYOUT
        CHANGING
          IT_FIELDCATALOG      = T_FIELDCATALOG[]
          IT_OUTTAB            = IT_SAIDA_0200[].
    ELSE.
      CLEAR WA_LAYOUT-BOX_FNAME.
      CALL METHOD GRID2->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
          IT_TOOLBAR_EXCLUDING = TL_FUNCTION
          IS_LAYOUT            = WA_LAYOUT
        CHANGING
          IT_FIELDCATALOG      = T_FIELDCATALOG[]
          IT_OUTTAB            = IT_SAIDA_0400[].
    ENDIF.

    CALL METHOD GRID2->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

    CALL METHOD GRID2->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.


    SET HANDLER: LCL_EVENT_HANDLER=>ON_DATA_CHANGED          FOR GRID2,
                 LCL_EVENT_HANDLER=>ON_DOUBLE_CLICK          FOR GRID2,
                 LCL_EVENT_HANDLER=>ON_HOTSPOT_CLICK         FOR GRID2,
                 LCL_EVENT_HANDLER=>ON_DATA_CHANGED_FINISHED FOR GRID2.


*    posiciona spliter na altura x
    CALL METHOD SPLITTER->SET_ROW_HEIGHT
      EXPORTING
        ID     = 1
        HEIGHT = 100.
  ELSE.
    IF WG_ACAO = C_MODIF OR WG_ACAO = C_ADD.
      IF D_BUTT1 = 'BTN1'.
        PERFORM F_MONTAR_LAYOUT3 USING C_X.
      ELSEIF D_BUTT1 = 'BTN2'.
        PERFORM F_MONTAR_LAYOUT2 USING C_X.
      ELSE.
        PERFORM F_MONTAR_LAYOUT4 USING C_X.
      ENDIF.
    ELSE.
      IF D_BUTT1 = 'BTN1'.
        PERFORM F_MONTAR_LAYOUT3 USING SPACE.
      ELSEIF D_BUTT1 = 'BTN2'.
        PERFORM F_MONTAR_LAYOUT2 USING SPACE.
      ELSE.
        CLEAR WA_LAYOUT-BOX_FNAME.
        PERFORM F_MONTAR_LAYOUT4 USING SPACE.
      ENDIF.
    ENDIF.

    CALL METHOD GRID2->SET_FRONTEND_FIELDCATALOG
      EXPORTING
        IT_FIELDCATALOG = T_FIELDCATALOG[].

    CALL METHOD GRID2->REFRESH_TABLE_DISPLAY
      EXPORTING
        IS_STABLE = WA_STABLE.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS '0100'.
  SET TITLEBAR '0100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CRIA_OBJETOS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CRIA_OBJETOS OUTPUT.
  WA_STABLE-ROW = 'X'.
  WA_STABLE-COL = 'X'.

  IF G_CUSTOM_CONTAINER IS INITIAL.
    CLEAR WA_LAYOUT.
    WA_LAYOUT-CWIDTH_OPT  = C_X.
    WA_LAYOUT-ZEBRA       = C_X.
    WA_LAYOUT-NO_TOOLBAR  = ''.
    WA_LAYOUT-NO_ROWMARK  = SPACE.
    WA_LAYOUT-COL_OPT     = C_X.
    WA_STABLE-ROW         = C_X.
    WA_LAYOUT-SEL_MODE    = 'A'.

    CREATE OBJECT G_CUSTOM_CONTAINER
      EXPORTING
        CONTAINER_NAME = G_CONTAINER.

    CREATE OBJECT SPLITTER
      EXPORTING
        PARENT  = G_CUSTOM_CONTAINER
        ROWS    = 2
        COLUMNS = 1.

    CALL METHOD SPLITTER->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 1
      RECEIVING
        CONTAINER = CONTAINER_1.

    CREATE OBJECT GRID1
      EXPORTING
        I_PARENT = CONTAINER_1.

*    CREATE OBJECT OBG_TOOLBAR
*      EXPORTING
*        IO_ALV_GRID = GRID1.

**      * Register event handler
*    SET HANDLER OBG_TOOLBAR->ON_TOOLBAR FOR GRID1.
*    SET HANDLER OBG_TOOLBAR->HANDLE_USER_COMMAND FOR GRID1.

    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_CHECK.
    APPEND WL_FUNCTION TO TL_FUNCTION.
    WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
    APPEND WL_FUNCTION TO TL_FUNCTION.

    PERFORM F_MONTAR_LAYOUT.


    CLEAR WA_LAYOUT-CWIDTH_OPT.
    GS_VARIANT_C-REPORT = SY-REPID. "Enable users save own LAYOUTs

    CALL METHOD GRID1->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_VARIANT           = GS_VARIANT_C
        IT_TOOLBAR_EXCLUDING = TL_FUNCTION
        IS_LAYOUT            = WA_LAYOUT
        I_SAVE               = 'X'
        I_DEFAULT            = 'X'
      CHANGING
        IT_FIELDCATALOG      = T_FIELDCATALOG[]
        IT_OUTTAB            = IT_SAIDA_0100[].

    CALL METHOD GRID1->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

    CALL METHOD GRID1->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.


    SET HANDLER:
      LCL_EVENT_HANDLER=>ON_HOTSPOT_CLICK FOR GRID1.
*      LCL_EVENT_HANDLER=>ON_DATA_CHANGED_FINISHED FOR GRID1,
*      LCL_EVENT_HANDLER=>ON_DATA_CHANGED          FOR GRID1.


*    posiciona spliter na altura x
    CALL METHOD SPLITTER->SET_ROW_HEIGHT
      EXPORTING
        ID     = 1
        HEIGHT = 100.
  ELSE.
    PERFORM F_MONTAR_LAYOUT.

    CALL METHOD GRID1->SET_FRONTEND_FIELDCATALOG
      EXPORTING
        IT_FIELDCATALOG = T_FIELDCATALOG[].

    CALL METHOD GRID1->REFRESH_TABLE_DISPLAY
      EXPORTING
        IS_STABLE = WA_STABLE.
  ENDIF.
ENDMODULE.
