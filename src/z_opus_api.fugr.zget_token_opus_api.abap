FUNCTION ZGET_TOKEN_OPUS_API.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_URL_TOKEN) TYPE  STRING
*"     REFERENCE(I_URL_DESTINO) TYPE  STRING
*"  EXPORTING
*"     REFERENCE(TOKEN) TYPE  STRING
*"  EXCEPTIONS
*"      HTTP_COMMUNICATION_FAILURE
*"      HTTP_INVALID_STATE
*"      HTTP_PROCESSING_FAILED
*"      HTTP_INVALID_TIMEOUT
*"----------------------------------------------------------------------


*TYPES: BEGIN OF TY_OUTPUT_JSON,
*        ACCESS_TOKEN  TYPE STRING,
*      END OF TY_OUTPUT_JSON.
*TYPES: BEGIN OF TY_ZAUTH_WEBSERVICE,
*         SERVICE  TYPE ZAUTH_WEBSERVICE-SERVICE,
*         URL      TYPE ZAUTH_WEBSERVICE-URL,
*         USERNAME TYPE ZAUTH_WEBSERVICE-USERNAME,
*         PASSWORD TYPE ZAUTH_WEBSERVICE-PASSWORD,
*       END OF TY_ZAUTH_WEBSERVICE.
*
*DATA:
*
*  TOKEN_PAYLOAD TYPE STRING,
*  HTTP_CLIENT   TYPE REF TO IF_HTTP_CLIENT,
*  RESPONSE      TYPE STRING,
*  WA_ZAUTH_WEBSERVICE TYPE TY_ZAUTH_WEBSERVICE,
*  IT_OUTPUT_JSON TYPE  TY_OUTPUT_JSON.
*
*
*SELECT
*  SINGLE  SERVICE    URL  USERNAME  PASSWORD
*  FROM ZAUTH_WEBSERVICE
*   INTO  WA_ZAUTH_WEBSERVICE
* WHERE SERVICE EQ 'URL_TOKEN_OPUS_API'.
*
*
*CONCATENATE 'grant_type=password&username=' WA_ZAUTH_WEBSERVICE-USERNAME '&password=' WA_ZAUTH_WEBSERVICE-PASSWORD INTO TOKEN_PAYLOAD .
*
*CL_HTTP_CLIENT=>CREATE_BY_URL( EXPORTING URL = CONV #( WA_ZAUTH_WEBSERVICE-URL ) IMPORTING CLIENT = HTTP_CLIENT ).
*
*IF SY-SUBRC = 0.
*  HTTP_CLIENT->REQUEST->SET_METHOD( IF_HTTP_REQUEST=>CO_REQUEST_METHOD_POST ).
*ENDIF.
*IF SY-SUBRC = 0.
*  HTTP_CLIENT->REQUEST->SET_CONTENT_TYPE( 'application/json' ).
*ENDIF.
*
*HTTP_CLIENT->REQUEST->SET_CDATA( TOKEN_PAYLOAD ).
*HTTP_CLIENT->PROPERTYTYPE_LOGON_POPUP = IF_HTTP_CLIENT=>CO_DISABLED.
*HTTP_CLIENT->SEND( ).
*
*TRY.
*    HTTP_CLIENT->RECEIVE( ).
*  CATCH CX_ROOT.
*    WRITE 'error' .
*ENDTRY.
*
*
*RESPONSE = HTTP_CLIENT->RESPONSE->GET_CDATA( ).
*
*
*
*/UI2/CL_JSON=>DESERIALIZE( EXPORTING JSON = RESPONSE PRETTY_NAME = /UI2/CL_JSON=>PRETTY_MODE-CAMEL_CASE CHANGING DATA = IT_OUTPUT_JSON ).
*
*
*IF IT_OUTPUT_JSON IS NOT INITIAL.
*
*  TOKEN = |Bearer { IT_OUTPUT_JSON-ACCESS_TOKEN }|.
*
*ENDIF.

  ZCL_WEBSERVICE=>ZIF_WEBSERVICE~GET_TOKEN_OPUS(
    EXPORTING
      I_URL_TOKEN                = I_URL_TOKEN
      I_URL_DESTINO              = I_URL_DESTINO
    IMPORTING
      E_TOKEN                    =  TOKEN
    EXCEPTIONS
      HTTP_COMMUNICATION_FAILURE = 1
      HTTP_INVALID_STATE         = 2
      HTTP_PROCESSING_FAILED     = 3
      HTTP_INVALID_TIMEOUT       = 4
      OTHERS                     = 5
  ).

  CASE SY-SUBRC.
    WHEN 1 OR 5.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING HTTP_COMMUNICATION_FAILURE.
    WHEN 2.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING HTTP_INVALID_STATE.
    WHEN 3.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING HTTP_PROCESSING_FAILED.
    WHEN 4.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING HTTP_INVALID_TIMEOUT.
  ENDCASE.

ENDFUNCTION.
