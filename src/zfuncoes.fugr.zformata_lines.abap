FUNCTION ZFORMATA_LINES.
*"--------------------------------------------------------------------
*"*"Interface local:
*"  TABLES
*"      LINES STRUCTURE  TLINE
*"      LINES_S STRUCTURE  ZTLINE
*"--------------------------------------------------------------------

  CONSTANTS: QTD_CHAR_LINE TYPE I VALUE 105.

  TYPES: BEGIN OF TY_STRING.
  TYPES:   LINHA TYPE STRING.
  TYPES: END OF TY_STRING.

  DATA: WA_LINHA    TYPE TY_STRING,
        WA_LINES    TYPE TLINE,
        WA_LINES_S  TYPE ZTLINE,
        IT_LINHA    TYPE TABLE OF TY_STRING INITIAL SIZE 0 WITH HEADER LINE,
        IT_PALAVRAS TYPE TABLE OF TY_STRING INITIAL SIZE 0 WITH HEADER LINE,
        WA_PALAVRAS TYPE TY_STRING,
        VG_LINHA    TYPE STRING,
        VG_POSICAO  TYPE SY-TABIX,
        QT_STRING   TYPE I,
        QT_AUX      TYPE I,
        QT_LINAS    TYPE I,
        VG_TABIX    TYPE I,
        VG_CHAR     TYPE C LENGTH 1.

  CLEAR: WA_LINHA.

  VG_POSICAO = 0.

  LOOP AT LINES INTO WA_LINES.

    IF NOT WA_LINES-TDFORMAT IS INITIAL.
      WA_LINHA-LINHA = WA_LINES-TDLINE.
      APPEND WA_LINHA TO IT_LINHA.
      VG_POSICAO = VG_POSICAO + 1.
    ELSE.
      IF WA_LINHA-LINHA IS INITIAL.
        WA_LINHA-LINHA = WA_LINES-TDLINE.
      ELSE.
        CONCATENATE WA_LINHA-LINHA WA_LINES-TDLINE INTO WA_LINHA-LINHA SEPARATED BY SPACE.
      ENDIF.
      MODIFY IT_LINHA INDEX VG_POSICAO FROM WA_LINHA TRANSPORTING LINHA.
    ENDIF.

  ENDLOOP.

  LOOP AT IT_LINHA INTO WA_LINHA.

    CALL FUNCTION 'STRING_LENGTH'
      EXPORTING
        STRING = WA_LINHA-LINHA
      IMPORTING
        LENGTH = QT_STRING.

    CLEAR: VG_LINHA, IT_PALAVRAS[].

    WHILE QT_STRING GT 0.

      VG_CHAR = WA_LINHA-LINHA(1).

      IF VG_CHAR IS INITIAL.
        WA_PALAVRAS-LINHA = VG_LINHA.
        APPEND WA_PALAVRAS TO IT_PALAVRAS.
        CLEAR: VG_LINHA.
      ELSE.
        CONCATENATE VG_LINHA VG_CHAR INTO VG_LINHA.
      ENDIF.

      QT_STRING = QT_STRING - 1.
      WA_LINHA-LINHA = WA_LINHA-LINHA+1(QT_STRING).

      CALL FUNCTION 'STRING_LENGTH'
        EXPORTING
          STRING = WA_LINHA-LINHA
        IMPORTING
          LENGTH = QT_STRING.

    ENDWHILE.

    IF NOT VG_LINHA IS INITIAL.
      WA_PALAVRAS-LINHA = VG_LINHA.
      APPEND WA_PALAVRAS TO IT_PALAVRAS.
    ENDIF.

    WA_LINES_S-TDFORMAT = '*'.

    DESCRIBE TABLE IT_PALAVRAS LINES QT_LINAS.
    LOOP AT IT_PALAVRAS INTO WA_PALAVRAS.

      VG_TABIX = SY-TABIX.

      IF WA_LINES_S-TDLINE IS INITIAL.
        WA_LINES_S-TDLINE = WA_PALAVRAS-LINHA.
      ELSE.

        CALL FUNCTION 'STRING_LENGTH'
          EXPORTING
            STRING = WA_LINES_S-TDLINE
          IMPORTING
            LENGTH = QT_STRING.

        CALL FUNCTION 'STRING_LENGTH'
          EXPORTING
            STRING = WA_PALAVRAS-LINHA
          IMPORTING
            LENGTH = QT_AUX.

        QT_STRING = QT_STRING + QT_AUX + 1. "Considerando 1 para a sepação com espaço

        IF QT_STRING GT QTD_CHAR_LINE.
          APPEND WA_LINES_S TO LINES_S.
          CLEAR: WA_LINES_S.
          WA_LINES_S-TDLINE = WA_PALAVRAS-LINHA.
        ELSE.
          CONCATENATE WA_LINES_S-TDLINE WA_PALAVRAS-LINHA INTO WA_LINES_S-TDLINE SEPARATED BY SPACE.
        ENDIF.

      ENDIF.

      IF QT_LINAS EQ VG_TABIX.
        APPEND WA_LINES_S TO LINES_S.
        CLEAR: WA_LINES_S.
      ENDIF.

    ENDLOOP.

  ENDLOOP.

ENDFUNCTION.
