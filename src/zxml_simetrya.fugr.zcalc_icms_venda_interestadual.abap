FUNCTION ZCALC_ICMS_VENDA_INTERESTADUAL.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_DOCNUM) TYPE  J_1BDOCNUM
*"     REFERENCE(I_ITMNUM) TYPE  J_1BITMNUM OPTIONAL
*"     REFERENCE(I_CFOP) TYPE  J_1BCFOP OPTIONAL
*"  EXPORTING
*"     REFERENCE(E_CALCULADO) TYPE  C
*"  CHANGING
*"     REFERENCE(C_VBCUFDEST) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_PFCPUFDEST) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_PICMSUFDEST) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_PICMSINTER) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_PICMSINTERPART) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_VFCPUFDEST) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_VICMSUFDEST) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_VICMSUFREMET) TYPE  J_1BTAXVAL OPTIONAL
*"     REFERENCE(C_MSG_NFE) TYPE  STRING OPTIONAL
*"----------------------------------------------------------------------


  TYPES: BEGIN OF TY_ICMS_INTER,
            VBCUFDEST           TYPE J_1BTAXVAL,
            PFCPUFDEST          TYPE J_1BTAXVAL,
            PICMSUFDEST         TYPE J_1BTAXVAL,
            PICMSINTER          TYPE J_1BTAXVAL,
            PICMSINTERPART      TYPE J_1BTAXVAL,
            VFCPUFDEST          TYPE J_1BTAXVAL,
            VICMSUFDEST         TYPE J_1BTAXVAL,
            VICMSUFREMET        TYPE J_1BTAXVAL,
*** Stefanini - IR213918 - 23/12/2024 - LAZAROSR - Início de Alteração
            DIF_ICMS_ORIG_DEST  TYPE P DECIMALS 3,
*            DIF_ICMS_ORIG_DEST  TYPE J_1BTAXVAL,
*** Stefanini - IR213918 - 23/12/2024 - LAZAROSR - Fim de Alteração
            PERC_ICMS_PART_DEST TYPE J_1BTAXVAL,
            PERC_ICMS_PART_REM  TYPE J_1BTAXVAL,
         END OF TY_ICMS_INTER.

  DATA: WL_DOC        TYPE J_1BNFDOC,
        WL_KNA1_VD    TYPE KNA1,
        WL_LFA1_VD    TYPE LFA1,
        TG_1BNFLIN    TYPE TABLE OF J_1BNFLIN WITH HEADER LINE,
        TG_J_1BTXIC1  TYPE TABLE OF J_1BTXIC1 WITH HEADER LINE,
        WL_ICMS_INTER TYPE TY_ICMS_INTER,
        WL_J_1BNFSTX  TYPE J_1BNFSTX,
        VL_CENTRO_EMI TYPE LFA1-LIFNR,
        REGIO_PARID   TYPE KNA1-REGIO,
        VL_TOT_FCPUFDEST   TYPE J_1BTAXVAL,
        VL_TOT_ICMSUFDEST  TYPE J_1BTAXVAL,
        VL_TOT_ICMSUFREMET TYPE J_1BTAXVAL,
        VL_TOT_FCPUFDEST_S   TYPE STRING,
        VL_TOT_ICMSUFDEST_S  TYPE STRING,
        VL_TOT_ICMSUFREMET_S TYPE STRING.


  RANGES: R_CFOP_ITM FOR J_1BNFLIN-CFOP.

  CLEAR: WL_DOC, WL_KNA1_VD, WL_LFA1_VD, WL_ICMS_INTER, E_CALCULADO, C_MSG_NFE,
         C_VBCUFDEST, C_PFCPUFDEST, C_PICMSUFDEST, C_PICMSINTER, C_PICMSINTERPART,
         C_VFCPUFDEST, C_VICMSUFDEST, C_VICMSUFREMET, VL_TOT_FCPUFDEST, VL_TOT_ICMSUFDEST, VL_TOT_ICMSUFREMET.

  R_CFOP_ITM-SIGN   = 'I'.
  R_CFOP_ITM-OPTION = 'EQ'.
  R_CFOP_ITM-LOW    = '6101'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6102'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6103'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6104'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6105'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6106'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6107'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6108'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6109'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6110'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6111'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6112'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6113'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6114'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6115'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6116'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6117'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6118'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6250'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6258'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6551'. APPEND R_CFOP_ITM.
  R_CFOP_ITM-LOW    = '6949'. APPEND R_CFOP_ITM.

  IF I_CFOP(4) IS NOT INITIAL.
    CHECK I_CFOP(4) IN R_CFOP_ITM. "Check se operação é Venda Interestadual
  ENDIF.

  SELECT SINGLE *
    FROM J_1BNFDOC INTO WL_DOC
   WHERE DOCNUM = I_DOCNUM.

  CHECK SY-SUBRC = 0.

  IF I_ITMNUM IS NOT INITIAL.
    SELECT *
      FROM J_1BNFLIN INTO TABLE TG_1BNFLIN
     WHERE DOCNUM EQ I_DOCNUM
       AND ITMNUM EQ I_ITMNUM.
  ELSE.
    SELECT *
      FROM J_1BNFLIN INTO TABLE TG_1BNFLIN
     WHERE DOCNUM  EQ I_DOCNUM.
  ENDIF.

  LOOP AT TG_1BNFLIN.
    IF TG_1BNFLIN-CFOP(4) NOT IN R_CFOP_ITM. "Check se operação é Venda Interestadual
      RETURN.
    ENDIF.
  ENDLOOP.

  CHECK TG_1BNFLIN[] IS NOT INITIAL.

  SELECT SINGLE *
    FROM J_1BAD INTO @DATA(_WL_J1BAD)
   WHERE PARVW EQ @WL_DOC-PARVW.

  CHECK SY-SUBRC EQ 0.

  CASE _WL_J1BAD-PARTYP.
    WHEN 'V'.

      SELECT SINGLE *
        FROM LFA1 INTO @DATA(WL_PARID_K)
       WHERE LIFNR EQ @WL_DOC-PARID.

      CHECK ( SY-SUBRC = 0 ) AND ( WL_PARID_K-STCD3 IS INITIAL ). "Fornecedor não é contribuinte do ICMS

      REGIO_PARID = WL_PARID_K-REGIO.

    WHEN 'C'.

      SELECT SINGLE *
        FROM KNA1 INTO @DATA(WL_PARID_D)
       WHERE KUNNR EQ @WL_DOC-PARID.

      CHECK ( SY-SUBRC = 0 ) AND ( WL_PARID_D-STCD3 IS INITIAL ). "Cliente não é contribuinte do ICMS

      REGIO_PARID = WL_PARID_D-REGIO.

   WHEN OTHERS.
     EXIT.
  ENDCASE.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      INPUT    = WL_DOC-BRANCH
    IMPORTING
      OUTPUT   = VL_CENTRO_EMI.

  CHECK VL_CENTRO_EMI IS NOT INITIAL.

  SELECT SINGLE *
    FROM LFA1 INTO WL_LFA1_VD
   WHERE LIFNR = VL_CENTRO_EMI.

  CHECK SY-SUBRC EQ 0.

  "Buscar Taxa ICMS UF Destinatario
  CLEAR: TG_J_1BTXIC1[].
  SELECT *
    FROM J_1BTXIC1 INTO TABLE TG_J_1BTXIC1
   WHERE LAND1    = 'BR'
     AND SHIPFROM = REGIO_PARID
     AND SHIPTO   = REGIO_PARID.

  SORT TG_J_1BTXIC1 BY VALIDFROM.
  LOOP AT TG_J_1BTXIC1.
    WL_ICMS_INTER-PICMSUFDEST = TG_J_1BTXIC1-RATE.  "ICMS UF Destinatario
  ENDLOOP.

  CHECK WL_ICMS_INTER-PICMSUFDEST > 0.

  LOOP AT TG_1BNFLIN.

    CLEAR: WL_J_1BNFSTX                , WL_ICMS_INTER-VBCUFDEST,
           WL_ICMS_INTER-PFCPUFDEST    , WL_ICMS_INTER-PICMSINTER,
           WL_ICMS_INTER-PICMSINTERPART, WL_ICMS_INTER-VFCPUFDEST,
           WL_ICMS_INTER-VICMSUFDEST   , WL_ICMS_INTER-VICMSUFREMET.

    SELECT SINGLE A~BASE A~RATE
      INTO CORRESPONDING FIELDS OF WL_J_1BNFSTX
      FROM J_1BNFSTX AS A INNER JOIN J_1BAJ AS B ON A~TAXTYP = B~TAXTYP
     WHERE A~DOCNUM = TG_1BNFLIN-DOCNUM
       AND A~ITMNUM = TG_1BNFLIN-ITMNUM
       AND B~TAXGRP = 'ICMS'.

    IF ( SY-SUBRC NE 0 ).
      RETURN.
    ENDIF.

    IF ( WL_J_1BNFSTX-BASE IS INITIAL ) OR ( WL_J_1BNFSTX-RATE IS INITIAL ).
      RETURN.
    ENDIF.

    WL_ICMS_INTER-VBCUFDEST      = WL_J_1BNFSTX-BASE. "Base de Calculo
    WL_ICMS_INTER-PFCPUFDEST     = 0.
    WL_ICMS_INTER-PICMSINTER     = WL_J_1BNFSTX-RATE. "ICMS Interestadual

    CASE WL_DOC-DOCDAT(4).
      WHEN '2015' OR '2016'.
        WL_ICMS_INTER-PICMSINTERPART = 40.
      WHEN '2017'.
        WL_ICMS_INTER-PICMSINTERPART = 60.
      WHEN '2018'.
        WL_ICMS_INTER-PICMSINTERPART = 80.
      WHEN OTHERS.
        WL_ICMS_INTER-PICMSINTERPART = 100.
    ENDCASE.

    WL_ICMS_INTER-PERC_ICMS_PART_DEST = WL_ICMS_INTER-PICMSINTERPART / 100.
    WL_ICMS_INTER-PERC_ICMS_PART_REM  = ( 100 - WL_ICMS_INTER-PICMSINTERPART ) / 100.

    IF ( WL_ICMS_INTER-PICMSUFDEST - WL_ICMS_INTER-PICMSINTER )  <= 0.
      RETURN.
    ENDIF.

    WL_ICMS_INTER-DIF_ICMS_ORIG_DEST = ( WL_ICMS_INTER-PICMSUFDEST - WL_ICMS_INTER-PICMSINTER ) / 100.

    WL_ICMS_INTER-VFCPUFDEST    = 0. "Fundo Combate P.
    WL_ICMS_INTER-VICMSUFDEST   = WL_J_1BNFSTX-BASE * WL_ICMS_INTER-DIF_ICMS_ORIG_DEST * WL_ICMS_INTER-PERC_ICMS_PART_DEST.
    WL_ICMS_INTER-VICMSUFREMET  = WL_J_1BNFSTX-BASE * WL_ICMS_INTER-DIF_ICMS_ORIG_DEST * WL_ICMS_INTER-PERC_ICMS_PART_REM.

    C_PFCPUFDEST                = WL_ICMS_INTER-PFCPUFDEST    .
    C_PICMSUFDEST               = WL_ICMS_INTER-PICMSUFDEST   .
    C_PICMSINTER                = WL_ICMS_INTER-PICMSINTER    .
    C_PICMSINTERPART            = WL_ICMS_INTER-PICMSINTERPART.

    ADD WL_ICMS_INTER-VBCUFDEST    TO C_VBCUFDEST.
    ADD WL_ICMS_INTER-VFCPUFDEST   TO C_VFCPUFDEST.
    ADD WL_ICMS_INTER-VICMSUFDEST  TO C_VICMSUFDEST.
    ADD WL_ICMS_INTER-VICMSUFREMET TO C_VICMSUFREMET.

    ADD WL_ICMS_INTER-VFCPUFDEST   TO VL_TOT_FCPUFDEST.
    ADD WL_ICMS_INTER-VICMSUFDEST  TO VL_TOT_ICMSUFDEST.
    ADD WL_ICMS_INTER-VICMSUFREMET TO VL_TOT_ICMSUFREMET.

  ENDLOOP.

  VL_TOT_FCPUFDEST_S    = VL_TOT_FCPUFDEST.
  VL_TOT_ICMSUFDEST_S   = VL_TOT_ICMSUFDEST.
  VL_TOT_ICMSUFREMET_S  = VL_TOT_ICMSUFREMET.

  REPLACE ALL OCCURRENCES OF  '.'  IN VL_TOT_FCPUFDEST_S    WITH ',' IGNORING CASE.
  REPLACE ALL OCCURRENCES OF  '.'  IN VL_TOT_ICMSUFDEST_S   WITH ',' IGNORING CASE.
  REPLACE ALL OCCURRENCES OF  '.'  IN VL_TOT_ICMSUFREMET_S  WITH ',' IGNORING CASE.

  CONCATENATE 'Valores totais do ICMS Interestadual: DIFAL da UF destino R$' VL_TOT_ICMSUFDEST_S
              'FCP R$' VL_TOT_FCPUFDEST_S ', DIFAL da UF Origem R$' VL_TOT_ICMSUFREMET_S
         INTO C_MSG_NFE SEPARATED BY SPACE.

  E_CALCULADO = 'X'.

ENDFUNCTION.
