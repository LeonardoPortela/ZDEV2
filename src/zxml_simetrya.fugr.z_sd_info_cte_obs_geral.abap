FUNCTION Z_SD_INFO_CTE_OBS_GERAL.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_CTE_AVULSO) TYPE  J_1BDOCNUM
*"     REFERENCE(P_CTE_GERA) TYPE  CHAR01 OPTIONAL
*"  TABLES
*"      IT_CTE_OBSG STRUCTURE  ZCTE_OBS_GERAIS
*"----------------------------------------------------------------------

  TYPES: BEGIN OF Y_VTPA,
           PARVW        TYPE VTPA-PARVW,
           CLI_FOR(10)  TYPE C,
           NAME1        TYPE LFA1-NAME1,
           STCD1        TYPE LFA1-STCD1,
           STCD2        TYPE LFA1-STCD2,
           STCD3        TYPE LFA1-STCD3,
           ADRNR        TYPE LFA1-ADRNR,
           BAHNS        TYPE LFA1-BAHNS,
         END OF Y_VTPA.

  TYPES: BEGIN OF Y_TRANSBORDO,
          NAME1     TYPE ADRC-NAME1,
          CITY1     TYPE ADRC-CITY1,
          REGION    TYPE ADRC-REGION,
         END OF Y_TRANSBORDO.

  DATA: WA_CTE_ITEM       TYPE J_1BNFLIN,
        WA_FATURA_SERVICO TYPE VBRP,
        WA_ORDEM_VENDA    TYPE VBAK.

  DATA: VL_NAME       TYPE THEAD-TDNAME,
        VL_LANGU      TYPE THEAD-TDSPRAS,
        VL_OBJETO     TYPE THEAD-TDOBJECT,
        IT_VTPA       TYPE TABLE OF Y_VTPA WITH HEADER LINE,
        IT_J_1BNFFTX  TYPE TABLE OF J_1BNFFTX WITH HEADER LINE,
        WA_J_1BNFFTX  TYPE J_1BNFFTX,
        WA_VTPA       TYPE Y_VTPA,
        IT_TRANSBORDO TYPE TABLE OF Y_TRANSBORDO,
        WA_TRANSBORDO TYPE Y_TRANSBORDO,
        VG_TEXTO      TYPE STRING,
        VG_CNPJ       TYPE C LENGTH 18,
        VG_CPF        TYPE C LENGTH 14,
        WA_DOC_TRANSP TYPE  VTTK,
        VL_CNPJ_PROP  TYPE STRING,
        VL_UF         TYPE ZLEST0002-CD_UF,
        VL_NOME       TYPE LFA1-NAME1,
        WA_CTE_OBSG   TYPE ZCTE_OBS_GERAIS,
        IT_ADRC       TYPE TABLE OF ADRC,
        WA_ADRC       TYPE ADRC.



  DATA: BEGIN OF TL_LINE OCCURS 0.
          INCLUDE STRUCTURE TLINE.
  DATA: END OF TL_LINE.

  IF P_CTE_GERA IS INITIAL.

    SELECT * INTO TABLE IT_CTE_OBSG
      FROM ZCTE_OBS_GERAIS
     WHERE DOCNUM EQ P_CTE_AVULSO.

  ELSE.

    WA_CTE_OBSG-DOCNUM = P_CTE_AVULSO.
    WA_CTE_OBSG-LINHA  = 0.

    "" Documento Normal
    SELECT SINGLE * INTO WA_CTE_ITEM
      FROM J_1BNFLIN
     WHERE DOCNUM EQ P_CTE_AVULSO.

    CHECK SY-SUBRC IS INITIAL.

    "Fatura do Servi√ßo
    SELECT SINGLE * INTO WA_FATURA_SERVICO
      FROM VBRP
     WHERE VBELN = WA_CTE_ITEM-REFKEY(10)
       AND POSNR = WA_CTE_ITEM-REFITM.

    CHECK SY-SUBRC IS INITIAL.

    "Ordem de Venda
    SELECT SINGLE * INTO WA_ORDEM_VENDA
      FROM VBAK
     WHERE VBELN = WA_FATURA_SERVICO-AUBEL.

    CHECK SY-SUBRC IS INITIAL.

    SELECT SINGLE * INTO WA_DOC_TRANSP
      FROM VTTK
     WHERE TKNUM = WA_ORDEM_VENDA-TKNUM.

    SELECT *
      FROM J_1BNFFTX INTO WA_J_1BNFFTX
     WHERE DOCNUM EQ P_CTE_AVULSO
     ORDER BY PRIMARY KEY.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      WA_CTE_OBSG-TEXTO = WA_J_1BNFFTX-MESSAGE.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDSELECT.

    DO 2 TIMES.

      IF SY-TABIX = 1.
        VL_NAME   = WA_ORDEM_VENDA-VBELN.
        VL_OBJETO = C_VBBK.
      ELSE.
        CONCATENATE WA_ORDEM_VENDA-VBELN C_000010 INTO VL_NAME.
        VL_OBJETO = C_VBBP.
      ENDIF.

      REFRESH TL_LINE.

      CALL FUNCTION 'READ_TEXT'
        EXPORTING
          CLIENT                  = SY-MANDT
          ID                      = C_0001
          LANGUAGE                = SY-LANGU
          NAME                    = VL_NAME
          OBJECT                  = VL_OBJETO
        TABLES
          LINES                   = TL_LINE
        EXCEPTIONS
          ID                      = 1
          LANGUAGE                = 2
          NAME                    = 3
          NOT_FOUND               = 4
          OBJECT                  = 5
          REFERENCE_CHECK         = 6
          WRONG_ACCESS_TO_ARCHIVE = 7
          OTHERS                  = 8.

      IF SY-SUBRC = 0.
        APPEND LINES OF TL_LINE TO TI_LINE.
      ENDIF.

    ENDDO.

    LOOP AT TI_LINE.
      CONCATENATE VG_TEXTO TI_LINE-TDLINE INTO VG_TEXTO SEPARATED BY SPACE.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      WA_CTE_OBSG-TEXTO = TI_LINE-TDLINE.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDLOOP.

    IF WA_DOC_TRANSP-TKNUM IS NOT INITIAL.
      CONCATENATE 'Numero do Transporte:' WA_DOC_TRANSP-TKNUM INTO WA_CTE_OBSG-TEXTO SEPARATED BY SPACE.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDIF.

    IF WA_FATURA_SERVICO-VBELN IS NOT INITIAL.
      CONCATENATE 'Numero do Faturamento:' WA_FATURA_SERVICO-VBELN INTO WA_CTE_OBSG-TEXTO SEPARATED BY SPACE.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDIF.

    IF WA_FATURA_SERVICO-AUBEL IS NOT INITIAL.

* Obter os parceiros cadastrados (fornecedores e clientes)
* Fornecedores
      SELECT P~PARVW P~LIFNR L~NAME1 L~STCD1 L~STCD2 L~STCD3 L~ADRNR L~BAHNS INTO TABLE IT_VTPA
        FROM VBAK AS K
       INNER JOIN VTPA AS P ON P~VBELN = K~TKNUM
       INNER JOIN LFA1 AS L ON L~LIFNR = P~LIFNR
       WHERE K~VBELN = WA_FATURA_SERVICO-AUBEL.

* Clientes
      SELECT P~PARVW P~KUNNR X~NAME1 X~STCD1 X~STCD2 X~STCD3 X~ADRNR X~BAHNS APPENDING TABLE IT_VTPA
        FROM VBAK AS K
       INNER JOIN VTPA AS P ON P~VBELN = K~TKNUM
       INNER JOIN KNA1 AS X ON X~KUNNR = P~KUNNR
       WHERE K~VBELN = WA_FATURA_SERVICO-AUBEL.

      SELECT * FROM ADRC
        INTO TABLE IT_ADRC
        FOR ALL ENTRIES IN IT_VTPA
      WHERE ADDRNUMBER EQ IT_VTPA-ADRNR.

      LOOP AT IT_VTPA INTO WA_VTPA.

        CLEAR: WA_TRANSBORDO, IT_TRANSBORDO[], VG_TEXTO, WA_ADRC.

        IF WA_VTPA-PARVW = C_PV.
          VG_TEXTO = C_SUBCONTRATADO.
          READ TABLE IT_ADRC INTO WA_ADRC WITH KEY ADDRNUMBER = WA_VTPA-ADRNR.
        ELSEIF WA_VTPA-PARVW = C_LR.
          VG_TEXTO = C_TRANSBORDO.

          SELECT A~NAME1 A~CITY1 A~REGION
            INTO TABLE IT_TRANSBORDO
            FROM VTTS AS V
           INNER JOIN TVKN AS T ON T~KNOTE      = V~KNOTZ
           INNER JOIN ADRC AS A ON A~ADDRNUMBER = T~ADRNR
           WHERE V~TKNUM = WA_ORDEM_VENDA-TKNUM.

          IF IT_TRANSBORDO[] IS NOT INITIAL.
            READ TABLE IT_TRANSBORDO INTO WA_TRANSBORDO INDEX 1.
          ENDIF.
        ELSE.
          CONTINUE.
        ENDIF.

        CONCATENATE VG_TEXTO ':' INTO VG_TEXTO.

        IF WA_TRANSBORDO IS NOT INITIAL.
          CONCATENATE VG_TEXTO WA_TRANSBORDO-NAME1 C_HIFEN WA_TRANSBORDO-CITY1 INTO VG_TEXTO SEPARATED BY SPACE.
          CONCATENATE VG_TEXTO C_BARRA WA_TRANSBORDO-REGION INTO VG_TEXTO.
        ELSE.
          IF ( WA_ADRC IS INITIAL ).
            CONCATENATE VG_TEXTO WA_VTPA-NAME1 WA_ADRC-STREET INTO VG_TEXTO SEPARATED BY SPACE.
          ELSE.
            CONCATENATE VG_TEXTO WA_VTPA-NAME1 WA_ADRC-STREET '- Nr:' WA_ADRC-HOUSE_NUM1 'Bairro: ' WA_ADRC-CITY2 '- Muni: ' WA_ADRC-CITY1 '-' WA_ADRC-REGION INTO VG_TEXTO SEPARATED BY SPACE.
            CONCATENATE VG_TEXTO 'CEP:' WA_ADRC-POST_CODE1 'RNTRC:' WA_VTPA-BAHNS INTO VG_TEXTO SEPARATED BY SPACE.
          ENDIF.
        ENDIF.

        IF WA_VTPA-STCD1 IS NOT INITIAL.
          CALL FUNCTION 'CONVERSION_EXIT_CGCBR_OUTPUT'
            EXPORTING
              INPUT  = WA_VTPA-STCD1
            IMPORTING
              OUTPUT = VG_CNPJ.
          CONCATENATE VG_TEXTO VG_CNPJ INTO VG_TEXTO SEPARATED BY SPACE.
        ENDIF.

        IF WA_VTPA-STCD2 IS NOT INITIAL.
          CALL FUNCTION 'CONVERSION_EXIT_CGCBR_OUTPUT'
            EXPORTING
              INPUT  = WA_VTPA-STCD2
            IMPORTING
              OUTPUT = VG_CPF.
          CONCATENATE VG_TEXTO VG_CPF INTO VG_TEXTO SEPARATED BY SPACE.
        ENDIF.

        IF WA_VTPA-STCD3 IS NOT INITIAL.
          PERFORM LIMPA_NUMERO USING WA_VTPA-STCD3.
          CONCATENATE VG_TEXTO C_IE     INTO VG_TEXTO SEPARATED BY SPACE.
          CONCATENATE VG_TEXTO C_HIFEN  INTO VG_TEXTO.
          CONCATENATE VG_TEXTO VG_LIMPO INTO VG_TEXTO.
        ENDIF.

        IF VG_TEXTO IS NOT INITIAL.
          ADD 1 TO WA_CTE_OBSG-LINHA.
          WA_CTE_OBSG-TEXTO = VG_TEXTO.
          APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
        ENDIF.

      ENDLOOP.

    ENDIF.

* Placa do cavalo
    IF WA_DOC_TRANSP-TEXT1 IS NOT INITIAL.
      VG_TEXTO = C_PLACA_CAVALO.
      CONCATENATE VG_TEXTO C_HIFEN INTO VG_TEXTO.
      CONCATENATE VG_TEXTO WA_DOC_TRANSP-TEXT1 INTO VG_TEXTO.
      CLEAR: VL_UF, VL_NOME, VL_CNPJ_PROP.
      PERFORM Z_LER_PLACA USING WA_DOC_TRANSP-TEXT1 CHANGING VL_UF VL_NOME VL_CNPJ_PROP.
      IF VL_UF IS NOT INITIAL.
        CONCATENATE VG_TEXTO C_BARRA INTO VG_TEXTO SEPARATED BY SPACE.
        CONCATENATE VG_TEXTO VL_UF C_HIFEN VL_NOME C_HIFEN VL_CNPJ_PROP INTO VG_TEXTO.
      ENDIF.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      WA_CTE_OBSG-TEXTO = VG_TEXTO.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDIF.

* Placa da carreta 1
    IF WA_DOC_TRANSP-TEXT2 IS NOT INITIAL.
      CONCATENATE C_PLACA_CARRETA C_1 INTO VG_TEXTO SEPARATED BY SPACE.
      CONCATENATE VG_TEXTO C_HIFEN INTO VG_TEXTO.
      CONCATENATE VG_TEXTO WA_DOC_TRANSP-TEXT2 INTO VG_TEXTO.
      CLEAR: VL_UF, VL_NOME, VL_CNPJ_PROP.
      PERFORM Z_LER_PLACA USING WA_DOC_TRANSP-TEXT2 CHANGING VL_UF VL_NOME VL_CNPJ_PROP.
      IF VL_UF IS NOT INITIAL.
        CONCATENATE VG_TEXTO C_BARRA INTO VG_TEXTO SEPARATED BY SPACE.
        CONCATENATE VG_TEXTO VL_UF C_HIFEN VL_NOME C_HIFEN VL_CNPJ_PROP INTO VG_TEXTO.
      ENDIF.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      WA_CTE_OBSG-TEXTO = VG_TEXTO.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDIF.

* Placa da carreta 2
    IF WA_DOC_TRANSP-TEXT3 IS NOT INITIAL.
      CONCATENATE C_PLACA_CARRETA C_2 INTO VG_TEXTO SEPARATED BY SPACE.
      CONCATENATE VG_TEXTO C_HIFEN INTO VG_TEXTO.
      CONCATENATE VG_TEXTO WA_DOC_TRANSP-TEXT3 INTO VG_TEXTO.
      CLEAR: VL_UF, VL_NOME, VL_CNPJ_PROP.
      PERFORM Z_LER_PLACA USING WA_DOC_TRANSP-TEXT3 CHANGING VL_UF VL_NOME VL_CNPJ_PROP.
      IF VL_UF IS NOT INITIAL.
        CONCATENATE VG_TEXTO C_BARRA INTO VG_TEXTO SEPARATED BY SPACE.
        CONCATENATE VG_TEXTO VL_UF C_HIFEN VL_NOME C_HIFEN VL_CNPJ_PROP INTO VG_TEXTO.
      ENDIF.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      WA_CTE_OBSG-TEXTO = VG_TEXTO.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDIF.

* Placa da carreta 3
    IF WA_DOC_TRANSP-TEXT4 IS NOT INITIAL.
      CONCATENATE C_PLACA_CARRETA C_3 INTO VG_TEXTO SEPARATED BY SPACE.
      CONCATENATE VG_TEXTO C_HIFEN INTO VG_TEXTO.
      CONCATENATE VG_TEXTO WA_DOC_TRANSP-TEXT4 INTO VG_TEXTO.
      CLEAR: VL_UF, VL_NOME, VL_CNPJ_PROP.
      PERFORM Z_LER_PLACA USING WA_DOC_TRANSP-TEXT4 CHANGING VL_UF VL_NOME VL_CNPJ_PROP.
      IF VL_UF IS NOT INITIAL.
        CONCATENATE VG_TEXTO C_BARRA INTO VG_TEXTO SEPARATED BY SPACE.
        CONCATENATE VG_TEXTO VL_UF C_HIFEN VL_NOME C_HIFEN VL_CNPJ_PROP INTO VG_TEXTO.
      ENDIF.
      ADD 1 TO WA_CTE_OBSG-LINHA.
      WA_CTE_OBSG-TEXTO = VG_TEXTO.
      APPEND WA_CTE_OBSG TO IT_CTE_OBSG.
    ENDIF.

  ENDIF.

ENDFUNCTION.
