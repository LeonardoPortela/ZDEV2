*&---------------------------------------------------------------------*
*& Report  ZLESR0103
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZLESR0103 MESSAGE-ID ZTIPFRETE.

*---------- Definition -----------------------------------------------*
CLASS LCL_EVENT_HANDLER DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_DOUBLE_CLICK  FOR EVENT DOUBLE_CLICK  OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO.
    METHODS HANDLE_HOTSPOT_CLICK FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID IMPORTING E_COLUMN_ID E_ROW_ID ES_ROW_NO.
ENDCLASS.                    "lcl_event_handler DEFINITION

DATA: IT_CONSULTAS    TYPE TABLE OF ZLEST0138 WITH HEADER LINE,
      DG_SPLITTER     TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
      DG_PARENT_HTML  TYPE REF TO CL_GUI_CONTAINER,
      DG_SPLITTER_2   TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
      DG_PARENT_HTML1 TYPE REF TO CL_GUI_CONTAINER,
      DG_PARENT_HTML2 TYPE REF TO CL_GUI_CONTAINER,
      PICTURE         TYPE REF TO CL_GUI_PICTURE,
      DG_PARENT_ALV   TYPE REF TO CL_GUI_CONTAINER,
      G_ALV           TYPE REF TO CL_GUI_ALV_GRID,
      GS_LAYOUT       TYPE LVC_S_LAYO,
      GS_VARIANT      TYPE DISVARIANT,
      IT_FIELDCATALOG TYPE LVC_T_FCAT,
      DG_DYNDOC_ID    TYPE REF TO CL_DD_DOCUMENT,
      TABLE_ELEMENT   TYPE REF TO CL_DD_TABLE_ELEMENT,
      COLUMN          TYPE REF TO CL_DD_AREA,
      TABLE_ELEMENT2  TYPE REF TO CL_DD_TABLE_ELEMENT,
      COLUMN_1        TYPE REF TO CL_DD_AREA,
      COLUMN_2        TYPE REF TO CL_DD_AREA,
      DG_HTML_CNTRL   TYPE REF TO CL_GUI_HTML_VIEWER.

DATA: EVENT_HANDLER      TYPE REF TO LCL_EVENT_HANDLER.

DATA: IT_EXCLUDE_FCODE TYPE UI_FUNCTIONS,
      WA_EXCLUDE_FCODE LIKE LINE OF IT_EXCLUDE_FCODE.

DATA: GS_SCROLL_COL TYPE LVC_S_COL,
      GS_SCROLL_ROW TYPE LVC_S_ROID.

*---------- Implementation -------------------------------------------*
CLASS LCL_EVENT_HANDLER IMPLEMENTATION.

  METHOD HANDLE_DOUBLE_CLICK.
    PERFORM HANDLE_DOUBLE_CLICK USING E_ROW.
  ENDMETHOD.                    "HANDLE_DOUBLE_CLICK

  METHOD HANDLE_HOTSPOT_CLICK.
    PERFORM HANDLE_HOTSPOT_CLICK USING ES_ROW_NO-ROW_ID E_COLUMN_ID-FIELDNAME.
  ENDMETHOD.                    "HANDLE_DOUBLE_CLICK

ENDCLASS.                    "lcl_event_handler IMPLEMENTATION


SELECTION-SCREEN BEGIN OF BLOCK BL01 WITH FRAME TITLE TEXT-001.
PARAMETERS: PBUKRS   TYPE BUKRS OBLIGATORY,
            PBRANCH  TYPE J_1BBRANC_ OBLIGATORY,
            PINICIAL TYPE DATUM OBLIGATORY,
            PFINAL   TYPE DATUM OBLIGATORY.
SELECTION-SCREEN END OF BLOCK BL01.

SELECTION-SCREEN BEGIN OF BLOCK BL02 WITH FRAME TITLE TEXT-002.
PARAMETERS: PPROCON1 RADIOBUTTON GROUP RAD1 DEFAULT 'X',
            PPROCON2 RADIOBUTTON GROUP RAD1.
SELECTION-SCREEN END OF BLOCK BL02.

START-OF-SELECTION.

  DATA: LC_FILTRO  TYPE ZDE_ZLEST0138_FILTRO,
        LC_RETORNO TYPE ZDE_ZLEST0138_T.

  CASE PPROCON1.
    WHEN ABAP_TRUE.

      DATA: ARQUIVOS TYPE REF TO ZCL_TIP_FRETE_AQ_CONF.

      CREATE OBJECT ARQUIVOS.
      CLEAR: LC_FILTRO.
      LC_FILTRO-BUKRS        = VALUE #( ( SIGN = 'I' OPTION = 'EQ' LOW = PBUKRS   HIGH = PBUKRS   ) ).
      LC_FILTRO-BRANCH[]     = VALUE #( ( SIGN = 'I' OPTION = 'EQ' LOW = PBRANCH  HIGH = PBRANCH  ) ).
      LC_FILTRO-DT_INICIAL[] = VALUE #( ( SIGN = 'I' OPTION = 'EQ' LOW = PINICIAL HIGH = PINICIAL ) ).
      LC_FILTRO-DT_FINAL[]   = VALUE #( ( SIGN = 'I' OPTION = 'EQ' LOW = PFINAL   HIGH = PFINAL   ) ).

      DATA(E_PESQUISOU) = ARQUIVOS->ZIF_PESQUISA~PESQUISAR( EXPORTING I_FILTROS   = LC_FILTRO IMPORTING E_REGISTROS = LC_RETORNO ).

      "CHECK E_PESQUISOU EQ ABAP_TRUE.

      MOVE LC_RETORNO[] TO IT_CONSULTAS[].

      CALL SCREEN 0100.

      CLEAR: ARQUIVOS.

    WHEN ABAP_FALSE.
      DATA: OBJ_CONSULTA TYPE REF TO ZCL_WEBSERVICE_TIPCARD,
            E_MSG	       TYPE CHAR255.

      CREATE OBJECT OBJ_CONSULTA.

      OBJ_CONSULTA->CONSULTAR_ARQUIVO_CONFERENCIA(
        EXPORTING
          I_BUKRS       = PBUKRS
          I_BRANCH      = PBRANCH
          I_DT_INICIAL  = PINICIAL
          I_DT_FINAL    = PFINAL
        IMPORTING
          E_MSG         = E_MSG
        RECEIVING
          R_LINKARQUIVO = DATA(R_LINKARQUIVO)
        EXCEPTIONS
          ZWEBSERVICE   = 1
          OTHERS        = 2 ).

      IF SY-SUBRC <> 0.
        MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE SY-MSGTY.
      ELSE.
        TRY .
            ZCL_WEBSERVICE_TIPCARD=>PROCESSAR_ARQUIVO_CONFERENCIA(
              I_FILENAME = R_LINKARQUIVO
              I_BUKRS       = PBUKRS
              I_BRANCH      = PBRANCH
              I_DT_INICIAL  = PINICIAL
              I_DT_FINAL    = PFINAL ).
          CATCH ZCX_CADASTRO     INTO DATA(CX_CADASTRO).
            CX_CADASTRO->PUBLISHED_ERRO( I_MSGTY = 'S' I_MSGTY_DISPLAY = 'E' ).
          CATCH ZCX_ERRO_ARQUIVO INTO DATA(CX_ERRO_ARQUIVO).
            CX_ERRO_ARQUIVO->PUBLISHED_ERRO( I_MSGTY = 'S' I_MSGTY_DISPLAY = 'E' ).
        ENDTRY.
      ENDIF.
      CLEAR: OBJ_CONSULTA.
  ENDCASE.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.

  DATA: URL(255)                TYPE C,
        P_TEXT                  TYPE SDYDO_TEXT_ELEMENT,
        SDYDO_TEXT_ELEMENT(255),
        P_TEXT_TABLE            TYPE SDYDO_TEXT_TABLE.

  SET PF-STATUS 'PF0100'.
  SET TITLEBAR 'TL0100'.

  IF DG_SPLITTER IS INITIAL.

    CREATE OBJECT DG_SPLITTER
      EXPORTING
        PARENT  = CL_GUI_CONTAINER=>SCREEN0
        ROWS    = 2
        COLUMNS = 1.

    CALL METHOD DG_SPLITTER->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 1
      RECEIVING
        CONTAINER = DG_PARENT_HTML.

    CREATE OBJECT DG_SPLITTER_2
      EXPORTING
        PARENT  = DG_PARENT_HTML
        ROWS    = 1
        COLUMNS = 2.

    CALL METHOD DG_SPLITTER_2->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 1
      RECEIVING
        CONTAINER = DG_PARENT_HTML1.

    CALL METHOD DG_SPLITTER_2->SET_COLUMN_WIDTH
      EXPORTING
        ID    = 1
        WIDTH = 40.

    CALL METHOD DG_SPLITTER_2->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 2
      RECEIVING
        CONTAINER = DG_PARENT_HTML2.

    CREATE OBJECT PICTURE
      EXPORTING
        PARENT = DG_PARENT_HTML2.

    PERFORM F_PEGA_IMAGEM USING 'LOGO_NOVO' CHANGING URL.

    CALL METHOD PICTURE->LOAD_PICTURE_FROM_URL
      EXPORTING
        URL = URL.

    CALL METHOD PICTURE->SET_DISPLAY_MODE
      EXPORTING
        DISPLAY_MODE = PICTURE->DISPLAY_MODE_FIT_CENTER.

    CALL METHOD DG_SPLITTER->GET_CONTAINER
      EXPORTING
        ROW       = 2
        COLUMN    = 1
      RECEIVING
        CONTAINER = DG_PARENT_ALV.

    CALL METHOD DG_SPLITTER->SET_ROW_HEIGHT
      EXPORTING
        ID     = 1
        HEIGHT = 16.

    CREATE OBJECT G_ALV
      EXPORTING
        I_PARENT = DG_PARENT_ALV.

    PERFORM FILL_IT_FIELDCATALOG.

    PERFORM FILL_GS_VARIANT.

    GS_LAYOUT-SEL_MODE   = 'A'.

    CALL METHOD G_ALV->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT
        IS_VARIANT           = GS_VARIANT
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
        I_SAVE               = 'A'
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG
        IT_OUTTAB            = IT_CONSULTAS[].

    CREATE OBJECT EVENT_HANDLER.
    SET HANDLER EVENT_HANDLER->HANDLE_DOUBLE_CLICK  FOR G_ALV.
    SET HANDLER EVENT_HANDLER->HANDLE_HOTSPOT_CLICK FOR G_ALV.

    CREATE OBJECT DG_DYNDOC_ID
      EXPORTING
        STYLE = 'ALV_GRID'.

    CALL METHOD DG_DYNDOC_ID->INITIALIZE_DOCUMENT.

    CALL METHOD DG_DYNDOC_ID->ADD_TABLE
      EXPORTING
        NO_OF_COLUMNS = 1
        BORDER        = '0'
        WIDTH         = '100%'
      IMPORTING
        TABLE         = TABLE_ELEMENT.

    CALL METHOD TABLE_ELEMENT->ADD_COLUMN
      IMPORTING
        COLUMN = COLUMN.

    CALL METHOD TABLE_ELEMENT->SET_COLUMN_STYLE
      EXPORTING
        COL_NO    = 1
        SAP_ALIGN = 'CENTER'
        SAP_STYLE = CL_DD_DOCUMENT=>HEADING.

    P_TEXT = TEXT-008.

    CALL METHOD COLUMN->ADD_TEXT
      EXPORTING
        TEXT      = P_TEXT
        SAP_STYLE = 'HEADING'.

    CALL METHOD DG_DYNDOC_ID->ADD_TABLE
      EXPORTING
        NO_OF_COLUMNS = 2
        BORDER        = '0'
        WIDTH         = '100%'
      IMPORTING
        TABLE         = TABLE_ELEMENT2.

    CALL METHOD TABLE_ELEMENT2->ADD_COLUMN
      EXPORTING
        SAP_STYLE   = 'SAP_BOLD'
        STYLE_CLASS = 'SAP_BOLD'
      IMPORTING
        COLUMN      = COLUMN_1.

    CLEAR: P_TEXT_TABLE.

    SDYDO_TEXT_ELEMENT = 'Empresa'.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

    SDYDO_TEXT_ELEMENT = 'Local de NegÃ³cio'.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

    SDYDO_TEXT_ELEMENT = 'Dt.Inicial Corte'.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

    SDYDO_TEXT_ELEMENT = 'Dt.Final Corte'.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

    CALL METHOD COLUMN_1->ADD_TEXT
      EXPORTING
        TEXT_TABLE = P_TEXT_TABLE
        FIX_LINES  = 'X'.

    CALL METHOD TABLE_ELEMENT2->ADD_COLUMN
      IMPORTING
        COLUMN = COLUMN_2.

    CALL METHOD TABLE_ELEMENT2->SET_COLUMN_STYLE
      EXPORTING
        COL_NO       = 2
        SAP_ALIGN    = 'LEFT'
        SAP_FONTSIZE = CL_DD_DOCUMENT=>MEDIUM.

    CLEAR: P_TEXT_TABLE.

*PBUKRS	Sociedad
    SELECT SINGLE BUTXT INTO @DATA(LC_BUTXT)
      FROM T001
     WHERE BUKRS EQ @PBUKRS.

    CONCATENATE PBUKRS '-' LC_BUTXT INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

*PBUKRS	Sociedad
    SELECT SINGLE NAME INTO @DATA(LC_NAME)
      FROM J_1BBRANCH
     WHERE BRANCH EQ @PBRANCH.

    CONCATENATE PBRANCH '-' LC_NAME INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

    CONCATENATE PINICIAL+6(2) '.' PINICIAL+4(2) '.' PINICIAL(4) INTO SDYDO_TEXT_ELEMENT.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

    CONCATENATE PFINAL+6(2) '.' PFINAL+4(2) '.' PFINAL(4) INTO SDYDO_TEXT_ELEMENT.
    APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

    CALL METHOD COLUMN_2->ADD_TEXT
      EXPORTING
        TEXT_TABLE = P_TEXT_TABLE
        FIX_LINES  = 'X'.

    CALL METHOD DG_DYNDOC_ID->MERGE_DOCUMENT.

    CREATE OBJECT DG_HTML_CNTRL
      EXPORTING
        PARENT = DG_PARENT_HTML1.

    DG_DYNDOC_ID->HTML_CONTROL = DG_HTML_CNTRL.

    CALL METHOD DG_DYNDOC_ID->DISPLAY_DOCUMENT
      EXPORTING
        REUSE_CONTROL      = 'X'
        PARENT             = DG_PARENT_HTML1
      EXCEPTIONS
        HTML_DISPLAY_ERROR = 1.
  ENDIF.

  CALL METHOD G_ALV->REFRESH_TABLE_DISPLAY.

  CALL METHOD G_ALV->GET_SCROLL_INFO_VIA_ID
    IMPORTING
      ES_COL_INFO = GS_SCROLL_COL
      ES_ROW_NO   = GS_SCROLL_ROW.

ENDMODULE.


*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG
*&---------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG .

  DATA: LC_COL_POS  TYPE LVC_COLPOS.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZLEST0138'
    CHANGING
      CT_FIELDCAT      = IT_FIELDCATALOG.

  LOOP AT IT_FIELDCATALOG ASSIGNING FIELD-SYMBOL(<FS_FIELD>).
    IF <FS_FIELD>-FIELDNAME EQ 'NR_LOTE_ADM' OR
       <FS_FIELD>-FIELDNAME EQ 'DS_FILENAME'.
      <FS_FIELD>-HOTSPOT = ABAP_TRUE.
    ENDIF.
    IF <FS_FIELD>-FIELDNAME EQ 'DS_FILENAME'.
      <FS_FIELD>-OUTPUTLEN = 100.
    ENDIF.

    IF <FS_FIELD>-FIELDNAME EQ 'DS_FILENAME'.
      <FS_FIELD>-SCRTEXT_L = 'Arquivo ConferÃªncia'.
      <FS_FIELD>-SCRTEXT_M = 'Arquivo ConferÃªncia'.
      <FS_FIELD>-SCRTEXT_S = 'Arq.Conf.'.
    ENDIF.

  ENDLOOP.

ENDFORM.                    " FILL_IT_FIELDCATALOG


*&---------------------------------------------------------------------*
*&      Form  FILL_GS_VARIANT
*&---------------------------------------------------------------------*
FORM FILL_GS_VARIANT .

  GS_VARIANT-REPORT      = SY-REPID.
  GS_VARIANT-HANDLE      = '0100'.
  GS_VARIANT-LOG_GROUP   = ABAP_FALSE.
  GS_VARIANT-USERNAME    = ABAP_FALSE.
  GS_VARIANT-VARIANT     = ABAP_FALSE.
  GS_VARIANT-TEXT        = ABAP_FALSE.
  GS_VARIANT-DEPENDVARS  = ABAP_FALSE.

ENDFORM.                    " FILL_GS_VARIANT

*&---------------------------------------------------------------------*
*&      Form  F_PEGA_IMAGEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0190   text
*      <--P_URL  text
*----------------------------------------------------------------------*
FORM F_PEGA_IMAGEM  USING    NOME_LOGO
                    CHANGING URL.

  DATA: BEGIN OF GRAPHIC_TABLE OCCURS 0,
          LINE(255) TYPE X,
        END OF GRAPHIC_TABLE.
  DATA: L_GRAPHIC_XSTR TYPE XSTRING.
  DATA: GRAPHIC_SIZE   TYPE I.
  DATA: L_GRAPHIC_CONV TYPE I.
  DATA: L_GRAPHIC_OFFS TYPE I.

  REFRESH GRAPHIC_TABLE.
  CALL METHOD CL_SSF_XSF_UTILITIES=>GET_BDS_GRAPHIC_AS_BMP
    EXPORTING
      P_OBJECT = 'GRAPHICS'
      P_NAME   = NOME_LOGO
      P_ID     = 'BMAP'
      P_BTYPE  = 'BCOL'
    RECEIVING
      P_BMP    = L_GRAPHIC_XSTR.

  GRAPHIC_SIZE = XSTRLEN( L_GRAPHIC_XSTR ).
  L_GRAPHIC_CONV = GRAPHIC_SIZE.
  L_GRAPHIC_OFFS = 0.
  WHILE L_GRAPHIC_CONV > 255.
    GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(255).
    APPEND GRAPHIC_TABLE.
    L_GRAPHIC_OFFS = L_GRAPHIC_OFFS + 255.
    L_GRAPHIC_CONV = L_GRAPHIC_CONV - 255.
  ENDWHILE.
  GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(L_GRAPHIC_CONV).
  APPEND GRAPHIC_TABLE.
  CALL FUNCTION 'DP_CREATE_URL'
    EXPORTING
      TYPE     = 'IMAGE'
      SUBTYPE  = 'X-UNKNOWN'
      SIZE     = GRAPHIC_SIZE
      LIFETIME = 'T'
    TABLES
      DATA     = GRAPHIC_TABLE
    CHANGING
      URL      = URL.
ENDFORM.                    " F_PEGA_IMAGEM

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100_EXIT INPUT.
  LEAVE TO SCREEN 0.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  HANDLE_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM HANDLE_DOUBLE_CLICK  USING P_ROW TYPE LVC_S_ROW.

  DATA: LC_ROW TYPE LVC_T_ROW.

  IF P_ROW-ROWTYPE IS INITIAL.

    APPEND P_ROW TO LC_ROW.

    CALL METHOD G_ALV->SET_SELECTED_ROWS
      EXPORTING
        IT_INDEX_ROWS = LC_ROW.

    READ TABLE IT_CONSULTAS INDEX P_ROW-INDEX INTO DATA(WA_CONSULTAS).

    TRY .
        ARQUIVOS->ZIF_CADASTRO~SET_REGISTRO( I_ID_REGISTRO = WA_CONSULTAS-CD_IMPORTACAO ).
        ARQUIVOS->VISUALIZAR_TEXTO_ARQUIVO( ).
      CATCH ZCX_CADASTRO INTO DATA(CX_CADASTRO).
        CX_CADASTRO->PUBLISHED_ERRO( I_MSGTY = 'S' I_MSGTY_DISPLAY = 'E' ).
    ENDTRY.

  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  HANDLE_HOTSPOT_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_COLUMN_ID  text
*      -->P_E_ROW_ID  text
*----------------------------------------------------------------------*
FORM HANDLE_HOTSPOT_CLICK
         USING VALUE(ROW_ID)    LIKE LVC_S_ROID-ROW_ID
               VALUE(FIELDNAME) LIKE LVC_S_COL-FIELDNAME.

  READ TABLE IT_CONSULTAS INDEX ROW_ID INTO DATA(WA_CONSULTAS).

  CASE FIELDNAME.
    WHEN 'NR_LOTE_ADM'.
      TRY.
          ARQUIVOS->ZIF_CADASTRO~SET_REGISTRO( I_ID_REGISTRO = WA_CONSULTAS-CD_IMPORTACAO ).
          ARQUIVOS->VISUALIZAR_LOG_ARQUIVO( ).
        CATCH ZCX_CADASTRO INTO DATA(CX_CADASTRO).
          CX_CADASTRO->PUBLISHED_ERRO( I_MSGTY = 'S' I_MSGTY_DISPLAY = 'E' ).
        CATCH CX_SALV_MSG INTO DATA(CX_SALV_MSG).
      ENDTRY.
    WHEN 'DS_FILENAME'.
      TRY.
          ARQUIVOS->ZIF_CADASTRO~SET_REGISTRO( I_ID_REGISTRO = WA_CONSULTAS-CD_IMPORTACAO ).
          ARQUIVOS->VISUALIZAR_TEXTO_ARQUIVO( ).
        CATCH ZCX_CADASTRO INTO CX_CADASTRO.
          CX_CADASTRO->PUBLISHED_ERRO( I_MSGTY = 'S' I_MSGTY_DISPLAY = 'E' ).
      ENDTRY.
  ENDCASE.

ENDFORM.
