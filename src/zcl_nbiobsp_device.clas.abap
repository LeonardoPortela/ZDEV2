class ZCL_NBIOBSP_DEVICE definition
  public
  final
  create public .

public section.

  interfaces ZIF_NBIOBSP_DEVICE .

  methods CONSTRUCTOR
    importing
      !I_OLE_DEVICE type OLE2_OBJECT
      !I_DEVICEID type I default 255
    raising
      ZCX_NBIOBSP .
protected section.
private section.
ENDCLASS.



CLASS ZCL_NBIOBSP_DEVICE IMPLEMENTATION.


  METHOD CONSTRUCTOR.

    IF I_OLE_DEVICE IS INITIAL.
      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_DEVICE-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_DEVICE-MSGNO )
          MSGID  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_DEVICE-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_DEVICE-MSGNO
          MSGTY  = 'E'.
    ENDIF.

    ME->ZIF_NBIOBSP_DEVICE~DEVICE   = I_OLE_DEVICE.
    ME->ZIF_NBIOBSP_DEVICE~DEVICEID = I_DEVICEID.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_DEVICE~CLOSE.

    R_DEVICE = ME.

    CALL METHOD OF ME->ZIF_NBIOBSP_DEVICE~DEVICE 'Close'
      EXPORTING
        #1 = ME->ZIF_NBIOBSP_DEVICE~DEVICEID.

    IF ME->ZIF_NBIOBSP_DEVICE~GET_ERRORCODE( )->ERRORCODE IS NOT INITIAL.

      SY-MSGV2 = CONV #( ME->ZIF_NBIOBSP_DEVICE~ERRORCODE ).
      CONDENSE SY-MSGV2 NO-GAPS.

      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
                            ATTR1  = 'ZIF_NBIOBSP_DEVICE~OPEN'
                            ATTR2  = CONV #( SY-MSGV2 )
                            ATTR3  = ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION )
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
          MSGTY  = 'E'
          MSGV1  = 'ZIF_NBIOBSP_DEVICE~OPEN'
          MSGV2  = SY-MSGV2
          MSGV3  = CONV #( ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION ).
    ENDIF.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_DEVICE~GET_ERRORCODE.

    R_DEVICE = ME.
    GET PROPERTY OF ME->ZIF_NBIOBSP_DEVICE~DEVICE 'ErrorCode' = ME->ZIF_NBIOBSP_DEVICE~ERRORCODE.
    E_ERRORCODE = ME->ZIF_NBIOBSP_DEVICE~ERRORCODE.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_DEVICE~GET_ERRORDESCRIPTION.

    R_DEVICE = ME.
    GET PROPERTY OF ME->ZIF_NBIOBSP_DEVICE~DEVICE 'ErrorDescription' = ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION.
    E_ERRORDESCRIPTION = ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_DEVICE~OPEN.

    R_DEVICE = ME.

    CALL METHOD OF ME->ZIF_NBIOBSP_DEVICE~DEVICE 'Open'
      EXPORTING
        #1 = ME->ZIF_NBIOBSP_DEVICE~DEVICEID.

    IF ME->ZIF_NBIOBSP_DEVICE~GET_ERRORCODE( )->ERRORCODE IS NOT INITIAL.

      ME->ZIF_NBIOBSP_DEVICE~GET_ERRORDESCRIPTION( ).

      SY-MSGV2 = CONV #( ME->ZIF_NBIOBSP_DEVICE~ERRORCODE ).
      CONDENSE SY-MSGV2 NO-GAPS.

      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
                            ATTR1  = 'ZIF_NBIOBSP_DEVICE~OPEN'
                            ATTR2  = CONV #( SY-MSGV2 )
                            ATTR3  = ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION )
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
          MSGTY  = 'E'
          MSGV1  = 'ZIF_NBIOBSP_DEVICE~OPEN'
          MSGV2  = SY-MSGV2
          MSGV3  = CONV #( ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION ).
    ENDIF.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_DEVICE~SET_FPBACKCOLOR.

    R_DEVICE = ME.
    SET PROPERTY OF ME->ZIF_NBIOBSP_DEVICE~DEVICE 'FPBackColor' = I_FPBACKCOLOR.

    IF ME->ZIF_NBIOBSP_DEVICE~GET_ERRORCODE( )->ERRORCODE IS NOT INITIAL.

      ME->ZIF_NBIOBSP_DEVICE~GET_ERRORDESCRIPTION( ).

      SY-MSGV2 = ME->ZIF_NBIOBSP_DEVICE~ERRORCODE.
      CONDENSE SY-MSGV2 NO-GAPS.

      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
                            ATTR1  = 'ZIF_NBIOBSP_DEVICE~SET_FPBACKCOLOR'
                            ATTR2  = CONV #( SY-MSGV2 )
                            ATTR3  = ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION )
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
          MSGTY  = 'E'
          MSGV1  = 'ZIF_NBIOBSP_DEVICE~SET_FPBACKCOLOR'
          MSGV2  = SY-MSGV2
          MSGV3  = CONV #( ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION ).
    ENDIF.

  ENDMETHOD.


  method ZIF_NBIOBSP_DEVICE~SET_FPFORECOLOR.

    R_DEVICE = ME.
    SET PROPERTY OF ME->ZIF_NBIOBSP_DEVICE~DEVICE 'FPForeColor' = I_FPFORECOLOR.

    IF ME->ZIF_NBIOBSP_DEVICE~GET_ERRORCODE( )->ERRORCODE IS NOT INITIAL.

      ME->ZIF_NBIOBSP_DEVICE~GET_ERRORDESCRIPTION( ).

      SY-MSGV2 = ME->ZIF_NBIOBSP_DEVICE~ERRORCODE.
      CONDENSE SY-MSGV2 NO-GAPS.

      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
                            ATTR1  = 'ZIF_NBIOBSP_DEVICE~SET_FPFORECOLOR'
                            ATTR2  = CONV #( SY-MSGV2 )
                            ATTR3  = ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION )
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
          MSGTY  = 'E'
          MSGV1  = 'ZIF_NBIOBSP_DEVICE~SET_FPFORECOLOR'
          MSGV2  = SY-MSGV2
          MSGV3  = CONV #( ME->ZIF_NBIOBSP_DEVICE~ERRORDESCRIPTION ).
    ENDIF.

  endmethod.
ENDCLASS.
