FUNCTION Z_ACHA_PARAM_PM.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_PARAM) TYPE  ZPARAM OPTIONAL
*"     REFERENCE(I_CONST) TYPE  ZCONST OPTIONAL
*"     REFERENCE(I_CRIAR) TYPE  C DEFAULT SPACE
*"     REFERENCE(I_VALOR) TYPE  ZVAL OPTIONAL
*"     REFERENCE(I_DESC) TYPE  C OPTIONAL
*"  EXPORTING
*"     REFERENCE(E_VAL) TYPE  ZVAL
*"  TABLES
*"      T_PARAM STRUCTURE  ZTPARAM OPTIONAL
*"----------------------------------------------------------------------

DATA: R_PARAM TYPE RANGE OF ZPARAM WITH HEADER LINE,
      R_CONST TYPE RANGE OF ZCONST WITH HEADER LINE.

DATA: LV_LINES TYPE I.

IF I_PARAM IS NOT INITIAL
OR I_CONST IS NOT INITIAL.
  IF I_PARAM IS NOT INITIAL.
    R_PARAM-LOW    = I_PARAM.
    R_PARAM-OPTION = 'EQ'.
    R_PARAM-SIGN   = 'I'.
    APPEND R_PARAM.
  ENDIF.

  IF I_CONST IS NOT INITIAL.
    R_CONST-LOW    = I_CONST.
    R_CONST-OPTION = 'EQ'.
    R_CONST-SIGN   = 'I'.
    APPEND R_CONST.
  ENDIF.

  SELECT *
    INTO TABLE T_PARAM
    FROM ZTPARAM
   WHERE PARAM IN R_PARAM
     AND CONST IN R_CONST.

  IF SY-SUBRC IS INITIAL.

    LV_LINES = LINES( T_PARAM ).

    IF LV_LINES EQ 1.
      READ TABLE T_PARAM INDEX 1.
      E_VAL = T_PARAM-ZVAL.

    ENDIF.
  ELSEIF I_CRIAR IS NOT INITIAL.
    IF I_CONST IS INITIAL.
      T_PARAM-CONST = I_PARAM.
    ELSE.
      T_PARAM-CONST = I_CONST.
      CONDENSE T_PARAM-CONST NO-GAPS.
    ENDIF.

    IF I_PARAM IS INITIAL.
      T_PARAM-PARAM = I_CONST.
    ELSE.
      T_PARAM-PARAM = I_PARAM.
      CONDENSE T_PARAM-PARAM NO-GAPS.
    ENDIF.

    T_PARAM-ZVAL = I_VALOR.
    CONDENSE T_PARAM-ZVAL NO-GAPS.
    T_PARAM-DESCRICAO = I_DESC.

    APPEND T_PARAM.

    INSERT ZTPARAM FROM TABLE T_PARAM.

  ENDIF.
ENDIF.



ENDFUNCTION.
