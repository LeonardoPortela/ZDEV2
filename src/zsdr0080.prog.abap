*&---------------------------------------------------------------------*
*& Report  ZSDR0080
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZSDR0080.

TABLES: ZLEST0060.

SELECTION-SCREEN: BEGIN OF BLOCK A1 WITH FRAME TITLE TEXT-002.
SELECT-OPTIONS: S_BUKRS  FOR ZLEST0060-BUKRS NO-EXTENSION NO INTERVALS.
SELECTION-SCREEN: END OF BLOCK A1.


START-OF-SELECTION.

PERFORM F_IMP_ARQ_AJUSTE_ZLES0077.

FORM F_IMP_ARQ_AJUSTE_ZLES0077.

  TYPES: BEGIN OF TY_SAIDA_VINC_ROMANEIO,
           CHECK          TYPE C,
           CHAVE_NFE      TYPE C LENGTH 44,
           PESO_FISCAL    TYPE ZLEST0060-PESO_FISCAL,
           NETWR          TYPE ZLEST0060-NETWR,
           PESO_LIQ_RET	  TYPE ZLEST0060-PESO_LIQ_RET,
           VLR_LIQ_RET    TYPE ZLEST0060-VLR_LIQ_RET,
           DOCNUM      TYPE ZLEST0060-DOCNUM,
         END OF TY_SAIDA_VINC_ROMANEIO.

  DATA: GT_PLANILHA   LIKE STANDARD TABLE OF ALSMEX_TABLINE,
        WL_PLANILHA   LIKE ALSMEX_TABLINE,
        VL_DT_TEMP    TYPE SYDATUM,
        VAR_ANSWER    TYPE C,
        WL_ZLEST0151  TYPE ZLEST0151,
        TG_ARQ_PROC   TYPE TABLE OF TY_SAIDA_VINC_ROMANEIO WITH HEADER LINE.

  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      TEXT = TEXT-I14.

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      FILENAME                = 'C:\Amaggi\ZLES0077\ajuste_nfe.xlsx'
      I_BEGIN_COL             = 1
      I_BEGIN_ROW             = 2
      I_END_COL               = 55
      I_END_ROW               = 10000
    TABLES
      INTERN                  = GT_PLANILHA
    EXCEPTIONS
      INCONSISTENT_PARAMETERS = 1
      UPLOAD_OLE              = 2
      OTHERS                  = 3.

  IF GT_PLANILHA[] IS INITIAL.
    MESSAGE S836(SD) WITH TEXT-E60 DISPLAY LIKE 'S'.
    RETURN.
  ENDIF.


  DATA(_INDEX) = 0.
  LOOP AT GT_PLANILHA INTO WL_PLANILHA.
    AT NEW ROW.
      CLEAR: TG_ARQ_PROC.
      ADD 1 TO _INDEX.
    ENDAT.

    IF WL_PLANILHA-VALUE(1) = SPACE.
      SHIFT WL_PLANILHA-VALUE LEFT DELETING LEADING SPACE.
    ENDIF.

    CASE WL_PLANILHA-COL.
      WHEN 1.
        TG_ARQ_PROC-CHAVE_NFE    = WL_PLANILHA-VALUE.
      WHEN 2.
        TG_ARQ_PROC-PESO_FISCAL  = WL_PLANILHA-VALUE.
      WHEN 3.
        TG_ARQ_PROC-NETWR        = WL_PLANILHA-VALUE.
      WHEN 4.
        TG_ARQ_PROC-PESO_LIQ_RET = WL_PLANILHA-VALUE.
      WHEN 5.
        TG_ARQ_PROC-VLR_LIQ_RET  = WL_PLANILHA-VALUE.
      WHEN 6.
        TG_ARQ_PROC-DOCNUM       = WL_PLANILHA-VALUE.
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            INPUT     = TG_ARQ_PROC-DOCNUM
          IMPORTING
            OUTPUT    = TG_ARQ_PROC-DOCNUM.
    ENDCASE.

    AT END OF ROW.
      CHECK TG_ARQ_PROC-CHAVE_NFE IS NOT INITIAL.
      APPEND TG_ARQ_PROC.
    ENDAT.

  ENDLOOP.

  DATA(_LINES) = LINES( TG_ARQ_PROC[] ).

  CHECK _LINES > 0.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
   EXPORTING
     TITLEBAR              = 'Confirmação'
     TEXT_QUESTION         = | { _LINES } registro(s) encontrado(s). Confirma processamento?|
     TEXT_BUTTON_1         = 'Sim'
     TEXT_BUTTON_2         = 'Não'
     DEFAULT_BUTTON        = '1'
     DISPLAY_CANCEL_BUTTON = ''
   IMPORTING
     ANSWER                = VAR_ANSWER
   EXCEPTIONS
     TEXT_NOT_FOUND        = 1
     OTHERS                = 2.

 CHECK VAR_ANSWER EQ '1'.

 SELECT *
   FROM ZLEST0060 INTO TABLE @DATA(_TG_0060_AJUSTE)
    FOR ALL ENTRIES IN @TG_ARQ_PROC
  WHERE CHAVE_NFE = @TG_ARQ_PROC-CHAVE_NFE.

 LOOP AT _TG_0060_AJUSTE INTO DATA(_WL_0060_AJUSTE) .

   CLEAR: WL_ZLEST0151.

   CHECK ( _WL_0060_AJUSTE-PESO_LIQ_RET IS NOT INITIAL ) AND
         ( _WL_0060_AJUSTE-CHAVE_NFE IS NOT INITIAL ) AND
         ( _WL_0060_AJUSTE-DOCNUM IS NOT INITIAL ).

   SELECT SINGLE *
     FROM ZLEST0151 INTO WL_ZLEST0151
    WHERE CHAVE_NFE = _WL_0060_AJUSTE-CHAVE_NFE
      AND DOCNUM    = _WL_0060_AJUSTE-DOCNUM.

   IF SY-SUBRC NE 0.
     CLEAR: WL_ZLEST0151.
     WL_ZLEST0151-CHAVE_NFE     = _WL_0060_AJUSTE-CHAVE_NFE.
     WL_ZLEST0151-DOCNUM        = _WL_0060_AJUSTE-DOCNUM.
     WL_ZLEST0151-PESO_FISCAL   = _WL_0060_AJUSTE-PESO_FISCAL.
     WL_ZLEST0151-NETWR         = _WL_0060_AJUSTE-NETWR.
     WL_ZLEST0151-PESO_LIQ_RET  = _WL_0060_AJUSTE-PESO_LIQ_RET.
     WL_ZLEST0151-VLR_LIQ_RET   = _WL_0060_AJUSTE-VLR_LIQ_RET.
     WL_ZLEST0151-US_REGISTRO   = SY-UNAME.
     WL_ZLEST0151-DT_REGISTRO   = SY-DATUM.
     WL_ZLEST0151-HR_REGISTRO   = SY-UZEIT.
     MODIFY ZLEST0151 FROM WL_ZLEST0151.
     IF SY-SUBRC NE 0.
       ROLLBACK WORK.
       MESSAGE |Não foi possível gerar o log da Chave/CTe: { _WL_0060_AJUSTE-CHAVE_NFE } /  { _WL_0060_AJUSTE-DOCNUM } | TYPE 'S'.
       RETURN.
     ENDIF.
   ENDIF.

   READ TABLE TG_ARQ_PROC WITH KEY CHAVE_NFE = _WL_0060_AJUSTE-CHAVE_NFE
                                   DOCNUM    = _WL_0060_AJUSTE-DOCNUM.

   IF ( SY-SUBRC = 0 ) AND ( _WL_0060_AJUSTE-DOCNUM IS NOT INITIAL ) AND
      ( TG_ARQ_PROC-PESO_FISCAL  IS NOT INITIAL ) AND ( TG_ARQ_PROC-NETWR       IS NOT INITIAL ) AND
      ( TG_ARQ_PROC-PESO_LIQ_RET IS NOT INITIAL ) AND ( TG_ARQ_PROC-VLR_LIQ_RET IS NOT INITIAL ).
     _WL_0060_AJUSTE-PESO_FISCAL   = TG_ARQ_PROC-PESO_FISCAL.
     _WL_0060_AJUSTE-NETWR         = TG_ARQ_PROC-NETWR.
     _WL_0060_AJUSTE-PESO_LIQ_RET  = TG_ARQ_PROC-PESO_LIQ_RET.
     _WL_0060_AJUSTE-VLR_LIQ_RET   = TG_ARQ_PROC-VLR_LIQ_RET.
   ELSE.
     _WL_0060_AJUSTE-PESO_FISCAL = _WL_0060_AJUSTE-PESO_LIQ_RET.
     _WL_0060_AJUSTE-NETWR       = _WL_0060_AJUSTE-VLR_LIQ_RET.
   ENDIF.
   MODIFY ZLEST0060 FROM _WL_0060_AJUSTE.

   LOOP AT TG_ARQ_PROC WHERE CHAVE_NFE = _WL_0060_AJUSTE-CHAVE_NFE.
     TG_ARQ_PROC-CHECK = 'X'.
     MODIFY TG_ARQ_PROC.
   ENDLOOP.

 ENDLOOP.

 LOOP AT TG_ARQ_PROC WHERE CHECK IS NOT INITIAL.
   PERFORM F_ATUALIZA_SALDO_NF USING TG_ARQ_PROC-CHAVE_NFE.
 ENDLOOP.

 MESSAGE 'Processamento concluído!' TYPE 'S'.

ENDFORM.


FORM F_ATUALIZA_SALDO_NF  USING P_CHAVE_NFE TYPE ZLEST0060-CHAVE_NFE.

  DATA: TG_0060      TYPE TABLE OF ZLEST0060 WITH HEADER LINE,
        WL_ZLEST0073 TYPE ZLEST0073,
        WL_ZLEST0056 TYPE ZLEST0056,
        WL_ZLEST0104 TYPE ZLEST0104,
        WL_ZSDT0001  TYPE ZSDT0001,
        VL_CHAVE     TYPE ZLEST0073,
        WL_J_1BNFLIN TYPE J_1BNFLIN.


  VL_CHAVE = P_CHAVE_NFE.

  DELETE FROM ZLEST0073 WHERE CHAVE_NFE EQ VL_CHAVE.
  COMMIT WORK.

  SELECT *
    FROM ZLEST0060 INTO TABLE TG_0060
   WHERE CHAVE_NFE EQ VL_CHAVE.

  CHECK TG_0060[] IS NOT INITIAL.

  CLEAR: WL_ZLEST0073, WL_ZSDT0001, WL_ZLEST0056.

  WL_ZLEST0073-CHAVE_NFE = VL_CHAVE.

  LOOP AT TG_0060.

    IF ( WL_ZLEST0073-PESO_ORIGEM  IS INITIAL ) OR
       ( WL_ZLEST0073-VALOR_ORIGEM IS INITIAL ).

      CLEAR: WL_ZLEST0104.
      SELECT SINGLE * FROM ZLEST0104 INTO WL_ZLEST0104 WHERE EMISSOR = TG_0060-WERKS.

      SELECT SINGLE *
        FROM ZSDT0001 INTO WL_ZSDT0001
       WHERE TP_MOVIMENTO  = 'E'
         AND BUKRS         = WL_ZLEST0104-BUKRS
         AND BRANCH        = WL_ZLEST0104-BRANCH
         AND NR_ROMANEIO   = TG_0060-NR_ROMANEIO
         AND NR_SAFRA      = TG_0060-SAFRA
         AND PARID         = TG_0060-RM_CODIGO.

      CHECK SY-SUBRC = 0.

      WL_ZLEST0073-VALOR_ORIGEM  = WL_ZSDT0001-NETWR.
      WL_ZLEST0073-PESO_ORIGEM   = WL_ZSDT0001-PESO_FISCAL.
      WL_ZLEST0073-PESO_SUBTOTAL = WL_ZSDT0001-PESO_SUBTOTAL.

    ENDIF.

    ADD TG_0060-PESO_FISCAL   TO  WL_ZLEST0073-PESO_VINCULADO.
    ADD TG_0060-NETWR         TO  WL_ZLEST0073-VALOR_VINCULADO.
    ADD TG_0060-PESO_SUBTOTAL TO  WL_ZLEST0073-PESO_SUBTOT_VINC.
    ADD TG_0060-PESO_LIQ_RET  TO  WL_ZLEST0073-PESO_LIQRET_VINC.
    ADD TG_0060-PESO_RETIDO   TO  WL_ZLEST0073-PESO_RETIDO_VINC.
  ENDLOOP.

  INSERT ZLEST0073 FROM WL_ZLEST0073.

  IF WL_ZSDT0001 IS NOT INITIAL.
    CLEAR: WL_ZSDT0001-VINC_TOT_AQUAV, WL_ZSDT0001-CTE_EMIT_AQUAV.
    WL_ZSDT0001-PESO_RETIDO_REAL = WL_ZLEST0073-PESO_RETIDO_VINC.
    WL_ZSDT0001-PESO_LIQRET_REAL = WL_ZLEST0073-PESO_LIQRET_VINC.

    IF ( WL_ZLEST0073-PESO_ORIGEM - WL_ZLEST0073-PESO_VINCULADO ) <= 0.
      WL_ZSDT0001-VINC_TOT_AQUAV = 'X'.
    ENDIF.

    MODIFY ZSDT0001 FROM WL_ZSDT0001.
  ENDIF.

  COMMIT WORK.

ENDFORM.
