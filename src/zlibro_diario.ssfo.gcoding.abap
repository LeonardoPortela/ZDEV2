DATA: WL_BUDAT LIKE LINE OF RG_BUDAT,
      WL_GJAHR TYPE BKPF-GJAHR,
      LC_BUKRS TYPE BKPF-BUKRS.

WL_GJAHR = BUDAT_LOW(4).

IF BUDAT_LOW IS NOT INITIAL.
  IF BUDAT_HIGH IS INITIAL.
    WL_BUDAT-SIGN = 'I'.
    WL_BUDAT-OPTION = 'EQ'.
    WL_BUDAT-LOW  = BUDAT_LOW.
    APPEND: WL_BUDAT TO RG_BUDAT.
    CLEAR: WL_BUDAT.
  ELSE.
    WL_BUDAT-SIGN = 'I'.
    WL_BUDAT-OPTION = 'BT'.
    WL_BUDAT-LOW  = BUDAT_LOW.
    WL_BUDAT-HIGH = BUDAT_HIGH.
    APPEND WL_BUDAT TO RG_BUDAT.
    CLEAR: WL_BUDAT.
  ENDIF.
ENDIF.

LC_BUKRS = BUKRS.

SELECT B~BUKRS B~GJAHR B~BUDAT B~BELNR
  FROM BKPF AS B
    INTO TABLE TG_BKPF
      WHERE B~BUKRS EQ LC_BUKRS
        AND B~BUDAT IN RG_BUDAT.

SORT: TG_BKPF BY BUDAT.

IF WL_GJAHR IS NOT INITIAL.
  DELETE TG_BKPF WHERE GJAHR NE WL_GJAHR.
ENDIF.

IF TG_BKPF[] IS NOT INITIAL.
  SELECT RYEAR DOCNR RBUKRS RLDNR RCNTR RACCT HSL DRCRK
    FROM FAGLFLEXA
      INTO TABLE TG_FAGLFLEXA
      FOR ALL ENTRIES IN TG_BKPF
        WHERE RYEAR  EQ TG_BKPF-GJAHR
          AND DOCNR  EQ TG_BKPF-BELNR
          AND RBUKRS EQ TG_BKPF-BUKRS
          AND RLDNR  EQ '0L'.

  IF TG_FAGLFLEXA[] IS NOT INITIAL.
    SELECT KTOPL SAKNR TXT50
      FROM SKAT
        INTO TABLE TG_SKAT
        FOR ALL ENTRIES IN TG_FAGLFLEXA
          WHERE SAKNR EQ TG_FAGLFLEXA-RACCT
            AND KTOPL EQ '0050'
            AND SPRAS EQ SY-LANGU.

  ENDIF.

  SELECT SINGLE BUKRS BUTXT ADRNR
    FROM T001
      INTO WG_T001
        WHERE BUKRS EQ BUKRS.

*BREAK-POINT.
  CALL FUNCTION 'ISSR_MD_ADDRESS_COMPANY_GET'
    EXPORTING
      I_ADRNR  = WG_T001-ADRNR
    IMPORTING
      E_S_SADR = WG_ENDERECO.



ENDIF.

LOOP AT TG_FAGLFLEXA INTO WG_FAGLFLEXA.
  READ TABLE TG_BKPF INTO WG_BKPF
    WITH KEY GJAHR  = WG_FAGLFLEXA-RYEAR
             BELNR  = WG_FAGLFLEXA-DOCNR.
*             BUKRS  = WG_FAGLFLEXA-RBUKRS.
  WG_SAIDA-FECHA = WG_BKPF-BUDAT.
  IF SY-SUBRC IS INITIAL.
    READ TABLE TG_SKAT INTO WG_SKAT
      WITH KEY SAKNR  = WG_FAGLFLEXA-RACCT
               KTOPL  = '0050'.
    WG_SAIDA-N_CTA = WG_FAGLFLEXA-RACCT.
    WG_SAIDA-NOMBRE = WG_SKAT-TXT50.
    IF WG_FAGLFLEXA-DRCRK EQ 'S'.
      WG_SAIDA-DEBITOS = WG_FAGLFLEXA-HSL.
    ELSEIF WG_FAGLFLEXA-DRCRK EQ 'H'.
      WG_SAIDA-CREDITOS = WG_FAGLFLEXA-HSL.
    ENDIF.
    WG_SAIDA-C_COSTO = WG_FAGLFLEXA-RCNTR.
    APPEND WG_SAIDA TO TG_SAIDA.
    CLEAR: WG_SAIDA, WG_BKPF, WG_FAGLFLEXA.
  ENDIF.
ENDLOOP.

DELETE  TG_SAIDA WHERE DEBITOS = 0 AND CREDITOS = 0.

SORT: TG_AUX   BY FECHA,
      TG_SAIDA BY FECHA.


TG_AUX[] = TG_SAIDA[].
DELETE ADJACENT DUPLICATES FROM TG_AUX
                      COMPARING FECHA.
P_NUMBER = 0.

*        CALL FUNCTION 'NUMBER_GET_NEXT'
*          EXPORTING
*            NR_RANGE_NR             = '01'
*            OBJECT                  = 'ZLIB_DIA'
*          IMPORTING
*            NUMBER                  = P_NUMBER
*          EXCEPTIONS
*            INTERVAL_NOT_FOUND      = 1
*            NUMBER_RANGE_NOT_INTERN = 2
*            OBJECT_NOT_FOUND        = 3
*            QUANTITY_IS_0           = 4
*            QUANTITY_IS_NOT_1       = 5
*            INTERVAL_OVERFLOW       = 6
*            BUFFER_OVERFLOW         = 7
*            OTHERS                  = 8.
