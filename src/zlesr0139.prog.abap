*&---------------------------------------------------------------------*
*& Report  ZLESR0139
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZLESR0139.

*----------------------------------------------------------------------------*
* Variaveis
*----------------------------------------------------------------------------*

TABLES: J_1BNFDOC.

TYPES: BEGIN OF TY_DOC,
         DOCNUM TYPE J_1BNFDOC-DOCNUM,
         MODEL  TYPE J_1BNFDOC-MODEL,
         CANDAT TYPE J_1BNFDOC-CANDAT,
         PROC   TYPE C,
       END OF TY_DOC.

TYPES: BEGIN OF TY_ACT,
         DOCNUM TYPE J_1BNFE_ACTIVE-DOCNUM,
         DOCSTA TYPE J_1BNFE_ACTIVE-DOCSTA,
         CANCEL TYPE J_1BNFE_ACTIVE-CANCEL,
       END OF TY_ACT.

DATA: TG_DOC        TYPE TABLE OF TY_DOC    WITH HEADER LINE,
      TG_ACT        TYPE TABLE OF TY_ACT    WITH HEADER LINE,
      TG_ZCTE_CIOT  TYPE TABLE OF ZCTE_CIOT WITH HEADER LINE,
      TG_VTTK       TYPE TABLE OF VTTK      WITH HEADER LINE,
      TG_VTTK_PRC   TYPE TABLE OF VTTK      WITH HEADER LINE.

RANGES: R_CREDAT FOR J_1BNFDOC-CREDAT.

DATA: V_CANDAT_NULL TYPE J_1BNFDOC-CANDAT.

SELECTION-SCREEN: BEGIN OF BLOCK B1 WITH FRAME.
SELECT-OPTIONS: P_DOCNUM  FOR J_1BNFDOC-DOCNUM.
SELECTION-SCREEN: END OF BLOCK B1.

START-OF-SELECTION.

 DATA: VG_JOB      TYPE I.

  SELECT SINGLE COUNT( * ) INTO VG_JOB
    FROM TBTCO
   WHERE JOBNAME EQ 'ZLESR0139_JOB'
     AND STATUS EQ 'R'.

  CHECK ( VG_JOB EQ 1 ) OR ( P_DOCNUM[] IS NOT INITIAL ).

  PERFORM: F_SELECIONA_DADOS,
           F_PROCESSAR_DADOS.

FORM F_SELECIONA_DADOS.

  CLEAR: TG_DOC[], TG_ACT[] , R_CREDAT[], V_CANDAT_NULL.

  IF P_DOCNUM[] IS INITIAL.
    R_CREDAT-SIGN   = 'I'.
    R_CREDAT-OPTION = 'GE'.
    R_CREDAT-LOW    = SY-DATUM - 2.
    APPEND R_CREDAT.
  ENDIF.

  IF P_DOCNUM[] IS NOT INITIAL.
    SELECT *
      FROM J_1BNFDOC AS A INTO CORRESPONDING FIELDS OF TABLE TG_DOC
     WHERE A~DOCNUM IN P_DOCNUM.
  ELSE.
    SELECT *
      FROM J_1BNFDOC AS A INTO CORRESPONDING FIELDS OF TABLE TG_DOC
     WHERE A~CREDAT IN R_CREDAT
       AND A~DIRECT EQ '2'
       AND A~NFE    EQ ABAP_TRUE.
  ENDIF.

  DELETE TG_DOC WHERE NOT ( MODEL EQ '57' AND CANDAT EQ V_CANDAT_NULL ).

  IF TG_DOC[] IS NOT INITIAL.

    SELECT *
      FROM J_1BNFE_ACTIVE INTO CORRESPONDING FIELDS OF TABLE TG_ACT
       FOR ALL ENTRIES IN TG_DOC
     WHERE DOCNUM EQ TG_DOC-DOCNUM.

    SELECT *
      FROM ZCTE_CIOT INTO TABLE TG_ZCTE_CIOT
       FOR ALL ENTRIES IN TG_DOC
     WHERE DOCNUM EQ TG_DOC-DOCNUM.

    IF TG_ZCTE_CIOT[] IS NOT INITIAL.
      SELECT *
        FROM VTTK INTO TABLE TG_VTTK
         FOR ALL ENTRIES IN TG_ZCTE_CIOT
       WHERE TKNUM EQ TG_ZCTE_CIOT-TKNUM.

      DELETE TG_VTTK WHERE EXTI1 NE SPACE.
    ENDIF.
  ENDIF.

  LOOP AT TG_DOC.

    READ TABLE TG_ACT WITH KEY DOCNUM = TG_DOC-DOCNUM.
    CHECK ( SY-SUBRC EQ 0 ) AND ( TG_ACT-DOCSTA = '1' ) AND ( TG_ACT-CANCEL EQ SPACE ).

    READ TABLE TG_ZCTE_CIOT WITH KEY DOCNUM = TG_DOC-DOCNUM.
    CHECK ( SY-SUBRC EQ 0 ) AND ( TG_ZCTE_CIOT-TKNUM IS NOT INITIAL ).

    READ TABLE TG_VTTK WITH KEY TKNUM = TG_ZCTE_CIOT-TKNUM.
    CHECK ( SY-SUBRC EQ 0 ).

    TG_DOC-PROC = ABAP_TRUE.
    MODIFY TG_DOC.
  ENDLOOP.

  DELETE TG_DOC WHERE PROC NE ABAP_TRUE.


ENDFORM.

FORM F_PROCESSAR_DADOS.

 DATA: V_MSG_ERROR TYPE STRING.

 CHECK TG_DOC[] IS NOT INITIAL.

 LOOP AT TG_DOC.

   CALL FUNCTION 'Z_LES_FINALIZA_VT'
     EXPORTING
       P_DOCNUM   = TG_DOC-DOCNUM
     IMPORTING
       E_MSG_ERRO = V_MSG_ERROR.

   IF V_MSG_ERROR IS NOT INITIAL.
     MESSAGE | Doc.CT-e: { TG_DOC-DOCNUM }: Proc.: { V_MSG_ERROR } | TYPE 'S'.
   ENDIF.

 ENDLOOP.


ENDFORM.
