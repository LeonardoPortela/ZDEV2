"Name: \PR:RIPRSN00\FO:MAIN_PRINT\SE:BEGIN\EI
ENHANCEMENT 0 ZPRINT_NOTIFIC.

CHECK WWORKPAPER IS NOT INITIAL.

IF WWORKPAPER-WORKPAPER EQ '1500' AND WWORKPAPER-selected EQ 'X'.

        DATA: LT_ZETPM_IMP_NOTA TYPE ZETPM_IMP_NOTA.
DATA: LW_ZETPM_IMP_NOTA TYPE ZETPM_IMP_NOTA_T.
DATA: LT_ZCATALOGO TYPE ZCATALOGO_T.
DATA: LW_VIQMFE TYPE VIQMFE.
DATA: LT_VIQMUR TYPE ZT_VIQMUR.
DATA: LW_VIQMUR TYPE ZCATVIQMUR.
DATA:  VL_FM_NAME TYPE RS38L_FNAM.
DATA:  VL_FN_NAME TYPE RS38L_FNAM.
DATA:  VL_FE_NAME TYPE RS38L_FNAM.

DATA:      L_LANGU      LIKE SY-LANGU.
DATA:      L_ANZ_LINES  LIKE SY-TFILL.
DATA:      L_UEBERNEHMEN.
DATA:      L_CHANGE     LIKE VIQMEL-INDTX.
DATA:      L_LEVEL(10).
DATA:      L_TEXTOBJEKT LIKE THEAD-TDNAME.
DATA:      L_TLINE_TAB  LIKE TLINE OCCURS 2 WITH HEADER LINE.

DATA: Z_FMNAME  TYPE RS38L_FNAM,
        Z_CONTROL TYPE SSFCTRLOP,
        Z_OUTPUT  TYPE SSFCOMPOP.

DATA: ls_t001k  TYPE  t001k,
        s_swerk   TYPE swerk,
        s_name    TYPE tdsfname,
        s_name1   TYPE tdsfname.


DATA: BEGIN OF L_LINE_TAB OCCURS 5.
        INCLUDE STRUCTURE TLINE.
DATA: END OF L_LINE_TAB.

DATA: BEGIN OF LTX_HEAD.
        INCLUDE STRUCTURE THEAD.                            "Key
DATA: END OF LTX_HEAD.

DATA LTXTTAB TYPE TLINE OCCURS 100 WITH HEADER LINE.

        FREE: LW_ZETPM_IMP_NOTA, LTXTTAB[], LT_ZCATALOGO, LT_VIQMUR.
        CLEAR: LT_ZETPM_IMP_NOTA, LTX_HEAD.

*** Stefanini - IR235642 - 14/05/2025 - LAZAROSR - Início de Alteração
*        SELECT SINGLE *
*        FROM VIQMEL
*        INTO CORRESPONDING FIELDS OF LT_ZETPM_IMP_NOTA
*          WHERE AUFNR EQ CAUFVD-AUFNR.
IF caufvd-aufnr IS INITIAL.

  SELECT SINGLE *
    FROM viqmel
    INTO CORRESPONDING FIELDS OF lt_zetpm_imp_nota
    WHERE qmnum EQ iviqmel-qmnum.

ELSE.

  SELECT SINGLE *
    FROM viqmel
    INTO CORRESPONDING FIELDS OF lt_zetpm_imp_nota
    WHERE aufnr EQ caufvd-aufnr.

ENDIF.
*** Stefanini - IR235642 - 14/0/2025 - LAZAROSR - Fim de Alteração

        CHECK LT_ZETPM_IMP_NOTA IS NOT INITIAL.

LT_ZETPM_IMP_NOTA-EDATE = SY-DATUM.

IF LT_ZETPM_IMP_NOTA-EQUNR IS NOT INITIAL.
  SELECT SINGLE *
  FROM EQKT
  INTO @DATA(_EQKT)
    WHERE EQUNR EQ @LT_ZETPM_IMP_NOTA-EQUNR.
  LT_ZETPM_IMP_NOTA-EQKTX = _EQKT-EQKTX.
ENDIF.

SELECT SINGLE *
FROM TQ80_T
INTO @DATA(_TQ80_T)
  WHERE QMART EQ @LT_ZETPM_IMP_NOTA-QMART
   AND  SPRAS EQ 'P'.
LT_ZETPM_IMP_NOTA-QMARTX = _TQ80_T-QMARTX.

SELECT SINGLE *
FROM CRHD
INTO @DATA(_CRHD)
  WHERE OBJID EQ @LT_ZETPM_IMP_NOTA-ARBPL.
LT_ZETPM_IMP_NOTA-OBJID = _CRHD-OBJID.
LT_ZETPM_IMP_NOTA-ARBPL = _CRHD-ARBPL.

SELECT SINGLE *
FROM IHPA
INTO @DATA(_IHPA)
  WHERE OBJNR EQ @LT_ZETPM_IMP_NOTA-OBJNR.
LT_ZETPM_IMP_NOTA-PARNR_VERA = _IHPA-PARNR.

IF LT_ZETPM_IMP_NOTA-PARNR_VERA IS NOT INITIAL.
  SELECT SINGLE *
  FROM PA0002
  INTO @DATA(_PA0002)
    WHERE PERNR EQ @LT_ZETPM_IMP_NOTA-PARNR_VERA.
  LT_ZETPM_IMP_NOTA-CNAME = _PA0002-CNAME.
ENDIF.

IF  LT_ZETPM_IMP_NOTA-QMNAM IS NOT INITIAL.
  CLEAR _PA0002.
  SELECT SINGLE *
  FROM PA0002
  INTO _PA0002
    WHERE PERNR EQ LT_ZETPM_IMP_NOTA-QMNAM.
  LT_ZETPM_IMP_NOTA-C_NAME = _PA0002-CNAME.
ENDIF.

SELECT SINGLE *
FROM IFLO
INTO @DATA(_IFLO)
  WHERE TPLNR EQ @LT_ZETPM_IMP_NOTA-TPLNR.
LT_ZETPM_IMP_NOTA-PLTXT = _IFLO-PLTXT.

SELECT SINGLE *
  FROM CSKT
  INTO @DATA(_CSKT)
    WHERE KOSTL EQ @LT_ZETPM_IMP_NOTA-KOSTL.
LT_ZETPM_IMP_NOTA-KTEXT = _CSKT-KTEXT.

SELECT SINGLE *
FROM T001W
INTO @DATA(_T001W)
WHERE WERKS EQ @LT_ZETPM_IMP_NOTA-SWERK.
LT_ZETPM_IMP_NOTA-NAME1 = _T001W-NAME1.

SELECT SINGLE *
FROM CRTX
INTO @DATA(_CRTX)
WHERE OBJID EQ @LT_ZETPM_IMP_NOTA-OBJID.
LT_ZETPM_IMP_NOTA-CR_KTEXT = _CRTX-KTEXT.

APPEND LT_ZETPM_IMP_NOTA TO LW_ZETPM_IMP_NOTA.

*Preenchendo dados analise de falha.
SELECT *
FROM VIQMFE
INTO CORRESPONDING FIELDS OF TABLE LT_ZCATALOGO
  WHERE QMNUM EQ LT_ZETPM_IMP_NOTA-QMNUM.

LOOP AT LT_ZCATALOGO ASSIGNING FIELD-SYMBOL(<ZW_CATALOGO>).

SELECT SINGLE *
FROM QPCT
INTO @DATA(_QPCT)
  WHERE KATALOGART EQ @<ZW_CATALOGO>-FEKAT
   AND CODEGRUPPE  EQ @<ZW_CATALOGO>-FEGRP
   AND CODE        EQ @<ZW_CATALOGO>-FECOD.
IF _QPCT IS INITIAL.
<ZW_CATALOGO>-ZTEXT = SPACE.
ELSE.
<ZW_CATALOGO>-ZTEXT = _QPCT-KURZTEXT.
ENDIF.

CLEAR _QPCT.
SELECT SINGLE *
FROM QPCT
INTO _QPCT
  WHERE KATALOGART EQ <ZW_CATALOGO>-OTKAT
   AND CODEGRUPPE  EQ <ZW_CATALOGO>-OTGRP
   AND CODE        EQ <ZW_CATALOGO>-OTEIL.
IF _QPCT IS INITIAL.
 <ZW_CATALOGO>-KURZTEXT = SPACE.
 ELSE.
<ZW_CATALOGO>-KURZTEXT = _QPCT-KURZTEXT.
ENDIF.
ENDLOOP.

SELECT *
FROM VIQMUR
INTO CORRESPONDING FIELDS OF TABLE LT_VIQMUR
  WHERE QMNUM EQ LT_ZETPM_IMP_NOTA-QMNUM.

LOOP AT LT_VIQMUR ASSIGNING FIELD-SYMBOL(<LS_VIQMUR>).
CLEAR: _QPCT.
SELECT SINGLE *
FROM QPCT
INTO _QPCT
  WHERE KATALOGART EQ <LS_VIQMUR>-URKAT
   AND CODEGRUPPE  EQ <LS_VIQMUR>-URGRP
   AND CODE        EQ <LS_VIQMUR>-URCOD.
IF _QPCT IS INITIAL.
<LS_VIQMUR>-KURZTEXT = SPACE.
ELSE.
<LS_VIQMUR>-KURZTEXT = _QPCT-KURZTEXT.
ENDIF.
ENDLOOP.

 LTX_HEAD = VALUE #( TDOBJECT = 'QMEL'
                     TDNAME = VIQMEL-QMNUM
                       TDID = 'LTXT'
                    TDSPRAS = SY-LANGU
                    TDTITLE = ' '
                     TDFORM = 'PM_QMEL'
                    TDSTYLE = ' '
                  TDVERSION = ' '
                    TDFUSER = SY-UNAME
                   TDFRELES = ' '
                    TDFDATE = ' '
                    TDFTIME = ' '
                    TDLUSER = ' ' ).

IF VIQMEL-INDTX EQ 'X'.
    CALL FUNCTION 'READ_TEXT'
         EXPORTING
              ID        = LTX_HEAD-TDID
              LANGUAGE  = LTX_HEAD-TDSPRAS
              NAME      = LTX_HEAD-TDNAME
              OBJECT    = LTX_HEAD-TDOBJECT
         IMPORTING
              HEADER    = LTX_HEAD
         TABLES
              LINES     = LTXTTAB
         EXCEPTIONS
              NOT_FOUND = 1.
ENDIF.

"verificar se ordem pertence a empresa tgg.
CLEAR: ls_t001k.
CALL FUNCTION 'AIP01_PLANT_DETERMINE'
  EXPORTING
    i_werks  = LT_ZETPM_IMP_NOTA-swerk
  IMPORTING
    es_t001k = ls_t001k
  EXCEPTIONS
    OTHERS   = 1.


SELECT SINGLE *
  FROM setleaf
  INTO @DATA(i_data)
    WHERE setname EQ 'MAGI_PM_IW32'
      AND valfrom EQ @ls_t001k-bukrs.

CLEAR: s_name, s_name1.
IF i_data IS INITIAL.
  s_name = 'ZPMF0004'.
ELSE.
  s_name = 'ZPMF0013'.
ENDIF.

    Z_CONTROL-PREVIEW     = ABAP_TRUE.
    Z_CONTROL-NO_DIALOG   = ABAP_TRUE.
    Z_OUTPUT-TDDEST       = 'LOCL'.
    Z_OUTPUT-TDNOPRINT    = ABAP_TRUE.


CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
  EXPORTING
    FORMNAME           = s_name
  IMPORTING
    FM_NAME            = VL_FN_NAME
  EXCEPTIONS
    NO_FORM            = 1
    NO_FUNCTION_MODULE = 2
    OTHERS             = 3.

"FF - inicio 11/12/2023 - Solic. Guilherme Ferreira. Erro ao imprimir texto longo maior que 28 linhas
LOOP AT ltxttab ASSIGNING FIELD-SYMBOL(<fs_txt>).
  IF sy-tabix > 28.
    DELETE ltxttab INDEX sy-tabix .
  ENDIF.
ENDLOOP.
"FF - fim 11/12/2023

CALL FUNCTION VL_FN_NAME
  EXPORTING
*    CONTROL_PARAMETERS = Z_CONTROL
*    OUTPUT_OPTIONS     = Z_OUTPUT
    GT_ZETPM_IMP_NOTA  = LT_ZETPM_IMP_NOTA
*    USER_SETTINGS      = 'X'
  TABLES
    GT_LTXTTAB        = LTXTTAB[]
    GT_VIQMFE         = LT_ZCATALOGO
    GT_VIQMUR         = LT_VIQMUR
    GT_NOTA           = LW_ZETPM_IMP_NOTA
  EXCEPTIONS
    FORMATTING_ERROR  = 1
    INTERNAL_ERROR    = 2
    SEND_ERROR        = 3
    USER_CANCELED     = 4
    OTHERS            = 5.


 IF SY-SUBRC EQ 0.
 ENDIF.
ENDIF.

*DATA: P_RESPO TYPE C.
*
*  CALL FUNCTION 'POPUP_TO_CONFIRM'
*    EXPORTING        "TITLEBAR = 'Confirmar'
*      TEXT_QUESTION         = 'Deseja imprimir formulario para anotações de materiais?'
*      TEXT_BUTTON_1         = 'Sim'
*      TEXT_BUTTON_2         = 'Não'
*      DISPLAY_CANCEL_BUTTON = ' '
*    IMPORTING
*      ANSWER                = P_RESPO.
*
*CASE P_RESPO.
*  WHEN 1.
*    CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
*    EXPORTING
*      FORMNAME           = 'ZPMF0005'
*    IMPORTING
*      FM_NAME            = VL_FE_NAME
*    EXCEPTIONS
*      NO_FORM            = 1
*      NO_FUNCTION_MODULE = 2
*      OTHERS             = 3.
*
*  CALL FUNCTION VL_FE_NAME
*    EXPORTING
*      GT_ZETPM_IMP_NOTA = LT_ZETPM_IMP_NOTA
*    TABLES
*      GT_LTXTTAB        = LTXTTAB[]
*      GT_VIQMFE         = LT_ZCATALOGO
*      GT_VIQMUR         = LT_VIQMUR
*      GT_NOTA           = LW_ZETPM_IMP_NOTA
*    EXCEPTIONS
*      FORMATTING_ERROR  = 1
*      INTERNAL_ERROR    = 2
*      SEND_ERROR        = 3
*      USER_CANCELED     = 4
*      OTHERS            = 5.
*ENDCASE.
EXIT.
ENDENHANCEMENT.
