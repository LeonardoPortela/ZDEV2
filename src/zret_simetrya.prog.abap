*&---------------------------------------------------------------------*
*& Report  ZRET_SIMETRYA
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZRET_SIMETRYA.

INITIALIZATION.

  SELECT SINGLE COUNT( * ) INTO @DATA(WL_TBTCO)
    FROM TBTCO
   WHERE JOBNAME EQ 'ZRET_SIMETRYA_JOB'
     AND STATUS  EQ 'R'.

  IF ( WL_TBTCO EQ 1 ).
    PERFORM: P_PROCESSA_RETORNO.
  ENDIF.

FORM P_PROCESSA_RETORNO.

  DATA: IT_NOTAS       TYPE TABLE OF ZIB_NOTA_FISCAL_SAP,
        WA_NOTA        TYPE ZIB_NOTA_FISCAL_SAP,
        TG_ZIB_CTE_SAP TYPE TABLE OF ZIB_CTE_SAP WITH HEADER LINE,
        TG_ZIB_NFE_SAP TYPE TABLE OF ZIB_NFE_SAP WITH HEADER LINE.

  "Verifica Parametrização Contingencia CT-e
  SELECT SINGLE *
    FROM SETLEAF INTO @DATA(WL_SETLEAF_CTE)
   WHERE SETNAME EQ 'MAGGI_CTG_CTE_SAP'.

  "Verifica Parametrização Contingencia NF-e
  SELECT SINGLE *
    FROM SETLEAF INTO @DATA(WL_SETLEAF_NFE)
   WHERE SETNAME EQ 'MAGGI_CTG_NFE_SAP'.

  IF ( WL_SETLEAF_CTE-VALFROM IS NOT INITIAL ).
    CLEAR: TG_ZIB_CTE_SAP[].

    SELECT *
      FROM ZIB_CTE_SAP INTO TABLE TG_ZIB_CTE_SAP
     WHERE RG_ATUALIZADO = 'N'.

    LOOP AT TG_ZIB_CTE_SAP.
      CLEAR: WA_NOTA.
      MOVE-CORRESPONDING TG_ZIB_CTE_SAP TO WA_NOTA.
      APPEND WA_NOTA TO IT_NOTAS.
      TG_ZIB_CTE_SAP-RG_ATUALIZADO = 'S'.
      MODIFY ZIB_CTE_SAP FROM TG_ZIB_CTE_SAP.
    ENDLOOP.
  ENDIF.

  IF ( WL_SETLEAF_NFE-VALFROM IS NOT INITIAL ).
    CLEAR: TG_ZIB_NFE_SAP[].

    SELECT *
      FROM ZIB_NFE_SAP INTO TABLE TG_ZIB_NFE_SAP
     WHERE RG_ATUALIZADO = 'N'.

    LOOP AT TG_ZIB_NFE_SAP.
      CLEAR: WA_NOTA.
      MOVE-CORRESPONDING TG_ZIB_NFE_SAP TO WA_NOTA.
      APPEND WA_NOTA TO IT_NOTAS.
      TG_ZIB_NFE_SAP-RG_ATUALIZADO = 'S'.
      MODIFY ZIB_NFE_SAP FROM TG_ZIB_NFE_SAP.
    ENDLOOP.
  ENDIF.

  IF IT_NOTAS[] IS NOT INITIAL.
    CALL FUNCTION 'Z_SD_INBOUND_NFE_XML'
      TABLES
       IT_NOTAS  = IT_NOTAS.
  ENDIF.

  COMMIT WORK.


ENDFORM.
