*----------------------------------------------------------------------*
***INCLUDE LZBPCF03 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  ZSELECIONA_DADOS_MOV_SLD_ACML
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ZSELECIONA_DADOS_MOV_SLD_ACML .

  CLEAR: WA_MOV_MENSAL_SLD_ACML,
         P_BUKRS,
         P_GJAHR,
         P_MONAT,
         P_SAKNR.


  LOOP AT IT_MOV_MENSAL_SLD_ACML INTO WA_MOV_MENSAL_SLD_ACML.
    IF WA_MOV_MENSAL_SLD_ACML-CAMPO EQ 'BUKRS'.
      P_BUKRS-LOW    = WA_MOV_MENSAL_SLD_ACML-VALOR_DE.
      P_BUKRS-HIGH   = WA_MOV_MENSAL_SLD_ACML-VALOR_ATE.
      P_BUKRS-SIGN   = WA_MOV_MENSAL_SLD_ACML-SIGN.
      P_BUKRS-OPTION = WA_MOV_MENSAL_SLD_ACML-OPTION.
      APPEND P_BUKRS.
    ENDIF.

    IF WA_MOV_MENSAL_SLD_ACML-CAMPO EQ 'GJAHR'.
      P_GJAHR-LOW    = WA_MOV_MENSAL_SLD_ACML-VALOR_DE.
      P_GJAHR-HIGH   = WA_MOV_MENSAL_SLD_ACML-VALOR_ATE.
      P_GJAHR-SIGN   = WA_MOV_MENSAL_SLD_ACML-SIGN.
      P_GJAHR-OPTION = WA_MOV_MENSAL_SLD_ACML-OPTION.
      APPEND P_GJAHR.
    ENDIF.

    IF WA_MOV_MENSAL_SLD_ACML-CAMPO EQ 'MONAT'.
      P_MONAT-LOW    = WA_MOV_MENSAL_SLD_ACML-VALOR_DE.
      P_MONAT-HIGH   = WA_MOV_MENSAL_SLD_ACML-VALOR_ATE.
      P_MONAT-SIGN   = WA_MOV_MENSAL_SLD_ACML-SIGN.
      P_MONAT-OPTION = WA_MOV_MENSAL_SLD_ACML-OPTION.
      APPEND P_MONAT.
    ENDIF.

    IF WA_MOV_MENSAL_SLD_ACML-CAMPO EQ 'SAKNR'.
      P_SAKNR-LOW    = WA_MOV_MENSAL_SLD_ACML-VALOR_DE.
      P_SAKNR-HIGH   = WA_MOV_MENSAL_SLD_ACML-VALOR_ATE.
      P_SAKNR-SIGN   = WA_MOV_MENSAL_SLD_ACML-SIGN.
      P_SAKNR-OPTION = WA_MOV_MENSAL_SLD_ACML-OPTION.
      APPEND P_SAKNR.
    ENDIF.

  ENDLOOP.


  RANGES:  RG_HKONT FOR BSIS-HKONT.
  REFRESH: RG_HKONT.


  SELECT *
    INTO TABLE IT_COAS
    FROM COAS
   WHERE AUART = 'ZRM1'
     AND ABGSL NE ''
     AND BUKRS IN P_BUKRS .

  " Busca Contas SET
  SELECT *
     FROM SETLEAF
     INTO TABLE IT_SETLEAF
  WHERE SETNAME EQ 'MAGGI_CONTAS_ATIVO_BIOLO'.

  LOOP AT IT_SETLEAF INTO WA_SETLEAF.
    RG_HKONT-SIGN   = 'I'.
    RG_HKONT-OPTION = 'EQ'.
    RG_HKONT-LOW    = WA_SETLEAF-VALFROM.
    APPEND RG_HKONT.
    CLEAR: RG_HKONT.
  ENDLOOP.

  SELECT *
    INTO TABLE IT_BSIS
    FROM BSIS
   WHERE BUKRS IN P_BUKRS
     AND HKONT IN RG_HKONT "set
     AND GJAHR IN P_GJAHR
     AND MONAT IN P_MONAT.

  IT_BSIS_AUX[] = IT_BSIS[].
  SORT IT_BSIS_AUX BY BUKRS GJAHR HKONT MONAT WAERS.

  DELETE ADJACENT DUPLICATES FROM IT_BSIS_AUX COMPARING BUKRS GJAHR HKONT MONAT WAERS.
  DATA: ACUMULADO_1 TYPE BSIS-WRBTR,
        ACUMULADO_2 TYPE BSIS-WRBTR.



  LOOP AT IT_BSIS_AUX INTO WA_BSIS_AUX.

    ACUMULADO_1 = 0.
    ACUMULADO_2 = 0.

    LOOP AT IT_BSIS INTO WA_BSIS WHERE BUKRS EQ WA_BSIS_AUX-BUKRS AND GJAHR EQ WA_BSIS_AUX-GJAHR AND HKONT EQ WA_BSIS_AUX-HKONT AND MONAT EQ WA_BSIS_AUX-MONAT  .
      IF WA_BSIS-SHKZG = 'H'.

        ACUMULADO_1 = ACUMULADO_1 + WA_BSIS-WRBTR * -1.
        ACUMULADO_2 = ACUMULADO_2 + WA_BSIS-DMBE2 * -1.
      ELSE.
        ACUMULADO_1 = ACUMULADO_1 + WA_BSIS-WRBTR .
        ACUMULADO_2 = ACUMULADO_2 + WA_BSIS-DMBE2 .
      ENDIF.
    ENDLOOP.

    WA_BSIS_FINAL-BUKRS = WA_BSIS-BUKRS.
    WA_BSIS_FINAL-GJAHR = WA_BSIS-GJAHR.
    WA_BSIS_FINAL-MONAT = WA_BSIS-MONAT.
    WA_BSIS_FINAL-HKONT = WA_BSIS-HKONT.
    WA_BSIS_FINAL-WAERS = WA_BSIS-WAERS.
    WA_BSIS_FINAL-WRBTR = ACUMULADO_1.
    WA_BSIS_FINAL-DMBE2 = ACUMULADO_2.

    APPEND WA_BSIS_FINAL  TO IT_BSIS_FINAL.

    CLEAR: WA_BSIS_FINAL, WA_BSIS.

  ENDLOOP.


  IF  IT_COAS IS NOT INITIAL OR  IT_BSIS IS NOT INITIAL.

    SELECT *
      INTO TABLE IT_AFPO
      FROM AFPO
       FOR ALL ENTRIES IN IT_COAS
     WHERE AUFNR = IT_COAS-AUFNR  .

    SELECT *
      INTO TABLE IT_MARA
      FROM MARA
      FOR ALL ENTRIES IN IT_AFPO
    WHERE MATNR = IT_AFPO-MATNR.

    SELECT *
      INTO TABLE IT_T001
      FROM T001
      WHERE BUKRS IN P_BUKRS.

    SELECT *
      INTO TABLE IT_TKA02
      FROM TKA02
      WHERE BUKRS IN P_BUKRS.

    IF IT_T001[] IS NOT INITIAL.
      SELECT *
        INTO TABLE IT_T005
        FROM T005
        FOR ALL ENTRIES IN IT_T001
        WHERE LAND1 = IT_T001-LAND1.
    ENDIF.

    SELECT *
      INTO TABLE IT_COEP
    FROM COEP
    FOR ALL ENTRIES IN IT_COAS
   WHERE OBJNR EQ IT_COAS-OBJNR
    AND  BUKRS IN P_BUKRS
    AND  GJAHR IN P_GJAHR .

    DELETE IT_COEP WHERE PERIO NOT IN P_MONAT.

  ELSE.
    EXIT.
  ENDIF.

  "CSB
*5 – Seleção das contas contábeis
*Executar Função “Custeio“
*
*Selecionar contas do set RGSBM-SHORTNAME
*  REFRESH : IT_SETLEAF, IT_SETNODE, IT_SUB_SETNODE.
*  "Set com as contas
*  SELECT SUBSETNAME
*    INTO TABLE IT_SETNODE
*    FROM SETNODE
*   WHERE SETNAME = 'CUSTEIO' .
*
*  SELECT SUBSETNAME
*    INTO TABLE IT_SUB_SETNODE
*    FROM SETNODE
*     FOR ALL ENTRIES IN IT_SETNODE
*   WHERE SETNAME = IT_SETNODE-SUBSETNAME .
*
*  SELECT *
*    INTO TABLE IT_SETLEAF
*    FROM SETLEAF
*     FOR ALL ENTRIES IN IT_SUB_SETNODE
*   WHERE SETNAME = IT_SUB_SETNODE-SUBSETNAME.
*
*  LOOP AT IT_SETLEAF INTO WA_SETLEAF.
*    P_HKONT-LOW    = WA_SETLEAF-VALFROM.
*    P_HKONT-HIGH   = WA_SETLEAF-VALTO.
*    P_HKONT-SIGN   = 'I'.
*    P_HKONT-OPTION = 'EQ'.
*    APPEND P_HKONT.
*  ENDLOOP.
*
*  SELECT *
*    INTO TABLE IT_BSIS
*    FROM BSIS
*    FOR ALL ENTRIES IN IT_COAS
*   WHERE BUKRS = IT_COAS-BUKRS
*     AND HKONT IN P_HKONT
*     AND GJAHR IN P_GJAHR
*     AND MONAT IN P_MONAT
*     AND AUFNR = IT_COAS-AUFNR.

*    CLEAR  :  IT_COAS_AUX , WA_COAS_AUX.
*    LOOP AT IT_COAS INTO WA_COAS.
*      CONCATENATE 'OR' WA_COAS-AUFNR INTO WA_COAS_AUX-OBJNR.
*      APPEND WA_COAS_AUX TO IT_COAS_AUX.
*    ENDLOOP.

*    SELECT *
*       INTO TABLE IT_COEP_RESULT
*       FROM COEP
*       FOR ALL ENTRIES IN IT_COEP
*      WHERE BUKRS EQ IT_COEP-BUKRS
*        AND GJAHR EQ IT_COEP-GJAHR
*        AND PERIO LT IT_COEP-PERIO
*        AND OBJNR EQ IT_COEP-OBJNR.
*
*
*    SORT IT_COEP_RESULT BY PERIO.
*
*    DATA:  ACUMULADO_USD TYPE COEP-WTGBTR,
*           ACUMULADO_BRL TYPE COEP-WTGBTR,
*           V_AUFNR       TYPE AFPO-AUFNR.
*
*    LOOP AT IT_COEP INTO WA_COEP.
*
*      ACUMULADO_USD = 0.
*      ACUMULADO_BRL = 0.
*
*      LOOP AT IT_COEP_RESULT INTO WA_COEP_RESULT WHERE KSTAR = WA_COEP-KSTAR.
*
*        ACUMULADO_USD = ACUMULADO_USD + WA_COEP_RESULT-WTGBTR.
*        ACUMULADO_BRL = ACUMULADO_BRL + WA_COEP_RESULT-WTGBTR  .
*
*      ENDLOOP.
*
*         V_AUFNR = WA_COEP-OBJNR+2(12) .
*
*        READ TABLE IT_AFPO INTO WA_AFPO WITH KEY AUFNR = V_AUFNR BINARY SEARCH.
*        READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_AFPO-MATNR BINARY SEARCH.
*
*
*        WA_SAIDA-BUKRS         = WA_COEP-BUKRS.
*        WA_SAIDA-GJAHR         = WA_COEP-GJAHR.
*        WA_SAIDA-PERIO         = WA_COEP-PERIO.
*        WA_SAIDA-KSTAR         = WA_COEP-KSTAR.
*        WA_SAIDA-MATKL         = WA_MARA-MATKL.
*        WA_SAIDA-MATNR         = WA_AFPO-MATNR.
*        WA_SAIDA-MOEDA         = 'BRL'.
*        WA_SAIDA-WOGBTR        = WA_COEP-WOGBTR.
*        WA_SAIDA-WKGBTR        = 0.
*        WA_SAIDA-ACUMULADO_USD = 0.
*        WA_SAIDA-ACUMULADO_BRL = ACUMULADO_BRL.
*
*        APPEND WA_SAIDA TO IT_SAIDA.
*
*        WA_SAIDA-BUKRS         = WA_COEP-BUKRS.
*        WA_SAIDA-GJAHR         = WA_COEP-GJAHR.
*        WA_SAIDA-PERIO         = WA_COEP-PERIO.
*        WA_SAIDA-KSTAR         = WA_COEP-KSTAR.
*        WA_SAIDA-MATKL         = WA_MARA-MATKL.
*        WA_SAIDA-MATNR         = WA_AFPO-MATNR.
*        WA_SAIDA-MOEDA         = 'USD'.
*        WA_SAIDA-WOGBTR        = 0.
*        WA_SAIDA-WKGBTR        = WA_COEP-WKGBTR.
*        WA_SAIDA-ACUMULADO_USD = ACUMULADO_USD.
*        WA_SAIDA-ACUMULADO_BRL = 0.
*
*         APPEND WA_SAIDA TO IT_SAIDA.
*    ENDLOOP.


** SALDO ACUMULADO DE TODAS AS CONTAS POR EMPRESA
*  IF IT_BSIS[] IS NOT INITIAL.
*    IT_BSIS_AUX[] = IT_BSIS[].
*    DATA VTABIX TYPE SY-TABIX.
*    LOOP AT IT_BSIS_AUX INTO WA_BSIS.
*      VTABIX = SY-TABIX.
*      IF WA_BSIS-MONAT = 1.
*        WA_BSIS-MONAT = 12.
*        WA_BSIS-GJAHR = WA_BSIS-GJAHR - 1.
*      ELSE.
*        WA_BSIS-MONAT = WA_BSIS-MONAT - 1.
*      ENDIF.
*      MODIFY IT_BSIS_AUX FROM WA_BSIS INDEX VTABIX TRANSPORTING MONAT GJAHR.
*    ENDLOOP.
*
*    SELECT *
*      FROM ZCOT0008
*      INTO TABLE IT_ZCOT0008_AUX
*      FOR ALL ENTRIES IN IT_BSIS_AUX
*      WHERE EMPRESA = IT_BSIS_AUX-BUKRS
*      AND   EXERCICIO = IT_BSIS_AUX-GJAHR
*      AND   MES_EXERCICIO = IT_BSIS_AUX-MONAT.
*
*    SORT IT_ZCOT0008_AUX BY EMPRESA EXERCICIO MES_EXERCICIO MOEDA.
*    DELETE ADJACENT DUPLICATES FROM IT_ZCOT0008_AUX COMPARING EMPRESA EXERCICIO MES_EXERCICIO MOEDA.
*  ENDIF.
ENDFORM.                    " ZSELECIONA_DADOS_MOV_SLD_ACML
*&---------------------------------------------------------------------*
*&      Form  ZPROCESSA_RETORNO_MOV_SLD_ACML
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ZPROCESSA_RETORNO_MOV_SLD_ACML .

  SORT : IT_AFPO  BY AUFNR,
         IT_MARA  BY MATNR,
         IT_BSIS  BY AUFNR,
         IT_COAS  BY AUFNR,
         IT_T001  BY BUKRS,
         IT_T005  BY LAND1,
         IT_TKA02 BY BUKRS,
         IT_ZCOT0008_AUX BY  EMPRESA EXERCICIO MES_EXERCICIO MOEDA,
         IT_ZCOT0008     BY  EMPRESA EXERCICIO MES_EXERCICIO MOEDA.

  DATA: V_SALDO TYPE ZRET_MOV_MENSAL_SLD_ACML-SLD_ACL_MES,
        VTABIX  TYPE SY-TABIX,
        VMONAT  TYPE BSIS-MONAT,
        VGJAHR  TYPE BSIS-GJAHR.


  SORT IT_COEP  BY PERIO.

  DATA: V_AUFNR         TYPE AFPO-AUFNR.

  LOOP AT IT_COEP INTO WA_COEP.

    VMONAT          = 0.
    VGJAHR          = 0.

    V_AUFNR = WA_COEP-OBJNR+2(12) .

    READ TABLE IT_AFPO INTO WA_AFPO  WITH KEY AUFNR = V_AUFNR BINARY SEARCH.
    READ TABLE IT_MARA INTO WA_MARA  WITH KEY MATNR = WA_AFPO-MATNR BINARY SEARCH.
    READ TABLE IT_T001 INTO WA_T001  WITH KEY BUKRS = WA_COEP-BUKRS BINARY SEARCH.
    READ TABLE IT_T005 INTO WA_T005  WITH KEY LAND1 = WA_T001-LAND1 BINARY SEARCH.


    " Gerar uma linha para cada moeda

    " Primeira Moeda
    WA_RET_MOV_MENSAL_SLD_ACML-EMPRESA             = WA_COEP-BUKRS.
    WA_RET_MOV_MENSAL_SLD_ACML-EXERCICIO           = WA_COEP-GJAHR.
    WA_RET_MOV_MENSAL_SLD_ACML-MES_EXERCICIO       = WA_COEP-PERIO.
    WA_RET_MOV_MENSAL_SLD_ACML-CONTA_RAZAO         = WA_COEP-KSTAR.
    WA_RET_MOV_MENSAL_SLD_ACML-GRUPO_MERCADORIA    = WA_MARA-MATKL.
    WA_RET_MOV_MENSAL_SLD_ACML-MATERIAL            = WA_AFPO-MATNR.
    WA_RET_MOV_MENSAL_SLD_ACML-MOEDA               = WA_T001-WAERS.


    WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_COEP-WOGBTR.
    WA_RET_MOV_MENSAL_SLD_ACML-AREA_CONT_CUST      = WA_COEP-KOKRS.


    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.
    MOVE WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL TO WA_ZCOT0008-MOVIMENTACAO_MEN.
    MOVE-CORRESPONDING WA_RET_MOV_MENSAL_SLD_ACML TO WA_ZCOT0008.
    APPEND WA_ZCOT0008 TO IT_ZCOT0008.


    " 2º Moeda
    WA_RET_MOV_MENSAL_SLD_ACML-MOEDA               = 'USD'.
    WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_COEP-WKGBTR. " DOLAR


    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.
    MOVE WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL TO WA_ZCOT0008-MOVIMENTACAO_MEN.
    MOVE-CORRESPONDING WA_RET_MOV_MENSAL_SLD_ACML TO WA_ZCOT0008.
    APPEND WA_ZCOT0008 TO IT_ZCOT0008.

  ENDLOOP.

  " Agrupo os valores em cada conta correta por EMPRESA EXERCICIO MES_EXERCICIO CONTA_RAZAO GRUPO_MERCADORIA MOEDA MATERIAL.

  IT_ZCOT0008_AUX[] = IT_ZCOT0008[].

  SORT IT_ZCOT0008_AUX BY EMPRESA EXERCICIO MES_EXERCICIO CONTA_RAZAO GRUPO_MERCADORIA MOEDA MATERIAL.

  DELETE ADJACENT DUPLICATES FROM IT_ZCOT0008_AUX COMPARING EMPRESA EXERCICIO MES_EXERCICIO CONTA_RAZAO GRUPO_MERCADORIA MOEDA MATERIAL .


  DATA: VALOR_1 TYPE ZCOT0008-MOVIMENTACAO_MEN.


  LOOP AT IT_ZCOT0008_AUX INTO WA_ZCOT0008_AUX.

    VALOR_1 = 0.

    LOOP AT IT_ZCOT0008 INTO WA_ZCOT0008 WHERE EMPRESA EQ WA_ZCOT0008_AUX-EMPRESA AND EXERCICIO EQ WA_ZCOT0008_AUX-EXERCICIO
      AND MES_EXERCICIO EQ WA_ZCOT0008_AUX-MES_EXERCICIO AND CONTA_RAZAO EQ WA_ZCOT0008_AUX-CONTA_RAZAO AND
      GRUPO_MERCADORIA EQ WA_ZCOT0008_AUX-GRUPO_MERCADORIA AND  MOEDA EQ WA_ZCOT0008_AUX-MOEDA  AND MATERIAL EQ WA_ZCOT0008_AUX-MATERIAL  .


      VALOR_1 = VALOR_1 + WA_ZCOT0008-MOVIMENTACAO_MEN.


    ENDLOOP.

    WA_ZCOT0008_ACU-EMPRESA           = WA_ZCOT0008-EMPRESA .
    WA_ZCOT0008_ACU-EXERCICIO         = WA_ZCOT0008-EXERCICIO.
    WA_ZCOT0008_ACU-MES_EXERCICIO     = WA_ZCOT0008-MES_EXERCICIO .
    WA_ZCOT0008_ACU-CONTA_RAZAO       = WA_ZCOT0008-CONTA_RAZAO .
    WA_ZCOT0008_ACU-GRUPO_MERCADORIA  = WA_ZCOT0008-GRUPO_MERCADORIA.
    WA_ZCOT0008_ACU-MOEDA             = WA_ZCOT0008-MOEDA .
    WA_ZCOT0008_ACU-MATERIAL          = WA_ZCOT0008-MATERIAL.
    WA_ZCOT0008_ACU-MOVIMENTACAO_MEN  = VALOR_1.


    APPEND WA_ZCOT0008_ACU  TO IT_ZCOT0008_ACU.

    CLEAR: WA_ZCOT0008_ACU, WA_ZCOT0008.

  ENDLOOP.

  CLEAR IT_ZCOT0008.

  IT_ZCOT0008[] = IT_ZCOT0008_ACU.

  " Fim Agrupa

  LOOP AT IT_BSIS_FINAL INTO WA_BSIS_FINAL.

    CLEAR: WA_RET_MOV_MENSAL_SLD_ACML.

    WA_RET_MOV_MENSAL_SLD_ACML-EMPRESA             = WA_BSIS_FINAL-BUKRS.
    WA_RET_MOV_MENSAL_SLD_ACML-EXERCICIO           = WA_BSIS_FINAL-GJAHR.
    WA_RET_MOV_MENSAL_SLD_ACML-MES_EXERCICIO       = WA_BSIS_FINAL-MONAT.
    WA_RET_MOV_MENSAL_SLD_ACML-CONTA_RAZAO         = WA_BSIS_FINAL-HKONT.
    IF WA_BSIS-SHKZG = 'H'.
      WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_BSIS_FINAL-WRBTR * -1.  " REAL
    ELSE.
      WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_BSIS_FINAL-WRBTR.
    ENDIF.
    WA_RET_MOV_MENSAL_SLD_ACML-MOEDA                 = WA_BSIS_FINAL-WAERS.


    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.
    MOVE WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL TO WA_ZCOT0008-MOVIMENTACAO_MEN.
    MOVE-CORRESPONDING WA_RET_MOV_MENSAL_SLD_ACML TO WA_ZCOT0008.
    APPEND WA_ZCOT0008 TO IT_ZCOT0008.

    IF WA_BSIS-SHKZG = 'H'.
      WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_BSIS_FINAL-DMBE2 * -1. " DOLAR
    ELSE.
      WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_BSIS_FINAL-DMBE2.
    ENDIF.

    WA_RET_MOV_MENSAL_SLD_ACML-MOEDA               = 'USD'.

    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.
    MOVE WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL TO WA_ZCOT0008-MOVIMENTACAO_MEN.
    MOVE-CORRESPONDING WA_RET_MOV_MENSAL_SLD_ACML TO WA_ZCOT0008.
    APPEND WA_ZCOT0008 TO IT_ZCOT0008.

  ENDLOOP.

  " Salvo as informações na tabela.
  MODIFY ZCOT0008 FROM TABLE IT_ZCOT0008.

  COMMIT WORK.


  "Depois de salvar na tabela precisamos acumular os saldos por mes conta exercicio
  CLEAR : WA_ZCOT0008, IT_RET_MOV_MENSAL_SLD_ACML,  WA_RET_MOV_MENSAL_SLD_ACML,  IT_ZCOT0008_AUX, IT_ZCOT0008_ACU, WA_ZCOT0008_ACU.

  IT_ZCOT0008_ACU[] = IT_ZCOT0008[].

  CLEAR IT_ZCOT0008.

  LOOP AT IT_ZCOT0008_ACU INTO WA_ZCOT0008_ACU.

    WA_ZCOT0008-EMPRESA               = WA_ZCOT0008_ACU-EMPRESA.
    WA_ZCOT0008-EXERCICIO             = WA_ZCOT0008_ACU-EXERCICIO.
    WA_ZCOT0008-MES_EXERCICIO         = WA_ZCOT0008_ACU-MES_EXERCICIO.
    WA_ZCOT0008-CONTA_RAZAO           = WA_ZCOT0008_ACU-CONTA_RAZAO.
    WA_ZCOT0008-SOCIEDADE_PARCEI      = WA_ZCOT0008_ACU-SOCIEDADE_PARCEI.
    WA_ZCOT0008-CENTRO_CUSTO          = WA_ZCOT0008_ACU-CENTRO_CUSTO.
    WA_ZCOT0008-GRUPO_MERCADORIA      = WA_ZCOT0008_ACU-GRUPO_MERCADORIA.
    WA_ZCOT0008-MOEDA                 = WA_ZCOT0008_ACU-MOEDA.
    WA_ZCOT0008-MATERIAL              = WA_ZCOT0008_ACU-MATERIAL.
    WA_ZCOT0008-MOVIMENTACAO_MEN      = WA_ZCOT0008_ACU-MOVIMENTACAO_MEN.

    CLEAR: WA_ZCOT0008_ACU-SLD_ACL_MES.

    " Acumula a conta que esta no banco no perio e ano informado
    SELECT SUM( MOVIMENTACAO_MEN ) INTO WA_ZCOT0008_ACU-SLD_ACL_MES
    FROM ZCOT0008
    WHERE EMPRESA          EQ WA_ZCOT0008_ACU-EMPRESA
      AND EXERCICIO        EQ WA_ZCOT0008_ACU-EXERCICIO
      AND MES_EXERCICIO    LE WA_ZCOT0008_ACU-MES_EXERCICIO
      AND CONTA_RAZAO      EQ WA_ZCOT0008_ACU-CONTA_RAZAO
      AND GRUPO_MERCADORIA EQ WA_ZCOT0008_ACU-GRUPO_MERCADORIA
      AND MOEDA            EQ WA_ZCOT0008_ACU-MOEDA
      AND MATERIAL         EQ WA_ZCOT0008_ACU-MATERIAL.


    WA_ZCOT0008-SLD_ACL_MES     = WA_ZCOT0008_ACU-SLD_ACL_MES.
    WA_ZCOT0008-AREA_CONT_CUST  = WA_ZCOT0008_ACU-AREA_CONT_CUST.

    APPEND WA_ZCOT0008 TO IT_ZCOT0008.

  ENDLOOP.

  " Salvo o saldo na tabela.
  MODIFY ZCOT0008 FROM TABLE IT_ZCOT0008.

  COMMIT WORK.


  " Mando as informações para a tabela de saida
  CLEAR : WA_ZCOT0008, IT_RET_MOV_MENSAL_SLD_ACML,  WA_RET_MOV_MENSAL_SLD_ACML.

  LOOP AT IT_ZCOT0008 INTO WA_ZCOT0008.

    WA_RET_MOV_MENSAL_SLD_ACML-EMPRESA               = WA_ZCOT0008-EMPRESA.
    WA_RET_MOV_MENSAL_SLD_ACML-EXERCICIO             = WA_ZCOT0008-EXERCICIO.
    WA_RET_MOV_MENSAL_SLD_ACML-MES_EXERCICIO         = WA_ZCOT0008-MES_EXERCICIO.
    WA_RET_MOV_MENSAL_SLD_ACML-CONTA_RAZAO           = WA_ZCOT0008-CONTA_RAZAO.
    WA_RET_MOV_MENSAL_SLD_ACML-SOCIEDADE_PARCEIRA    = WA_ZCOT0008-SOCIEDADE_PARCEI.
    WA_RET_MOV_MENSAL_SLD_ACML-CENTRO_CUSTO          = WA_ZCOT0008-CENTRO_CUSTO.
    WA_RET_MOV_MENSAL_SLD_ACML-GRUPO_MERCADORIA      = WA_ZCOT0008-GRUPO_MERCADORIA.
    WA_RET_MOV_MENSAL_SLD_ACML-MOEDA                 = WA_ZCOT0008-MOEDA.
    WA_RET_MOV_MENSAL_SLD_ACML-MATERIAL              = WA_ZCOT0008-MATERIAL.
    WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL   = WA_ZCOT0008-MOVIMENTACAO_MEN.
    WA_RET_MOV_MENSAL_SLD_ACML-SLD_ACL_MES           = WA_ZCOT0008-SLD_ACL_MES.
    WA_RET_MOV_MENSAL_SLD_ACML-AREA_CONT_CUST        = WA_ZCOT0008-AREA_CONT_CUST.

    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.

  ENDLOOP.


  SORT IT_RET_MOV_MENSAL_SLD_ACML BY EXERCICIO MES_EXERCICIO.


  CLEAR: IT_COAS, WA_COAS, IT_SETLEAF, WA_SETLEAF, IT_BSIS, WA_BSIS, IT_BSIS_AUX, WA_BSIS_AUX, IT_AFPO,
         WA_AFPO, IT_MARA, WA_MARA, IT_T001, WA_T001, IT_TKA02, WA_TKA02, IT_T005, WA_T005, IT_COEP, WA_COEP, WA_RET_MOV_MENSAL_SLD_ACML, IT_BSIS_FINAL,
         WA_BSIS_FINAL.





*  LOOP AT IT_BSIS INTO WA_BSIS.
*
*    READ TABLE IT_AFPO INTO WA_AFPO WITH KEY AUFNR = WA_COAS-AUFNR BINARY SEARCH.
*    READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_AFPO-MATNR BINARY SEARCH.
*    READ TABLE IT_COAS INTO WA_COAS WITH KEY AUFNR = WA_BSIS-AUFNR BINARY SEARCH.
*    IF SY-SUBRC NE 0.
*      CONTINUE.
*    ENDIF.
*    " PEGA PERIODO ANTERIOR
*    IF WA_BSIS-MONAT = 1.
*      VMONAT = 12.
*      VGJAHR = WA_BSIS-GJAHR - 1.
*    ELSE.
*      VMONAT = WA_BSIS-MONAT - 1.
*      VGJAHR = WA_BSIS-GJAHR.
*    ENDIF.
*    READ TABLE IT_T001  INTO WA_T001  WITH KEY BUKRS = WA_BSIS-BUKRS BINARY SEARCH.
*    READ TABLE IT_T005  INTO WA_T005  WITH KEY LAND1 = WA_T001-LAND1 BINARY SEARCH.
*    READ TABLE IT_TKA02 INTO WA_TKA02 WITH KEY BUKRS = WA_BSIS-BUKRS BINARY SEARCH.
*
*    "Tem que gerar uma linha para cada moeda
*
*    "1º Moeda
*    READ TABLE IT_ZCOT0008_AUX INTO WA_ZCOT0008_AUX  WITH KEY  EMPRESA         = WA_BSIS-BUKRS
*                                                               EXERCICIO       = VGJAHR
*                                                               MES_EXERCICIO   = VMONAT
*                                                               MOEDA           = WA_BSIS-WAERS BINARY SEARCH.
*    IF SY-SUBRC = 0.
*      V_SALDO = WA_ZCOT0008_AUX-SLD_ACL_MES.
*    ELSE.
*      V_SALDO = 0.
*    ENDIF.
*  WA_RET_MOV_MENSAL_SLD_ACML-EMPRESA             = WA_BSIS-BUKRS.
*  WA_RET_MOV_MENSAL_SLD_ACML-EXERCICIO           = WA_BSIS-GJAHR.
*  WA_RET_MOV_MENSAL_SLD_ACML-MES_EXERCICIO       = WA_BSIS-MONAT.
*  WA_RET_MOV_MENSAL_SLD_ACML-CONTA_RAZAO         = WA_BSIS-HKONT.
*    WA_RET_MOV_MENSAL_SLD_ACML-SOCIEDADE_PARCEIRA  = WA_BSIS-VBUND.
*    WA_RET_MOV_MENSAL_SLD_ACML-CENTRO_CUSTO        = WA_BSIS-KOSTL.
**   WA_RET_MOV_MENSAL_SLD_ACML-GRUPO_MERCADORIA    = WA_MARA-MATKL.
**    WA_RET_MOV_MENSAL_SLD_ACML-MATERIAL            = WA_AFPO-MATNR.
*  WA_RET_MOV_MENSAL_SLD_ACML-MOEDA               = WA_BSIS-WAERS.
*  WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_BSIS-WRBTR. " REAL
**    WA_RET_MOV_MENSAL_SLD_ACML-SLD_ACL_MES         = V_SALDO.
*  "   WA_RET_MOV_MENSAL_SLD_ACML-AREA_CONT_CUST      = WA_TKA02-KOKRS.

*
*    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.
*    MOVE-CORRESPONDING WA_RET_MOV_MENSAL_SLD_ACML TO WA_ZCOT0008.
*    MOVE WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL TO WA_ZCOT0008-MOVIMENTACAO_MEN.
*    READ TABLE IT_ZCOT0008     INTO WA_ZCOT0008_AUX  WITH KEY EMPRESA               = WA_BSIS-BUKRS
*                                                              EXERCICIO             = WA_BSIS-GJAHR
*                                                              MES_EXERCICIO         = WA_BSIS-MONAT
*                                                              MOEDA                 = WA_BSIS-WAERS   BINARY SEARCH.
*    IF SY-SUBRC NE 0.
*      APPEND WA_ZCOT0008 TO IT_ZCOT0008.
*    ELSE.
*      ADD WA_ZCOT0008_AUX-MOVIMENTACAO_MEN TO WA_ZCOT0008-MOVIMENTACAO_MEN.
*      MODIFY IT_ZCOT0008 INDEX SY-TABIX FROM WA_ZCOT0008 TRANSPORTING MOVIMENTACAO_MEN.
*    ENDIF.
*
*    "2º Moeda
*    READ TABLE IT_ZCOT0008_AUX INTO WA_ZCOT0008_AUX  WITH KEY  EMPRESA         = WA_BSIS-BUKRS
*                                                               EXERCICIO       = VGJAHR
*                                                               MES_EXERCICIO   = VMONAT
*                                                               MOEDA           = WA_T005-CURHA BINARY SEARCH.
*    IF SY-SUBRC = 0.
*      V_SALDO = WA_ZCOT0008_AUX-SLD_ACL_MES.
*    ELSE.
*      V_SALDO = 0.
*    ENDIF.
*    WA_RET_MOV_MENSAL_SLD_ACML-EMPRESA             = WA_BSIS-BUKRS.
*    WA_RET_MOV_MENSAL_SLD_ACML-EXERCICIO           = WA_BSIS-GJAHR.
*    WA_RET_MOV_MENSAL_SLD_ACML-MES_EXERCICIO       = WA_BSIS-MONAT.
*    WA_RET_MOV_MENSAL_SLD_ACML-CONTA_RAZAO         = WA_BSIS-HKONT.
*    WA_RET_MOV_MENSAL_SLD_ACML-SOCIEDADE_PARCEIRA  = WA_BSIS-VBUND.
*    WA_RET_MOV_MENSAL_SLD_ACML-CENTRO_CUSTO        = WA_BSIS-KOSTL.
*    WA_RET_MOV_MENSAL_SLD_ACML-GRUPO_MERCADORIA    = WA_MARA-MATKL.
*    WA_RET_MOV_MENSAL_SLD_ACML-MATERIAL            = WA_AFPO-MATNR.
*    WA_RET_MOV_MENSAL_SLD_ACML-MOEDA               = WA_T005-CURHA.
*    WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_BSIS-DMBE2. " DOLAR
*    WA_RET_MOV_MENSAL_SLD_ACML-SLD_ACL_MES         = V_SALDO.
*    WA_RET_MOV_MENSAL_SLD_ACML-AREA_CONT_CUST      = WA_TKA02-KOKRS.
*
*    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.
*    MOVE-CORRESPONDING WA_RET_MOV_MENSAL_SLD_ACML TO WA_ZCOT0008.
*    MOVE WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL TO WA_ZCOT0008-MOVIMENTACAO_MEN.
*    READ TABLE IT_ZCOT0008     INTO WA_ZCOT0008_AUX  WITH KEY EMPRESA               = WA_BSIS-BUKRS
*                                                              EXERCICIO             = WA_BSIS-GJAHR
*                                                              MES_EXERCICIO         = WA_BSIS-MONAT
*                                                              MOEDA                 = WA_T005-CURHA BINARY SEARCH.
*    IF SY-SUBRC NE 0.
*      APPEND WA_ZCOT0008 TO IT_ZCOT0008.
*    ELSE.
*      ADD WA_ZCOT0008_AUX-MOVIMENTACAO_MEN TO WA_ZCOT0008-MOVIMENTACAO_MEN.
*      MODIFY IT_ZCOT0008 INDEX SY-TABIX FROM WA_ZCOT0008 TRANSPORTING MOVIMENTACAO_MEN.
*    ENDIF.
*
*    "--3º  Moeda
*    READ TABLE IT_ZCOT0008_AUX INTO WA_ZCOT0008_AUX  WITH KEY  EMPRESA         = WA_BSIS-BUKRS
*                                                               EXERCICIO       = VGJAHR
*                                                               MES_EXERCICIO   = VMONAT
*                                                               MOEDA           = WA_T005-CURIN BINARY SEARCH.
*    IF SY-SUBRC = 0.
*      V_SALDO = WA_ZCOT0008_AUX-SLD_ACL_MES.
*    ELSE.
*      V_SALDO = 0.
*    ENDIF.
*    WA_RET_MOV_MENSAL_SLD_ACML-EMPRESA             = WA_BSIS-BUKRS.
*    WA_RET_MOV_MENSAL_SLD_ACML-EXERCICIO           = WA_BSIS-GJAHR.
*    WA_RET_MOV_MENSAL_SLD_ACML-MES_EXERCICIO       = WA_BSIS-MONAT.
*    WA_RET_MOV_MENSAL_SLD_ACML-CONTA_RAZAO         = WA_BSIS-HKONT.
*    WA_RET_MOV_MENSAL_SLD_ACML-SOCIEDADE_PARCEIRA  = WA_BSIS-VBUND.
*    WA_RET_MOV_MENSAL_SLD_ACML-CENTRO_CUSTO        = WA_BSIS-KOSTL.
*    WA_RET_MOV_MENSAL_SLD_ACML-GRUPO_MERCADORIA    = WA_MARA-MATKL.
*    WA_RET_MOV_MENSAL_SLD_ACML-MATERIAL            = WA_AFPO-MATNR.
*    WA_RET_MOV_MENSAL_SLD_ACML-MOEDA               = WA_T005-CURIN.
*    WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL = WA_BSIS-DMBE3. " PESO
*    WA_RET_MOV_MENSAL_SLD_ACML-SLD_ACL_MES         = V_SALDO.
*    WA_RET_MOV_MENSAL_SLD_ACML-AREA_CONT_CUST      = WA_TKA02-KOKRS.
*
*    APPEND WA_RET_MOV_MENSAL_SLD_ACML TO IT_RET_MOV_MENSAL_SLD_ACML.
*    MOVE-CORRESPONDING WA_RET_MOV_MENSAL_SLD_ACML TO WA_ZCOT0008.
*    MOVE WA_RET_MOV_MENSAL_SLD_ACML-MOVIMENTACAO_MENSAL TO WA_ZCOT0008-MOVIMENTACAO_MEN.
*    READ TABLE IT_ZCOT0008     INTO WA_ZCOT0008_AUX  WITH KEY EMPRESA               = WA_BSIS-BUKRS
*                                                              EXERCICIO             = WA_BSIS-GJAHR
*                                                              MES_EXERCICIO         = WA_BSIS-MONAT
*                                                              MOEDA                 = WA_T005-CURIN  BINARY SEARCH.
*    IF SY-SUBRC NE 0.
*      APPEND WA_ZCOT0008 TO IT_ZCOT0008.
*    ELSE.
*      ADD WA_ZCOT0008_AUX-MOVIMENTACAO_MEN TO WA_ZCOT0008-MOVIMENTACAO_MEN.
*      MODIFY IT_ZCOT0008 INDEX SY-TABIX FROM WA_ZCOT0008 TRANSPORTING MOVIMENTACAO_MEN.
*    ENDIF.
*
*  ENDLOOP.
*
*  " TABELA PARA ACUMULAR SALDOS
*  IT_ZCOT0008_ACU[] = IT_ZCOT0008[].
*  SORT IT_ZCOT0008_ACU BY EMPRESA EXERCICIO MES_EXERCICIO MOEDA.
*  DELETE ADJACENT DUPLICATES FROM IT_ZCOT0008_ACU COMPARING EMPRESA EXERCICIO MES_EXERCICIO MOEDA.
*
*  " ACUMULA SALDO SOMENTE DO POR MES (ZERAR INICIALMENTE)
*  LOOP AT IT_ZCOT0008_ACU INTO WA_ZCOT0008_ACU.
*    WA_ZCOT0008_ACU-SLD_ACL_MES = 0.
*    MODIFY IT_ZCOT0008_ACU INDEX SY-TABIX FROM WA_ZCOT0008_ACU TRANSPORTING SLD_ACL_MES.
*  ENDLOOP.
*
*  " ACUMULAR MOVIMENTO POR EMPRESA/EXERCICIO/MES/MOEDA
*  LOOP AT IT_ZCOT0008 INTO WA_ZCOT0008.
*    READ TABLE IT_ZCOT0008_ACU INTO WA_ZCOT0008_ACU WITH KEY  EMPRESA         = WA_ZCOT0008-EMPRESA
*                                                              EXERCICIO       = WA_ZCOT0008-EXERCICIO
*                                                              MES_EXERCICIO   = WA_ZCOT0008-MES_EXERCICIO
*                                                              MOEDA           = WA_ZCOT0008-MOEDA.
*    IF SY-SUBRC = 0.
*      ADD WA_ZCOT0008-MOVIMENTACAO_MEN TO WA_ZCOT0008_ACU-SLD_ACL_MES.
*      MODIFY IT_ZCOT0008_ACU INDEX SY-TABIX FROM WA_ZCOT0008_ACU TRANSPORTING SLD_ACL_MES.
*    ENDIF.
*  ENDLOOP.
*  " ADICIONAR O ACUMULADO DO MES NO ACUMULADO DO MES ANTERIOR E ATUALIZAR MES ATUAL
*  LOOP AT IT_ZCOT0008 INTO WA_ZCOT0008.
*    VTABIX = SY-TABIX.
*    READ TABLE IT_ZCOT0008_ACU INTO WA_ZCOT0008_ACU WITH KEY EMPRESA        = WA_ZCOT0008-EMPRESA
*                                                            EXERCICIO       = WA_ZCOT0008-EXERCICIO
*                                                            MES_EXERCICIO   = WA_ZCOT0008-MES_EXERCICIO
*                                                            MOEDA           = WA_ZCOT0008-MOEDA.
*    IF SY-SUBRC = 0.
*      ADD  WA_ZCOT0008_ACU-SLD_ACL_MES TO WA_ZCOT0008-SLD_ACL_MES.
*      MODIFY IT_ZCOT0008 INDEX VTABIX FROM WA_ZCOT0008 TRANSPORTING SLD_ACL_MES.
*    ENDIF.
*  ENDLOOP.
ENDFORM.                    " ZPROCESSA_RETORNO_MOV_SLD_ACML
