*&---------------------------------------------------------------------*
*& Report  ZSDR0105
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZSDR0105.

TYPES: BEGIN OF TY_BUKRS_PROC,
          BUKRS TYPE T001-BUKRS,
       END OF TY_BUKRS_PROC.

TYPES: BEGIN OF TY_NFE_CONSULTAR,
         DOCNUM TYPE J_1BNFDOC-DOCNUM,
         DOCDAT TYPE J_1BNFDOC-DOCDAT,
         CHAVE  TYPE C LENGTH 44,
       END OF TY_NFE_CONSULTAR.

DATA: TG_BUKRS_PROC    TYPE TABLE OF TY_BUKRS_PROC    WITH HEADER LINE,
      TG_NFE_CONSULTAR TYPE TABLE OF TY_NFE_CONSULTAR WITH HEADER LINE,

      WL_RETORNO_PROC  TYPE ZDE_RETORNO_PROC,
      IT_RETORNO_PROC  TYPE ZDE_RETORNO_PROC_T.


SELECTION-SCREEN: BEGIN OF BLOCK B1 WITH FRAME.
PARAMETERS: P_EXEC TYPE C.
SELECTION-SCREEN: END OF BLOCK B1.

START-OF-SELECTION.

  SELECT SINGLE COUNT( * ) INTO @DATA(WL_TBTCO)
    FROM TBTCO
   WHERE JOBNAME EQ 'ZSDR0105_JOB'
     AND STATUS  EQ 'R'.

  IF ( WL_TBTCO EQ 1 ) OR ( P_EXEC EQ ABAP_TRUE ).

    PERFORM: F_START_PROC,
             F_SELECIONAR_NFE_SAIDA,
             F_CONSULTAR_RECEPCAO.
  ENDIF.


FORM F_START_PROC.

  CLEAR: TG_BUKRS_PROC[],
         TG_NFE_CONSULTAR[],
         IT_RETORNO_PROC[].

  TG_BUKRS_PROC-BUKRS = '0001'.
  APPEND TG_BUKRS_PROC.

  TG_BUKRS_PROC-BUKRS = '0015'.
  APPEND TG_BUKRS_PROC.

  TG_BUKRS_PROC-BUKRS = '0035'.
  APPEND TG_BUKRS_PROC.


ENDFORM.

FORM F_SELECIONAR_NFE_SAIDA.


*  TRY.
*      EXEC SQL.
*        OPEN DOCUMENTOS FOR
*          SELECT BUKRS, LIFNR, UMSKS, UMSKZ, ZUONR, GJAHR, BELNR, BUZEI, SWAER, GSBER, BSCHL, SHKZG,
*                 ZLSCH, ZLSPR, HKONT, SGTXT, HBKID, ZFBDT, ZBD1T, DMBTR, DMBE2
*            FROM SAPHANADB.VBSEGK
*           WHERE MANDT = :SY-MANDT
*             AND TRIM(ZFBDT) IS NOT NULL
*             AND TRIM(ZFBDT) <> '00000000'
*             AND ( TO_DATE(ZFBDT,'YYYYMMDD' ) + COALESCE(ZBD1T,0) ) BETWEEN  TRUNC(SYSDATE) AND TRUNC(SYSDATE + 30)
*             AND BUKRS = :TG_BUKRS
*             AND SHKZG = 'H'
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*    ENDTRY.
*
*    DO.
*      EXEC SQL.
*        FETCH NEXT DOCUMENTOS INTO
*        :TG_VBSEGK-BUKRS,
*        :TG_VBSEGK-LIFNR,
*        :TG_VBSEGK-UMSKS,
*        :TG_VBSEGK-UMSKZ,
*        :TG_VBSEGK-ZUONR,
*        :TG_VBSEGK-GJAHR,
*        :TG_VBSEGK-BELNR,
*        :TG_VBSEGK-BUZEI,
*        :TG_VBSEGK-SWAER,
*        :TG_VBSEGK-GSBER,
*        :TG_VBSEGK-BSCHL,
*        :TG_VBSEGK-SHKZG,
*        :TG_VBSEGK-ZLSCH,
*        :TG_VBSEGK-ZLSPR,
*        :TG_VBSEGK-HKONT,
*        :TG_VBSEGK-SGTXT,
*        :TG_VBSEGK-HBKID,
*        :TG_VBSEGK-ZFBDT,
*        :TG_VBSEGK-ZBD1T,
*        :TG_VBSEGK-DMBTR,
*        :TG_VBSEGK-DMBE2.
*      ENDEXEC.
*      IF SY-SUBRC <> 0.
*        EXIT.
*      ELSE.
*        APPEND TG_VBSEGK.
*        CLEAR: TG_VBSEGK.
*      ENDIF.
*    ENDDO.
*
*    EXEC SQL.
*      CLOSE DOCUMENTOS
*    ENDEXEC.
*
*

   TG_NFE_CONSULTAR-CHAVE = '51180577294254001166550000001561717291835733'.
   APPEND TG_NFE_CONSULTAR.

   TG_NFE_CONSULTAR-CHAVE = '51180577294254001166550000001561721107560207'.
   APPEND TG_NFE_CONSULTAR.


ENDFORM.


FORM F_CONSULTAR_RECEPCAO.

  DATA: WL_ESTOQUE_NF_CCT_JS    TYPE ZDE_ESTOQUE_NF_CCT_JS.

  DATA: T_NFE_CONS              TYPE ZDE_CHAVE_DOC_E_T,
        WL_NFE_CONS             TYPE ZDE_CHAVE_DOC_E,
        ZCL_CCT_RECEPCAO_CARGA  TYPE REF TO ZCL_CCT_RECEPCAO_CARGA,
        ZCL_TOKEN_SISCOMEX_0001 TYPE REF TO ZCL_TOKEN_SISCOMEX.

  CHECK TG_NFE_CONSULTAR[] IS NOT INITIAL.

*---------------------------------------------------------------*
* Autenticar no Portal
*---------------------------------------------------------------*

  FREE ZCL_TOKEN_SISCOMEX_0001.
  CREATE OBJECT ZCL_TOKEN_SISCOMEX_0001.

  ZCL_TOKEN_SISCOMEX_0001->ZIF_CADASTRO~NOVO_REGISTRO( ).
  ZCL_TOKEN_SISCOMEX_0001->SET_BUKRS( '0001' ).
  ZCL_TOKEN_SISCOMEX_0001->SET_ROLE_TYPE( 'IMPEXP' ). "Declarante importador/exportador
  ZCL_TOKEN_SISCOMEX_0001->ZIF_CADASTRO~GRAVAR_REGISTRO( RECEIVING I_GRAVOU = DATA(_GRAVOU) ).
  CHECK _GRAVOU EQ ABAP_TRUE.

  CLEAR: T_NFE_CONS[].
  LOOP AT TG_NFE_CONSULTAR.

    DATA(_TABIX) = SY-TABIX.

    WL_NFE_CONS = TG_NFE_CONSULTAR-CHAVE.
    APPEND WL_NFE_CONS TO T_NFE_CONS.

       "Consultar em lotes de 100 notas            "Ultima Nota
    IF ( LINES( T_NFE_CONS[] ) EQ 100 ) OR ( _TABIX EQ LINES( TG_NFE_CONSULTAR[] ) )  .

      FREE ZCL_CCT_RECEPCAO_CARGA.
      CREATE OBJECT ZCL_CCT_RECEPCAO_CARGA.

      ZCL_CCT_RECEPCAO_CARGA->SET_TOKEN( ZCL_TOKEN_SISCOMEX_0001 ).

      TRY.
        ZCL_CCT_RECEPCAO_CARGA->CONSULTAR_ESTOQUE_PRE_ACD(
          EXPORTING
            I_CHAVES_NFE        = T_NFE_CONS
          IMPORTING
            E_ESTOQUE_NF_CCT_JS = WL_ESTOQUE_NF_CCT_JS
        ).

        CLEAR: T_NFE_CONS[].

        PERFORM F_PROCESSAR_RETORNO_CONSULTA USING WL_ESTOQUE_NF_CCT_JS.

      CATCH ZCX_CCT INTO DATA(EX_CCT).
        EX_CCT->PUBLISHED_ERRO( EXPORTING I_MSGTY = 'S' I_MSGTY_DISPLAY = 'E' ).
      ENDTRY.

    ENDIF.

  ENDLOOP.

ENDFORM.

FORM F_PROCESSAR_RETORNO_CONSULTA USING P_ESTOQUE_NFE_CCT  TYPE ZDE_ESTOQUE_NF_CCT_JS.

  DATA: ZCL_CCT_RECEPCAO_CARGA TYPE REF TO ZCL_CCT_RECEPCAO_CARGA.

  DATA:  WL_ZLEST0146         TYPE ZLEST0146,
         WL_ZLEST0147         TYPE ZLEST0147,
         IT_ZLEST0168         TYPE ZLEST0168_T.

  DATA: V_VALOR_AUX      TYPE C LENGTH 255,
        V_VALOR_C13      TYPE C LENGTH 13,
        V_RETORNO_PROC   TYPE ZDE_RETORNO_PROC.

  LOOP AT P_ESTOQUE_NFE_CCT-ESTOQUENOTASFISCAIS INTO DATA(WL_ESTOQUE_NF).

    CLEAR: WL_ZLEST0146, WL_ZLEST0147, IT_ZLEST0168[], WL_RETORNO_PROC.

    READ TABLE TG_NFE_CONSULTAR WITH KEY CHAVE = WL_ESTOQUE_NF-NUMERO.
    CHECK SY-SUBRC EQ 0.

*----------------------------------------------------------------------------------------*
*   Cabeçalho Recepção
*----------------------------------------------------------------------------------------*
    CALL FUNCTION 'NUMBER_GET_NEXT'
      EXPORTING
        NR_RANGE_NR             = '01'
        OBJECT                  = 'ZCCT_RCC'
      IMPORTING
        NUMBER                  = WL_ZLEST0146-ID_RECEPCAO
      EXCEPTIONS
        INTERVAL_NOT_FOUND      = 1
        NUMBER_RANGE_NOT_INTERN = 2
        OBJECT_NOT_FOUND        = 3
        QUANTITY_IS_0           = 4
        QUANTITY_IS_NOT_1       = 5
        INTERVAL_OVERFLOW       = 6
        BUFFER_OVERFLOW         = 7
        OTHERS                  = 8.

    IF ( SY-SUBRC NE 0 ) OR ( WL_ZLEST0146-ID_RECEPCAO IS INITIAL ).
      RETURN.
    ENDIF.

    WL_ZLEST0146-TP_RECEPCAO               = '1'.  "NF-e
    WL_ZLEST0146-STATUS                    = '1'.
    WL_ZLEST0146-CNPJ_RESPONSAVEL          = WL_ESTOQUE_NF-RESPONSAVEL.
    WL_ZLEST0146-LOCAL_CODIGO_URF          = WL_ESTOQUE_NF-URF.
    WL_ZLEST0146-LOCAL_CODIGO_RA           = WL_ESTOQUE_NF-RECINTO.
    WL_ZLEST0146-LOCAL_LATITUDE            = WL_ESTOQUE_NF-LATITUDE.
    WL_ZLEST0146-LOCAL_LONGITUDE           = WL_ESTOQUE_NF-LONGITUDE.

    LOOP AT WL_ESTOQUE_NF-ITENS INTO DATA(WL_ITEM).
      WL_ZLEST0146-PESO_AFERIDO_RECEPCAO  = WL_ITEM-SALDO.
    ENDLOOP.

    V_VALOR_AUX = WL_ESTOQUE_NF-REGISTRO(10).
    REPLACE ALL OCCURRENCES OF '-' IN V_VALOR_AUX WITH ''.
    WL_ZLEST0146-DT_RECEPCAO               = V_VALOR_AUX.

    WL_ZLEST0146-DT_IMPORTACAO             = SY-DATUM.
    WL_ZLEST0146-HR_IMPORTACAO             = SY-UZEIT.
    WL_ZLEST0146-US_IMPORTACAO             = SY-UNAME.
    WL_ZLEST0146-IMPORTADO_AUTO            = ABAP_TRUE.

*-----------------------------------------------------------------------------------------*
*   Nota Fiscal
*-----------------------------------------------------------------------------------------*
    WL_ZLEST0147-CHAVE_NFE                 = WL_ESTOQUE_NF-NUMERO.
    WL_ZLEST0147-REGIO                     = WL_ZLEST0147-CHAVE_NFE(2).
    WL_ZLEST0147-NFYEAR                    = WL_ZLEST0147-CHAVE_NFE+02(02).
    WL_ZLEST0147-NFMONTH                   = WL_ZLEST0147-CHAVE_NFE+04(02).
    WL_ZLEST0147-EMISSOR_CNPJ              = WL_ZLEST0147-CHAVE_NFE+06(14).
    WL_ZLEST0147-MODEL                     = WL_ZLEST0147-CHAVE_NFE+20(02).
    WL_ZLEST0147-SERIE                     = WL_ZLEST0147-CHAVE_NFE+22(03).
    WL_ZLEST0147-NFNUM9                    = WL_ZLEST0147-CHAVE_NFE+25(09).
    WL_ZLEST0147-DOCNUM9                   = WL_ZLEST0147-CHAVE_NFE+34(9).
    WL_ZLEST0147-CDV                       = WL_ZLEST0147-CHAVE_NFE+43(1).
    WL_ZLEST0147-DOCNUM                    = TG_NFE_CONSULTAR-DOCNUM.

    PERFORM F_GET_SIGLA_UF USING WL_ZLEST0147-CHAVE_NFE(2)
                        CHANGING WL_ZLEST0147-SIGLA_UF_EMISSOR.

    WL_ZLEST0147-DT_EMISSAO                = TG_NFE_CONSULTAR-DOCDAT.

    FREE ZCL_CCT_RECEPCAO_CARGA.
    CREATE OBJECT ZCL_CCT_RECEPCAO_CARGA.

    ZCL_CCT_RECEPCAO_CARGA->GERAR_RECEPCAO(
      EXPORTING
        I_ZLEST0146    =  WL_ZLEST0146
        I_ZLEST0147    =  WL_ZLEST0147
      RECEIVING
        R_RETORNO_PROC =  V_RETORNO_PROC ).

  ENDLOOP.


ENDFORM.


FORM F_GET_SIGLA_UF USING P_CODIGO_UF
                 CHANGING C_SIGLA_UF.

  CASE P_CODIGO_UF.
    WHEN '11'. C_SIGLA_UF =  'RO'.
    WHEN '12'. C_SIGLA_UF =  'AC'.
    WHEN '13'. C_SIGLA_UF =  'AM'.
    WHEN '14'. C_SIGLA_UF =  'RR'.
    WHEN '15'. C_SIGLA_UF =  'PA'.
    WHEN '16'. C_SIGLA_UF =  'AP'.
    WHEN '17'. C_SIGLA_UF =  'TO'.
    WHEN '21'. C_SIGLA_UF =  'MA'.
    WHEN '22'. C_SIGLA_UF =  'PI'.
    WHEN '23'. C_SIGLA_UF =  'CE'.
    WHEN '24'. C_SIGLA_UF =  'RN'.
    WHEN '25'. C_SIGLA_UF =  'PB'.
    WHEN '26'. C_SIGLA_UF =  'PE'.
    WHEN '27'. C_SIGLA_UF =  'AL'.
    WHEN '28'. C_SIGLA_UF =  'SE'.
    WHEN '29'. C_SIGLA_UF =  'BA'.
    WHEN '31'. C_SIGLA_UF =  'MG'.
    WHEN '32'. C_SIGLA_UF =  'ES'.
    WHEN '33'. C_SIGLA_UF =  'RJ'.
    WHEN '35'. C_SIGLA_UF =  'SP'.
    WHEN '41'. C_SIGLA_UF =  'PR'.
    WHEN '42'. C_SIGLA_UF =  'SC'.
    WHEN '43'. C_SIGLA_UF =  'RS'.
    WHEN '50'. C_SIGLA_UF =  'MS'.
    WHEN '51'. C_SIGLA_UF =  'MT'.
    WHEN '52'. C_SIGLA_UF =  'GO'.
    WHEN '53'. C_SIGLA_UF =  'DF'.
  ENDCASE.

  C_SIGLA_UF = 'BR' && '-' && C_SIGLA_UF.

ENDFORM.
