*----------------------------------------------------------------------*
***INCLUDE ZSDR0040O01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  DATA: FCODE         TYPE TABLE OF SY-UCOMM,
        LVR_TITLE(50) TYPE C.

  REFRESH: FCODE.
  SET PF-STATUS 'Z001' EXCLUDING FCODE.
  CALL METHOD CL_GUI_CFW=>DISPATCH.

  IF P_TP_OV IS NOT INITIAL.
    LVR_TITLE = 'Determinação Tipo OV'.
  ELSE.
    LVR_TITLE = 'Determinar Tipo de Frete'.
  ENDIF.

  SET TITLEBAR '0100' WITH LVR_TITLE.

ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  CRIA_OBJETOS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CRIA_OBJETOS OUTPUT.
  DATA: EVENT       TYPE CNTL_SIMPLE_EVENT,
        EVENTS      TYPE CNTL_SIMPLE_EVENTS,
        TL_FILTER   TYPE LVC_T_FILT,
        WL_FILTER   TYPE LVC_S_FILT,
        TL_FUNCTION TYPE UI_FUNCTIONS,
        WL_FUNCTION LIKE TL_FUNCTION WITH HEADER LINE,
        LT_F4       TYPE LVC_T_F4     WITH HEADER LINE.

  DATA: WAREF      TYPE REF TO DATA.


  PERFORM FM_BUSCA_DADOS.

  PERFORM MONTAR_LAYOUT.


  WA_LAYOUT-ZEBRA        = C_X.
  WA_LAYOUT-NO_ROWMARK   = SPACE.
  WA_STABLE-ROW          = C_X.
  WA_LAYOUT-SEL_MODE     = 'A'.
  WA_LAYOUT-CWIDTH_OPT   = 'X'.
  WA_LAYOUT-BOX_FNAME    = 'MARK'.

  GS_VARIANT_C-REPORT = SY-REPID. "Enable users save own LAYOUTs


  IF P_TP_OV IS NOT INITIAL.

    IF G_CUSTOM_CONTAINER IS INITIAL.

      CREATE OBJECT G_CUSTOM_CONTAINER
        EXPORTING
          CONTAINER_NAME = G_CONTAINER.

      CREATE OBJECT SPLITTER
        EXPORTING
          PARENT  = G_CUSTOM_CONTAINER
          ROWS    = 2
          COLUMNS = 1.

      CALL METHOD SPLITTER->GET_CONTAINER
        EXPORTING
          ROW       = 1
          COLUMN    = 1
        RECEIVING
          CONTAINER = CONTAINER_1.

      CREATE OBJECT GRID1
        EXPORTING
          I_PARENT = CONTAINER_1.


      PERFORM BUILD_DROPDOWN.

      CREATE OBJECT OBG_TOOLBAR
        EXPORTING
          IO_ALV_GRID = GRID1.

*      * Register event handler
      SET HANDLER OBG_TOOLBAR->ON_TOOLBAR FOR GRID1.
      SET HANDLER OBG_TOOLBAR->HANDLE_USER_COMMAND FOR GRID1.

      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_CHECK.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
      APPEND WL_FUNCTION TO TL_FUNCTION.

      "PERFORM FM_BUSCA_DADOS.


      CALL METHOD GRID1->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
          IS_VARIANT           = GS_VARIANT_C
          IT_TOOLBAR_EXCLUDING = TL_FUNCTION
          IS_LAYOUT            = WA_LAYOUT
          "I_DEFAULT       = 'X'
        CHANGING
          IT_FIELDCATALOG      = T_FIELDCATALOG[]
          IT_OUTTAB            = TG_ITENS[].



      CALL METHOD GRID1->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

      CALL METHOD GRID1->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.



      SET HANDLER:  LCL_EVENT_HANDLER=>ON_DATA_CHANGED_FINISHED FOR GRID1.

*    posiciona spliter na altura x
      CALL METHOD SPLITTER->SET_ROW_HEIGHT
        EXPORTING
          ID     = 1
          HEIGHT = 100.

      CALL METHOD GRID1->SET_FRONTEND_FIELDCATALOG
        EXPORTING
          IT_FIELDCATALOG = T_FIELDCATALOG[].

      CALL METHOD GRID1->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    ELSE.

      SORT TG_ITENS BY  MATKL TPSIM AUART.

      CALL METHOD GRID1->SET_FRONTEND_FIELDCATALOG
        EXPORTING
          IT_FIELDCATALOG = T_FIELDCATALOG[].

      CALL METHOD GRID1->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    ENDIF.


  ELSE.


    IF G_CUSTOM_CONTAINER2 IS INITIAL.

      CREATE OBJECT G_CUSTOM_CONTAINER2
        EXPORTING
          CONTAINER_NAME = G_CONTAINER.

      CREATE OBJECT SPLITTER2
        EXPORTING
          PARENT  = G_CUSTOM_CONTAINER2
          ROWS    = 2
          COLUMNS = 1.

      CALL METHOD SPLITTER2->GET_CONTAINER
        EXPORTING
          ROW       = 1
          COLUMN    = 1
        RECEIVING
          CONTAINER = CONTAINER_2.

      CREATE OBJECT GRID2
        EXPORTING
          I_PARENT = CONTAINER_2.

      PERFORM BUILD_DROPDOWN.

      CREATE OBJECT OBG_TOOLBAR
        EXPORTING
          IO_ALV_GRID = GRID2.

*      * Register event handler
      SET HANDLER OBG_TOOLBAR->ON_TOOLBAR FOR GRID2.
      SET HANDLER OBG_TOOLBAR->HANDLE_USER_COMMAND FOR GRID2.

      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_CHECK.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
      APPEND WL_FUNCTION TO TL_FUNCTION.


      CALL METHOD GRID2->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
          IS_VARIANT           = GS_VARIANT_C
          IT_TOOLBAR_EXCLUDING = TL_FUNCTION
          IS_LAYOUT            = WA_LAYOUT
          "I_DEFAULT       = 'X'
        CHANGING
          IT_FIELDCATALOG      = T_FIELDCATALOG[]
          IT_OUTTAB            = TG_ITENS_FR[].

      SET HANDLER:  LCL_EVENT_HANDLER_FR=>ON_DATA_CHANGED_FR FOR GRID2,
                    LCL_EVENT_HANDLER_FR=>ON_DATA_CHANGED_FINISHED_FR FOR GRID2.


      CALL METHOD GRID2->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

      CALL METHOD GRID2->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.

*    posiciona spliter na altura x
      CALL METHOD SPLITTER2->SET_ROW_HEIGHT
        EXPORTING
          ID     = 1
          HEIGHT = 100.

      CALL METHOD GRID2->SET_FRONTEND_FIELDCATALOG
        EXPORTING
          IT_FIELDCATALOG = T_FIELDCATALOG[].

      CALL METHOD GRID2->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    ELSE.

      "SORT TG_ITENS BY  MATKL TPSIM AUART.

      CALL METHOD GRID2->SET_FRONTEND_FIELDCATALOG
        EXPORTING
          IT_FIELDCATALOG = T_FIELDCATALOG[].

      CALL METHOD GRID2->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    ENDIF.


  ENDIF.

ENDMODULE.                 " CRIA_OBJETOS  OUTPUT
