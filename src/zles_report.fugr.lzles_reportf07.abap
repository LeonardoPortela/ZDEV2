*----------------------------------------------------------------------*
***INCLUDE LZLES_REPORTF07.
*----------------------------------------------------------------------*


FORM SELECIONAR_DADOS_ADT_ZLES0145 USING P_OPCAO.

  DATA: GT_BKPF       TYPE TABLE OF TY_BKPF WITH HEADER LINE,
        GT_ZLEST0140  TYPE TABLE OF ZLEST0140 WITH HEADER LINE,
        GT_ZLEST0141  TYPE TABLE OF ZLEST0141 WITH HEADER LINE,
        GT_LFA1       TYPE TABLE OF LFA1 WITH HEADER LINE.

  DATA: OBJ_ZCL_UTIL_SD TYPE REF TO ZCL_UTIL_SD.

  DATA: VL_TX_CAMBIO TYPE UKURS_CURR,
        VL_GDATU     TYPE GDATU_INV,
        V_VALIDA     TYPE C,
        V_DMBTR      TYPE BSIK-DMBTR,
        V_DMBE2      TYPE BSIK-DMBE2,
        VAR_TABIX    TYPE SY-TABIX.

  CLEAR: GT_BSAK[], GT_ZLEST0141[], GT_LFA1[].

  CREATE OBJECT OBJ_ZCL_UTIL_SD.

  CHECK P_OPCAO EQ 'R_AD_CX'.

*---------------------------------------------------*
*  Seleção Adiantamento Frete ZLES0145
*---------------------------------------------------*

  SELECT A~BUKRS A~AUGDT A~BLART A~SHKZG A~AUGBL A~BELNR A~GJAHR A~DMBTR A~DMBE2 A~MONAT A~XBLNR
         A~LIFNR A~ZFBDT A~ZBD1T A~SGTXT A~BUDAT A~UMSKS A~EBELN A~GSBER A~WAERS
    INTO CORRESPONDING FIELDS OF TABLE GT_BSAK
    FROM BSAK AS A INNER JOIN BKPF AS B ON A~BUKRS = B~BUKRS AND
                                           A~AUGBL = B~BELNR AND
                                           A~AUGGJ = B~GJAHR
    WHERE A~BUKRS IN IT_BUKRS
      AND A~BELNR NE A~AUGBL
      AND B~BUDAT IN IT_AUGDT.

  IF ( GT_BSAK[] IS NOT INITIAL ).
    SELECT *
      FROM ZLEST0141 INTO TABLE GT_ZLEST0141
       FOR ALL ENTRIES IN GT_BSAK
     WHERE BUKRS EQ GT_BSAK-BUKRS
       AND BELNR EQ GT_BSAK-BELNR.

    IF GT_ZLEST0141[] IS NOT INITIAL.
      SELECT *
        FROM ZLEST0140 INTO TABLE GT_ZLEST0140
         FOR ALL ENTRIES IN GT_ZLEST0141
       WHERE BUKRS EQ GT_ZLEST0141-BUKRS
         AND DATA  EQ GT_ZLEST0141-DATA.
    ENDIF.
  ENDIF.

  "Delete Registros com Doc. Comp. com iniciais diferente de 01,15,20
  LOOP AT GT_BSAK INTO GW_BSAK.
    CLEAR: VAR_TABIX.

    VAR_TABIX = SY-TABIX.

    DATA(_DELETE) = ''.
    IF ( GW_BSAK-AUGBL(2) NE '20' ) AND
       ( GW_BSAK-AUGBL(2) NE '15' ) AND
       ( GW_BSAK-AUGBL(2) NE '01' ).
      _DELETE = 'X'.
    ENDIF.

    READ TABLE GT_ZLEST0141 WITH KEY BUKRS = GW_BSAK-BUKRS
                                     BELNR = GW_BSAK-BELNR.

    IF SY-SUBRC NE 0.
      _DELETE = 'X'.
    ENDIF.

    IF _DELETE IS NOT INITIAL.
      DELETE GT_BSAK INDEX VAR_TABIX.
    ENDIF.
    CLEAR GW_BSAK.
  ENDLOOP.

  IF ( GT_BSAK[] IS NOT INITIAL ).
    SELECT * FROM BSIS
      INTO TABLE GT_BSIS
      FOR ALL ENTRIES IN GT_BSAK
    WHERE BUKRS EQ GT_BSAK-BUKRS
      AND BELNR EQ GT_BSAK-AUGBL
      AND GJAHR EQ GT_BSAK-AUGDT(4).
  ENDIF.

  CHECK GT_BSIS[] IS NOT INITIAL.

  SELECT * FROM SKA1        "#EC CI_DB_OPERATION_OK[2431747]
    INTO TABLE GT_SKA1      "#EC CI_DB_OPERATION_OK[2389136]
    FOR ALL ENTRIES IN GT_BSIS
  WHERE SAKNR EQ GT_BSIS-HKONT
    AND KTOPL EQ '0050'.

  CHECK GT_SKA1[] IS NOT INITIAL.

  SELECT * FROM SKAT
    INTO TABLE GT_SKAT
    FOR ALL ENTRIES IN GT_SKA1
  WHERE SAKNR EQ GT_SKA1-SAKNR
    AND SPRAS EQ 'PT'.

  IF GT_BSAK[] IS NOT INITIAL.

    SELECT *
      FROM LFA1 INTO TABLE GT_LFA1
       FOR ALL ENTRIES IN GT_BSAK
    WHERE LIFNR EQ GT_BSAK-LIFNR.

    "Cabeçalho do documento contábil
    SELECT *
      FROM BKPF INTO CORRESPONDING FIELDS OF TABLE GT_BKPF
      FOR ALL ENTRIES IN GT_BSAK
     WHERE BUKRS EQ GT_BSAK-BUKRS
       AND BELNR EQ GT_BSAK-AUGBL
       AND GJAHR EQ GT_BSAK-AUGDT(4).

    SELECT *
      FROM BKPF APPENDING CORRESPONDING FIELDS OF TABLE GT_BKPF
       FOR ALL ENTRIES IN GT_BSAK
     WHERE BUKRS EQ GT_BSAK-BUKRS
       AND BELNR EQ GT_BSAK-BELNR
       AND GJAHR EQ GT_BSAK-GJAHR.
  ENDIF.

  CHECK GT_BKPF[] IS NOT INITIAL.

  LOOP AT GT_BSAK INTO GW_BSAK.

    CLEAR: GW_BSIS, GW_SKA1, GW_SKAT, GW_SAIDA, V_VALIDA.

    READ TABLE GT_ZLEST0141 WITH KEY BUKRS = GW_BSAK-BUKRS
                                     BELNR = GW_BSAK-BELNR.

    CHECK SY-SUBRC EQ 0.

    READ TABLE GT_ZLEST0140 WITH KEY BUKRS = GT_ZLEST0141-BUKRS
                                     DATA  = GT_ZLEST0141-DATA.

    CHECK SY-SUBRC EQ 0.


    GW_SAIDA-BUKRS = GW_BSAK-BUKRS.
    GW_SAIDA-GSBER = GW_BSAK-GSBER.
    GW_SAIDA-BKTXT = 'Adiantamento'.
    GW_SAIDA-BELNR = GW_BSAK-BELNR.
    GW_SAIDA-AUGBL = GW_BSAK-AUGBL.
    GW_SAIDA-BUDAT = GW_BSAK-BUDAT.

    READ TABLE GT_BKPF INTO GW_BKPF WITH KEY BUKRS = GW_BSAK-BUKRS
                                             BELNR = GW_BSAK-AUGBL
                                             GJAHR = GW_BSAK-AUGDT(4).

    IF ( SY-SUBRC NE 0 ).
      CONTINUE.
    ENDIF.

    GW_SAIDA-AUGDT = GW_BKPF-BUDAT.
    GW_SAIDA-GJAHR = GW_BSAK-GJAHR.
    GW_SAIDA-ZFBDT = GW_BSAK-ZFBDT + GW_BSAK-ZBD1T.

    READ TABLE GT_BSIS INTO GW_BSIS WITH KEY BUKRS = GW_BSAK-BUKRS
                                             BELNR = GW_BSAK-AUGBL
                                             GJAHR = GW_BSAK-AUGDT(4).
    CHECK ( SY-SUBRC EQ 0 ).

    READ TABLE GT_SKA1 INTO GW_SKA1 WITH KEY SAKNR = GW_BSIS-HKONT
                                             KTOPL = '0050'
                                             KTOKS = 'YB04'.
    CHECK SY-SUBRC = 0.

    GW_SAIDA-DMBE2 = GW_BSAK-DMBE2.
    GW_SAIDA-DMBTR = GW_BSAK-DMBTR.

    IF GW_BSAK-SHKZG = 'S'.
      GW_SAIDA-DMBTR = GW_SAIDA-DMBTR * -1.
      GW_SAIDA-DMBE2 = GW_SAIDA-DMBE2 * -1.
    ENDIF.

    READ TABLE GT_SKAT INTO GW_SKAT WITH KEY SAKNR = GW_SKA1-SAKNR.
    IF SY-SUBRC = 0.
      CONCATENATE GW_SKA1-SAKNR '-' GW_SKAT-TXT20 INTO GW_SAIDA-BANCO_LIQ.
    ENDIF.

    "Busca Taxa Data Compensação
    CLEAR: VL_TX_CAMBIO.
    MOVE GW_SAIDA-AUGDT TO VL_GDATU.

    OBJ_ZCL_UTIL_SD->SET_KURST('B').
    OBJ_ZCL_UTIL_SD->SET_WAERK('USD').
    OBJ_ZCL_UTIL_SD->SET_TCURR('BRL').
    OBJ_ZCL_UTIL_SD->SET_DATA( VL_GDATU ).

    VL_TX_CAMBIO = ABS( OBJ_ZCL_UTIL_SD->TAXA_CAMBIO( ) ).

    IF VL_TX_CAMBIO > 0.

      IF GW_BKPF-WAERS = 'BRL'.
        GW_SAIDA-DMBE2   = GW_SAIDA-DMBTR / VL_TX_CAMBIO.
      ELSE.
        GW_SAIDA-DMBTR   = GW_SAIDA-DMBE2 * VL_TX_CAMBIO.
      ENDIF.

      GW_SAIDA-TX_CAMB = VL_TX_CAMBIO.
    ENDIF.

    GW_SAIDA-XBLNR = GW_BSAK-XBLNR.
    GW_SAIDA-SGTXT = GW_BSAK-SGTXT.

    READ TABLE GT_LFA1 WITH KEY LIFNR = GW_BSAK-LIFNR.
    IF SY-SUBRC = 0.
      GW_SAIDA-LIFNR = GT_LFA1-LIFNR.
      GW_SAIDA-NAME1 = GT_LFA1-NAME1.
    ENDIF.

    CASE P_OPCAO.
      WHEN 'R_AD_CX'.
        GW_SAIDA-TIPO = 'FA'.
    ENDCASE.

    PERFORM F_VALIDA_LCTO USING GW_SAIDA P_OPCAO
                       CHANGING V_VALIDA.

    IF V_VALIDA IS INITIAL.
      CONTINUE.
    ENDIF.

    V_DMBTR  = GW_SAIDA-DMBTR.
    V_DMBE2  = GW_SAIDA-DMBE2.

*------------------------------------------------------------------------*
*   Append Perc. Graos
*------------------------------------------------------------------------*
    IF GT_ZLEST0140-PERC_GRAOS > 0.
      GW_SAIDA-MATKL = SPACE.
      GW_SAIDA-DMBTR = ( V_DMBTR * GT_ZLEST0140-PERC_GRAOS ) / 100.
      GW_SAIDA-DMBE2 = ( V_DMBE2 * GT_ZLEST0140-PERC_GRAOS ) / 100.
      GW_SAIDA-CHVID = 1.

      APPEND GW_SAIDA TO GT_SAIDA.
      PERFORM F_CHECK_ESTORNO USING GW_SAIDA.
    ENDIF.
*------------------------------------------------------------------------*
*   Append Perc. Fertilizantes
*------------------------------------------------------------------------*
    IF GT_ZLEST0140-PERC_FERT > 0.
      GW_SAIDA-MATKL = '658440'.
      GW_SAIDA-DMBTR = ( V_DMBTR * GT_ZLEST0140-PERC_FERT ) / 100.
      GW_SAIDA-DMBE2 = ( V_DMBE2 * GT_ZLEST0140-PERC_FERT ) / 100.
      GW_SAIDA-CHVID = 2.

      APPEND GW_SAIDA TO GT_SAIDA.
      PERFORM F_CHECK_ESTORNO USING GW_SAIDA.
    ENDIF.

*------------------------------------------------------------------------*
*   Append Perc. Def.
*------------------------------------------------------------------------*
    IF GT_ZLEST0140-PERC_DEF > 0.
      GW_SAIDA-MATKL = '658445'.
      GW_SAIDA-DMBTR = ( V_DMBTR * GT_ZLEST0140-PERC_DEF ) / 100.
      GW_SAIDA-DMBE2 = ( V_DMBE2 * GT_ZLEST0140-PERC_DEF ) / 100.
      GW_SAIDA-CHVID = 3.

      APPEND GW_SAIDA TO GT_SAIDA.
      PERFORM F_CHECK_ESTORNO USING GW_SAIDA.
    ENDIF.
*------------------------------------------------------------------------*
*   Append Perc. Sem
*------------------------------------------------------------------------*
    IF GT_ZLEST0140-PERC_SEM > 0.
      GW_SAIDA-MATKL = '700230'.
      GW_SAIDA-DMBTR = ( V_DMBTR * GT_ZLEST0140-PERC_SEM ) / 100.
      GW_SAIDA-DMBE2 = ( V_DMBE2 * GT_ZLEST0140-PERC_SEM ) / 100.
      GW_SAIDA-CHVID = 4.

      APPEND GW_SAIDA TO GT_SAIDA.
      PERFORM F_CHECK_ESTORNO USING GW_SAIDA.
    ENDIF.

  ENDLOOP.

ENDFORM.
