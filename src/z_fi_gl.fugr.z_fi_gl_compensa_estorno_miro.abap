FUNCTION Z_FI_GL_COMPENSA_ESTORNO_MIRO.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(E_BUKRS) TYPE  BUKRS
*"     REFERENCE(E_LIFNR) TYPE  LIFNR
*"     REFERENCE(E_INVOICE_IN) TYPE  RE_BELNR
*"     REFERENCE(E_YEAR_IN) TYPE  GJAHR
*"     REFERENCE(E_INVOICE_OUT) TYPE  RE_BELNR
*"     REFERENCE(E_YEAR_OUT) TYPE  GJAHR
*"  EXPORTING
*"     VALUE(I_BKPF) TYPE  BKPF
*"  TABLES
*"      IT_RETORNO STRUCTURE  BDCMSGCOLL OPTIONAL
*"  EXCEPTIONS
*"      NAO_COMPENSOU
*"      ERRO_BLOQUEIO
*"      SEM_ACESSO
*"----------------------------------------------------------------------

  DATA: IT_BKPF_RET2 TYPE TABLE OF BDCMSGCOLL,
        WA_BKPF_RET2 TYPE BDCMSGCOLL,
        IT_COMPENSAR TYPE TABLE OF ZDE_DOC_VALOR WITH HEADER LINE,
        IT_BKPF      TYPE TABLE OF BKPF,
        WA_BKPF      TYPE BKPF,
        IT_BSIK      TYPE TABLE OF BSIK,
        IT_BSEG      TYPE TABLE OF BSEG,
        WA_BSEG      TYPE BSEG,
        WA_BSIK      TYPE BSIK,
        LC_AWKEY     TYPE AWKEY,
        TI_BDCDATA   TYPE TABLE OF BDCDATA WITH HEADER LINE,
        LC_DATE_TX   TYPE CHAR08,
        LC_MODE      TYPE CHAR01,
        LC_TCODE     LIKE TSTC-TCODE.

  LC_TCODE = 'F-51'.

  CALL FUNCTION 'AUTH_CHECK_TCODE'
    EXPORTING
      TCODE                          = LC_TCODE
    EXCEPTIONS
      PARAMETER_ERROR                = 1
      TRANSACTION_NOT_FOUND          = 2
      TRANSACTION_LOCKED             = 3
      TRANSACTION_IS_MENU            = 4
      MENU_VIA_PARAMETER_TRANSACTION = 5
      NOT_AUTHORIZED                 = 6
      OTHERS                         = 7.

  IF SY-SUBRC IS NOT INITIAL.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING SEM_ACESSO.
  ENDIF.

  CONCATENATE E_INVOICE_IN  E_YEAR_IN INTO LC_AWKEY.

  SELECT *
    INTO TABLE IT_BKPF
    FROM BKPF
   WHERE BUKRS EQ E_BUKRS
     AND AWTYP EQ 'RMRP'
     AND AWKEY EQ LC_AWKEY.

  CONCATENATE E_INVOICE_OUT E_YEAR_OUT INTO LC_AWKEY.

  SELECT SINGLE * INTO WA_BKPF
    FROM BKPF
   WHERE BUKRS EQ E_BUKRS
     AND AWTYP EQ 'RMRP'
     AND AWKEY EQ LC_AWKEY.

  IF SY-SUBRC IS INITIAL.
    APPEND WA_BKPF TO IT_BKPF.
  ENDIF.

  SELECT *
    INTO TABLE IT_BSIK
    FROM BSIK
     FOR ALL ENTRIES IN IT_BKPF
   WHERE BUKRS EQ IT_BKPF-BUKRS
     AND LIFNR EQ E_LIFNR
     AND GJAHR EQ IT_BKPF-GJAHR
     AND BELNR EQ IT_BKPF-BELNR.

  CALL FUNCTION 'FAGL_GET_BSEG_FOR_ALL_ENTRIES'
    EXPORTING IT_FOR_ALL_ENTRIES = IT_BSIK
              I_WHERE_CLAUSE = |BUKRS EQ IT_FOR_ALL_ENTRIES-BUKRS AND BELNR EQ IT_FOR_ALL_ENTRIES-BELNR AND GJAHR EQ IT_FOR_ALL_ENTRIES-GJAHR AND BUZEI EQ IT_FOR_ALL_ENTRIES-BUZEI|
    IMPORTING ET_BSEG = IT_BSEG
    EXCEPTIONS NOT_FOUND = 1.
IF SY-SUBRC <> 0 OR LINES( IT_BSEG ) = 0.
  SY-SUBRC = 4.
  SY-DBCNT = 0.
ELSE.
  SY-DBCNT = LINES( IT_BSEG ).
ENDIF.


  LOOP AT IT_BSEG INTO WA_BSEG.

*    IF WA_BSEG-ZLSPR IS NOT INITIAL.
*      MESSAGE E035(ZFI) WITH WA_BSEG-BELNR RAISING ERRO_BLOQUEIO.
*    ENDIF.

    READ TABLE IT_BKPF INTO WA_BKPF WITH KEY BUKRS = WA_BSEG-BUKRS
                                             BELNR = WA_BSEG-BELNR
                                             GJAHR = WA_BSEG-GJAHR.
    IF SY-SUBRC IS INITIAL.
      IT_COMPENSAR-BUKRS     = WA_BSEG-BUKRS.
      IT_COMPENSAR-BELNR     = WA_BSEG-BELNR.
      IT_COMPENSAR-BUZEI     = WA_BSEG-BUZEI.
      IT_COMPENSAR-GJAHR     = WA_BSEG-GJAHR.
      IT_COMPENSAR-WAERS     = WA_BKPF-WAERS.
      IT_COMPENSAR-DMBTR     = WA_BSEG-DMBTR.
      IT_COMPENSAR-BUDAT     = WA_BKPF-BUDAT.
      IT_COMPENSAR-BLDAT     = WA_BKPF-BUDAT.
      IT_COMPENSAR-KOART     = WA_BSEG-KOART.
      IT_COMPENSAR-PARID     = WA_BSIK-LIFNR.
      IT_COMPENSAR-SHKZG     = WA_BSEG-SHKZG.
      APPEND IT_COMPENSAR.
    ENDIF.
  ENDLOOP.

  CLEAR: TI_BDCDATA[].

  "Tela Inicial
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'SAPMF05A'    '0122'            'X' .
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BDC_OKCODE'	 '=SL'             ''.
  CONCATENATE WA_BKPF-BUDAT+6(2) WA_BKPF-BUDAT+4(2) WA_BKPF-BUDAT(4) INTO LC_DATE_TX.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BKPF-BLDAT'	 LC_DATE_TX        ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BKPF-BUDAT'	 LC_DATE_TX        ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BKPF-WWERT'	 LC_DATE_TX        ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BKPF-BLART'	 'FT'              ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BKPF-BUKRS'	 WA_BKPF-BUKRS     ''.
  LC_DATE_TX = WA_BKPF-BUDAT+4(2).
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BKPF-MONAT'	 LC_DATE_TX        ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BKPF-WAERS'	 WA_BKPF-WAERS     ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'FS006-DOCID' '*'               ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BDC_CURSOR' 'RF05A-XPOS1(01)'  ''.

  "Tela de Definição de Parceiro
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'SAPMF05A'	   '0710'	           'X'.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BDC_OKCODE'  '/00'             ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'RF05A-AGBUK' WA_BKPF-BUKRS     ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'RF05A-AGKON' E_LIFNR           ''.
  "PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'RF05A-AGUMS' 'KJAL'            ''.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'RF05A-XPOS1(03)' 'X'           ''.

  "Inclusão de Documentos
  LOOP AT IT_COMPENSAR.
    PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'SAPMF05A'	       '0731'	            'X'.
    PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BDC_OKCODE'	     '/00'              ''.
    PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'RF05A-SEL01(01)' IT_COMPENSAR-BELNR ''.
  ENDLOOP.

  "Processar Documentos Selecionados """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'SAPMF05A'   '0731'  'X'.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BDC_OKCODE'	'=PA'   ''.

  "Simular lançamento """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'SAPDF05X'   '3100'  'X'.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BDC_OKCODE'	'=BS'   ''.

  "Salvar lançamento """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'SAPMF05A'	   '0700'	'X'.
  PERFORM ADD_MONTA_SHDB TABLES TI_BDCDATA USING 'BDC_OKCODE'	 '=BU'  ''.

  "Execução do SHDB """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  LC_MODE = 'N'.
  " A - Processing with display of screens
  " E - Display of screens only if an error occurs
  " N - Processing without display of screens
  " P - Processing without display of the screens
  CALL TRANSACTION 'F-51' USING TI_BDCDATA MODE LC_MODE UPDATE 'S' MESSAGES INTO IT_RETORNO.

  READ TABLE IT_RETORNO WITH KEY MSGID  = 'F5' MSGNR  = '312' MSGTYP = 'S'.
  IF SY-SUBRC IS INITIAL.
    MOVE IT_RETORNO-MSGV1(10) TO I_BKPF-BELNR.
    I_BKPF-GJAHR = WA_BKPF-BLDAT(4).
    I_BKPF-BUKRS = WA_BKPF-BUKRS.

    SELECT SINGLE * INTO I_BKPF
      FROM BKPF
     WHERE BUKRS EQ I_BKPF-BUKRS
       AND BELNR EQ I_BKPF-BELNR
       AND GJAHR EQ I_BKPF-GJAHR.

    IF SY-SUBRC IS NOT INITIAL.
      CLEAR: I_BKPF.
      RAISE NAO_COMPENSOU.
    ENDIF.
  ELSE.
    RAISE NAO_COMPENSOU.
  ENDIF.

ENDFUNCTION.
