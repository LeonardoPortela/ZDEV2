FUNCTION Z_GRAVAR_XML_NFE_CTE.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_TIPO) TYPE  CHAR01
*"     REFERENCE(I_XML01) TYPE  ZXML
*"     REFERENCE(I_XML02) TYPE  ZXML OPTIONAL
*"  CHANGING
*"     REFERENCE(I_ZOB_CTE_SAP) TYPE  ZOB_CTE_SAP OPTIONAL
*"     REFERENCE(I_ZOB_NFE_SAP) TYPE  ZOB_NFE_SAP OPTIONAL
*"----------------------------------------------------------------------

  TYPES: BEGIN OF TY_OB_CTE_NFE_XML,
           NU_DOCUMENTO_SAP	TYPE  ZOB_CTE_SAP_XML-NU_DOCUMENTO_SAP,
           DT_ENVIO	        TYPE  ZOB_CTE_SAP_XML-DT_ENVIO,
           HR_ENVIO	        TYPE  ZOB_CTE_SAP_XML-HR_ENVIO,
           TP_AUTHCOD	      TYPE  ZOB_CTE_SAP_XML-TP_AUTHCOD,
           SEQ              TYPE  ZOB_CTE_SAP_XML-SEQ,
           TX_XML	          TYPE  ZOB_CTE_SAP_XML-TX_XML,
           TX_XML2          TYPE  ZOB_CTE_SAP_XML-TX_XML2,
         END OF TY_OB_CTE_NFE_XML.

  DATA: IT_OB_CTE_NFE_XML TYPE TABLE OF TY_OB_CTE_NFE_XML,
        WA_OB_CTE_NFE_XML TYPE TY_OB_CTE_NFE_XML,
        WA_OB_CTE_SAP_XML TYPE ZOB_CTE_SAP_XML,
        WA_OB_NFE_SAP_XML TYPE ZOB_CTE_SAP_XML.

  DATA(_XML_01)  = I_XML01(4000).
  DATA(_XML_02)  = I_XML01+04000(4000).
  DATA(_XML_03)  = I_XML01+08000(4000).
  DATA(_XML_04)  = I_XML01+12000(4000).
  DATA(_XML_05)  = I_XML01+16000(4000).
  DATA(_XML_06)  = I_XML01+20000(4000).
  DATA(_XML_07)  = I_XML01+24000(4000).
  DATA(_XML_08)  = I_XML01+28000(2000).
  DATA(_XML_09)  = I_XML02(4000).
  DATA(_XML_10)  = I_XML02+04000(4000).
  DATA(_XML_11)  = I_XML02+08000(4000).
  DATA(_XML_12)  = I_XML02+12000(4000).
  DATA(_XML_13)  = I_XML02+16000(4000).
  DATA(_XML_14)  = I_XML02+20000(4000).
  DATA(_XML_15)  = I_XML02+24000(4000).
  DATA(_XML_16)  = I_XML02+28000(2000).

  CLEAR: IT_OB_CTE_NFE_XML[], WA_OB_CTE_NFE_XML.

  CASE I_TIPO.
    WHEN '1'. "NF-e

      I_ZOB_NFE_SAP-DT_ENVIO      = SY-DATUM.
      I_ZOB_NFE_SAP-HR_ENVIO      = SY-UZEIT.
      I_ZOB_NFE_SAP-RG_ATUALIZADO = 'N'.

      INSERT ZOB_NFE_SAP FROM I_ZOB_NFE_SAP.

      IF SY-SUBRC NE 0.
        MESSAGE 'Documento não foi processado(Envio XML)!' TYPE 'E'.
        RETURN.
      ENDIF.

      MOVE: I_ZOB_NFE_SAP-NU_DOCUMENTO_SAP  TO WA_OB_CTE_NFE_XML-NU_DOCUMENTO_SAP,
            I_ZOB_NFE_SAP-TP_AUTHCOD        TO WA_OB_CTE_NFE_XML-TP_AUTHCOD,
            I_ZOB_NFE_SAP-DT_ENVIO          TO WA_OB_CTE_NFE_XML-DT_ENVIO,
            I_ZOB_NFE_SAP-HR_ENVIO          TO WA_OB_CTE_NFE_XML-HR_ENVIO.
    WHEN '2'. "CT-e

      I_ZOB_CTE_SAP-DT_ENVIO      = SY-DATUM.
      I_ZOB_CTE_SAP-HR_ENVIO      = SY-UZEIT.
      I_ZOB_CTE_SAP-RG_ATUALIZADO = 'N'.

      INSERT ZOB_CTE_SAP FROM I_ZOB_CTE_SAP.

      IF SY-SUBRC NE 0.
        MESSAGE 'Documento não foi processado(Envio XML)!' TYPE 'E'.
        RETURN.
      ENDIF.

      MOVE: I_ZOB_CTE_SAP-NU_DOCUMENTO_SAP  TO WA_OB_CTE_NFE_XML-NU_DOCUMENTO_SAP,
            I_ZOB_CTE_SAP-TP_AUTHCOD        TO WA_OB_CTE_NFE_XML-TP_AUTHCOD,
            I_ZOB_CTE_SAP-DT_ENVIO          TO WA_OB_CTE_NFE_XML-DT_ENVIO,
            I_ZOB_CTE_SAP-HR_ENVIO          TO WA_OB_CTE_NFE_XML-HR_ENVIO.
  ENDCASE.

  WA_OB_CTE_NFE_XML-SEQ         = 0.

  IF _XML_01 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_01(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_01+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML.

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_01+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_01+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_02 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_02(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_02+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_02+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_02+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_03 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_03(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_03+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_03+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_03+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_04 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_04(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_04+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_04+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_04+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML.
  ENDIF.

  IF _XML_05 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_05(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_05+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_05+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_05+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_06 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_06(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_06+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_06+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_06+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_07 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_07(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_07+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_07+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_07+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_08 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_08(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_08+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML.
  ENDIF.

  IF _XML_09 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_09(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_09+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_09+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_09+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_10 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_10(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_10+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_10+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_10+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_11 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_11(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_11+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_11+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_11+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_12 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_12(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_12+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_12+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_12+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_13 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_13(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_13+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_13+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_13+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_14 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_14(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_14+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_14+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_14+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_15 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_15(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_15+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..

    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_15+2000(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_15+3000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML..
  ENDIF.

  IF _XML_16 IS NOT INITIAL.
    ADD 1 TO WA_OB_CTE_NFE_XML-SEQ.
    WA_OB_CTE_NFE_XML-TX_XML      = _XML_16(1000).
    WA_OB_CTE_NFE_XML-TX_XML2     = _XML_16+1000(1000).
    APPEND WA_OB_CTE_NFE_XML TO IT_OB_CTE_NFE_XML.
  ENDIF.

  DELETE IT_OB_CTE_NFE_XML WHERE TX_XML IS INITIAL.

  LOOP AT IT_OB_CTE_NFE_XML INTO WA_OB_CTE_NFE_XML.
    CASE I_TIPO.
      WHEN '1'. "NF-e
        CLEAR: WA_OB_NFE_SAP_XML.
        MOVE-CORRESPONDING WA_OB_CTE_NFE_XML TO WA_OB_NFE_SAP_XML.
        INSERT ZOB_NFE_SAP_XML FROM WA_OB_NFE_SAP_XML.
      WHEN '2'. "CT-e
        CLEAR: WA_OB_CTE_SAP_XML.
        MOVE-CORRESPONDING WA_OB_CTE_NFE_XML TO WA_OB_CTE_SAP_XML.
        INSERT ZOB_CTE_SAP_XML FROM WA_OB_CTE_SAP_XML.
    ENDCASE.
  ENDLOOP.


ENDFUNCTION.
