FUNCTION Z_MONTA_XML_CTE.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_CTE_AVULSO) TYPE  J_1BDOCNUM
*"     REFERENCE(P_ENVIA_XI) TYPE  CHAR01 OPTIONAL
*"  TABLES
*"      IT_CANCEL TYPE  J1B_NF_XML_EXTENSION2_TAB OPTIONAL
*"      IT_CONHEC STRUCTURE  ZOB_CONHECIMENTO_SAP OPTIONAL
*"----------------------------------------------------------------------

  DATA: WA_XML          TYPE ZEXML,
        WA_CONHEC       TYPE ZOB_CONHECIMENTO_SAP,
        CTE             TYPE ZXML,
        CTE_AQUAV       TYPE STRING,
        VG_MSGV1        TYPE SYMSGV,
        VG_MSGV2        TYPE SYMSGV,
        VG_MSGV3        TYPE SYMSGV,
        VG_MSGV4        TYPE SYMSGV,
        WA_SETLEAF      TYPE SETLEAF.

  DATA: P_J_1BNFDOC    TYPE J_1BNFDOC,
        P_IDENTIFICA   TYPE ZCTE_IDENTIFICA,
        P_PARCEIROS    TYPE ZCTE_PARCEIROS,
        P_ZLEST0066    TYPE ZLEST0066,
        IT_NOTAS_INFO  TYPE TABLE OF ZCTE_INFO_NOTA,
        IT_TRANS       TYPE TABLE OF ZCTE_TRANS,
        IT_CIOT        TYPE TABLE OF ZCTE_CIOT,
        IT_MOTORISTA   TYPE TABLE OF ZCTE_MOTORISTA,
        IT_OBS_GERAL   TYPE TABLE OF ZCTE_OBS_GERAIS,
        IT_SEGURO      TYPE TABLE OF ZCTE_SEGURO,
        IT_ZLEST0067   TYPE TABLE OF ZLEST0067,
        WL_ZLEST0061   TYPE ZLEST0061,
        WL_J_1BNFDOC   TYPE J_1BNFDOC,
        WL_NFDOC_TMP   TYPE J_1BNFDOC,
        XML_IN1        TYPE J1B_NF_XML_HEADER,
        VL_CTE_COMPLEMENTO TYPE C,
        VL_CTE_REF     TYPE J_1BNFDOC-DOCREF.

  CLEAR: XML_IN1, WL_ZLEST0061, VL_CTE_COMPLEMENTO, VL_CTE_REF, WL_NFDOC_TMP.

  SELECT SINGLE *
    FROM J_1BNFDOC INTO WL_NFDOC_TMP
   WHERE DOCNUM = P_CTE_AVULSO
     AND DOCTYP = '2'.

  IF ( SY-SUBRC = 0 ) AND ( WL_NFDOC_TMP-DOCREF IS NOT INITIAL ). "Documento é Tipo Complementar
    VL_CTE_COMPLEMENTO = 'X'.
    VL_CTE_REF         = WL_NFDOC_TMP-DOCREF.
  ENDIF.

  "Verificar se o docnum esta gravado na tabela do aquaviário.
  SELECT SINGLE * FROM ZLEST0061 INTO WL_ZLEST0061 WHERE DOCNUM EQ P_CTE_AVULSO.

  IF ( SY-SUBRC NE 0 ) AND ( VL_CTE_REF IS NOT INITIAL ).
    CLEAR: WL_ZLEST0061.
    SELECT SINGLE * FROM ZLEST0061 INTO WL_ZLEST0061 WHERE DOCNUM EQ VL_CTE_REF.
  ENDIF.

  IF WL_ZLEST0061 IS INITIAL."( SY-SUBRC NE 0 ).

    CLEAR WA_CONHEC.

    CALL FUNCTION 'Z_SD_INFO_CTE_AVULSO'
      EXPORTING
        P_CTE_AVULSO       = P_CTE_AVULSO
        P_CHAMAR_TELA      = SPACE
        P_GRAVAR_DADOS     = C_X
      IMPORTING
        P_J_1BNFDOC        = P_J_1BNFDOC
        P_IDENTIFICA       = P_IDENTIFICA
        P_PARCEIROS        = P_PARCEIROS
      TABLES
        IT_NOTAS_INFO      = IT_NOTAS_INFO
        IT_TRANS           = IT_TRANS
        IT_CIOT            = IT_CIOT
        IT_MOTORISTA       = IT_MOTORISTA
        IT_OBS_GERAL       = IT_OBS_GERAL
        IT_SEGURO          = IT_SEGURO
      EXCEPTIONS
        N_INFO_CTE         = 1
        N_LOC_CTE          = 2
        N_ELETRONICO       = 3
        N_MODELO_57        = 4
        N_STATUS           = 5
        INF_DOCNUM         = 6
        INF_PROPVEICULO    = 7
        NAO_DOCNUM         = 8
        NAO_RTRC           = 9
        NAO_CONTA_CORRENTE = 10
        MOTO_NAO_PF        = 11
        N_PLACA_CAD        = 12
        SEM_NOTAS          = 13
        OTHERS             = 14.


    IF NOT SY-SUBRC IS INITIAL.

      VG_MSGV1 = SY-MSGV1.
      VG_MSGV2 = SY-MSGV2.
      VG_MSGV3 = SY-MSGV3.
      VG_MSGV4 = SY-MSGV4.

      CALL FUNCTION 'Z_SD_INFO_CTE_AVULSO'
        EXPORTING
          P_CTE_AVULSO   = P_CTE_AVULSO
          P_CHAMAR_TELA  = SPACE
          P_GRAVAR_DADOS = SPACE
          P_APAGAR_DADOS = C_X.

      MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO WITH VG_MSGV1 VG_MSGV2 VG_MSGV3 VG_MSGV4.
    ENDIF.

    CALL FUNCTION 'Z_XML_CTE_1_04'
      IMPORTING
        P_INICIADA = XML_CTE_1_04.

    CONCATENATE P_IDENTIFICA-DHEMI(4) '-' P_IDENTIFICA-DHEMI+4(2) '-' P_IDENTIFICA-DHEMI+6(2) '*'
                P_IDENTIFICA-HREMI(2) ':' P_IDENTIFICA-HREMI+2(2) ':' P_IDENTIFICA-HREMI+4(2) INTO VG_DT_HORA.
    REPLACE '*' WITH SPACE INTO VG_DT_HORA.

    IF IT_CANCEL[] IS INITIAL.

      PERFORM XML_CTE_ABRE_XML   USING CTE.
      PERFORM XML_CTE_IDE        USING CTE P_IDENTIFICA P_PARCEIROS.
      PERFORM XML_CTE_COMPL      TABLES IT_OBS_GERAL IT_CIOT USING P_IDENTIFICA  CTE.
      PERFORM XML_CTE_EMIT       USING CTE P_PARCEIROS.
      PERFORM XML_CTE_REME       TABLES IT_NOTAS_INFO USING CTE P_PARCEIROS.
      PERFORM XML_CTE_DEST       USING CTE P_PARCEIROS.
      PERFORM XML_CTE_VPREST     USING CTE P_IDENTIFICA.
      PERFORM XML_CTE_IMP        USING CTE P_IDENTIFICA.

      IF VL_CTE_COMPLEMENTO IS NOT INITIAL.
        PERFORM XML_CTE_INFCTECOMP USING CTE VL_CTE_REF.
      ELSE.

        PERFORM XML_CTE_ABRE_NORM  USING CTE.
        PERFORM XML_CTE_INFCARGA   TABLES IT_NOTAS_INFO USING CTE.
        PERFORM XML_CTE_SEG        TABLES IT_SEGURO     USING CTE.

        CASE P_IDENTIFICA-MODAL.
            "Rodoviário
          WHEN C_01.
            PERFORM XML_CTE_ABRE_RODO  USING CTE.
            PERFORM XML_CTE_RODO       TABLES IT_TRANS USING CTE P_IDENTIFICA.
            "Só preenchido em CT-e rodoviário de lotação.
            IF P_IDENTIFICA-RODO_FRETE_LOTA EQ C_1.
              PERFORM XML_CTE_VALEPED    USING CTE P_IDENTIFICA.
              PERFORM XML_CTE_VEIC       TABLES IT_TRANS     USING CTE P_IDENTIFICA.
              PERFORM XML_CTE_MOTO     TABLES IT_MOTORISTA USING CTE.
            ENDIF.
            PERFORM XML_CTE_FECHA_RODO USING CTE.
            "	Aéreo
          WHEN C_02.

            "Aquaviário
          WHEN C_03.
            "Ferroviário
          WHEN C_04.

            "Dutoviário
          WHEN C_05.

        ENDCASE.

        PERFORM XML_CTE_FECHA_NORM USING CTE.

      ENDIF.

      PERFORM XML_CTE_FECHA_XML  USING CTE.

      WA_CONHEC-TP_AUTHCOD       = '1'.

    ELSE.

      "DATA: XML_IN1  TYPE J1B_NF_XML_HEADER.

      XML_IN1-C_CNPJ  = P_PARCEIROS-EMIT_CNPJ.
      XML_IN1-C1_IE   = P_PARCEIROS-EMIT_IE.
      XML_IN1-NNF     = P_J_1BNFDOC-NFENUM.
      XML_IN1-SERIE   = P_J_1BNFDOC-SERIES.

      PERFORM CANCELARCTE TABLES IT_CANCEL USING XML_IN1 CTE VG_DT_HORA.
      WA_CONHEC-TP_AUTHCOD       = '2'.

    ENDIF.

    REPLACE ALL OCCURRENCES OF REGEX '[áàãâ]'  IN CTE WITH 'a' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[éêè]'   IN CTE WITH 'e' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[íì]'    IN CTE WITH 'i' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[óòô]'   IN CTE WITH 'o' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[üúù]'   IN CTE WITH 'u' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        'ç'      IN CTE WITH 'c' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        'ñ'      IN CTE WITH 'n' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        '&'      IN CTE WITH 'E'.
    REPLACE ALL OCCURRENCES OF        'º'      IN CTE WITH 'o' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        ''''     IN CTE WITH '&#39;'.



    WA_CONHEC-NU_DOCUMENTO_SAP = P_CTE_AVULSO.
    WA_CONHEC-ID_EMPRESA       = P_J_1BNFDOC-BUKRS.
    WA_CONHEC-ID_FILIAL        = P_J_1BNFDOC-BRANCH.
    "WA_CONHEC-TP_AUTHCOD       = '1'.
    WA_CONHEC-TB_DIRECAO       = P_J_1BNFDOC-DIRECT.
    WA_CONHEC-NR_NFE           = P_J_1BNFDOC-NFENUM.
    WA_CONHEC-SR_NFE           = P_J_1BNFDOC-SERIES.
    WA_CONHEC-DATA_HORA        = VG_DT_HORA.
    WA_CONHEC-ID_DESTINATARIO  = P_J_1BNFDOC-PARID.

    CALL FUNCTION 'EFG_GEN_GET_USER_EMAIL'
      EXPORTING
        I_UNAME         = SY-UNAME
      IMPORTING
        E_EMAIL_ADDRESS = WA_CONHEC-DS_EMAIL.

    IF WA_CONHEC-DS_EMAIL IS INITIAL.
      WA_CONHEC-DS_EMAIL = 'indiretos.fiscal@grupomaggi.com.br'.
    ENDIF.

    WA_CONHEC-TX_XML  = CTE(4000).
    WA_CONHEC-TX_XML2 = CTE+4000(4000).
    WA_CONHEC-TX_XML3 = CTE+8000(4000).

    APPEND WA_CONHEC TO IT_CONHEC.


    SELECT SINGLE * FROM SETLEAF INTO WA_SETLEAF WHERE SETNAME EQ 'ZSALVA_XML_STATUS'
                                                   AND VALFROM EQ '1'.

    IF ( SY-SUBRC EQ 0 ).
      DATA: XML_VAR TYPE ZEXML-XML.


      REPLACE ALL OCCURRENCES OF REGEX '[áàãâ]' IN WA_CONHEC-TX_XML WITH 'a' IGNORING CASE.
      REPLACE ALL OCCURRENCES OF REGEX '[éê]'   IN WA_CONHEC-TX_XML WITH 'e' IGNORING CASE.
      REPLACE ALL OCCURRENCES OF        'í'     IN WA_CONHEC-TX_XML WITH 'i' IGNORING CASE.
      REPLACE ALL OCCURRENCES OF REGEX '[óô]'   IN WA_CONHEC-TX_XML WITH 'o' IGNORING CASE.
      REPLACE ALL OCCURRENCES OF REGEX '[üú]'   IN WA_CONHEC-TX_XML WITH 'u' IGNORING CASE.
      REPLACE ALL OCCURRENCES OF REGEX '[ç]'    IN WA_CONHEC-TX_XML WITH 'c' IGNORING CASE.
      REPLACE ALL OCCURRENCES OF        '&'     IN WA_CONHEC-TX_XML WITH '&#38;'.
      REPLACE ALL OCCURRENCES OF        ''''    IN WA_CONHEC-TX_XML WITH '&#39;'.
      REPLACE ALL OCCURRENCES OF        'º'     IN WA_CONHEC-TX_XML WITH 'o' IGNORING CASE.

      XML_VAR = WA_CONHEC-TX_XML.
      CALL FUNCTION 'Z_SALVA_XML'
        EXPORTING
          P_XML    = XML_VAR
          P_DOCNUM = P_CTE_AVULSO
          P_TIPO   = '2'.

    ENDIF.

  ELSE.
    DATA: TAMXML TYPE SY-TABIX.

    CLEAR WA_CONHEC.

    SELECT SINGLE * FROM J_1BNFDOC INTO WL_J_1BNFDOC WHERE DOCNUM EQ P_CTE_AVULSO.

    CALL FUNCTION 'Z_LES_INFO_AQUAV'
        EXPORTING
          P_CTE_AVULSO  = P_CTE_AVULSO
          P_COMPLEMENTO = VL_CTE_COMPLEMENTO
        IMPORTING
          P_ZLEST0066  = P_ZLEST0066
        TABLES
          IT_ZLEST0067 = IT_ZLEST0067
          IT_CTE_OBSG  = IT_OBS_GERAL.

    IF IT_CANCEL[] IS INITIAL.

      PERFORM XML_CTE_ABRE_XML       USING  CTE.
      PERFORM XML_CTE_IDE_AQUAV      USING  CTE P_ZLEST0066.
      PERFORM XML_CTE_COMPL_AQUAV    TABLES IT_OBS_GERAL USING CTE P_ZLEST0066 VL_CTE_REF.
      PERFORM XML_CTE_EMIT_AQUAV     USING  CTE P_ZLEST0066.
      PERFORM XML_CTE_REME_AQUAV     TABLES IT_ZLEST0067 USING CTE P_ZLEST0066.
      PERFORM XML_CTE_DEST_AQUAV     USING  CTE P_ZLEST0066.
      PERFORM XML_CTE_VPREST_AQUAV   USING  CTE P_ZLEST0066.
      PERFORM XML_CTE_IMP_AQUAV      USING  CTE P_ZLEST0066.

      IF VL_CTE_COMPLEMENTO IS NOT INITIAL.
        PERFORM XML_CTE_INFCTECOMP USING CTE VL_CTE_REF.
      ELSE.
        PERFORM XML_CTE_ABRE_NORM      USING  CTE.
        PERFORM XML_CTE_INFCARGA_AQUAV USING P_ZLEST0066 CTE.

        PERFORM XML_CTE_ABRE_AQUAV  USING CTE.
        PERFORM XML_CTE_AQUAV       USING CTE P_ZLEST0066.
        PERFORM XML_CTE_FECHA_AQUAV USING CTE.

        PERFORM XML_CTE_FECHA_NORM USING CTE.
      ENDIF.

      PERFORM XML_CTE_FECHA_XML  USING CTE.

      WA_CONHEC-TP_AUTHCOD       = '1'.
    ELSE.

      VG_DT_HORA = P_ZLEST0066-DHEMI.

      PERFORM LIMPA_NUMERO USING P_ZLEST0066-IE_EMITE.
      XML_IN1-C_CNPJ  = P_ZLEST0066-CNPJ_EMITE.
      XML_IN1-C1_IE   = VG_LIMPO.
      XML_IN1-NNF     = P_ZLEST0066-NCT.
      XML_IN1-SERIE   = P_ZLEST0066-SERIE.

      PERFORM CANCELARCTE TABLES IT_CANCEL USING XML_IN1 CTE VG_DT_HORA.
      WA_CONHEC-TP_AUTHCOD       = '2'.

    ENDIF.

    REPLACE ALL OCCURRENCES OF REGEX '[áàãâ]'  IN CTE WITH 'a' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[éêè]'   IN CTE WITH 'e' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[íì]'    IN CTE WITH 'i' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[óòô]'   IN CTE WITH 'o' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF REGEX '[üúù]'   IN CTE WITH 'u' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        'ç'      IN CTE WITH 'c' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        'ñ'      IN CTE WITH 'n' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        '&'      IN CTE WITH 'E'.
    REPLACE ALL OCCURRENCES OF        'º'      IN CTE WITH 'o' IGNORING CASE.
    REPLACE ALL OCCURRENCES OF        ''''     IN CTE WITH '&#39;'.


    WA_CONHEC-NU_DOCUMENTO_SAP = P_CTE_AVULSO.
    WA_CONHEC-ID_EMPRESA       = WL_J_1BNFDOC-BUKRS.
    WA_CONHEC-ID_FILIAL        = WL_J_1BNFDOC-BRANCH.
    WA_CONHEC-TB_DIRECAO       = WL_J_1BNFDOC-DIRECT.
    WA_CONHEC-NR_NFE           = WL_J_1BNFDOC-NFENUM.
    WA_CONHEC-SR_NFE           = WL_J_1BNFDOC-SERIES.
    WA_CONHEC-DATA_HORA        = P_ZLEST0066-DHEMI.
    WA_CONHEC-ID_DESTINATARIO  = WL_J_1BNFDOC-PARID.

    CALL FUNCTION 'EFG_GEN_GET_USER_EMAIL'
      EXPORTING
        I_UNAME         = SY-UNAME
      IMPORTING
        E_EMAIL_ADDRESS = WA_CONHEC-DS_EMAIL.

    IF WA_CONHEC-DS_EMAIL IS INITIAL.
      WA_CONHEC-DS_EMAIL = 'indiretos.fiscal@grupomaggi.com.br'.
    ENDIF.

    TAMXML = STRLEN( CTE ).

    WA_CONHEC-TX_XML  = CTE(4000).
    WA_CONHEC-TX_XML2 = CTE+4000(4000).
    WA_CONHEC-TX_XML3 = CTE+8000(4000).

    APPEND WA_CONHEC TO IT_CONHEC.

  ENDIF.


  CHECK P_ENVIA_XI IS NOT INITIAL.

  SELECT SINGLE *
    FROM SETLEAF INTO @DATA(WL_SETLEAF)
   WHERE SETNAME EQ 'MAGGI_CTG_CTE_SAP'.

  IF ( SY-SUBRC = 0 ) AND ( WL_SETLEAF-VALFROM IS NOT INITIAL ).

    DATA: WL_ZOB_CTE_SAP TYPE ZOB_CTE_SAP.

    MOVE-CORRESPONDING WA_CONHEC TO WL_ZOB_CTE_SAP.

    CALL FUNCTION 'Z_GRAVAR_XML_NFE_CTE'
      EXPORTING
        I_XML01            = CTE
        I_TIPO             = '2' "CT-e
      CHANGING
        I_ZOB_CTE_SAP      = WL_ZOB_CTE_SAP.

  ELSE.

    CALL FUNCTION 'Z_SD_OUTBOUND_CTE_XML' IN BACKGROUND TASK
      DESTINATION 'XI_XML_CTE'
      AS SEPARATE UNIT
      TABLES
        IT_SAIDA = IT_CONHEC.

  ENDIF.

  COMMIT WORK.

ENDFUNCTION.
