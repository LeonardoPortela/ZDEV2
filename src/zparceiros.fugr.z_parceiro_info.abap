FUNCTION Z_PARCEIRO_INFO.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_PARCEIRO) TYPE  J_1BPARID
*"     REFERENCE(P_PARTYPE) TYPE  J_1BPARTYP
*"     REFERENCE(P_ENDERECO) TYPE  CHAR01 DEFAULT ' '
*"  CHANGING
*"     VALUE(WA_INFO_PART) TYPE  LFA1 OPTIONAL
*"     VALUE(WA_INFO_C) TYPE  KNA1 OPTIONAL
*"     VALUE(WA_ADRC) TYPE  ADRC OPTIONAL
*"     VALUE(WA_ADR6) TYPE  ADR6 OPTIONAL
*"----------------------------------------------------------------------

  DATA: WA_LFA1     TYPE LFA1,
        WA_KNA1     TYPE KNA1,
        WA_T001W    TYPE T001W,
        VG_PARCEIRO TYPE J_1BPARID.

  CLEAR: WA_INFO_C, WA_INFO_PART.

  CASE P_PARTYPE.
    WHEN 'C'.
      SELECT SINGLE * INTO WA_KNA1
        FROM KNA1
       WHERE KUNNR EQ P_PARCEIRO.
      IF ( SY-SUBRC IS INITIAL ) AND ( NOT P_ENDERECO IS INITIAL ) AND ( NOT WA_KNA1-ADRNR IS INITIAL ).
        SELECT SINGLE * INTO WA_ADRC
         FROM ADRC
        WHERE ADDRNUMBER EQ WA_KNA1-ADRNR.
        SELECT SINGLE * INTO WA_ADR6
          FROM ADR6
         WHERE ADDRNUMBER EQ WA_KNA1-ADRNR.
      ENDIF.
      "MOVE-CORRESPONDING WA_KNA1 TO WA_INFO_PART.

      MOVE-CORRESPONDING WA_KNA1 TO WA_INFO_C.
    WHEN 'V'.
      SELECT SINGLE * INTO WA_LFA1
        FROM LFA1
       WHERE LIFNR EQ P_PARCEIRO.

      IF ( SY-SUBRC IS INITIAL ) AND ( NOT P_ENDERECO IS INITIAL ) AND ( NOT WA_LFA1-ADRNR IS INITIAL ).
        SELECT SINGLE * INTO WA_ADRC
         FROM ADRC
        WHERE ADDRNUMBER EQ WA_LFA1-ADRNR.
        SELECT SINGLE * INTO WA_ADR6
          FROM ADR6
         WHERE ADDRNUMBER EQ WA_LFA1-ADRNR.
      ENDIF.

      MOVE-CORRESPONDING WA_LFA1 TO WA_INFO_PART.
    WHEN 'B'.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = P_PARCEIRO
        IMPORTING
          OUTPUT = VG_PARCEIRO.

      SELECT SINGLE *
        FROM T001W
        INTO WA_T001W
       WHERE WERKS EQ VG_PARCEIRO+6(4).

      IF ( SY-SUBRC IS INITIAL ) AND ( NOT P_ENDERECO IS INITIAL ) AND ( NOT WA_T001W-ADRNR IS INITIAL ).

        SELECT SINGLE * INTO WA_ADRC
         FROM ADRC
        WHERE ADDRNUMBER EQ WA_T001W-ADRNR.
        SELECT SINGLE * INTO WA_ADR6
          FROM ADR6
         WHERE ADDRNUMBER EQ WA_T001W-ADRNR.

      ENDIF.

      IF WA_T001W-LIFNR IS NOT INITIAL.

        SELECT SINGLE * INTO WA_LFA1
          FROM LFA1
          WHERE LIFNR EQ WA_T001W-LIFNR.
        MOVE-CORRESPONDING WA_LFA1 TO WA_INFO_PART.

      ELSEIF WA_T001W-KUNNR IS NOT INITIAL.

        SELECT SINGLE * INTO WA_KNA1
          FROM KNA1
         WHERE KUNNR EQ WA_T001W-KUNNR.
        MOVE-CORRESPONDING WA_KNA1 TO WA_INFO_PART.

      ELSE.


*        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*          EXPORTING
*            INPUT  = VG_PARCEIRO+6(4)
*          IMPORTING
*            OUTPUT = VG_PARCEIRO.

*** Stefanini - IR240005 - 26/05/2025 - LAZAROSR - Início de Alteração
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
         EXPORTING
           INPUT  = VG_PARCEIRO+6(4)
         IMPORTING
           OUTPUT = VG_PARCEIRO.
*** Stefanini -IR240005 - 26/05/2025 - LAZAROSR - Fim de Alteração

        SELECT SINGLE * INTO WA_LFA1
          FROM LFA1
          WHERE LIFNR EQ VG_PARCEIRO.
        MOVE-CORRESPONDING WA_LFA1 TO WA_INFO_PART.

      ENDIF.

  ENDCASE.


ENDFUNCTION.
