FUNCTION ZDUE_NOMEACAO_SOL_OV.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_NRO_SOL_OV) TYPE  ZSDED013
*"     REFERENCE(I_NUMERO_RUC) TYPE  ZDE_NUMERO_RUC OPTIONAL
*"----------------------------------------------------------------------

  RANGES: LRA_NUMERO_RUC FOR ZSDT0053-NUMERO_RUC.

  DATA: LWA_ZSDT0051 TYPE ZSDT0051.

  DATA: LIT_ZSDT0053_AUX TYPE TABLE OF ZSDT0053.

  CLEAR: LRA_NUMERO_RUC[], LWA_ZSDT0051, GIT_ZSDT0053[].

  IF I_NRO_SOL_OV IS INITIAL.
    MESSAGE I160 WITH 'Numero Solicitação de Ordem de Venda'.
    EXIT.
  ENDIF.

  IF I_NUMERO_RUC IS NOT INITIAL.
    APPEND VALUE #( SIGN = 'I' OPTION = 'EQ' LOW = I_NUMERO_RUC ) TO LRA_NUMERO_RUC.
  ENDIF.

  SELECT *
    FROM ZSDT0053 INTO TABLE GIT_ZSDT0053
   WHERE NRO_SOL_OV EQ I_NRO_SOL_OV
     AND NUMERO_RUC IN LRA_NUMERO_RUC.

  IF GIT_ZSDT0053[] IS INITIAL.

    IF I_NUMERO_RUC IS NOT INITIAL.
      DATA(_MSG_RUC) = 'RUC' && I_NUMERO_RUC.
    ENDIF.

    MESSAGE I160 WITH |Registro Sol.OV.:{ I_NRO_SOL_OV } { _MSG_RUC }|  '(ZSDT0053)'.

    EXIT.
  ENDIF.

  SELECT SINGLE *
    FROM ZSDT0051 INTO LWA_ZSDT0051
   WHERE NRO_SOL_OV EQ I_NRO_SOL_OV.

  IF SY-SUBRC NE 0.
    MESSAGE I160 WITH |Registro Sol.OV.:{ I_NRO_SOL_OV }|  '(ZSDT0051)'.
    EXIT.
  ENDIF.

  CLEAR: GWA_NOMEACAO_SOL_OV.

  GWA_NOMEACAO_SOL_OV-NUMERO_RUC = I_NUMERO_RUC.

  READ TABLE GIT_ZSDT0053 INTO DATA(LWA_ZSDT0053) INDEX 1.

  GWA_NOMEACAO_SOL_OV-ID_NOMEACAO_TRAN = LWA_ZSDT0053-ID_NOMEACAO_TRAN.

  IF LWA_ZSDT0053-ID_NOMEACAO_TRAN IS NOT INITIAL.

    SELECT SINGLE *
      FROM ZNOM_TRANSPORTE INTO @DATA(LWA_ZNOM_TRANSPOR)
     WHERE ID_NOMEACAO_TRAN EQ @LWA_ZSDT0053-ID_NOMEACAO_TRAN.

    IF SY-SUBRC NE 0.
      MESSAGE I160 WITH |Nomeação Id:{ LWA_ZSDT0053-ID_NOMEACAO_TRAN }|.
      EXIT.
    ENDIF.

    GWA_NOMEACAO_SOL_OV-DS_NOME_TRANSPOR = LWA_ZNOM_TRANSPOR-DS_NOME_TRANSPOR.
    GWA_NOMEACAO_SOL_OV-BOOKING          = LWA_ZNOM_TRANSPOR-BOOKING.

    SELECT SINGLE *
      FROM ZNOM_CONHEC INTO @DATA(LWA_NOM_CONHEC)
     WHERE ID_NOMEACAO_TRAN EQ @LWA_ZNOM_TRANSPOR-ID_NOMEACAO_TRAN.

    IF SY-SUBRC EQ 0.
      GWA_NOMEACAO_SOL_OV-ID_CONHEC = LWA_NOM_CONHEC-ID_CONHEC.
      GWA_NOMEACAO_SOL_OV-DT_DATA   = LWA_NOM_CONHEC-DT_DATA.
      GWA_NOMEACAO_SOL_OV-NR_CONHEC = LWA_NOM_CONHEC-NR_CONHEC.
    ENDIF.

  ELSE.

    "Checar se possui alguma nomeação criada para a RUC
    IF LRA_NUMERO_RUC[] IS NOT INITIAL.
      CLEAR: LIT_ZSDT0053_AUX[].

      SELECT *
        FROM ZSDT0053 INTO TABLE LIT_ZSDT0053_AUX
       WHERE NUMERO_RUC IN LRA_NUMERO_RUC.

      DELETE LIT_ZSDT0053_AUX WHERE ID_NOMEACAO_TRAN IS INITIAL.

      IF LIT_ZSDT0053_AUX[] IS NOT INITIAL.
        READ TABLE LIT_ZSDT0053_AUX INTO DATA(LWA_ZSDT0053_AUX) INDEX 1.
        IF ( SY-SUBRC EQ 0 ) AND ( LWA_ZSDT0053_AUX-ID_NOMEACAO_TRAN IS NOT INITIAL ).

          LOOP AT GIT_ZSDT0053 INTO LWA_ZSDT0053.
            LWA_ZSDT0053-ID_NOMEACAO_TRAN = LWA_ZSDT0053_AUX-ID_NOMEACAO_TRAN.
            MODIFY ZSDT0053 FROM LWA_ZSDT0053.
          ENDLOOP.

          MESSAGE |Nomeação { LWA_ZSDT0053_AUX-ID_NOMEACAO_TRAN } vinculada a solicitação! |  TYPE 'S'.

          COMMIT WORK.

          RETURN.
        ENDIF.
      ENDIF.
    ENDIF.

  ENDIF.

  GWA_NOMEACAO_SOL_OV-ID_TRANSPORTE = LWA_ZNOM_TRANSPOR-ID_TRANSPORTE.

  LOOP AT GIT_ZSDT0053 INTO DATA(LWA_ZSDT0053_TMP).
    ADD LWA_ZSDT0053_TMP-ZMENG TO GWA_NOMEACAO_SOL_OV-NR_QTDE_NOMEADA.
  ENDLOOP.

  GWA_NOMEACAO_SOL_OV-VKORG       = LWA_ZSDT0051-VKORG.
  GWA_NOMEACAO_SOL_OV-WERKS       = LWA_ZSDT0053-WERKS.
  GWA_NOMEACAO_SOL_OV-NRO_SOL_OV  = LWA_ZSDT0051-NRO_SOL_OV.

  IF LWA_ZSDT0053-INSTRUCAO_ANT IS NOT INITIAL.
    GWA_NOMEACAO_SOL_OV-INSTRUCAO  = LWA_ZSDT0053-INSTRUCAO_ANT.
  ELSE.
    GWA_NOMEACAO_SOL_OV-INSTRUCAO  = LWA_ZSDT0053-INSTRUCAO.
  ENDIF.

  CALL SCREEN 0200 STARTING AT 02 02.

ENDFUNCTION.
