*----------------------------------------------------------------------*
***INCLUDE MZBALANCO_1020 .
*----------------------------------------------------------------------*

TYPES: BEGIN OF TY_ZGLT049CN_ALV.
TYPES:  CK_AGREGA TYPE XFELD,
        KTEXT	    TYPE KTEXT.
        INCLUDE STRUCTURE ZGLT049CN.
TYPES: END OF TY_ZGLT049CN_ALV.

TYPES: BEGIN OF TY_ZGLT049LN_ALV.
TYPES:  CK_AGREGA TYPE XFELD,
        LTEXT	    TYPE LTEXT.
        INCLUDE STRUCTURE ZGLT049LN.
TYPES: END OF TY_ZGLT049LN_ALV.

TYPES: BEGIN OF TY_ZGLT049MN_ALV.
TYPES:  CK_AGREGA TYPE XFELD,
        WGBEZ60   TYPE WGBEZ60.
        INCLUDE STRUCTURE ZGLT049MN.
TYPES: END OF TY_ZGLT049MN_ALV.

DATA: IT_1021_ALV  TYPE TABLE OF TY_ZGLT049CN_ALV WITH HEADER LINE,
      IT_1022_ALV  TYPE TABLE OF TY_ZGLT049LN_ALV WITH HEADER LINE,
      IT_1023_ALV  TYPE TABLE OF TY_ZGLT049MN_ALV WITH HEADER LINE.

DATA: CONTAINER_1021  TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      ALV_1021        TYPE REF TO CL_GUI_ALV_GRID,
      CATALOGO_1021   TYPE LVC_T_FCAT,
      CONTAINER_1022  TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      ALV_1022        TYPE REF TO CL_GUI_ALV_GRID,
      CATALOGO_1022   TYPE LVC_T_FCAT,
      CONTAINER_1023  TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      ALV_1023        TYPE REF TO CL_GUI_ALV_GRID,
      CATALOGO_1023   TYPE LVC_T_FCAT.

CONTROLS: TAB_1020    TYPE TABSTRIP,
          TAB_1020_01 TYPE TABLEVIEW USING SCREEN TL_1021,
          TAB_1020_02 TYPE TABLEVIEW USING SCREEN TL_1022,
          TAB_1020_03 TYPE TABLEVIEW USING SCREEN TL_1023.

*&---------------------------------------------------------------------*
*&      Module  STATUS_1020  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_1020 OUTPUT.

  IF TL_1020_01 IS INITIAL.
    TL_1020_01  = TL_1021.
    CK_PESQUISA = ABAP_FALSE.
    CLEAR: ZGLT049.
    MOVE-CORRESPONDING IT_ZGLT049 TO ZGLT049.
  ENDIF.

  SET PF-STATUS 'PF1003'.
  SET TITLEBAR 'TL1020'.

  CLEAR: WA_ZGLT039, WA_ZGLT047_ALTERADO.

  IF ZGLT049-NIVEL IS NOT INITIAL.
    SELECT SINGLE * INTO WA_ZGLT047
      FROM ZGLT047
     WHERE VERSN EQ ZGLT049-VERSN
       AND NIVEL EQ ZGLT049-NIVEL.
  ENDIF.

  IF ( ZGLT049-COD_CLAS_NOT IS NOT INITIAL ) AND
     ( ZGLT049-COD_CLAS_BAL IS NOT INITIAL ).
    SELECT SINGLE * INTO WA_ZGLT039
      FROM ZGLT039
     WHERE CODIGO   EQ ZGLT049-COD_CLAS_BAL
       AND COD_NOTA EQ ZGLT049-COD_CLAS_NOT.

    IF ( LC_BAL NE ZGLT049-COD_CLAS_BAL ) OR
       ( LC_NOT NE ZGLT049-COD_CLAS_NOT ).

      CLEAR: IT_041[].

      SELECT * INTO TABLE IT_041
        FROM ZGLT041
       WHERE COD_CLAS_BAL  EQ ZGLT049-COD_CLAS_BAL
         AND COD_CLAS_NOT2 EQ ZGLT049-COD_CLAS_NOT.

      PERFORM PESQUISA_TIPO_CENTRO_CUSTO_N.
      PERFORM PESQUISA_TIPO_CENTRO_LUCRO_N.
      PERFORM PESQUISA_GRUPO_MERCADORIA_N.
      LC_BAL = ZGLT049-COD_CLAS_BAL.
      LC_NOT = ZGLT049-COD_CLAS_NOT.
      CK_PESQUISA = ABAP_TRUE.
    ENDIF.
  ELSE.
    CK_PESQUISA = ABAP_FALSE.
  ENDIF.

ENDMODULE.                 " STATUS_1020  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1020_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1020_EXIT INPUT.

  CLEAR: IT_ZGLT049.
  PERFORM LIMPAR_1020.
  LEAVE TO SCREEN 0.

ENDMODULE.                 " USER_COMMAND_1020_EXIT  INPUT

*&---------------------------------------------------------------------*
*&      Form  LIMPAR_1020
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM LIMPAR_1020 .

  CLEAR: TL_1020_01,
         ZGLT049,
         LC_BAL,
         LC_NOT,
         WA_ZGLT039,
         IT_041[],
         IT_1021_ALV[],
         IT_1022_ALV[],
         IT_1023_ALV[],
         CATALOGO_1021,
         CATALOGO_1022,
         CATALOGO_1023.

  TAB_1020-ACTIVETAB = OK_TAB01.

  IF ALV_1021 IS NOT INITIAL.
    CALL METHOD ALV_1021->FREE.
  ENDIF.

  IF ALV_1022 IS NOT INITIAL.
    CALL METHOD ALV_1022->FREE.
  ENDIF.

  IF ALV_1023 IS NOT INITIAL.
    CALL METHOD ALV_1023->FREE.
  ENDIF.

  IF CONTAINER_1021 IS NOT INITIAL.
    CALL METHOD CONTAINER_1021->FREE.
  ENDIF.

  IF CONTAINER_1022 IS NOT INITIAL.
    CALL METHOD CONTAINER_1022->FREE.
  ENDIF.

  IF CONTAINER_1023 IS NOT INITIAL.
    CALL METHOD CONTAINER_1023->FREE.
  ENDIF.

  CLEAR: CONTAINER_1021,
         CONTAINER_1022,
         CONTAINER_1023,
         ALV_1021,
         ALV_1022,
         ALV_1023.

ENDFORM.                    " LIMPAR_1020

*&---------------------------------------------------------------------*
*&      Form  PESQUISA_TIPO_CENTRO_CUSTO_N
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM PESQUISA_TIPO_CENTRO_CUSTO_N .

  DATA: IT_ZGLT049C  TYPE TABLE OF ZGLT049C WITH HEADER LINE,
        IT_TIPO      TYPE TABLE OF TKT05 WITH HEADER LINE,
        IT_ZGLT049CN TYPE TABLE OF ZGLT049CN WITH HEADER LINE.

  SELECT * INTO TABLE IT_ZGLT049CN
    FROM ZGLT049CN
   WHERE VERSN        EQ ZGLT049-VERSN
     AND NIVEL        EQ ZGLT049-NIVEL
     AND COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

  SORT IT_ZGLT049CN BY KOSAR.

  "Buscar Cadastros da Nota e Já informado.
  SELECT * INTO TABLE IT_ZGLT049C
    FROM ZGLT049C
   WHERE COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

  IF SY-SUBRC IS NOT INITIAL.
    "Informar sobre conta sem parâmetros de tipo de custo dentro da DRE
  ELSE.
    SELECT * INTO TABLE IT_TIPO
      FROM TKT05
       FOR ALL ENTRIES IN IT_ZGLT049C
     WHERE SPRAS EQ SY-LANGU
       AND KOSAR EQ IT_ZGLT049C-KOSAR.

    CLEAR: IT_1021_ALV[].

    LOOP AT IT_TIPO.
      READ TABLE IT_ZGLT049CN WITH KEY KOSAR = IT_TIPO-KOSAR BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        IT_1021_ALV-CK_AGREGA = ABAP_TRUE.
      ELSE.
        IT_1021_ALV-CK_AGREGA = ABAP_FALSE.
      ENDIF.
      IT_1021_ALV-KTEXT        = IT_TIPO-KTEXT.
      IT_1021_ALV-VERSN        = ZGLT049-VERSN.
      IT_1021_ALV-NIVEL        = ZGLT049-NIVEL.
      IT_1021_ALV-COD_CLAS_BAL = ZGLT049-COD_CLAS_BAL.
      IT_1021_ALV-COD_CLAS_NOT = ZGLT049-COD_CLAS_NOT.
      IT_1021_ALV-KOSAR        = IT_TIPO-KOSAR.
      APPEND IT_1021_ALV.
    ENDLOOP.

  ENDIF.

ENDFORM.                    " PESQUISA_TIPO_CENTRO_CUSTO_N

*&---------------------------------------------------------------------*
*&      Form  PESQUISA_TIPO_CENTRO_LUCRO_N
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM PESQUISA_TIPO_CENTRO_LUCRO_N .

  DATA: IT_ZGLT049L  TYPE TABLE OF ZGLT049L WITH HEADER LINE,
        IT_TIPO      TYPE TABLE OF CEPCT WITH HEADER LINE,
        IT_ZGLT049LN TYPE TABLE OF ZGLT049LN WITH HEADER LINE.

  SELECT * INTO TABLE IT_ZGLT049LN
    FROM ZGLT049LN
   WHERE VERSN        EQ ZGLT049-VERSN
     AND NIVEL        EQ ZGLT049-NIVEL
     AND COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

  SORT IT_ZGLT049LN BY KOKRS PRCTR.

  "Buscar Cadastros da DRE e Já informado.
  SELECT * INTO TABLE IT_ZGLT049L
    FROM ZGLT049L
   WHERE COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

  IF SY-SUBRC IS NOT INITIAL.
    "Informar sobre conta sem parâmetros de tipo de custo dentro da DRE
  ELSE.
    SELECT * INTO TABLE IT_TIPO
      FROM CEPCT
       FOR ALL ENTRIES IN IT_ZGLT049L
     WHERE SPRAS EQ SY-LANGU
       AND KOKRS EQ IT_ZGLT049L-KOKRS
       AND PRCTR EQ IT_ZGLT049L-PRCTR.

    CLEAR: IT_1022_ALV[].

    LOOP AT IT_ZGLT049L.
      READ TABLE IT_ZGLT049LN WITH KEY KOKRS = IT_ZGLT049L-KOKRS
                                       PRCTR = IT_ZGLT049L-PRCTR
                                       BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        IT_1022_ALV-CK_AGREGA = ABAP_TRUE.
      ELSE.
        IT_1022_ALV-CK_AGREGA = ABAP_FALSE.
      ENDIF.

      READ TABLE IT_TIPO WITH KEY KOKRS = IT_ZGLT049L-KOKRS
                                  PRCTR = IT_ZGLT049L-PRCTR.
      IF SY-SUBRC IS INITIAL.
        IT_1022_ALV-LTEXT        = IT_TIPO-LTEXT.
      ELSE.
        CLEAR: IT_1022_ALV-LTEXT.
      ENDIF.
      IT_1022_ALV-VERSN        = ZGLT049-VERSN.
      IT_1022_ALV-NIVEL        = ZGLT049-NIVEL.
      IT_1022_ALV-COD_CLAS_BAL = ZGLT049-COD_CLAS_BAL.
      IT_1022_ALV-COD_CLAS_NOT = ZGLT049-COD_CLAS_NOT.
      IT_1022_ALV-KOKRS        = IT_ZGLT049L-KOKRS.
      IT_1022_ALV-PRCTR        = IT_ZGLT049L-PRCTR.
      APPEND IT_1022_ALV.
    ENDLOOP.

  ENDIF.

ENDFORM.                    " PESQUISA_TIPO_CENTRO_LUCRO_N

*&---------------------------------------------------------------------*
*&      Form  PESQUISA_GRUPO_MERCADORIA_N
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM PESQUISA_GRUPO_MERCADORIA_N .

  DATA: IT_ZGLT049M  TYPE TABLE OF ZGLT049M  WITH HEADER LINE,
        IT_TIPO      TYPE TABLE OF T023T     WITH HEADER LINE,
        IT_ZGLT049MN TYPE TABLE OF ZGLT049MN WITH HEADER LINE.

  SELECT * INTO TABLE IT_ZGLT049MN
    FROM ZGLT049MN
   WHERE VERSN        EQ ZGLT049-VERSN
     AND NIVEL        EQ ZGLT049-NIVEL
     AND COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

  SORT IT_ZGLT049MN BY MATKL.

  "Buscar Cadastros da Nota e Já informado.
  SELECT * INTO TABLE IT_ZGLT049M
    FROM ZGLT049M
   WHERE COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

  IF SY-SUBRC IS NOT INITIAL.
    "Informar sobre conta sem parâmetros de tipo de custo dentro da DRE
  ELSE.

    SELECT * INTO TABLE IT_TIPO
      FROM T023T
       FOR ALL ENTRIES IN IT_ZGLT049M
     WHERE SPRAS EQ SY-LANGU
       AND MATKL EQ IT_ZGLT049M-MATKL.

    CLEAR: IT_1023_ALV[].

    LOOP AT IT_TIPO.
      READ TABLE IT_ZGLT049MN WITH KEY MATKL = IT_TIPO-MATKL BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        IT_1023_ALV-CK_AGREGA = ABAP_TRUE.
      ELSE.
        IT_1023_ALV-CK_AGREGA = ABAP_FALSE.
      ENDIF.
      IT_1023_ALV-WGBEZ60      = IT_TIPO-WGBEZ60.
      IT_1023_ALV-VERSN        = ZGLT049-VERSN.
      IT_1023_ALV-NIVEL        = ZGLT049-NIVEL.
      IT_1023_ALV-COD_CLAS_BAL = ZGLT049-COD_CLAS_BAL.
      IT_1023_ALV-COD_CLAS_NOT = ZGLT049-COD_CLAS_NOT.
      IT_1023_ALV-MATKL        = IT_TIPO-MATKL.
      APPEND IT_1023_ALV.
    ENDLOOP.

  ENDIF.

ENDFORM.                    " PESQUISA_GRUPO_MERCADORIA_N

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1020  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1020 INPUT.

  DATA: WA_ZGLT049CN    TYPE ZGLT049CN,
        WA_ZGLT049LN    TYPE ZGLT049LN,
        WA_ZGLT049MN    TYPE ZGLT049MN.

  CASE OK_CODE_1020.
    WHEN OK_TAB01.
      TL_1020_01 = TL_1021.
      TAB_1020-ACTIVETAB = OK_TAB01.
    WHEN OK_TAB02.
      TL_1020_01 = TL_1022.
      TAB_1020-ACTIVETAB = OK_TAB02.
    WHEN OK_TAB03.
      TL_1020_01 = TL_1023.
      TAB_1020-ACTIVETAB = OK_TAB03.
    WHEN OK_SELALL OR OK_DSELALL.

      CLEAR: CK_MARCA.

      IF OK_CODE_1020 = OK_SELALL.
        CK_MARCA = ABAP_TRUE.
      ENDIF.

      CASE TL_1020_01.
        WHEN TL_1021.
          LOOP AT IT_1021_ALV WHERE CK_AGREGA NE CK_MARCA.
            IT_1021_ALV-CK_AGREGA = CK_MARCA.
            MODIFY IT_1021_ALV INDEX SY-TABIX TRANSPORTING CK_AGREGA.
          ENDLOOP.
        WHEN TL_1022.
          LOOP AT IT_1022_ALV WHERE CK_AGREGA NE CK_MARCA.
            IT_1022_ALV-CK_AGREGA = CK_MARCA.
            MODIFY IT_1022_ALV INDEX SY-TABIX TRANSPORTING CK_AGREGA.
          ENDLOOP.
        WHEN TL_1023.
          LOOP AT IT_1023_ALV WHERE CK_AGREGA NE CK_MARCA.
            IT_1023_ALV-CK_AGREGA = CK_MARCA.
            MODIFY IT_1023_ALV INDEX SY-TABIX TRANSPORTING CK_AGREGA.
          ENDLOOP.
      ENDCASE.
    WHEN OK_CONF.

      IF ( LC_BAL NE ZGLT049-COD_CLAS_BAL ) OR
         ( LC_NOT NE ZGLT049-COD_CLAS_NOT ).
        CK_PESQUISA = ABAP_FALSE.
      ENDIF.

      IF CK_PESQUISA EQ ABAP_TRUE.

        PERFORM VERIFICA_NOTA_INFORMADA USING CK_VALIDA.

        IF CK_VALIDA EQ ABAP_TRUE.

          SELECT * INTO TABLE IT_ZGLT049_AUX
            FROM ZGLT049
           WHERE VERSN EQ ZGLT049-VERSN
             AND NIVEL EQ ZGLT049-NIVEL
           ORDER BY SQNIVEL.

          LC_POSICAO = 0.
          LOOP AT IT_ZGLT049_AUX.

            ADD 1 TO LC_POSICAO.

            IF LC_POSICAO EQ ZGLT049-SQNIVEL.
              ADD 1 TO LC_POSICAO.
              CK_POS_MEIO = ABAP_TRUE.
            ENDIF.

            IT_ZGLT049_AUX-SQNIVEL = LC_POSICAO.
            MODIFY ZGLT049 FROM IT_ZGLT049_AUX.

          ENDLOOP.

          "Se não foi incluido no meio vai resceber a ultima posição da sequencia.
          IF CK_POS_MEIO EQ ABAP_FALSE.
            ADD 1 TO LC_POSICAO.
            ZGLT049-SQNIVEL = LC_POSICAO.
          ENDIF.

          MOVE-CORRESPONDING ZGLT049 TO WA_ZGLT047_ALTERADO.
          MODIFY ZGLT049.

          DELETE FROM ZGLT049CN
           WHERE VERSN        EQ ZGLT049-VERSN
             AND NIVEL        EQ ZGLT049-NIVEL
             AND COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
             AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

          DELETE FROM ZGLT049LN
           WHERE VERSN        EQ ZGLT049-VERSN
             AND NIVEL        EQ ZGLT049-NIVEL
             AND COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
             AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

          DELETE FROM ZGLT049MN
           WHERE VERSN        EQ ZGLT049-VERSN
             AND NIVEL        EQ ZGLT049-NIVEL
             AND COD_CLAS_BAL EQ ZGLT049-COD_CLAS_BAL
             AND COD_CLAS_NOT EQ ZGLT049-COD_CLAS_NOT.

          LOOP AT IT_1021_ALV WHERE CK_AGREGA EQ ABAP_TRUE.
            CLEAR WA_ZGLT049CN.
            MOVE-CORRESPONDING IT_1021_ALV TO WA_ZGLT049CN.
            MODIFY ZGLT049CN FROM WA_ZGLT049CN.
          ENDLOOP.

          LOOP AT IT_1022_ALV WHERE CK_AGREGA EQ ABAP_TRUE.
            CLEAR WA_ZGLT049LN.
            MOVE-CORRESPONDING IT_1022_ALV TO WA_ZGLT049LN.
            MODIFY ZGLT049LN FROM WA_ZGLT049LN.
          ENDLOOP.

          LOOP AT IT_1023_ALV WHERE CK_AGREGA EQ ABAP_TRUE.
            CLEAR WA_ZGLT049MN.
            MOVE-CORRESPONDING IT_1023_ALV TO WA_ZGLT049MN.
            MODIFY ZGLT049MN FROM WA_ZGLT049MN.
          ENDLOOP.

          COMMIT WORK.

          PERFORM LIMPAR_1020.
          LEAVE TO SCREEN 0.
        ENDIF.
      ENDIF.
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_1020  INPUT
