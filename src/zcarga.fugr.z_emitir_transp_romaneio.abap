FUNCTION Z_EMITIR_TRANSP_ROMANEIO.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_ROMANEIO_ATUAL) TYPE  ZSDT0001
*"     REFERENCE(IT_ROMANEIOS_SAIDA) TYPE  ZDE_LES_SAIDA_ZSDT0001_T
*"  CHANGING
*"     REFERENCE(IT_ROMANEIOS_SAIDA_OUT) TYPE  ZDE_LES_SAIDA_ZSDT0001_T
*"       OPTIONAL
*"  RAISING
*"      ZCX_CARGA
*"----------------------------------------------------------------------

  DATA: IT_TAB_BAPIRET1 TYPE TAB_BAPIRET1,
        LC_TEXTO_ERRO   TYPE STRING,
        I_ROMANEIO      TYPE ZDE_LES_ZSDT0001,
        LC_ST_PROC      TYPE ZST_PROC.

  IT_ROMANEIOS_SAIDA_OUT[] = IT_ROMANEIOS_SAIDA[].

  LOOP AT IT_ROMANEIOS_SAIDA_OUT ASSIGNING FIELD-SYMBOL(<FS_SAIDA>) WHERE REMESSA IS NOT INITIAL AND CH_REFERENCIA EQ I_ROMANEIO_ATUAL-CH_REFERENCIA.

    "Pesquisa Documento de Transporte
    SELECT SINGLE * INTO @DATA(WA_VTTP)
      FROM VTTP AS I
     WHERE VBELN EQ @<FS_SAIDA>-REMESSA
       AND EXISTS ( SELECT * FROM VTTK AS K WHERE K~TKNUM EQ I~TKNUM AND K~VSART EQ '01' ).

    IF SY-SUBRC IS NOT INITIAL.
      CONTINUE.
    ENDIF.

    <FS_SAIDA>-TRANSP = WA_VTTP-TKNUM.

    "Pesquisa Documento de Custo
    SELECT SINGLE * INTO @DATA(WA_VFKP)
      FROM VFKP
     WHERE REBEL EQ @WA_VTTP-TKNUM.

    IF SY-SUBRC IS NOT INITIAL.
      CONTINUE.
    ENDIF.

    <FS_SAIDA>-DOCCUS = WA_VFKP-FKNUM.

  ENDLOOP.

  CHECK IT_ROMANEIOS_SAIDA IS NOT INITIAL.

  SELECT * INTO TABLE @DATA(IT_ZSDT0001)
    FROM ZSDT0001
     FOR ALL ENTRIES IN @IT_ROMANEIOS_SAIDA
   WHERE CH_REFERENCIA EQ @IT_ROMANEIOS_SAIDA-CH_REFERENCIA.

  LOOP AT IT_ROMANEIOS_SAIDA_OUT ASSIGNING <FS_SAIDA>
    WHERE REMESSA IS NOT INITIAL
      AND TRANSP IS INITIAL
      AND DOCCUS IS INITIAL
      AND CH_REFERENCIA EQ I_ROMANEIO_ATUAL-CH_REFERENCIA.

    READ TABLE IT_ZSDT0001 WITH KEY CH_REFERENCIA = <FS_SAIDA>-CH_REFERENCIA ASSIGNING FIELD-SYMBOL(<FS_0001>).
    IF SY-SUBRC IS INITIAL.

      MOVE-CORRESPONDING <FS_0001> TO I_ROMANEIO.
      I_ROMANEIO-ROUTE        = <FS_SAIDA>-ROUTE.
      I_ROMANEIO-SHTYP        = <FS_SAIDA>-SHTYP.
      I_ROMANEIO-LZONEA       = <FS_SAIDA>-LZONEA.
      I_ROMANEIO-LZONEZ       = <FS_SAIDA>-LZONEZ.
      I_ROMANEIO-ADD01        = <FS_SAIDA>-ADD01.
      I_ROMANEIO-AGENTE_FRETE = <FS_SAIDA>-LIFNR.
      I_ROMANEIO-KBETR        = <FS_SAIDA>-KBETR.
      I_ROMANEIO-KONWA        = <FS_SAIDA>-KONWA.

      CALL FUNCTION 'Z_GET_FRETE_ATUAL'
        EXPORTING
          I_ROMANEIO     = I_ROMANEIO
        CHANGING
          I_ROMANEIO_LES = <FS_SAIDA>.

      PERFORM F_ACTION_TRA_EXTERNO(ZLESR0102) USING <FS_SAIDA> 'E' CHANGING IT_ROMANEIOS_SAIDA_OUT[] IT_TAB_BAPIRET1 LC_TEXTO_ERRO.

      IF LC_TEXTO_ERRO IS NOT INITIAL.
        ZCL_CARGA_SAIDA=>ZIF_CARGA~GERA_ERRO_GERAL( I_TEXTO = LC_TEXTO_ERRO ).
      ENDIF.
    ENDIF.

  ENDLOOP.

  CHECK IT_ROMANEIOS_SAIDA IS NOT INITIAL.

  SELECT * INTO TABLE @IT_ZSDT0001
    FROM ZSDT0001
     FOR ALL ENTRIES IN @IT_ROMANEIOS_SAIDA
   WHERE CH_REFERENCIA EQ @IT_ROMANEIOS_SAIDA-CH_REFERENCIA.

  LOOP AT IT_ROMANEIOS_SAIDA_OUT ASSIGNING <FS_SAIDA>
    WHERE REMESSA IS NOT INITIAL
      AND CH_REFERENCIA EQ I_ROMANEIO_ATUAL-CH_REFERENCIA.

    READ TABLE IT_ZSDT0001 WITH KEY CH_REFERENCIA = <FS_SAIDA>-CH_REFERENCIA INTO DATA(WA_ZSDT0001).

    IF SY-SUBRC IS INITIAL.

      "Pesquisa Documento de Transporte
      SELECT SINGLE * INTO @WA_VTTP
        FROM VTTP AS I
       WHERE VBELN EQ @<FS_SAIDA>-REMESSA
         AND EXISTS ( SELECT * FROM VTTK AS K WHERE K~TKNUM EQ I~TKNUM AND K~VSART EQ '01' ).

      IF SY-SUBRC IS NOT INITIAL.
        READ TABLE IT_TAB_BAPIRET1 INTO DATA(ERRO) WITH KEY TYPE = 'E'.
        IF SY-SUBRC IS INITIAL.
          MESSAGE ID ERRO-ID TYPE ERRO-TYPE NUMBER ERRO-NUMBER INTO DATA(MTEXT)
             WITH ERRO-MESSAGE_V1 ERRO-MESSAGE_V2 ERRO-MESSAGE_V3 ERRO-MESSAGE_V4.
          ZCL_CARGA_SAIDA=>ZIF_CARGA~GERA_ERRO_GERAL( I_TEXTO = MTEXT ).
        ENDIF.
      ENDIF.

      "Pesquisa Documento de Custo
      SELECT SINGLE * INTO @WA_VFKP
        FROM VFKP
       WHERE REBEL EQ @WA_VTTP-TKNUM.

      IF SY-SUBRC IS NOT INITIAL.
        READ TABLE IT_TAB_BAPIRET1 INTO ERRO WITH KEY TYPE = 'E'.
        IF SY-SUBRC IS INITIAL.
          MESSAGE ID ERRO-ID TYPE ERRO-TYPE NUMBER ERRO-NUMBER INTO MTEXT
             WITH ERRO-MESSAGE_V1 ERRO-MESSAGE_V2 ERRO-MESSAGE_V3 ERRO-MESSAGE_V4.
          ZCL_CARGA_SAIDA=>ZIF_CARGA~GERA_ERRO_GERAL( I_TEXTO = MTEXT ).
        ENDIF.
      ELSE.
        <FS_SAIDA>-TRANSP = WA_VTTP-TKNUM.
        <FS_SAIDA>-DOCCUS = WA_VFKP-FKNUM.
        LC_ST_PROC = '05'.

        SELECT SINGLE VBELN INTO @DATA(LC_VBELN)
          FROM VBAK
         WHERE TKNUM EQ @WA_VTTP-TKNUM.

        IF SY-SUBRC IS INITIAL.
          <FS_SAIDA>-OVSERV = LC_VBELN.

          LC_ST_PROC = '06'.
          SELECT SINGLE A~VBELN INTO @DATA(LC_FATSERV)
            FROM VBFA AS A
           WHERE A~VBELV    EQ @LC_VBELN
             AND A~VBTYP_N  EQ 'M'
             AND A~VBTYP_V  EQ 'C'
             AND NOT EXISTS ( SELECT * FROM VBFA AS B WHERE B~VBELV   = A~VBELN AND B~VBTYP_N = 'N' ).

          IF SY-SUBRC IS NOT INITIAL.
            DATA(LC_CICLOS) = 4.
            WHILE LC_CICLOS IS NOT INITIAL AND LC_FATSERV IS INITIAL.
              WAIT UP TO 2 SECONDS.
              SELECT SINGLE A~VBELN INTO @LC_FATSERV
                FROM VBFA AS A
               WHERE A~VBELV    EQ @LC_VBELN
                 AND A~VBTYP_N  EQ 'M'
                 AND A~VBTYP_V  EQ 'C'
                 AND NOT EXISTS ( SELECT * FROM VBFA AS B WHERE B~VBELV   = A~VBELN AND B~VBTYP_N = 'N' ).
              SUBTRACT 1 FROM LC_CICLOS.
            ENDWHILE.
          ENDIF.

          IF SY-SUBRC IS INITIAL.
            <FS_SAIDA>-FATSERV = LC_FATSERV.
            LC_ST_PROC = '07'.
            SELECT SINGLE DOCNUM
              FROM J_1BNFLIN INTO <FS_SAIDA>-DACTE
             WHERE REFTYP EQ 'BI'
               AND REFKEY EQ <FS_SAIDA>-FATSERV.

            IF SY-SUBRC IS NOT INITIAL.
              LC_CICLOS = 4.
              WHILE LC_CICLOS IS NOT INITIAL AND <FS_SAIDA>-DACTE IS INITIAL.
                WAIT UP TO 2 SECONDS.
                SELECT SINGLE DOCNUM
                  FROM J_1BNFLIN INTO <FS_SAIDA>-DACTE
                 WHERE REFTYP EQ 'BI'
                   AND REFKEY EQ <FS_SAIDA>-FATSERV.
                SUBTRACT 1 FROM LC_CICLOS.
              ENDWHILE.
            ENDIF.

          ENDIF.

        ENDIF.

        UPDATE ZSDT0001 SET ST_PROC      = LC_ST_PROC
                            DOC_TRANSP   = <FS_SAIDA>-TRANSP
                            FKNUM        = <FS_SAIDA>-DOCCUS
                            OV_FRETE     = <FS_SAIDA>-OVSERV
                            FATURA_FRETE = <FS_SAIDA>-FATSERV
         WHERE CH_REFERENCIA EQ I_ROMANEIO_ATUAL-CH_REFERENCIA.
        COMMIT WORK.

      ENDIF.
    ENDIF.

  ENDLOOP.

ENDFUNCTION.
