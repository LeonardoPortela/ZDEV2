*&---------------------------------------------------------------------*
*&  Include           ZLESR0123_PBO
*&---------------------------------------------------------------------*

MODULE STATUS_0100 OUTPUT.
  DATA: URL(255)                TYPE C,
        DATA_INI(10)            TYPE C,
        DATA_FIM(10)            TYPE C,
        P_TEXT                  TYPE SDYDO_TEXT_ELEMENT,
        SDYDO_TEXT_ELEMENT(255),
        P_TEXT_TABLE            TYPE SDYDO_TEXT_TABLE,
        VL_CONT                 TYPE I.


  DATA:
    VL_MAT_E TYPE MARA-MATNR,
    VL_MAT_S TYPE MARA-MATNR.


  SET PF-STATUS 'STATUS'.
  SET TITLEBAR 'TITULO'.
  IF G_CUSTOM_CONTAINER IS INITIAL.

    CREATE OBJECT G_CUSTOM_CONTAINER
      EXPORTING
        CONTAINER_NAME              = 'CONTAINER'
      EXCEPTIONS
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5.

    IF SY-SUBRC <> 0.
      MESSAGE A000(TREE_CONTROL_MSG).
    ENDIF.

    CREATE OBJECT DG_SPLITTER_1
      EXPORTING
        PARENT  = G_CUSTOM_CONTAINER
        ROWS    = 2
        COLUMNS = 1.

    CALL METHOD DG_SPLITTER_1->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 1
      RECEIVING
        CONTAINER = DG_PARENT_1.

    CALL METHOD DG_SPLITTER_1->GET_CONTAINER
      EXPORTING
        ROW       = 2
        COLUMN    = 1
      RECEIVING
        CONTAINER = DG_PARENT_ALV.

    CREATE OBJECT DG_SPLITTER_2
      EXPORTING
        PARENT  = DG_PARENT_1
        ROWS    = 1
        COLUMNS = 2.

    CALL METHOD DG_SPLITTER_2->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 1
      RECEIVING
        CONTAINER = DG_PARENT_2.

    CALL METHOD DG_SPLITTER_2->GET_CONTAINER
      EXPORTING
        ROW       = 1
        COLUMN    = 2
      RECEIVING
        CONTAINER = DG_PARENT_2A.

    CALL METHOD DG_SPLITTER_1->SET_ROW_HEIGHT
      EXPORTING
        ID     = 1
        HEIGHT = 18.

    CALL METHOD DG_SPLITTER_2->SET_COLUMN_WIDTH
      EXPORTING
        ID    = 1
        WIDTH = 50.

    CREATE OBJECT PICTURE
      EXPORTING
        PARENT = DG_PARENT_2A.

    PERFORM PEGA_LOGO USING 'LOGO_NOVO' CHANGING URL.

    CALL METHOD PICTURE->LOAD_PICTURE_FROM_URL
      EXPORTING
        URL = URL.

    CALL METHOD PICTURE->SET_DISPLAY_MODE
      EXPORTING
        DISPLAY_MODE = PICTURE->DISPLAY_MODE_FIT_CENTER.

    PERFORM FILL_GS_VARIANT.

    GS_LAYOUT-SEL_MODE   = 'A'.
    GS_LAYOUT-STYLEFNAME = 'CELLSTYLES'.
    CLEAR: IT_EXCLUDE_FCODE, IT_EXCLUDE_FCODE[].


    CREATE OBJECT CTL_ALV
      EXPORTING
        I_PARENT = DG_PARENT_ALV.


    CALL METHOD CTL_ALV->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT
        IS_VARIANT           = GS_VARIANT
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
        I_SAVE               = 'A'
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG
        IT_OUTTAB            = T_SAIDA.

    CREATE OBJECT DG_DYNDOC_ID
      EXPORTING
        STYLE = 'ALV_GRID'.

    CALL METHOD DG_DYNDOC_ID->INITIALIZE_DOCUMENT.

    CALL METHOD DG_DYNDOC_ID->ADD_TABLE
      EXPORTING
        NO_OF_COLUMNS = 1
        BORDER        = '0'
        WIDTH         = '100%'
      IMPORTING
        TABLE         = TABLE_ELEMENT.

    CALL METHOD TABLE_ELEMENT->ADD_COLUMN
      IMPORTING
        COLUMN = COLUMN.

    CALL METHOD TABLE_ELEMENT->SET_COLUMN_STYLE
      EXPORTING
        COL_NO    = 1
        "SAP_ALIGN = 'CENTER'
        SAP_STYLE = CL_DD_DOCUMENT=>HEADING.

    P_TEXT = TEXT-003.

    CALL METHOD COLUMN->ADD_TEXT
      EXPORTING
        TEXT      = P_TEXT
        SAP_STYLE = 'HEADING'.

    CALL METHOD DG_DYNDOC_ID->ADD_TABLE
      EXPORTING
        NO_OF_COLUMNS = 2
        BORDER        = '0'
        WIDTH         = '100%'
      IMPORTING
        TABLE         = TABLE_ELEMENT2.

    CALL METHOD TABLE_ELEMENT2->ADD_COLUMN
      EXPORTING
        SAP_STYLE   = 'SAP_BOLD'
        STYLE_CLASS = 'SAP_BOLD'
      IMPORTING
        COLUMN      = COLUMN_1.

    CLEAR: P_TEXT_TABLE.
    "Agente de Frete
    IF P_LIFNR IS NOT INITIAL.

      LOOP AT P_LIFNR.
        IF P_LIFNR-OPTION NE 'EQ' AND P_LIFNR-OPTION NE 'BT'.
          SDYDO_TEXT_ELEMENT = 'Agente de Frete: Multiplas Seleções'.
          EXIT.
        ELSEIF P_LIFNR-OPTION EQ 'BT'.

          CONCATENATE 'Agente de Frete:' P_LIFNR-LOW  INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.

          CONCATENATE SDYDO_TEXT_ELEMENT P_LIFNR-HIGH INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
          EXIT.
        ELSE.
          VL_CONT = VL_CONT + 1.
          IF VL_CONT GT 1.
            SDYDO_TEXT_ELEMENT = 'Agente de Frete: Multiplas Seleções'.
          ELSE.
            CONCATENATE 'Agente de Frete:' P_LIFNR-LOW  INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
          ENDIF.
        ENDIF.
      ENDLOOP.
      APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.
      CLEAR: VL_CONT, SDYDO_TEXT_ELEMENT.
    ENDIF.
    "------------------
    "Itinerári
    IF P_ROUTE IS NOT  INITIAL.
      LOOP AT P_ROUTE.
        IF P_ROUTE-OPTION NE 'EQ' AND P_ROUTE-OPTION NE 'BT'.
          SDYDO_TEXT_ELEMENT = 'Itinerário: Multiplas Seleções'.
          EXIT.
        ELSEIF P_ROUTE-OPTION EQ 'BT'.

          CONCATENATE 'Itinerário:' P_ROUTE-LOW  INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.

          CONCATENATE SDYDO_TEXT_ELEMENT P_ROUTE-HIGH  INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.

          EXIT.
        ELSE.
          VL_CONT = VL_CONT + 1.
          IF VL_CONT GT 1.
            SDYDO_TEXT_ELEMENT = 'Itinerário: Multiplas Seleções'.
          ELSE.
            CONCATENATE 'Itinerário:' P_ROUTE-LOW  INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
          ENDIF.
        ENDIF.
      ENDLOOP.
      APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.
      CLEAR: VL_CONT, SDYDO_TEXT_ELEMENT.
    ENDIF.

    "Data de Entrada
    IF P_DATA IS NOT INITIAL.
      CONCATENATE  P_DATA-LOW+6(2)  '.'  P_DATA-LOW+4(2)  '.' P_DATA-LOW(4)  INTO DATA_INI.
      CONCATENATE  P_DATA-HIGH+6(2) '.'  P_DATA-HIGH+4(2) '.' P_DATA-HIGH(4) INTO DATA_FIM.

      CONCATENATE 'Data de Validade:  ' DATA_INI  INTO  SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
      IF DATA_FIM <> '00.00.0000' .
        CONCATENATE SDYDO_TEXT_ELEMENT DATA_FIM  INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
      ENDIF.

      APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.
      CLEAR: VL_CONT, SDYDO_TEXT_ELEMENT,  DATA_INI, DATA_FIM.
    ENDIF.
*    "------------------

*    "Zona de Partida
    IF P_ZONE1 IS NOT INITIAL.
      LOOP AT P_ZONE1.
        IF P_ZONE1-OPTION NE 'EQ' AND P_ZONE1-OPTION NE 'BT'.
          SDYDO_TEXT_ELEMENT = 'Zona de Partida : Multiplas Seleções'.
          EXIT.
        ELSEIF P_ZONE1-OPTION EQ 'BT'.
          CONCATENATE 'Zona de Partida:' P_ZONE1-LOW INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
          EXIT.
        ELSE.
          VL_CONT = VL_CONT + 1.
          IF VL_CONT GT 1.
            SDYDO_TEXT_ELEMENT = 'Zona de Partida: Multiplas Seleções'.
          ELSE.
            CONCATENATE 'Zona de Partida:' P_ZONE1-LOW INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
          ENDIF.
        ENDIF.
      ENDLOOP.
      APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.
      CLEAR: VL_CONT, SDYDO_TEXT_ELEMENT.
    ENDIF.


*    "Zona de chegada
    IF P_ZONE2 IS NOT INITIAL.
      LOOP AT P_ZONE2.
        IF P_ZONE2-OPTION NE 'EQ' AND P_ZONE2-OPTION NE 'BT'.
          SDYDO_TEXT_ELEMENT = 'Zona de Chegada : Multiplas Seleções'.
          EXIT.
        ELSEIF P_ZONE2-OPTION EQ 'BT'.
          CONCATENATE 'Zona de Chegada:' P_ZONE2-LOW INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
          EXIT.
        ELSE.
          VL_CONT = VL_CONT + 1.
          IF VL_CONT GT 1.
            SDYDO_TEXT_ELEMENT = 'Zona de Chegada: Multiplas Seleções'.
          ELSE.
            CONCATENATE 'Zona de Chegada:' P_ZONE2-LOW INTO SDYDO_TEXT_ELEMENT SEPARATED BY SPACE.
          ENDIF.
        ENDIF.
      ENDLOOP.
      APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.
      CLEAR: VL_CONT, SDYDO_TEXT_ELEMENT.
    ENDIF.


    "------------------
    CALL METHOD COLUMN_1->ADD_TEXT
      EXPORTING
        TEXT_TABLE = P_TEXT_TABLE
        FIX_LINES  = 'X'.

    CALL METHOD DG_DYNDOC_ID->MERGE_DOCUMENT.

    CREATE OBJECT DG_HTML_CNTRL
      EXPORTING
        PARENT = DG_PARENT_2.

    DG_DYNDOC_ID->HTML_CONTROL = DG_HTML_CNTRL.

    CALL METHOD DG_DYNDOC_ID->DISPLAY_DOCUMENT
      EXPORTING
        REUSE_CONTROL      = 'X'
        PARENT             = DG_PARENT_2
      EXCEPTIONS
        HTML_DISPLAY_ERROR = 1.

  ENDIF.
ENDMODULE.

FORM FILL_GS_VARIANT.
  GS_VARIANT-REPORT    = SY-REPID.
  GS_VARIANT-HANDLE     = '0100'.
  GS_VARIANT-LOG_GROUP  = ABAP_FALSE.
  GS_VARIANT-USERNAME   = ABAP_FALSE.
  GS_VARIANT-TEXT       = ABAP_FALSE.
  GS_VARIANT-DEPENDVARS = ABAP_FALSE.

ENDFORM.

FORM PEGA_LOGO USING NOME_LOGO CHANGING URL.

  DATA: BEGIN OF GRAPHIC_TABLE OCCURS 0,
          LINE(255) TYPE X,
        END OF GRAPHIC_TABLE.
  DATA: L_GRAPHIC_XSTR TYPE XSTRING.
  DATA: GRAPHIC_SIZE   TYPE I.
  DATA: L_GRAPHIC_CONV TYPE I.
  DATA: L_GRAPHIC_OFFS TYPE I.

  REFRESH GRAPHIC_TABLE.

  CALL METHOD CL_SSF_XSF_UTILITIES=>GET_BDS_GRAPHIC_AS_BMP
    EXPORTING
      P_OBJECT = 'GRAPHICS'
      P_NAME   = NOME_LOGO
      P_ID     = 'BMAP'
      P_BTYPE  = 'BCOL'
    RECEIVING
      P_BMP    = L_GRAPHIC_XSTR.

  GRAPHIC_SIZE = XSTRLEN( L_GRAPHIC_XSTR ).
  L_GRAPHIC_CONV = GRAPHIC_SIZE.
  L_GRAPHIC_OFFS = 0.

  WHILE L_GRAPHIC_CONV > 255.
    GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(255).
    APPEND GRAPHIC_TABLE.
    L_GRAPHIC_OFFS = L_GRAPHIC_OFFS + 255.
    L_GRAPHIC_CONV = L_GRAPHIC_CONV - 255.
  ENDWHILE.
  GRAPHIC_TABLE-LINE = L_GRAPHIC_XSTR+L_GRAPHIC_OFFS(L_GRAPHIC_CONV).
  APPEND GRAPHIC_TABLE.

  CALL FUNCTION 'DP_CREATE_URL'
    EXPORTING
      TYPE     = 'IMAGE'
      SUBTYPE  = 'X-UNKNOWN'
      SIZE     = GRAPHIC_SIZE
      LIFETIME = 'T'
    TABLES
      DATA     = GRAPHIC_TABLE
    CHANGING
      URL      = URL.

ENDFORM.
