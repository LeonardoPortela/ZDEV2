FUNCTION Z_REMETENTE_MERCADORIA_CTE.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_DOCNUM) TYPE  J_1BDOCNUM
*"  CHANGING
*"     VALUE(P_BUKRS) TYPE  BUKRS OPTIONAL
*"     VALUE(P_PARID) TYPE  J_1BPARID OPTIONAL
*"     VALUE(P_PARTYP) TYPE  J_1BPARTYP OPTIONAL
*"     VALUE(P_TP_FORNE) TYPE  ZTP_FORNECIMENTO OPTIONAL
*"     VALUE(P_DC_FORNE) TYPE  ZDC_FORNECIMENTO OPTIONAL
*"     VALUE(P_PARID_WE) TYPE  J_1BPARID OPTIONAL
*"     VALUE(P_PARID_PC) TYPE  J_1BPARID OPTIONAL
*"     VALUE(P_PARID_LR) TYPE  J_1BPARID OPTIONAL
*"     VALUE(P_PARID_RG) TYPE  J_1BPARID OPTIONAL
*"     VALUE(VG_VSTEL) TYPE  CHAR01 OPTIONAL
*"     VALUE(P_TKNUM) TYPE  TKNUM OPTIONAL
*"----------------------------------------------------------------------

  DATA: WA_J_1BNFLIN TYPE J_1BNFLIN,
        WA_J_1BNFDOC TYPE J_1BNFDOC,
        MT_VBRP      TYPE TABLE OF VBRP WITH HEADER LINE,
        MT_VBAK      TYPE VBAK,
        MT_VTTP      TYPE TABLE OF VTTP WITH HEADER LINE,
        MT_LIKP      TYPE LIKP,
        MT_TVEPZ     TYPE TVEPZ,
        MT_TVEP      TYPE TVEP,
        MT_VBFA      TYPE VBFA,
        VG_POSNN     TYPE POSNR_NACH,
        VG_INTERF_AV TYPE ZMMT_EE_ZGR_DOCS,
        WA_VBPA      TYPE VBPA.

  P_TP_FORNE = SPACE.
  VG_VSTEL   = SPACE.

  SELECT SINGLE * INTO WA_J_1BNFDOC
    FROM J_1BNFDOC
   WHERE DOCNUM EQ P_DOCNUM.

  IF SY-SUBRC IS INITIAL.
    P_BUKRS = WA_J_1BNFDOC-BUKRS.
    P_PARID = WA_J_1BNFDOC-PARID.
  ENDIF.

  SELECT SINGLE * INTO WA_J_1BNFLIN
    FROM J_1BNFLIN
   WHERE DOCNUM EQ P_DOCNUM.

  CHECK ( SY-SUBRC IS INITIAL ) AND ( WA_J_1BNFLIN-REFKEY IS NOT INITIAL ).

  SELECT * FROM VBRP INTO TABLE MT_VBRP
   WHERE VBELN = WA_J_1BNFLIN-REFKEY(10)
     AND POSNR = WA_J_1BNFLIN-REFITM.

  CHECK SY-SUBRC IS INITIAL.

  READ TABLE MT_VBRP INDEX 1.

  CHECK MT_VBRP-AUBEL IS NOT INITIAL.

  SELECT SINGLE * INTO MT_VBAK
    FROM VBAK
   WHERE VBELN EQ MT_VBRP-AUBEL.

  CHECK ( SY-SUBRC IS INITIAL ) AND ( MT_VBAK-TKNUM IS NOT INITIAL ).

  SELECT * INTO TABLE MT_VTTP
    FROM VTTP
   WHERE TKNUM = MT_VBAK-TKNUM.

  CHECK SY-SUBRC IS INITIAL.

  READ TABLE MT_VTTP INDEX 1.

  VG_POSNN = MT_VTTP-TPNUM.
  P_TKNUM  = MT_VTTP-TKNUM.

  SELECT SINGLE * INTO MT_VBFA
    FROM VBFA
   WHERE VBTYP_N EQ '8'
     AND VBELN   EQ MT_VTTP-TKNUM
     AND POSNN   EQ VG_POSNN
     AND VBELV   EQ MT_VTTP-VBELN.

  "Fornecimento devoluções para ordem
  IF ( MT_VBFA-VBTYP_V EQ 'J' ) OR ( MT_VBFA-VBTYP_V EQ '7' ) OR ( MT_VBFA-VBTYP_V EQ 'T' ).

    P_DC_FORNE = MT_VTTP-VBELN.

    SELECT SINGLE * INTO MT_LIKP
      FROM LIKP
     WHERE VBELN = MT_VTTP-VBELN.

    "Fornecimento é uma Remessa
    CASE MT_VBFA-VBTYP_V.
      WHEN 'J' OR 'T'.

        P_TP_FORNE = 'R'.
        VG_VSTEL   = SPACE.
        P_PARTYP   = 'C'.

        CALL FUNCTION 'Z_LES_TIPO_REMESSA'
          EXPORTING
            P_VBELN    = MT_VTTP-VBELN
          CHANGING
            P_PARID_RM = P_PARID    "Remetente da Mercadoria   = T1
            P_PARID_WE = P_PARID_WE "Receberdor da Mercadoria  = T3
            P_PARID_PC = P_PARID_PC "Ponto de Coleta           = T2
            P_PARID_LR = P_PARID_LR "Local de Entrega          = T4
            P_PARID_RG = P_PARID_RG
            VG_VSTEL   = VG_VSTEL.

        P_BUKRS = MT_LIKP-VKORG.
        IF VG_VSTEL IS INITIAL.
          P_PARID = MT_LIKP-VSTEL.
        ENDIF.

      WHEN '7'.

        SELECT SINGLE * FROM VBPA INTO WA_VBPA WHERE VBELN EQ MT_VTTP-VBELN AND PARVW EQ 'WL'.
        IF SY-SUBRC IS INITIAL.
          P_PARID = WA_VBPA-LIFNR.
        ELSE.
          P_PARID = MT_LIKP-LIFNR.
        ENDIF.

        P_TP_FORNE = 'A'.
        P_PARTYP   = 'V'.
    ENDCASE.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = P_PARID
      IMPORTING
        OUTPUT = P_PARID.

  ENDIF.

ENDFUNCTION.
