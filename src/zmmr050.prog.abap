REPORT ZMMR050.

TYPES:
  BEGIN OF TY_CADASTRO,
    MATRICULA       TYPE PERSNO,
    DT_VAL_DE       TYPE ZMMT0088-DT_VAL_DE,
    DT_VAL_ATE      TYPE ZMMT0088-DT_VAL_ATE,
    DT_VAL_DEN      TYPE ZMMT0088-DT_VAL_DE,
    DT_VAL_ATEN     TYPE ZMMT0088-DT_VAL_ATE,
    NOME            TYPE PA0002-CNAME,
    CPF             TYPE ZHCMT0007-CPF_NR,
    CARGO           TYPE CHAR40,
    EMPRESA         TYPE CHAR30,
    FILIAL          TYPE CHAR35,
    CENTRO_CUSTO    TYPE CHAR50,
    FOTO            TYPE STRING,
    HASH_DIGITAL_L  TYPE STRING,
    IMAGE_DIGITAL_L TYPE XSTRING,
    HASH_DIGITAL_R  TYPE STRING,
    IMAGE_DIGITAL_R TYPE XSTRING,
    SENHA           TYPE ZMMT0120-SENHA,
    SENHA2          TYPE ZMMT0120-SENHA,
    BTN1(4),
    BTN2(4),
  END OF TY_CADASTRO,

  BEGIN OF TY_FIELDS,
    GROUP TYPE CHAR3,
    VALUE TYPE NUM1,
  END OF TY_FIELDS.

DATA: BEGIN OF STR_TABLE OCCURS 0,
        LINE(255) TYPE C,
      END OF STR_TABLE.

DATA CADASTRO             TYPE TY_CADASTRO.
DATA STATUS_LEFT_DIGITAL  TYPE ICON-ID.
DATA STATUS_RIGHT_DIGITAL TYPE ICON-ID.
DATA SEARCH_ID            TYPE CHAR16.
DATA TERCEIRO             TYPE C.
DATA FUNCIONARIO          TYPE C.

CALL SCREEN 0001.

CLASS CL_MAIN DEFINITION.
  PUBLIC SECTION.
    METHODS CONSTRUCTOR.
    METHODS REGISTER.

    METHODS SET_TITLE.
    METHODS SET_STATUS.
    METHODS SET_FIELDS_STATE.
    METHODS PROCESS_BEFORE_OUTPUT CHANGING TABLE TYPE STANDARD TABLE OPTIONAL.

    METHODS SET_LEFT_DIGITAL_STATUS
      IMPORTING
        STATUS TYPE ICON-ID.

    METHODS SET_RIGHT_DIGITAL_STATUS
      IMPORTING
        STATUS TYPE ICON-ID.

    METHODS USER_COMMAND
      IMPORTING
        UCOMM TYPE SY-UCOMM.

    METHODS ENABLE_CAPTURE_BUTTONS.
    METHODS DISABLE_CAPTURE_BUTTONS.

    METHODS NOVA_DATA.
    "
    METHODS ENABLE_VALIDA.
    METHODS DISABLE_VALIDA.

    METHODS DISPLAY_LEFT_THUMB_IMAGE.
    METHODS DISPLAY_RIGHT_THUMB_IMAGE.
    METHODS DISPLAY_PHOTO.

*    METHODS GET_URL_FROM_IMAGE
*      IMPORTING
*        IMAGE_DATA TYPE STRING
*      RETURNING
*        VALUE(URL) TYPE CHAR255.

    METHODS IS_SAVED
      RETURNING VALUE(RESULT) TYPE ABAP_BOOL.

    METHODS SAVE_REGISTER EXCEPTIONS CANNOT_SAVE.
    METHODS DELETE_REGISTER EXCEPTIONS CANNOT_DELETE.

    METHODS SAVE_DIGITAL_AS_IMAGE.

    METHODS SEARCH_REGISTER.

    METHODS ALERT_BEFORE_EXIT
      EXCEPTIONS
        CANNOT_EXIT.

    METHODS FORMAT_CPF
      IMPORTING
        CPF          TYPE ANY
      RETURNING
        VALUE(VALUE) TYPE PA0465-CPF_NR.

    DATA MY_PIC TYPE REF TO CL_GUI_PICTURE.

  PRIVATE SECTION.
    DATA FIELDS_SCREEN TYPE TABLE OF TY_FIELDS.
    DATA FIELDS_SCREENW TYPE TY_FIELDS.

    DATA IMAGE_HELPER TYPE REF TO ZCL_IMAGE_HELPER.
    DATA BIOMETRY TYPE REF TO ZCL_BIOMETRY.

    DATA PICTURE_LEFT_THUMB TYPE REF TO CL_GUI_PICTURE.
    DATA CUSTOM_LEFT_THUMB  TYPE REF TO CL_GUI_CUSTOM_CONTAINER.

    DATA PICTURE_USER  TYPE REF TO CL_GUI_PICTURE.
    DATA CUSTOM_USER  TYPE REF TO CL_GUI_CUSTOM_CONTAINER.

    DATA PICTURE_RIGHT_THUMB TYPE REF TO CL_GUI_PICTURE.
    DATA CUSTOM_RIGHT_THUMB  TYPE REF TO CL_GUI_CUSTOM_CONTAINER.
ENDCLASS.


CLASS CL_MAIN IMPLEMENTATION.
  METHOD CONSTRUCTOR.
    ME->BIOMETRY = NEW ZCL_BIOMETRY( ).
    ME->IMAGE_HELPER = NEW ZCL_IMAGE_HELPER( ).
  ENDMETHOD.

  METHOD REGISTER.

  ENDMETHOD.

  METHOD SET_TITLE.
    SET TITLEBAR 'TITLE_MAIN'.
  ENDMETHOD.

  METHOD SET_FIELDS_STATE.
    LOOP AT SCREEN.
      LOOP AT FIELDS_SCREEN INTO DATA(_FIELD).
        IF SCREEN-GROUP1 = _FIELD-GROUP.
          SCREEN-INPUT = _FIELD-VALUE.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
*      IF SCREEN-NAME = 'CADASTRO-BTN1'.
*        IF CADASTRO-SENHA IS INITIAL .
*          CADASTRO-BTN1 = ICON_MESSAGE_WARNING.
*        ELSE.
*          CADASTRO-BTN1 = ICON_CHECKED.
*        ENDIF.
*        MODIFY SCREEN.
*      ENDIF.
*      IF SCREEN-NAME = 'CADASTRO-BTN2'.
*        IF CADASTRO-SENHA2 IS INITIAL .
*          CADASTRO-BTN2 = ICON_MESSAGE_WARNING.
*        ELSE.
*          CADASTRO-BTN2 = ICON_CHECKED.
*        ENDIF.
*        MODIFY SCREEN.
*      ENDIF.
    ENDLOOP.
  ENDMETHOD.

  METHOD SET_STATUS.
    SET PF-STATUS 'STATUS_MAIN'.
  ENDMETHOD.

  METHOD SET_LEFT_DIGITAL_STATUS.
    STATUS_LEFT_DIGITAL = STATUS.
  ENDMETHOD.

  METHOD SET_RIGHT_DIGITAL_STATUS.
    STATUS_RIGHT_DIGITAL = STATUS.
  ENDMETHOD.

  METHOD PROCESS_BEFORE_OUTPUT.
    ME->DISPLAY_LEFT_THUMB_IMAGE( ).
    ME->DISPLAY_RIGHT_THUMB_IMAGE( ).
    ME->DISPLAY_PHOTO( ).
  ENDMETHOD.

  METHOD NOVA_DATA.
    CADASTRO-DT_VAL_DEN   = SY-DATUM.
    CADASTRO-DT_VAL_ATEN  = CADASTRO-DT_VAL_ATE.
  ENDMETHOD.

  METHOD ENABLE_CAPTURE_BUTTONS.
*    ME->FIELDS_SCREEN = VALUE #( ( GROUP = 'GR1' VALUE = 1 ) ).

    DELETE ME->FIELDS_SCREEN WHERE GROUP = 'GR1'.
    ME->FIELDS_SCREENW = VALUE #(  GROUP = 'GR1' VALUE = 1  ).
    APPEND ME->FIELDS_SCREENW TO ME->FIELDS_SCREEN.
  ENDMETHOD.

  METHOD DISABLE_CAPTURE_BUTTONS.
*    ME->FIELDS_SCREEN = VALUE #( ( GROUP = 'GR1' VALUE = 0 ) ).

    DELETE ME->FIELDS_SCREEN WHERE GROUP = 'GR1'.
    ME->FIELDS_SCREENW = VALUE #(  GROUP = 'GR1' VALUE = 0  ).
    APPEND ME->FIELDS_SCREENW TO ME->FIELDS_SCREEN.
  ENDMETHOD.

  METHOD ENABLE_VALIDA.
*    ME->FIELDS_SCREEN = VALUE #( ( GROUP = 'GR2' VALUE = 1 ) ).

    DELETE ME->FIELDS_SCREEN WHERE GROUP = 'GR2'.
    ME->FIELDS_SCREENW = VALUE #(  GROUP = 'GR2' VALUE = 1  ).
    APPEND ME->FIELDS_SCREENW TO ME->FIELDS_SCREEN.
  ENDMETHOD.

  METHOD DISABLE_VALIDA.
*    ME->FIELDS_SCREEN = VALUE #( ( GROUP = 'GR2' VALUE = 0 ) ).

    DELETE ME->FIELDS_SCREEN WHERE GROUP = 'GR2'.
    ME->FIELDS_SCREENW = VALUE #(  GROUP = 'GR2' VALUE = 0  ).
    APPEND ME->FIELDS_SCREENW TO ME->FIELDS_SCREEN.
  ENDMETHOD.

  METHOD DISPLAY_LEFT_THUMB_IMAGE.
    DATA(_URL) =
      ME->BIOMETRY->GET_DIGITAL_AS_URL_IMAGE2(
      IMAGE_XSTRING = CADASTRO-IMAGE_DIGITAL_L ).

    ME->IMAGE_HELPER->DISPLAY(
      EXPORTING
        CUSTOM_NAME      = 'CUSTOM_LEFT_THUMB'
        URL              = _URL
      CHANGING
        CUSTOM_INSTANCE  = CUSTOM_LEFT_THUMB
        PICTURE_INSTANCE = PICTURE_LEFT_THUMB
    ).
  ENDMETHOD.

  METHOD DISPLAY_PHOTO.

    CALL METHOD ME->IMAGE_HELPER->GET_PHOTO_URL(
      EXPORTING
        NAME   = CONV #( CADASTRO-MATRICULA )
        ID     = ZCL_IMAGE_HELPER=>ID_REPOSITORY-HR_PHOTO
      RECEIVING
        RESULT = DATA(_URL) ).

    ME->IMAGE_HELPER->DISPLAY(
      EXPORTING
        CUSTOM_NAME      = 'CUSTOM_USER_PHOTO'
        URL              = _URL
      CHANGING
        CUSTOM_INSTANCE  = CUSTOM_USER
        PICTURE_INSTANCE = PICTURE_USER
    ).
  ENDMETHOD.

  METHOD DISPLAY_RIGHT_THUMB_IMAGE.
    DATA(_URL) =
      ME->BIOMETRY->GET_DIGITAL_AS_URL_IMAGE2(
      IMAGE_XSTRING = CADASTRO-IMAGE_DIGITAL_R ).

    ME->IMAGE_HELPER->DISPLAY(
      EXPORTING
        CUSTOM_NAME      = 'CUSTOM_RIGHT_THUMB'
        URL              = _URL
      CHANGING
        CUSTOM_INSTANCE  = CUSTOM_RIGHT_THUMB
        PICTURE_INSTANCE = PICTURE_RIGHT_THUMB
    ).
  ENDMETHOD.

  METHOD IS_SAVED.
    RESULT = COND #( WHEN STATUS_LEFT_DIGITAL EQ ICON_YELLOW_LIGHT
                     OR STATUS_RIGHT_DIGITAL EQ ICON_YELLOW_LIGHT THEN ABAP_FALSE ELSE ABAP_TRUE ).
  ENDMETHOD.

  METHOD USER_COMMAND.
    CASE UCOMM.
      WHEN 'BTN_ST1' OR 'BTN_ST2'.
        IF CADASTRO-SENHA IS INITIAL .
          CADASTRO-BTN1 = ICON_MESSAGE_WARNING.
        ELSE.
          CADASTRO-BTN1 = ICON_CHECKED.
        ENDIF.
        "
        IF CADASTRO-SENHA2 IS INITIAL .
          CADASTRO-BTN2 = ICON_MESSAGE_WARNING.
        ELSEIF CADASTRO-SENHA2 NE CADASTRO-SENHA.
          CADASTRO-BTN2 = ICON_MESSAGE_ERROR_SMALL.
        ELSE.
          CADASTRO-BTN2 = ICON_CHECKED.
        ENDIF.
      WHEN 'BACK' OR 'CANCEL'.
        ME->ALERT_BEFORE_EXIT( EXCEPTIONS CANNOT_EXIT = 4 ).

        CHECK SY-SUBRC IS INITIAL.
        LEAVE TO SCREEN 0.

      WHEN 'EXIT'.
        ME->ALERT_BEFORE_EXIT( EXCEPTIONS CANNOT_EXIT = 4 ).

        CHECK SY-SUBRC IS INITIAL.
        LEAVE PROGRAM.

      WHEN 'SAVE'.
        ME->SAVE_REGISTER( EXCEPTIONS CANNOT_SAVE = 4 ).

      WHEN 'DELETE'.
        ME->DELETE_REGISTER( EXCEPTIONS CANNOT_DELETE = 4 ).

      WHEN 'NEW_DIG'.
        CLEAR: CADASTRO-HASH_DIGITAL_L,
               CADASTRO-HASH_DIGITAL_R,
               CADASTRO-IMAGE_DIGITAL_L,
               CADASTRO-IMAGE_DIGITAL_R.

        ME->ENABLE_VALIDA( ).
        ME->NOVA_DATA( ).
        ME->SET_LEFT_DIGITAL_STATUS( ICON_RED_LIGHT ).
        ME->SET_RIGHT_DIGITAL_STATUS( ICON_RED_LIGHT ).
        ME->ENABLE_CAPTURE_BUTTONS( ).

      WHEN 'ENTER'.
        ME->DISABLE_VALIDA( ).
        ME->DISABLE_CAPTURE_BUTTONS( ).
        ME->SEARCH_REGISTER( ).

      WHEN 'GET_LEFT_DIGITAL'.
        CALL METHOD BIOMETRY->GET_HASH_DIGITAL
          IMPORTING
            HASH_DIGITAL         = CADASTRO-HASH_DIGITAL_L
            IMAGE_XSTRING        = CADASTRO-IMAGE_DIGITAL_L
          EXCEPTIONS
            COMMUNICATION_FAILED = 1
            HASH_DIGITAL_EMPTY   = 2
            OTHERS               = 3.

        IF SY-SUBRC <> 0.
          ME->SET_LEFT_DIGITAL_STATUS( ICON_RED_LIGHT ).

          MESSAGE ID SY-MSGID TYPE SY-MSGTY
           NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE 'E'.

        ELSE.
          ME->SET_LEFT_DIGITAL_STATUS( ICON_YELLOW_LIGHT ).
        ENDIF.
      WHEN 'GET_RIGHT_DIGITAL'.
        CALL METHOD BIOMETRY->GET_HASH_DIGITAL
          IMPORTING
            HASH_DIGITAL         = CADASTRO-HASH_DIGITAL_R
            IMAGE_XSTRING        = CADASTRO-IMAGE_DIGITAL_R
          EXCEPTIONS
            COMMUNICATION_FAILED = 1
            HASH_DIGITAL_EMPTY   = 2
            OTHERS               = 3.

        IF SY-SUBRC <> 0.
          ME->SET_RIGHT_DIGITAL_STATUS( ICON_RED_LIGHT ).

          MESSAGE ID SY-MSGID TYPE SY-MSGTY
           NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE 'E'.

        ELSE.
          ME->SET_RIGHT_DIGITAL_STATUS( ICON_YELLOW_LIGHT ).
        ENDIF.
    ENDCASE.
  ENDMETHOD.

  METHOD DELETE_REGISTER.

    DATA USER_REGISTER TYPE PA0001.
    DATA CPF           TYPE PA0465-CPF_NR.

    REPLACE ALL OCCURRENCES OF '.' IN SEARCH_ID WITH SPACE.
    REPLACE ALL OCCURRENCES OF '-' IN SEARCH_ID WITH SPACE.

    CLEAR CADASTRO.

    SELECT SINGLE *
      FROM PA0001 AS A
     INNER JOIN PA0465 AS B ON A~PERNR = B~PERNR
      INTO CORRESPONDING FIELDS OF USER_REGISTER
     WHERE A~PERNR = SEARCH_ID
       AND A~ENDDA = '99991231'
       AND B~SUBTY = '0001'.

    IF ( SY-SUBRC IS INITIAL ).
      TRY.
          ME->BIOMETRY->DELETE_DIGITAL( EXPORTING REGISTRATION = USER_REGISTER-PERNR ).
          ME->SET_LEFT_DIGITAL_STATUS( ICON_RED_LIGHT ).
          ME->SET_RIGHT_DIGITAL_STATUS( ICON_RED_LIGHT ).
          ME->ENABLE_CAPTURE_BUTTONS( ).
        CATCH ZCX_BIOMETRY.
      ENDTRY.
    ELSE.
      MESSAGE TEXT-002 TYPE 'S' DISPLAY LIKE 'E'.
    ENDIF.

  ENDMETHOD.

  METHOD SAVE_REGISTER.

    IF CADASTRO-MATRICULA IS INITIAL.
      MESSAGE S016(ZBIOMETRIA) DISPLAY LIKE 'E'.
      RAISE CANNOT_SAVE.
    ELSEIF CADASTRO-DT_VAL_DEN IS NOT INITIAL AND CADASTRO-SENHA  IS NOT INITIAL. "nova senha
      SELECT SINGLE *
        FROM ZMMT0121
        INTO @DATA(WA_ZMMT0121)
        WHERE MATRICULA = @CADASTRO-MATRICULA
        AND NOT EXISTS ( SELECT * FROM ZMMT0120
                        WHERE MATRICULA = ZMMT0121~MATRICULA
                        AND   NU_LIB    = ZMMT0121~NU_LIB ).
      IF SY-SUBRC NE 0.
        MESSAGE S017(ZBIOMETRIA) DISPLAY LIKE 'E'.
        RAISE CANNOT_SAVE.
      ENDIF.
      "
      SELECT SINGLE *
        FROM ZMMT0120
        INTO @DATA(WA_ZMMT0120_)
        WHERE MATRICULA  = @CADASTRO-MATRICULA
        AND   DT_VAL_DE  = @CADASTRO-DT_VAL_DEN
        AND   DT_VAL_ATE = @CADASTRO-DT_VAL_ATEN.

      IF SY-SUBRC EQ 0.
        MESSAGE S020(ZBIOMETRIA) DISPLAY LIKE 'E'.
        RAISE CANNOT_SAVE.
      ENDIF.
    ELSEIF CADASTRO-DT_VAL_DEN IS INITIAL AND CADASTRO-SENHA  IS NOT INITIAL. " Alterar Senha
      SELECT SINGLE *
        FROM ZMMT0120
        INTO @DATA(WA_ZMMT0120)
        WHERE MATRICULA = @CADASTRO-MATRICULA.
      IF SY-SUBRC EQ 0.
        MESSAGE S018(ZBIOMETRIA) DISPLAY LIKE 'E'.
        RAISE CANNOT_SAVE.
      ENDIF.
    ENDIF.
    IF ( ( CADASTRO-SENHA  IS NOT INITIAL ) AND ( CADASTRO-SENHA2 IS NOT INITIAL ) ).
      IF CADASTRO-SENHA NE CADASTRO-SENHA2.
        MESSAGE S013(ZBIOMETRIA) DISPLAY LIKE 'E'.
        RAISE CANNOT_SAVE.
      ENDIF.
      DATA(VTAM) = STRLEN( CADASTRO-SENHA ).
      IF VTAM LT 6.
        MESSAGE S014(ZBIOMETRIA) DISPLAY LIKE 'E'.
        RAISE CANNOT_SAVE.
      ENDIF.

    ENDIF.

    IF ( ( CADASTRO-HASH_DIGITAL_L  IS INITIAL ) OR ( CADASTRO-HASH_DIGITAL_R IS INITIAL ) ) AND
       ( ( CADASTRO-SENHA  IS INITIAL ) OR ( CADASTRO-SENHA2 IS INITIAL ) ).
      MESSAGE S003(ZBIOMETRIA) DISPLAY LIKE 'E'.
      RAISE CANNOT_SAVE.
    ELSE.
      IF ( ( CADASTRO-HASH_DIGITAL_L  IS NOT INITIAL ) AND ( CADASTRO-HASH_DIGITAL_R IS NOT INITIAL ) ).
        CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
          EXPORTING
            PERCENTAGE = 50
            TEXT       = 'Salvando digitais...'.

        BIOMETRY->REGISTER_DIGITAL(
          EXPORTING
            REGISTRATION           = CADASTRO-MATRICULA
            HASH_LEFT_DIGITAL      = CADASTRO-HASH_DIGITAL_L
            HASH_RIGHT_DIGITAL     = CADASTRO-HASH_DIGITAL_R
            HASH_LEFT_DIGITAL_IMG  = CADASTRO-IMAGE_DIGITAL_L
            HASH_RIGHT_DIGITAL_IMG = CADASTRO-IMAGE_DIGITAL_R
            DT_VAL_DE              = CADASTRO-DT_VAL_DE
            DT_VAL_ATE             = CADASTRO-DT_VAL_ATE
            DT_VAL_DEN             = CADASTRO-DT_VAL_DEN
            DT_VAL_ATEN            = CADASTRO-DT_VAL_ATEN
          EXCEPTIONS
            REGISTRATION_FAILED    = 4
        ).

        IF SY-SUBRC IS INITIAL.
          ME->SAVE_DIGITAL_AS_IMAGE( ).

          MESSAGE S005(ZBIOMETRIA).

          ME->SET_LEFT_DIGITAL_STATUS( ICON_GREEN_LIGHT ).
          ME->SET_RIGHT_DIGITAL_STATUS( ICON_GREEN_LIGHT ).
          ME->DISABLE_CAPTURE_BUTTONS( ).

        ELSE.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY
          NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE 'E'.
          RAISE CANNOT_SAVE.
        ENDIF.
      ENDIF.
      "
      IF ( ( CADASTRO-SENHA  IS NOT INITIAL ) AND ( CADASTRO-SENHA2 IS NOT INITIAL ) ).
        CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
          EXPORTING
            PERCENTAGE = 50
            TEXT       = 'Salvando senha...'.

        BIOMETRY->REGISTER_PASSWORD(
          EXPORTING
            REGISTRATION        = CADASTRO-MATRICULA
            SENHA               = CADASTRO-SENHA
            DT_VAL_DE           = CADASTRO-DT_VAL_DE
            DT_VAL_ATE          = CADASTRO-DT_VAL_ATE
            DT_VAL_DEN          = CADASTRO-DT_VAL_DEN
            DT_VAL_ATEN         = CADASTRO-DT_VAL_ATEN
            NU_LIB              = WA_ZMMT0121-NU_LIB
          EXCEPTIONS
            REGISTRATION_FAILED = 4
        ).

        IF SY-SUBRC IS INITIAL.
          MESSAGE S015(ZBIOMETRIA).
        ELSE.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY
          NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE 'E'.
          RAISE CANNOT_SAVE.
        ENDIF.
      ENDIF.
      "
    ENDIF.
  ENDMETHOD.

  METHOD SAVE_DIGITAL_AS_IMAGE.

    DATA BINARY_DATA  TYPE XSTRING.
    DATA BASE64_IMAGE TYPE STRING.
    DATA STR_TABLE    TYPE STANDARD TABLE OF X255.
    DATA V_DATA(8).

    DATA(_IMAGE_HELPER) = NEW ZCL_IMAGE_HELPER( ).

    BINARY_DATA = CADASTRO-IMAGE_DIGITAL_L.

    CLEAR V_DATA.

    IF CADASTRO-DT_VAL_DEN IS NOT INITIAL.
      V_DATA = CADASTRO-DT_VAL_DEN.
    ELSEIF CADASTRO-DT_VAL_DE NE  '19000101' AND CADASTRO-DT_VAL_DE IS NOT INITIAL. "Cadastro inicial
      V_DATA = CADASTRO-DT_VAL_DE.
    ENDIF.
    "//Call JPEG->BMP transformation
    DATA(_BITMAP_LEFT_DIGITAL) = _IMAGE_HELPER->CONVERT_JPEG_TO_BMP( IMAGE_BIN_STR = BINARY_DATA ).

    _IMAGE_HELPER->SAVE_BITMAP_BDS(
      EXPORTING
        NAME  = |DIGITAL_LEFT_{ CADASTRO-MATRICULA }{ V_DATA }|
      CHANGING
        IMAGE = _BITMAP_LEFT_DIGITAL
    ).

    BINARY_DATA = CADASTRO-IMAGE_DIGITAL_R.

    "//Call JPEG->BMP transformation
    DATA(_BITMAP_RIGHT_DIGITAL) = _IMAGE_HELPER->CONVERT_JPEG_TO_BMP( IMAGE_BIN_STR = BINARY_DATA ).

    _IMAGE_HELPER->SAVE_BITMAP_BDS(
      EXPORTING
        NAME  = |DIGITAL_RIGHT_{ CADASTRO-MATRICULA }{ V_DATA }|
      CHANGING
        IMAGE = _BITMAP_RIGHT_DIGITAL
    ).
  ENDMETHOD.

  METHOD FORMAT_CPF.
    WRITE CPF USING EDIT MASK '___.___.___-__' TO VALUE.
  ENDMETHOD.

  METHOD SEARCH_REGISTER.
    DATA: TL_DYNPFIELDS TYPE TABLE OF DYNPREAD,
          WL_DYNPFIELDS TYPE DYNPREAD.
    DATA USER_REGISTER TYPE PA0001.
    DATA CPF           TYPE PA0465-CPF_NR.
    DATA MATRICULA     TYPE ZMMT0101-MATRICULA.
    DATA V_DT_DESLIGAMENTO TYPE DATS.

    REPLACE ALL OCCURRENCES OF '.' IN SEARCH_ID WITH SPACE.
    REPLACE ALL OCCURRENCES OF '-' IN SEARCH_ID WITH SPACE.

    DATA(SENHA1) = CADASTRO-SENHA.
    DATA(SENHA2) = CADASTRO-SENHA2.
    CLEAR CADASTRO.

    CADASTRO-SENHA = SENHA1.
    CADASTRO-SENHA2 = SENHA2.

    IF CADASTRO-SENHA IS INITIAL .
      CADASTRO-BTN1 = ICON_MESSAGE_WARNING.
    ELSE.
      CADASTRO-BTN1 = ICON_CHECKED.
    ENDIF.
    "
    IF CADASTRO-SENHA2 IS INITIAL .
      CADASTRO-BTN2 = ICON_MESSAGE_WARNING.
    ELSEIF CADASTRO-SENHA2 NE CADASTRO-SENHA.
      CADASTRO-BTN2 = ICON_MESSAGE_ERROR_SMALL.
    ELSE.
      CADASTRO-BTN2 = ICON_CHECKED.
    ENDIF.

    IF FUNCIONARIO = 'X'.

      SELECT SINGLE *
        FROM PA0001 AS A
       INNER JOIN PA0465 AS B ON A~PERNR = B~PERNR
        INTO CORRESPONDING FIELDS OF USER_REGISTER
       WHERE A~PERNR = SEARCH_ID
         AND A~ENDDA = '99991231'
         AND B~SUBTY = '0001'.

      SELECT SINGLE CPF_NR
        FROM PA0465
        INTO CPF
       WHERE PERNR = SEARCH_ID.

      IF NOT SY-SUBRC IS INITIAL.
        CPF = ME->FORMAT_CPF( SEARCH_ID ).

        SELECT SINGLE *
          FROM PA0465 AS A
         INNER JOIN PA0001 AS B ON A~PERNR = B~PERNR
          INTO CORRESPONDING FIELDS OF USER_REGISTER
         WHERE A~CPF_NR = CPF
           AND B~ENDDA  = '99991231'
           AND A~SUBTY    = '0001'.
      ENDIF.

                                                            "US158200
      CALL FUNCTION 'RP_GET_FIRE_DATE'
        EXPORTING
          PERSNR   = USER_REGISTER-PERNR
          STATUS2  = '0'
        IMPORTING
          FIREDATE = V_DT_DESLIGAMENTO.
      IF V_DT_DESLIGAMENTO IS NOT INITIAL.
        CLEAR USER_REGISTER.
        MESSAGE TEXT-002 TYPE 'S' DISPLAY LIKE 'E'.
        EXIT.
      ENDIF.
                                                            "US158200
    ELSE.

      MATRICULA = SEARCH_ID.

      SELECT SINGLE *
        FROM ZMMT0101 INTO @DATA(WA_ZMMT0101)
       WHERE MATRICULA EQ @MATRICULA.

      CPF = WA_ZMMT0101-CPF.

      IF NOT SY-SUBRC IS INITIAL.
        CPF = ME->FORMAT_CPF( SEARCH_ID ).

        SELECT SINGLE *
            FROM ZMMT0101 INTO WA_ZMMT0101
           WHERE CPF EQ CPF.
      ENDIF.

      IF WA_ZMMT0101 IS NOT INITIAL.
        USER_REGISTER-WERKS = WA_ZMMT0101-FILIAL.
        USER_REGISTER-ENAME = WA_ZMMT0101-NOME.
        USER_REGISTER-PERNR = WA_ZMMT0101-MATRICULA.
      ENDIF.

      CLEAR MATRICULA.

    ENDIF.


    IF ( USER_REGISTER IS NOT INITIAL ).

      ME->SET_LEFT_DIGITAL_STATUS( ICON_RED_LIGHT ).
      ME->SET_RIGHT_DIGITAL_STATUS( ICON_RED_LIGHT ).
      ME->ENABLE_CAPTURE_BUTTONS( ).

      SELECT SINGLE BUKRS, BUTXT
        FROM T001
        INTO @DATA(_EMPRESA)
       WHERE BUKRS = @USER_REGISTER-BUKRS.

      SELECT SINGLE WERKS, NAME1
        FROM T001W
        INTO @DATA(_FILIAL)
       WHERE WERKS = @USER_REGISTER-WERKS.

      SELECT SINGLE KOSTL, LTEXT
        FROM CSKT
        INTO @DATA(_CENTRO_CUSTO)
       WHERE KOSTL = @USER_REGISTER-KOSTL.

      CADASTRO-NOME         = USER_REGISTER-ENAME.
      CADASTRO-FILIAL       = |{ _FILIAL-WERKS       } - { _FILIAL-NAME1       }|.
      IF TERCEIRO = 'X'.
        CADASTRO-EMPRESA      = 'Terceiro'.
        CADASTRO-CENTRO_CUSTO = 'Terceiro'.
      ELSE.
        CADASTRO-CENTRO_CUSTO = |{ _CENTRO_CUSTO-KOSTL } - { _CENTRO_CUSTO-LTEXT }|.
        CADASTRO-EMPRESA      = |{ _EMPRESA-BUKRS      } - { _EMPRESA-BUTXT      }|.
      ENDIF.
      CADASTRO-MATRICULA    = USER_REGISTER-PERNR.
      CADASTRO-CPF          = CPF.

      TRY.
          ME->BIOMETRY->READ_DIGITAL(
            EXPORTING
              REGISTRATION = CADASTRO-MATRICULA
            RECEIVING
              RESULT       = DATA(_RESULT)
          ).

          CADASTRO-DT_VAL_DE        = _RESULT-DT_VAL_DE.
          CADASTRO-DT_VAL_ATE       = _RESULT-DT_VAL_ATE.
          CADASTRO-HASH_DIGITAL_L   = _RESULT-POLEGAR_ESQUERDO.
          CADASTRO-HASH_DIGITAL_R   = _RESULT-POLEGAR_DIREITO.
          CADASTRO-IMAGE_DIGITAL_L  = _RESULT-IM_POLEGAR_ESQUERDO.
          CADASTRO-IMAGE_DIGITAL_R  = _RESULT-IM_POLEGAR_DIREITO.

          IF CADASTRO-HASH_DIGITAL_L  IS NOT INITIAL AND CADASTRO-HASH_DIGITAL_R  IS NOT INITIAL AND
             CADASTRO-IMAGE_DIGITAL_L IS NOT INITIAL AND CADASTRO-IMAGE_DIGITAL_R IS NOT INITIAL.
            ME->DISABLE_CAPTURE_BUTTONS( ).
            ME->SET_LEFT_DIGITAL_STATUS( ICON_GREEN_LIGHT ).
            ME->SET_RIGHT_DIGITAL_STATUS( ICON_GREEN_LIGHT ).
          ENDIF.

        CATCH ZCX_BIOMETRY.
      ENDTRY.

    ELSE.
      ME->SET_LEFT_DIGITAL_STATUS( ICON_RED_LIGHT ).
      ME->SET_RIGHT_DIGITAL_STATUS( ICON_RED_LIGHT ).

      MESSAGE TEXT-001 TYPE 'S' DISPLAY LIKE 'E'.
    ENDIF.
  ENDMETHOD.

  METHOD ALERT_BEFORE_EXIT.

    CHECK ME->IS_SAVED( ) = ABAP_FALSE.

    DATA ANSWER TYPE C.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        TITLEBAR       = 'Alerta'
*       DIAGNOSE_OBJECT       = ' '
        TEXT_QUESTION  = 'Deseja salvar as digitais antes de sair?'
        TEXT_BUTTON_1  = 'Sim'
*       ICON_BUTTON_1  = ' '
        TEXT_BUTTON_2  = 'Não'
*       ICON_BUTTON_2  = ' '
        DEFAULT_BUTTON = '1'
*       DISPLAY_CANCEL_BUTTON = 'X'
*       USERDEFINED_F1_HELP   = ' '
*       START_COLUMN   = 25
*       START_ROW      = 6
*       POPUP_TYPE     =
*       IV_QUICKINFO_BUTTON_1 = ' '
*       IV_QUICKINFO_BUTTON_2 = ' '
      IMPORTING
        ANSWER         = ANSWER
*     TABLES
*       PARAMETER      =
*     EXCEPTIONS
*       TEXT_NOT_FOUND = 1
*       OTHERS         = 2
      .
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.

    IF ANSWER = '1'.
      ME->SAVE_REGISTER( EXCEPTIONS CANNOT_SAVE = 4 ).

      IF SY-SUBRC <> 0.
        RAISE CANNOT_EXIT.
      ENDIF.
    ENDIF.

  ENDMETHOD.
ENDCLASS.

DATA MAIN TYPE REF TO CL_MAIN.

MODULE OUTPUT_MAIN OUTPUT.
  IF ( MAIN IS INITIAL ).
    MAIN = NEW CL_MAIN( ).

    MAIN->SET_LEFT_DIGITAL_STATUS( ICON_RED_LIGHT ).
    MAIN->SET_RIGHT_DIGITAL_STATUS( ICON_RED_LIGHT ).
    MAIN->DISABLE_CAPTURE_BUTTONS( ).
    MAIN->DISABLE_VALIDA( ).
  ENDIF.

  MAIN->SET_STATUS( ).
  MAIN->SET_TITLE( ).
  MAIN->SET_FIELDS_STATE( ).

  MAIN->PROCESS_BEFORE_OUTPUT( ).
ENDMODULE.
MODULE INPUT_MAIN INPUT.
  MAIN->USER_COMMAND( UCOMM = SY-UCOMM ).
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SEARCH_ICON  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SEARCH_ICON INPUT.
  IF CADASTRO-SENHA IS INITIAL .
    CADASTRO-BTN1 = ICON_MESSAGE_WARNING.
  ELSE.
    CADASTRO-BTN1 = ICON_CHECKED.
  ENDIF.
  "
  IF CADASTRO-SENHA2 IS INITIAL .
    CADASTRO-BTN2 = ICON_MESSAGE_WARNING.
  ELSEIF CADASTRO-SENHA2 NE CADASTRO-SENHA.
    CADASTRO-BTN2 = ICON_MESSAGE_ERROR_SMALL.
  ELSE.
    CADASTRO-BTN2 = ICON_CHECKED.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  SEARCH_DOC  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE SEARCH_DOC INPUT.

  IF TERCEIRO IS NOT INITIAL.
    CALL METHOD ZCL_UTIL=>GET_AJUDA_PESQUISA
      EXPORTING
        I_AJUDA_PESQUISA = 'ZHELP_MATRICULA_TERCEIRO'.
  ELSE.
    CALL METHOD ZCL_UTIL=>GET_AJUDA_PESQUISA
      EXPORTING
        I_AJUDA_PESQUISA = 'HRAAPUN_PREM'.
  ENDIF.

ENDMODULE.
