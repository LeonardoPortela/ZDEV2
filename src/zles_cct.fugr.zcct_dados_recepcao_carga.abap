FUNCTION ZCCT_DADOS_RECEPCAO_CARGA.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_DOCNUM) TYPE  J_1BDOCNUM OPTIONAL
*"     REFERENCE(I_ITMNUM) TYPE  J_1BITMNUM OPTIONAL
*"     REFERENCE(I_SET_PESO_DISP_USO) TYPE  C OPTIONAL
*"  EXPORTING
*"     REFERENCE(E_ZLEST0146) TYPE  ZLEST0146
*"     REFERENCE(E_ZLEST0147) TYPE  ZLEST0147_T
*"     REFERENCE(E_ZLEST0168) TYPE  ZLEST0168_T
*"     REFERENCE(E_DOC_RATEIO) TYPE  CHAR01
*"----------------------------------------------------------------------

  DATA: WL_ZLEST0146 TYPE ZLEST0146,
        WL_ZLEST0147 TYPE ZLEST0147,
        WL_ZLEST0142 TYPE ZLEST0142,
        WL_ZLEST0168 TYPE ZLEST0168.

  DATA: V_MENGE     LIKE EKPO-MENGE,
        V_MENGE_NF  LIKE J_1BNFLIN-MENGE,
        V_CHAVE_NFE TYPE ZDE_CHAVE_NFE,
        V_CHAVE_NFF TYPE ZDE_CHAVE_NFF,
        LVA_PESO_S  TYPE CHAR50,
        WL_LFA1_INTERCOMPANY TYPE LFA1.

  CLEAR: E_ZLEST0146,  E_ZLEST0147, E_ZLEST0168, E_DOC_RATEIO,
         WL_ZLEST0146, WL_ZLEST0147, WL_ZLEST0168,  WL_ZLEST0142.

  CHECK I_DOCNUM IS NOT INITIAL.

  CALL FUNCTION 'ZCCT_MONTA_CHAVE_DOCUMENTO'
    EXPORTING
      I_DOCNUM                = I_DOCNUM
      I_CK_ENTRADA_PROPRIA    = ABAP_TRUE
    IMPORTING
      E_CHAVE_NFE             = V_CHAVE_NFE
      E_CHAVE_NFF             = V_CHAVE_NFF.

  CHECK ( V_CHAVE_NFE IS NOT INITIAL ) OR ( V_CHAVE_NFF IS NOT INITIAL ).

  SELECT SINGLE * INTO WL_ZLEST0147
    FROM ZLEST0147 AS A
   WHERE A~CHAVE_NFE EQ V_CHAVE_NFE
     AND A~CHAVE_NFF EQ V_CHAVE_NFF
     AND EXISTS ( SELECT ID_RECEPCAO
                    FROM ZLEST0146 AS B
                   WHERE B~ID_RECEPCAO EQ A~ID_RECEPCAO
                     AND B~CANCEL      EQ ABAP_FALSE ).
  IF SY-SUBRC EQ 0.

    SELECT SINGLE *
      FROM ZLEST0146 INTO WL_ZLEST0146
     WHERE ID_RECEPCAO EQ WL_ZLEST0147-ID_RECEPCAO
       AND CANCEL      EQ ABAP_FALSE.

    CHECK SY-SUBRC EQ 0.

    SELECT SINGLE *
      FROM ZLEST0142 INTO WL_ZLEST0142
     WHERE CHAVE_NFE   EQ V_CHAVE_NFE
       AND CHAVE_NFF   EQ V_CHAVE_NFF
       AND ID_RECEPCAO EQ WL_ZLEST0147-ID_RECEPCAO.

    E_ZLEST0146 = WL_ZLEST0146.

    CLEAR: WL_LFA1_INTERCOMPANY.

    IF V_CHAVE_NFE IS NOT INITIAL.
      SELECT SINGLE *
        FROM LFA1 INTO WL_LFA1_INTERCOMPANY
       WHERE STCD1 EQ V_CHAVE_NFE+06(14)
         AND KTOKK EQ 'ZFIC'.
    ENDIF.

    IF ( WL_ZLEST0147-PESO_FISCAL IS INITIAL ) AND ( WL_ZLEST0142-PESO_FISCAL IS NOT INITIAL ).
      WL_ZLEST0147-PESO_FISCAL = WL_ZLEST0142-PESO_FISCAL.
    ENDIF.

    "---------------------------------------------------------------------"
    " Seta Peso Disponivel para Uso
    "---------------------------------------------------------------------"
    IF ( I_SET_PESO_DISP_USO EQ ABAP_TRUE ).

      E_ZLEST0146-PESO_DISPONIVEL_USO = E_ZLEST0146-PESO_AFERIDO_RECEPCAO.

      DATA(_LIM_PESO_NFF) = ABAP_FALSE. "Peso Limitado Pela Nota fiscal de formulario vinculada a Entrada propria

      SELECT SINGLE *
        FROM J_1BNFDOC INTO @DATA(_WL_DOC)
       WHERE DOCNUM EQ @I_DOCNUM.

      IF ( SY-SUBRC EQ 0 ) AND ( _WL_DOC-ENTRAD EQ ABAP_TRUE ). "Entrada propria
        SELECT SINGLE *
          FROM ZMMT_EE_ZGR_DOCS INTO @DATA(_WL_EE_ZGR_DOCS)
         WHERE DOCNUM EQ @_WL_DOC-DOCNUM.

        IF SY-SUBRC EQ 0.
          SELECT SINGLE *
            FROM ZMMT_EE_ZGR INTO @DATA(_WL_EE_ZGR)
           WHERE OBJ_KEY EQ @_WL_EE_ZGR_DOCS-OBJ_KEY.

          IF ( SY-SUBRC EQ 0 ) AND ( _WL_EE_ZGR-CH_REFERENCIA IS NOT INITIAL ).
            SELECT SINGLE *
              FROM ZSDT0001 INTO @DATA(_WL_ZSDT0001)
             WHERE CH_REFERENCIA EQ @_WL_EE_ZGR-CH_REFERENCIA.

            IF ( SY-SUBRC EQ 0 ) AND ( _WL_ZSDT0001-PESO_FISCAL > 0 ).
              IF E_ZLEST0146-PESO_AFERIDO_RECEPCAO > _WL_ZSDT0001-PESO_FISCAL.

                DATA(CK_ATRIB_PESO_LIM) = ABAP_TRUE.

                "Regra Temporaria
                IF ( WL_ZLEST0147-CHAVE_NFE_PROP IS NOT INITIAL ).
                  IF ( WL_ZLEST0147-CHAVE_NFE_PROP+6(14) EQ '77294254002138' ).
                    CK_ATRIB_PESO_LIM = ABAP_FALSE.
                  ENDIF.
                ENDIF.

                IF CK_ATRIB_PESO_LIM EQ ABAP_TRUE.
                  E_ZLEST0146-PESO_DISPONIVEL_USO = _WL_ZSDT0001-PESO_FISCAL.
                  _LIM_PESO_NFF = ABAP_TRUE.
                ENDIF.

              ENDIF.
            ENDIF.
          ENDIF.     "IF ( SY-SUBRC EQ 0 ) AND ( _WL_EE_ZGR-CH_REFERENCIA IS NOT INITIAL ).
        ENDIF.   "IF SY-SUBRC EQ 0.
      ENDIF. "IF ( SY-SUBRC EQ 0 ) AND ( _WL_DOC-ENTRAD EQ ABAP_TRUE ). "Entrada propria


      SELECT SINGLE *
        FROM J_1BNFLIN INTO @DATA(_WL_LIN)
       WHERE DOCNUM EQ @I_DOCNUM
         AND ITMNUM EQ @I_ITMNUM.

      IF ( SY-SUBRC EQ 0 ) AND ( _LIM_PESO_NFF EQ ABAP_FALSE ) .
        CLEAR: V_MENGE_NF.

        IF _WL_LIN-MEINS NE 'KG'.
          CALL FUNCTION 'ME_CONVERSION_MEINS'
            EXPORTING
              I_MATNR             = _WL_LIN-MATNR
              I_MEIN1             = _WL_LIN-MEINS
              I_MEINS             = 'KG'
              I_MENGE             = _WL_LIN-MENGE
            IMPORTING
              MENGE               = V_MENGE
            EXCEPTIONS
              ERROR_IN_CONVERSION = 1
              NO_SUCCESS          = 2
              OTHERS              = 3.
          IF SY-SUBRC NE 0.
            CLEAR: E_ZLEST0146,  E_ZLEST0147, E_ZLEST0168, E_DOC_RATEIO,
                   WL_ZLEST0146, WL_ZLEST0147, WL_ZLEST0168.
            MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
            RETURN.
          ENDIF.

          V_MENGE_NF = V_MENGE.

        ELSE.
          V_MENGE_NF = _WL_LIN-MENGE.
        ENDIF.

        IF E_ZLEST0146-PESO_AFERIDO_RECEPCAO > V_MENGE_NF.
          E_ZLEST0146-PESO_DISPONIVEL_USO = V_MENGE_NF.
        ENDIF.

        IF ( WL_LFA1_INTERCOMPANY IS NOT INITIAL AND V_CHAVE_NFE+6(8) NE '10962697' ).
          E_ZLEST0146-PESO_DISPONIVEL_USO = V_MENGE_NF.
        ENDIF.

      ENDIF.

      IF WL_ZLEST0147-COMPLEMENTO IS NOT INITIAL.

        IF WL_ZLEST0147-PESO_FISCAL IS NOT INITIAL.
          E_ZLEST0146-PESO_DISPONIVEL_USO = WL_ZLEST0147-PESO_FISCAL.
        ENDIF.

      ENDIF. "IF WL_ZLEST0147-COMPLEMENTO IS NOT INITIAL.

      "Limitar apenas o uso de um digito das casa decimal ( Exemplo: Peso 30600.585 deve Estornar da Função 30600.500 )
      LVA_PESO_S = E_ZLEST0146-PESO_DISPONIVEL_USO.
      CONDENSE: LVA_PESO_S NO-GAPS.
      SPLIT LVA_PESO_S AT '.' INTO DATA(LVA_PESO_INT) DATA(LVA_PESO_DEC).
      IF LVA_PESO_INT IS NOT INITIAL AND LVA_PESO_DEC IS NOT INITIAL.
        CONDENSE: LVA_PESO_INT , LVA_PESO_DEC NO-GAPS.
        CONCATENATE LVA_PESO_INT '.' LVA_PESO_DEC(1) INTO LVA_PESO_S.
        CONDENSE LVA_PESO_S NO-GAPS.
        E_ZLEST0146-PESO_DISPONIVEL_USO = LVA_PESO_S.
      ENDIF.

    ENDIF. "Fim - Seta Peso Disponivel para Uso

    APPEND WL_ZLEST0147 TO E_ZLEST0147.
  ELSE.

    SELECT SINGLE * INTO WL_ZLEST0168
      FROM ZLEST0168 AS A
     WHERE DOCNUM EQ I_DOCNUM
       AND EXISTS ( SELECT ID_RECEPCAO
                      FROM ZLEST0146 AS B
                     WHERE B~ID_RECEPCAO EQ A~ID_RECEPCAO
                       AND B~CANCEL      EQ ABAP_FALSE ).

    CHECK SY-SUBRC EQ 0.

    "---------------------------------------------------------------------"
    " Seta Peso Disponivel para Uso
    "---------------------------------------------------------------------"
    IF I_SET_PESO_DISP_USO EQ ABAP_TRUE.

      WL_ZLEST0168-PESO_DISPONIVEL_USO =  WL_ZLEST0168-PESO_AFERIDO.

      SELECT SINGLE *
        FROM J_1BNFLIN INTO _WL_LIN
       WHERE DOCNUM EQ I_DOCNUM
         AND ITMNUM EQ I_ITMNUM.

      IF SY-SUBRC EQ 0.
        CLEAR: V_MENGE_NF.

        IF _WL_LIN-MEINS NE 'KG'.
          CALL FUNCTION 'ME_CONVERSION_MEINS'
            EXPORTING
              I_MATNR             = _WL_LIN-MATNR
              I_MEIN1             = _WL_LIN-MEINS
              I_MEINS             = 'KG'
              I_MENGE             = _WL_LIN-MENGE
            IMPORTING
              MENGE               = V_MENGE
            EXCEPTIONS
              ERROR_IN_CONVERSION = 1
              NO_SUCCESS          = 2
              OTHERS              = 3.
          IF SY-SUBRC NE 0.
            CLEAR: E_ZLEST0146,  E_ZLEST0147, E_ZLEST0168, E_DOC_RATEIO,
                   WL_ZLEST0146, WL_ZLEST0147, WL_ZLEST0168.
            MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
            RETURN.
          ENDIF.

          V_MENGE_NF = V_MENGE.

        ELSE.
          V_MENGE_NF = _WL_LIN-MENGE.
        ENDIF.

        IF WL_ZLEST0168-PESO_AFERIDO > V_MENGE_NF.
          WL_ZLEST0168-PESO_DISPONIVEL_USO = V_MENGE_NF.
        ENDIF.
      ENDIF.
    ENDIF. "Fim - Seta Peso Disponivel para Uso

    SELECT SINGLE *
      FROM ZLEST0147 INTO WL_ZLEST0147
     WHERE ID_RECEPCAO EQ WL_ZLEST0168-ID_RECEPCAO.

    CHECK SY-SUBRC EQ 0.

    SELECT SINGLE *
      FROM ZLEST0146 INTO WL_ZLEST0146
     WHERE ID_RECEPCAO EQ WL_ZLEST0168-ID_RECEPCAO
       AND CANCEL      EQ ABAP_FALSE.

    CHECK ( SY-SUBRC EQ 0 ).

    E_DOC_RATEIO = ABAP_TRUE.

    E_ZLEST0146 = WL_ZLEST0146.

    APPEND WL_ZLEST0147 TO E_ZLEST0147.
    APPEND WL_ZLEST0168 TO E_ZLEST0168.
  ENDIF.



ENDFUNCTION.
