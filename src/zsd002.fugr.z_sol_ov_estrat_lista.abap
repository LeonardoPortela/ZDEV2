FUNCTION Z_SOL_OV_ESTRAT_LISTA.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     VALUE(V_USUARIO) TYPE  SY-UNAME
*"     VALUE(V_NRO_SOL_OV) TYPE  ZSDED013 OPTIONAL
*"  EXPORTING
*"     VALUE(MSG) TYPE  CHAR50
*"  TABLES
*"      T_SOLICITACOES STRUCTURE  ZSDS018
*"      T_ESTRA STRUCTURE  ZSDS019 OPTIONAL
*"      T_DOCS STRUCTURE  ZSDS020 OPTIONAL
*"----------------------------------------------------------------------

  TYPE-POOLS: ICON.

  TYPES:

    BEGIN OF TY_ESTRA,
      BUKRS      TYPE ZSDT0162-BUKRS,
      NRO_SOL_OV TYPE ZSDT0162-VBELN,
      VALOR_DE   TYPE ZSDT0161-VALOR_DE,
      VALOR_ATE  TYPE ZSDT0161-VALOR_ATE,
      APROVADOR  TYPE ZSDT0161-APROVADOR,
      NIVEL      TYPE ZSDT0161-NIVEL,
      WAERS(3),
      ESTADO(4),
      OPCOES(4),
    END OF TY_ESTRA,

    BEGIN OF TY_DOCS,
      NRO_SOL_OV       TYPE ZSDT0053-NRO_SOL_OV,
      ITEM             TYPE ZSDT0053-POSNR,
      MATERIAL         TYPE ZSDT0053-MATNR,
      TXT_MATERIAL(30) TYPE C,
      CENTRO           TYPE ZSDT0053-WERKS,
      PONTO_COLETA     TYPE ZSDT0053-PONTO_C,
      TERMINAL         TYPE ZSDT0053-TERMINAL,
      DEPOSITO         TYPE ZSDT0053-LGORT,
      LOTE             TYPE ZSDT0053-CHARG,
      QTD_PREVISTA     TYPE ZSDT0053-ZMENG,
      UM               TYPE ZSDT0053-ZIEME,
      PRECO            TYPE ZSDT0053-DMBTR,
      UM_PRECO         TYPE ZSDT0053-PMEIN,
      VALOR_TOTAL      TYPE ZSDT0053-VLRTOT,
      DATA_VENC        TYPE ZSDT0053-VALDT,
    END OF TY_DOCS,

    BEGIN OF TY_ORDENS,
      NRO_SOL_OV       TYPE ZSDT0051-NRO_SOL_OV,
      TP_VENDA         TYPE ZSDT0051-TP_VENDA,
      ORG_VENDAS       TYPE ZSDT0051-VKORG,
      ESC_VENDAS       TYPE ZSDT0051-VKBUR,
      MOEDA            TYPE ZSDT0051-WAERK,
      CLIENTE          TYPE ZSDT0051-KUNNR,
      COND_PGTO        TYPE ZSDT0052-ZTERM,
      VALOR            TYPE ZSDT0053-VLRTOT,
      OBSERVACOES(255) TYPE C,
      USUARIO          TYPE ZSDT0051-USNAM,
      CELLSTYLES       TYPE LVC_T_STYL,
    END OF TY_ORDENS,

    BEGIN OF TY_MAKT,
      MATNR TYPE MAKT-MATNR,
      MAKTX TYPE MAKT-MAKTX,
      SPRAS TYPE MAKT-SPRAS,
    END OF TY_MAKT.

  DATA: WG_ZSDT0051 TYPE ZSDT0051,
        WG_ZSDT0052 TYPE ZSDT0052,
        WG_ZSDT0053 TYPE ZSDT0053,
        WG_ZSDT0161 TYPE ZSDT0161,
        WG_ZSDT0162 TYPE ZSDT0162,
        WG_ESTRA    TYPE TY_ESTRA,
        WG_DOCS     TYPE TY_DOCS,
        WG_ORDENS   TYPE TY_ORDENS,
        WG_MAKT     TYPE TY_MAKT,

        TG_ZSDT0051 TYPE TABLE OF ZSDT0051,
        TG_ZSDT0052 TYPE TABLE OF ZSDT0052,
        TG_ZSDT0053 TYPE TABLE OF ZSDT0053,
        TG_ZSDT0161 TYPE TABLE OF ZSDT0161,
        TG_ZSDT0162 TYPE TABLE OF ZSDT0162,
        TG_ORDENS   TYPE TABLE OF TY_ORDENS,
        TG_ESTRA    TYPE TABLE OF TY_ESTRA,
        TG_DOCS     TYPE TABLE OF TY_DOCS,
        TG_MAKT     TYPE TABLE OF TY_MAKT.

  DATA: VFLG_ICO(1).

  DATA: VFLAG(1),
        XTOTAL           TYPE ZLEST0155-VLR_FRETE_NEG,
        VVALOR_ATE       TYPE ZLEST0157-VALOR_ATE,

        V_UKURS          TYPE TCURR-UKURS,
        E_ROW_ID         TYPE SY-TABIX,
        V_IC_SET_STATE   TYPE C,
        V_APPEND_ORDEM   TYPE C,
        PRODUTO_DESC(40) TYPE C,
        COUNT_INDEX      TYPE I.


  "INÍCIO DA SELEÇÃO
  IF V_NRO_SOL_OV IS INITIAL.

    SELECT DISTINCT * FROM ZSDT0051
      INTO TABLE TG_ZSDT0051
      WHERE STATUS EQ 'P'.

    SORT TG_ZSDT0051 BY NRO_SOL_OV.

    IF TG_ZSDT0051 IS NOT INITIAL.

      SELECT * FROM ZSDT0052
        INTO TABLE TG_ZSDT0052
        FOR ALL ENTRIES IN TG_ZSDT0051
        WHERE NRO_SOL_OV EQ TG_ZSDT0051-NRO_SOL_OV.

      SELECT * FROM ZSDT0053
        INTO TABLE TG_ZSDT0053
        FOR ALL ENTRIES IN TG_ZSDT0051
        WHERE NRO_SOL_OV EQ TG_ZSDT0051-NRO_SOL_OV.

      SELECT * FROM ZSDT0162
        INTO TABLE TG_ZSDT0162
        FOR ALL ENTRIES IN TG_ZSDT0051
        WHERE VBELN EQ TG_ZSDT0051-NRO_SOL_OV.

      IF ( TG_ZSDT0162[] IS NOT INITIAL ).
        DELETE TG_ZSDT0162[] WHERE CK_RECUSA EQ 'S' AND DT_ESTORNO IS NOT INITIAL.
      ENDIF.

    ENDIF.

  ELSE.

    SELECT * FROM ZSDT0051
      INTO TABLE TG_ZSDT0051
      WHERE NRO_SOL_OV EQ V_NRO_SOL_OV
        AND STATUS EQ 'P'.


    IF TG_ZSDT0051 IS INITIAL.
      MSG = 'Status da Solicitação não permite aprovação'.
    ENDIF.


  ENDIF.

  CHECK TG_ZSDT0051[] IS NOT INITIAL.

  SELECT * FROM ZSDT0161
    INTO TABLE TG_ZSDT0161
    FOR ALL ENTRIES IN TG_ZSDT0051
    WHERE BUKRS         LE TG_ZSDT0051-VKORG
      AND BUKRS_ATE     GE TG_ZSDT0051-VKORG
      AND WAERS         EQ TG_ZSDT0051-WAERK
      AND TP_VENDA      LE TG_ZSDT0051-TP_VENDA
      AND TP_VENDA_ATE  GE TG_ZSDT0051-TP_VENDA
      AND DT_VAL_DE     LE SY-DATUM
      AND DT_VAL_ATE    GE SY-DATUM.

  SORT TG_ZSDT0161 BY BUKRS BUKRS_ATE NIVEL.


  FREE: TG_DOCS, TG_ESTRA.

  LOOP AT TG_ZSDT0051 INTO WG_ZSDT0051.
    CLEAR: WG_ESTRA.

    READ TABLE TG_ZSDT0052 INTO WG_ZSDT0052 WITH KEY NRO_SOL_OV = WG_ZSDT0051-NRO_SOL_OV.
    READ TABLE TG_ZSDT0053 INTO WG_ZSDT0053 WITH KEY NRO_SOL_OV = WG_ZSDT0051-NRO_SOL_OV.

    WG_ORDENS-NRO_SOL_OV  = WG_ZSDT0051-NRO_SOL_OV.
    WG_ORDENS-TP_VENDA    = WG_ZSDT0051-TP_VENDA.
    WG_ORDENS-CLIENTE     = WG_ZSDT0051-KUNNR.
    WG_ORDENS-COND_PGTO   = WG_ZSDT0052-ZTERM.
    WG_ORDENS-ESC_VENDAS  = WG_ZSDT0051-VKBUR.
    WG_ORDENS-MOEDA       = WG_ZSDT0051-WAERK.
    WG_ORDENS-OBSERVACOES = WG_ZSDT0051-OBSERVACAO.
    WG_ORDENS-ORG_VENDAS  = WG_ZSDT0051-VKORG.
    WG_ORDENS-USUARIO     = WG_ZSDT0051-USNAM.
    WG_ORDENS-VALOR       = WG_ZSDT0053-VLRTOT.

*---> 15/06/2023 - Migração S4 - JS
*      XTOTAL = WG_ZSDT0053-VLRTOT.
      XTOTAL = CONV #( WG_ZSDT0053-VLRTOT ).
*<--- 15/06/2023 - Migração S4 - JS

    LOOP AT TG_ZSDT0161 INTO WG_ZSDT0161.

      "Compara Empresa da Solicitação com Empresa da Estratégia
      IF ( WG_ZSDT0161-BUKRS_ATE IS INITIAL ) AND ( WG_ZSDT0161-BUKRS NE WG_ZSDT0051-VKORG ).
        CONTINUE.
      ELSEIF ( WG_ZSDT0161-BUKRS GT WG_ZSDT0051-VKORG ) OR ( WG_ZSDT0161-BUKRS_ATE  LT WG_ZSDT0051-VKORG ).
        CONTINUE.
      ENDIF.

      "Compara Escritório de Venda
      IF ( WG_ZSDT0161-VKBUR GT WG_ZSDT0051-VKBUR ) OR ( WG_ZSDT0161-VKBUR_ATE LT WG_ZSDT0051-VKBUR ).
        CONTINUE.
      ENDIF.

      "Compara Tipo de venda
      IF    ( WG_ZSDT0161-TP_VENDA GT WG_ZSDT0051-TP_VENDA )
        OR  ( WG_ZSDT0161-TP_VENDA_ATE LT WG_ZSDT0051-TP_VENDA ).
        CONTINUE.
      ENDIF.

      "Compara Moeda da Solicitação com Moeda da Estratégia
      IF ( WG_ZSDT0161-WAERS NE WG_ZSDT0051-WAERK ).
        CONTINUE.
      ENDIF.

      "Compara Data da Solicitação com Data da Estratégia
      IF  WG_ZSDT0161-DT_VAL_DE  LT SY-DATUM AND
          WG_ZSDT0161-DT_VAL_ATE GT SY-DATUM
      OR
          WG_ZSDT0161-DT_VAL_DE  EQ SY-DATUM AND
          WG_ZSDT0161-DT_VAL_ATE EQ SY-DATUM AND
          WG_ZSDT0161-HR_VAL_DE  LE SY-UZEIT AND
          WG_ZSDT0161-HR_VAL_ATE GE SY-UZEIT
     OR
          WG_ZSDT0161-DT_VAL_DE  EQ SY-DATUM AND
          WG_ZSDT0161-DT_VAL_ATE GT SY-DATUM AND
          WG_ZSDT0161-HR_VAL_DE  LE SY-UZEIT
     OR
          WG_ZSDT0161-DT_VAL_DE  LT SY-DATUM AND
          WG_ZSDT0161-DT_VAL_ATE EQ SY-DATUM AND
          WG_ZSDT0161-HR_VAL_ATE GE SY-UZEIT.


        IF XTOTAL > VVALOR_ATE.
          VVALOR_ATE = WG_ZSDT0161-VALOR_ATE.
        ENDIF.

        IF ( WG_ZSDT0161-VALOR_DE > XTOTAL ). " Se valor de aprovação mínimo do nível for maior que valor da solicitação, não continuar.
          CONTINUE.
        ENDIF.

      ELSE.
        CONTINUE.
      ENDIF.

      WG_ESTRA-NRO_SOL_OV = WG_ZSDT0051-NRO_SOL_OV.
      WG_ESTRA-BUKRS      = WG_ZSDT0051-VKORG.
      WG_ESTRA-VALOR_DE   = WG_ZSDT0161-VALOR_DE.
      WG_ESTRA-VALOR_ATE  = WG_ZSDT0161-VALOR_ATE.
      WG_ESTRA-NIVEL      = WG_ZSDT0161-NIVEL.
      WG_ESTRA-WAERS      = WG_ZSDT0161-WAERS.

      CLEAR WG_ZSDT0162.
      SORT TG_ZSDT0162 BY VBELN NIVEL.
      READ TABLE TG_ZSDT0162 INTO WG_ZSDT0162 WITH KEY VBELN   = WG_ZSDT0051-NRO_SOL_OV
                                                       USUARIO = WG_ZSDT0161-APROVADOR
                                                       NIVEL   = WG_ZSDT0161-NIVEL.

      IF WG_ZSDT0162 IS NOT INITIAL.
        WG_ESTRA-ESTADO     = ICON_CHECKED.
        WG_ESTRA-OPCOES     = ICON_SYSTEM_UNDO.
        VFLG_ICO            = 'N'.
        WG_ESTRA-APROVADOR  = WG_ZSDT0162-APROVADOR.
      ELSEIF VFLG_ICO = 'S'.
        WG_ESTRA-ESTADO     = ICON_LED_YELLOW.
        WG_ESTRA-OPCOES     = ''.
        WG_ESTRA-APROVADOR  = WG_ZSDT0161-APROVADOR.
      ELSE.
        IF V_USUARIO NE WG_ZSDT0161-APROVADOR.
          WG_ESTRA-ESTADO = ''.
          WG_ESTRA-OPCOES = ICON_LED_YELLOW.
        ELSE.
          WG_ESTRA-ESTADO = ICON_LED_YELLOW.
          WG_ESTRA-OPCOES = ICON_SET_STATE.
        ENDIF.
        VFLG_ICO = 'X'.
        WG_ESTRA-APROVADOR = WG_ZSDT0161-APROVADOR.
      ENDIF.

      IF VFLG_ICO = 'X'.
        VFLG_ICO = 'S'.
      ENDIF.

      APPEND WG_ESTRA TO TG_ESTRA.

    ENDLOOP.

    IF ( WG_ESTRA IS INITIAL ).
      CONTINUE.
    ENDIF.

    DATA(_COUNT_NIVEL) = 0.
    IF V_NRO_SOL_OV IS INITIAL.
*      SORT TG_ESTRA BY NRO_SOL_OV APROVADOR.
      CLEAR: E_ROW_ID, V_IC_SET_STATE, V_APPEND_ORDEM.

      LOOP AT TG_ESTRA INTO WG_ESTRA WHERE APROVADOR  EQ V_USUARIO
                                       AND NRO_SOL_OV EQ WG_ORDENS-NRO_SOL_OV.

        IF WG_ESTRA-APROVADOR EQ V_USUARIO.
          ADD 1 TO _COUNT_NIVEL.
        ENDIF.

        IF E_ROW_ID IS NOT INITIAL AND SY-TABIX NE E_ROW_ID + 1.
          EXIT.
        ELSEIF E_ROW_ID IS NOT INITIAL AND SY-TABIX EQ E_ROW_ID + 1.

          IF WG_ESTRA-OPCOES NE ICON_SYSTEM_UNDO.
            V_IC_SET_STATE = 'X'.
          ENDIF.

          E_ROW_ID = SY-TABIX.
        ELSE.
          E_ROW_ID = SY-TABIX.
        ENDIF.

        LOOP AT TG_ESTRA INTO DATA(WL_ESTRA) WHERE NRO_SOL_OV EQ WG_ORDENS-NRO_SOL_OV.
          IF WL_ESTRA-ESTADO NE ICON_CHECKED AND SY-TABIX LT E_ROW_ID.
            V_APPEND_ORDEM = 'N'.
          ENDIF.
        ENDLOOP.
      ENDLOOP.
    ENDIF.

    IF _COUNT_NIVEL > 1.
      CLEAR V_APPEND_ORDEM.
    ENDIF.

    IF V_APPEND_ORDEM EQ 'N'.
      CONTINUE.
    ENDIF.

    APPEND WG_ORDENS TO TG_ORDENS.
    CLEAR WG_ORDENS.

    CLEAR VFLG_ICO.

  ENDLOOP.

  IF TG_ORDENS[] IS NOT INITIAL.

    SORT TG_ESTRA BY NRO_SOL_OV APROVADOR.
    LOOP AT TG_ORDENS INTO WG_ORDENS.
      CLEAR VFLAG.
      LOOP AT TG_ESTRA INTO WG_ESTRA WHERE NRO_SOL_OV   = WG_ORDENS-NRO_SOL_OV
                                     AND   APROVADOR = V_USUARIO.
        VFLAG = 'X'.
        EXIT.
      ENDLOOP.

      LOOP AT TG_ESTRA INTO WG_ESTRA WHERE NRO_SOL_OV EQ WG_ORDENS-NRO_SOL_OV.
        MOVE-CORRESPONDING WG_ESTRA TO T_ESTRA.
        APPEND T_ESTRA.
      ENDLOOP.

      SORT T_ESTRA BY ORDEM NIVEL.
      IF VFLAG = 'X'.
        LOOP AT TG_ZSDT0051 INTO WG_ZSDT0051 WHERE NRO_SOL_OV EQ WG_ORDENS-NRO_SOL_OV.

          READ TABLE TG_ZSDT0053 INTO WG_ZSDT0053 WITH KEY NRO_SOL_OV = WG_ZSDT0051-NRO_SOL_OV.

          SELECT SINGLE MATNR MAKTX SPRAS
             FROM MAKT
             INTO WG_MAKT
             WHERE MATNR EQ WG_ZSDT0051-MATNR
               AND SPRAS EQ 'PT'.

          XTOTAL = 0.
          WG_DOCS-NRO_SOL_OV   = WG_ZSDT0051-NRO_SOL_OV.
          WG_DOCS-ITEM         = WG_ZSDT0053-POSNR.
          WG_DOCS-MATERIAL     = WG_ZSDT0051-MATNR.
          WG_DOCS-TXT_MATERIAL = WG_MAKT-MAKTX.
          WG_DOCS-CENTRO       = WG_ZSDT0053-WERKS.
          WG_DOCS-PONTO_COLETA = WG_ZSDT0053-PONTO_C.
          WG_DOCS-TERMINAL     = WG_ZSDT0053-TERMINAL.
          WG_DOCS-DEPOSITO     = WG_ZSDT0053-LGORT.
          WG_DOCS-LOTE         = WG_ZSDT0053-CHARG.
          WG_DOCS-QTD_PREVISTA = WG_ZSDT0053-ZMENG.
          WG_DOCS-UM           = WG_ZSDT0053-ZIEME.
          WG_DOCS-PRECO        = WG_ZSDT0053-DMBTR.
          WG_DOCS-UM_PRECO     = WG_ZSDT0053-PMEIN.
          WG_DOCS-VALOR_TOTAL  = WG_ZSDT0053-VLRTOT.
          WG_DOCS-DATA_VENC    = WG_ZSDT0053-VALDT.

          APPEND WG_DOCS TO TG_DOCS.

        ENDLOOP.

        MOVE-CORRESPONDING TG_DOCS[] TO T_DOCS[].

        MOVE-CORRESPONDING WG_ORDENS TO T_SOLICITACOES.
        APPEND T_SOLICITACOES.

      ENDIF.
    ENDLOOP.

    IF T_SOLICITACOES[] IS NOT INITIAL.
      MSG = 'Sucesso'.
    ELSE.
      MSG = 'Não há solicitações à aprovar.'.
    ENDIF.

  ENDIF.

ENDFUNCTION.
