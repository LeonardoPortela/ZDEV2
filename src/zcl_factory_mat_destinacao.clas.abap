class ZCL_FACTORY_MAT_DESTINACAO definition
  public
  final
  create public .

public section.

  interfaces ZIF_FACTORY_MAT_DESTINACAO .
protected section.
private section.
ENDCLASS.



CLASS ZCL_FACTORY_MAT_DESTINACAO IMPLEMENTATION.


  METHOD ZIF_FACTORY_MAT_DESTINACAO~GET_FACTORY_OBJETO.
    CREATE OBJECT R_IF_MATERIAL_DESTINACAO TYPE (ME->ZIF_FACTORY_MAT_DESTINACAO~IA_NAME_CLASS).
  ENDMETHOD.


  METHOD ZIF_FACTORY_MAT_DESTINACAO~GET_INSTANCE.

    IF ZIF_FACTORY_MAT_DESTINACAO~IF_FACTORY_MAT_DESTINACAO IS NOT BOUND.
      CREATE OBJECT ZIF_FACTORY_MAT_DESTINACAO~IF_FACTORY_MAT_DESTINACAO TYPE ZCL_FACTORY_MAT_DESTINACAO.
    ENDIF.
    R_FACTORY_MAT_DESTINACAO = ZIF_FACTORY_MAT_DESTINACAO~IF_FACTORY_MAT_DESTINACAO.

  ENDMETHOD.


  METHOD ZIF_FACTORY_MAT_DESTINACAO~SET_FACTORY_OBJETO.

    R_FACTORY_MAT_DESTINACAO = ME.

    IF I_ID_DESTINACAO IS NOT INITIAL.

      SELECT SINGLE TP_DESTINACAO INTO @DATA(LC_DESTINACAO)
        FROM ZMMT0114
       WHERE ID_DESTINACAO EQ @I_ID_DESTINACAO.

      CHECK SY-SUBRC IS INITIAL.

    ELSEIF I_TP_DESTINACAO IS NOT INITIAL.
      LC_DESTINACAO = I_TP_DESTINACAO.
    ENDIF.

    CHECK LC_DESTINACAO IS NOT INITIAL.

    CASE LC_DESTINACAO.
      WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_ARMAZENAR.
        ME->ZIF_FACTORY_MAT_DESTINACAO~IA_NAME_CLASS = ZIF_FACTORY_MAT_DESTINACAO=>AT_OBJETO_ARMAZEM.
      WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_DEVOLUCAO.
        ME->ZIF_FACTORY_MAT_DESTINACAO~IA_NAME_CLASS = ZIF_FACTORY_MAT_DESTINACAO=>AT_OBJETO_DEVOLUCAO.
      WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_RETORNO.
        ME->ZIF_FACTORY_MAT_DESTINACAO~IA_NAME_CLASS = ZIF_FACTORY_MAT_DESTINACAO=>AT_OBJETO_RETORNO.
      WHEN OTHERS.
        ME->ZIF_FACTORY_MAT_DESTINACAO~IA_NAME_CLASS = 'ZCL_MATERIAL_DESTINACAO'.
    ENDCASE.

  ENDMETHOD.
ENDCLASS.
