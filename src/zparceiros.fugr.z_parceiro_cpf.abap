FUNCTION Z_PARCEIRO_CPF.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_STCD2) TYPE  J_1BCPF
*"     REFERENCE(P_VERIFICA_CAD) TYPE  CHAR01 DEFAULT 'X'
*"     REFERENCE(P_PARTYP) TYPE  CHAR01 OPTIONAL
*"  TABLES
*"      T_KNA1 STRUCTURE  KNA1
*"      T_LFA1 STRUCTURE  LFA1 OPTIONAL
*"----------------------------------------------------------------------

  DATA: ST_KNA1H LIKE KNA1,
        ST_LFA1H LIKE LFA1,
        VG_TABIX TYPE SY-TABIX..

  IF P_PARTYP IS INITIAL.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE T_KNA1
      FROM KNA1
     WHERE STCD1 EQ SPACE
       AND STCD2 EQ P_STCD2.

    CHECK P_VERIFICA_CAD IS NOT INITIAL.

    LOOP AT T_KNA1 INTO ST_KNA1H.

      VG_TABIX = SY-TABIX.

      CALL FUNCTION 'Z_VERIFICA_CLI_FOR_CTA_MAT'
        EXPORTING
          P_KOART   = 'D'
          P_CLIENTE = ST_KNA1H-KUNNR
        EXCEPTIONS
          ERROR     = 1
          OTHERS    = 2.

      IF SY-SUBRC <> 0.
        CLEAR: ST_KNA1H-KUNNR.
      ENDIF.

      MODIFY T_KNA1 INDEX VG_TABIX FROM ST_KNA1H TRANSPORTING KUNNR.

    ENDLOOP.

    DELETE T_KNA1 WHERE KUNNR EQ SPACE.

  ELSE.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE T_LFA1
      FROM LFA1
     WHERE STCD1 EQ SPACE
       AND STCD2 EQ P_STCD2.

    CHECK P_VERIFICA_CAD IS NOT INITIAL.

    LOOP AT T_LFA1 INTO ST_LFA1H.

      VG_TABIX = SY-TABIX.

      CALL FUNCTION 'Z_VERIFICA_CLI_FOR_CTA_MAT'
        EXPORTING
          P_KOART      = 'K'
          P_FORNECEDOR = ST_LFA1H-LIFNR
        EXCEPTIONS
          ERROR        = 1
          OTHERS       = 2.

      IF SY-SUBRC <> 0.
        CLEAR: ST_LFA1H-LIFNR.
      ENDIF.

      MODIFY T_LFA1 INDEX VG_TABIX FROM ST_LFA1H TRANSPORTING LIFNR.

    ENDLOOP.

    DELETE T_LFA1 WHERE LIFNR EQ SPACE.

  ENDIF.


ENDFUNCTION.
