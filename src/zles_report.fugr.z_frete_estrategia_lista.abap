FUNCTION Z_FRETE_ESTRATEGIA_LISTA.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     VALUE(V_USUARIO) TYPE  SY-UNAME
*"     VALUE(V_ORDEM) TYPE  ZDE_NR_ORDEM OPTIONAL
*"  EXPORTING
*"     VALUE(MSG) TYPE  CHAR50
*"  TABLES
*"      T_ORDENS STRUCTURE  ZFRE_ORDENS_APROV
*"      T_ESTRA STRUCTURE  ZFRE_ESTRATEGIA_ZGL
*"      T_DOCS STRUCTURE  ZFRE_DOCS_DETALHES
*"----------------------------------------------------------------------

  TYPE-POOLS: ICON.

  TYPES:

    BEGIN OF TY_ESTRA ,
      BUKRS     TYPE ZLEST0157-BUKRS,
      ORDEM     TYPE ZLEST0157-ORDEM,
      ID_ORDEM  TYPE ZLEST0157-ID_ORDEM,
      VALOR_DE  TYPE ZLEST0156-VALOR_DE,
      VALOR_ATE TYPE ZLEST0156-VALOR_ATE,
      APROVADOR TYPE ZLEST0156-APROVADOR,
      NIVEL     TYPE ZLEST0156-NIVEL,
      WAERS(3),
      ESTADO(4),
      OPCOES(4),
    END OF TY_ESTRA,

    BEGIN OF TY_DOCS ,
      ORDEM           TYPE ZLEST0155-NR_ORDEM,
      ID_ORDEM        TYPE ZLEST0155-ID_ORDEM,
      BUKRS           TYPE ZLEST0155-ID_BUKRS,
      PESO            TYPE ZLEST0155-NR_PESO_ALVO,
      PRODUTO(30)     TYPE C,
      VALOR           TYPE ZLEST0155-KBETR,
      VALOR_NEG       TYPE ZLEST0155-VLR_FRETE_NEG,
      OV              TYPE ZLEST0155-VBELN,
      KUNNR           TYPE VBPA-KUNNR,
      CLIENTE_OV(50)  TYPE C,
      EMPRESA(30)     TYPE C,
      MOTIVO(250)     TYPE C,
    END OF TY_DOCS,

    BEGIN OF TY_ZLEST0155,
      NR_ORDEM         TYPE ZLEST0155-NR_ORDEM,
      ID_ORDEM         TYPE ZLEST0155-ID_ORDEM,
      ID_BUKRS         TYPE ZLEST0155-ID_BUKRS,
      ID_BRANCH        TYPE ZLEST0155-ID_BRANCH,
      ID_BUKRS_AG      TYPE ZLEST0155-ID_BUKRS_AG,
      ID_LOCAL_COLETA  TYPE ZLEST0155-ID_LOCAL_COLETA,
      ID_LOCAL_DESTINO TYPE ZLEST0155-ID_LOCAL_DESTINO,
      ID_PRODUTO       TYPE ZLEST0155-ID_PRODUTO,
      ID_MOTORISTA     TYPE ZLEST0155-ID_MOTORISTA,
      DS_PLACA_TRATOR  TYPE ZLEST0155-DS_PLACA_TRATOR,
      NR_PESO_ALVO     TYPE ZLEST0155-NR_PESO_ALVO,
      KBETR            TYPE ZLEST0155-KBETR,
      VLR_FRETE_NEG    TYPE ZLEST0155-VLR_FRETE_NEG,
      MOTIVO           TYPE ZLEST0155-MOTIVO,
      BNAME            TYPE ZLEST0155-BNAME,
      DT_MOD           TYPE ZLEST0155-DT_MOD,
      HR_MOD           TYPE ZLEST0155-HR_MOD,
      STATUS_APROV     TYPE ZLEST0155-STATUS_APROV,
      VBELN            TYPE ZLEST0155-VBELN,
      VLR_FRETE_TK11   TYPE ZLEST0155-VLR_FRETE_TK11,
    END OF TY_ZLEST0155,

    BEGIN OF TY_ZLEST0156,
      BUKRS        TYPE ZLEST0156-BUKRS,
      BUKRS_ATE    TYPE ZLEST0156-BUKRS_ATE,
      NIVEL        TYPE ZLEST0156-NIVEL,
      APROVADOR    TYPE ZLEST0156-APROVADOR,
      DT_VAL_DE    TYPE ZLEST0156-DT_VAL_DE,
      HR_VAL_DE    TYPE ZLEST0156-HR_VAL_DE,
      DT_VAL_ATE   TYPE ZLEST0156-DT_VAL_ATE,
      HR_VAL_ATE   TYPE ZLEST0156-HR_VAL_ATE,
      VALOR_DE     TYPE ZLEST0156-VALOR_DE,
      VALOR_ATE    TYPE ZLEST0156-VALOR_ATE,
      DATA_ATUAL   TYPE ZLEST0156-DATA_ATUAL,
      HORA_ATUAL   TYPE ZLEST0156-HORA_ATUAL,
      USUARIO      TYPE ZLEST0156-USUARIO,
      MOTIVO       TYPE ZLEST0156-MOTIVO,
      TRANSF_APROV TYPE ZLEST0156-TRANSF_APROV,
    END OF TY_ZLEST0156,

    BEGIN OF TY_ZLEST0157,
      BUKRS      TYPE ZLEST0157-BUKRS,
      ORDEM      TYPE ZLEST0157-ORDEM,
      ID_ORDEM   TYPE ZLEST0157-ID_ORDEM,
      NIVEL      TYPE ZLEST0157-NIVEL,
      APROVADOR  TYPE ZLEST0157-APROVADOR,
      VALOR_DE   TYPE ZLEST0157-VALOR_DE,
      VALOR_ATE  TYPE ZLEST0157-VALOR_ATE,
      DATA_ATUAL TYPE ZLEST0157-DATA_ATUAL,
      HORA_ATUAL TYPE ZLEST0157-HORA_ATUAL,
      USUARIO    TYPE ZLEST0157-USUARIO,
    END OF TY_ZLEST0157,

    BEGIN OF TY_T001,
      BUKRS TYPE T001-BUKRS,
      BUTXT TYPE T001-BUTXT,
      LAND1 TYPE T001-LAND1,
    END OF TY_T001,

    BEGIN OF TY_T001W,
      WERKS TYPE T001W-WERKS,
      NAME1 TYPE T001W-NAME1,
    END OF TY_T001W,

    BEGIN OF TY_KNA1,
      KUNNR TYPE KNA1-KUNNR,
      NAME1 TYPE KNA1-NAME1,
    END OF TY_KNA1,

    BEGIN OF TY_VBPA,
      VBELN TYPE VBPA-VBELN,
      KUNNR TYPE VBPA-KUNNR,
    END OF TY_VBPA,

    BEGIN OF TY_CLIENTE,
      VBELN TYPE VBPA-VBELN,
      KUNNR TYPE VBPA-KUNNR,
      NAME1 TYPE KNA1-NAME1,
    END OF TY_CLIENTE,

    BEGIN OF TY_MAKT,
      MATNR TYPE MAKT-MATNR,
      MAKTX TYPE MAKT-MAKTX,
      SPRAS TYPE MAKT-SPRAS,
    END OF TY_MAKT.


  DATA: VFLAG(1),
        XTOTAL     TYPE ZLEST0155-VLR_FRETE_NEG,
        VVALOR_ATE TYPE ZLEST0157-VALOR_ATE.

  DATA:
    WA_ZLEST0155   TYPE TY_ZLEST0155,
    WA_ZLEST0156   TYPE TY_ZLEST0156,
    WA_ZLEST0157   TYPE TY_ZLEST0157,
    WA_ESTRA       TYPE TY_ESTRA,
    WA_DOCS        TYPE TY_DOCS,
    WA_T001        TYPE TY_T001,
    WA_T001W       TYPE TY_T001W,
    WA_MAKT        TYPE TY_MAKT,
    WA_KNA1        TYPE TY_KNA1,
    WA_VBPA        TYPE TY_VBPA,
    WA_CLIENTE     TYPE TY_CLIENTE,

    V_UKURS           TYPE TCURR-UKURS,
    E_ROW_ID          TYPE SY-TABIX,
    V_IC_SET_STATE    TYPE C,
    V_APPEND_ORDEM    TYPE C,
    PRODUTO_DESC(40)  TYPE C,

    TG_DOCS        TYPE TABLE OF TY_DOCS,

    IT_T001        TYPE TABLE OF TY_T001,
    IT_T001W       TYPE TABLE OF TY_T001W,
    IT_ZLEST0155   TYPE TABLE OF TY_ZLEST0155,
    IT_ZLEST0156   TYPE TABLE OF TY_ZLEST0156,
    IT_ZLEST0157   TYPE TABLE OF TY_ZLEST0157,
    IT_ESTRA       TYPE TABLE OF TY_ESTRA,
    IT_DOCS        TYPE TABLE OF TY_DOCS,
    IT_MAKT        TYPE TABLE OF TY_MAKT,
    IT_KNA1        TYPE TABLE OF TY_KNA1,
    IT_VBPA        TYPE TABLE OF TY_VBPA,
    IT_CLIENTE     TYPE TABLE OF TY_CLIENTE,

    BEGIN OF TG_ORDENS OCCURS 0,
      STATUS(4),
      EMPRESA(30) TYPE C,
      ORDEM       TYPE ZLEST0155-NR_ORDEM,
      ID_ORDEM    TYPE ZLEST0155-ID_ORDEM,
      KBETR       TYPE ZLEST0155-VLR_FRETE_TK11,
      TOTAL       TYPE ZLEST0155-VLR_FRETE_NEG,
      COLOR(4),
      USNAME(15)  TYPE C,
      FILIAL(30)  TYPE C,
      SMTP_ADDR   TYPE ADR6-SMTP_ADDR,
      DT_MOD      TYPE ZLEST0155-DT_MOD,
    END OF TG_ORDENS.

  DATA VFLG_ICO(1).


  "SELEÇÃO
  IF V_ORDEM IS INITIAL.
  SELECT * FROM ZLEST0156
    INTO CORRESPONDING FIELDS OF TABLE IT_ZLEST0156.
    "WHERE DT_VAL_ATE > SY-DATUM.

    CHECK IT_ZLEST0156[] IS NOT INITIAL.

  SELECT DISTINCT *
         FROM ZLEST0155
         INTO CORRESPONDING FIELDS OF TABLE IT_ZLEST0155
         WHERE STATUS_APROV = 9.

    ENDIF.

  CHECK IT_ZLEST0155[] IS NOT INITIAL.

  SELECT BUKRS BUTXT
         FROM T001
         INTO TABLE IT_T001
         FOR ALL ENTRIES IN IT_ZLEST0155
         WHERE BUKRS EQ IT_ZLEST0155-ID_BUKRS.

  SELECT WERKS NAME1
         FROM T001W
         INTO TABLE IT_T001W
         FOR ALL ENTRIES IN IT_ZLEST0155
         WHERE WERKS = IT_ZLEST0155-ID_BRANCH.

  SELECT *
         FROM ZLEST0156
         INTO CORRESPONDING FIELDS OF TABLE IT_ZLEST0156
         FOR ALL ENTRIES IN IT_ZLEST0155
         WHERE BUKRS     LE IT_ZLEST0155-ID_BUKRS
         AND   BUKRS_ATE GE IT_ZLEST0155-ID_BUKRS.

  SELECT MATNR MAKTX
         FROM MAKT
         INTO TABLE IT_MAKT
         FOR ALL ENTRIES IN IT_ZLEST0155
         WHERE MATNR EQ IT_ZLEST0155-ID_PRODUTO AND
               SPRAS = 'PT'.

  SELECT VBPA~VBELN VBPA~KUNNR KNA1~NAME1 INTO CORRESPONDING FIELDS OF TABLE IT_CLIENTE
         FROM VBPA
         INNER JOIN KNA1
         ON VBPA~KUNNR = KNA1~KUNNR
         FOR ALL ENTRIES IN IT_ZLEST0155
         WHERE VBELN = IT_ZLEST0155-VBELN.

*  SELECT NAME1
*         FROM KNA1
*         INTO CORRESPONDING FIELDS OF TABLE IT_CLIENTE
*         FOR ALL ENTRIES IN IT_CLIENTE
*         WHERE KUNNR = IT_CLIENTE-KUNNR.


  SORT IT_ZLEST0156 BY BUKRS BUKRS_ATE NIVEL.
  SORT IT_ZLEST0155 BY NR_ORDEM ID_ORDEM.
  SORT IT_ZLEST0157 BY APROVADOR.
  SORT IT_T001      BY BUKRS.
  SORT IT_T001W     BY WERKS.

  FREE: TG_DOCS, IT_ESTRA.
*---> 05/07/2023 - Migração S4 - DL
  SORT IT_MAKT BY MATNR.
*<--- 05/07/2023 - Migração S4 - DL
  LOOP AT IT_ZLEST0155 INTO WA_ZLEST0155.

    READ TABLE IT_T001 INTO WA_T001 WITH KEY BUKRS = WA_ZLEST0155-ID_BUKRS BINARY SEARCH.
    TG_ORDENS-EMPRESA = |{ WA_ZLEST0155-ID_BUKRS }-{ WA_T001-BUTXT }|.

    TG_ORDENS-ORDEM    = WA_ZLEST0155-NR_ORDEM.
    TG_ORDENS-ID_ORDEM = WA_ZLEST0155-ID_ORDEM.
    TG_ORDENS-KBETR  = WA_ZLEST0155-VLR_FRETE_TK11.
    TG_ORDENS-TOTAL  = WA_ZLEST0155-VLR_FRETE_NEG.
    TG_ORDENS-DT_MOD = WA_ZLEST0155-DT_MOD.

    READ TABLE IT_T001W INTO WA_T001W WITH KEY WERKS = WA_ZLEST0155-ID_BRANCH BINARY SEARCH.
      TG_ORDENS-FILIAL = |{ WA_ZLEST0155-ID_BRANCH }-{ WA_T001W-NAME1 }|.

    TG_ORDENS-USNAME = WA_ZLEST0155-BNAME.
    XTOTAL = TG_ORDENS-TOTAL.

    READ TABLE IT_MAKT INTO WA_MAKT WITH KEY MATNR = WA_ZLEST0155-ID_PRODUTO BINARY SEARCH.
    SHIFT WA_ZLEST0155-ID_PRODUTO LEFT DELETING LEADING '0'.
    PRODUTO_DESC = |{ WA_ZLEST0155-ID_PRODUTO }-{ WA_MAKT-MAKTX }|.

    CASE WA_ZLEST0155-STATUS_APROV.
          WHEN 1.
            TG_ORDENS-STATUS = ICON_GREEN_LIGHT.    "'Aprovado'.
          WHEN 2.
            TG_ORDENS-STATUS = ICON_DEFECT. "'Reprovado'.
          WHEN 3.
            TG_ORDENS-STATUS = ICON_LIGHT_OUT. "'Bloqueado'.
          WHEN 9.
            TG_ORDENS-STATUS = ICON_YELLOW_LIGHT. "'Aguardando Aprovação'.
    ENDCASE.


    VFLG_ICO = 'N'.
    VVALOR_ATE = 0.

*    BUSCAR E-MAIL DO SOLICITANTE
*    SELECT SINGLE SMTP_ADDR FROM ADR6
*         INNER JOIN USR21 ON USR21~ADDRNUMBER EQ ADR6~ADDRNUMBER AND
*                             USR21~PERSNUMBER EQ ADR6~PERSNUMBER
*         INTO CORRESPONDING FIELDS OF TG_ORDENS
*         WHERE BNAME = WA_ZLEST0155-BNAME.

    LOOP AT IT_ZLEST0156 INTO WA_ZLEST0156.
      IF WA_ZLEST0156-BUKRS_ATE IS INITIAL.
        IF WA_ZLEST0156-BUKRS NE WA_ZLEST0155-ID_BUKRS.
          CONTINUE.
        ENDIF.
      ELSEIF WA_ZLEST0156-BUKRS     GT WA_ZLEST0155-ID_BUKRS OR
             WA_ZLEST0156-BUKRS_ATE LT WA_ZLEST0155-ID_BUKRS.
        CONTINUE.
      ENDIF.
      IF  WA_ZLEST0156-DT_VAL_DE  LT SY-DATUM AND
          WA_ZLEST0156-DT_VAL_ATE GT SY-DATUM
          OR
          WA_ZLEST0156-DT_VAL_DE  EQ SY-DATUM AND
          WA_ZLEST0156-DT_VAL_ATE EQ SY-DATUM AND
          WA_ZLEST0156-HR_VAL_DE  LE SY-UZEIT AND
          WA_ZLEST0156-HR_VAL_ATE GE SY-UZEIT
         OR
          WA_ZLEST0156-DT_VAL_DE  EQ SY-DATUM AND
          WA_ZLEST0156-DT_VAL_ATE GT SY-DATUM AND
          WA_ZLEST0156-HR_VAL_DE  LE SY-UZEIT
         OR
          WA_ZLEST0156-DT_VAL_DE  LT SY-DATUM AND
          WA_ZLEST0156-DT_VAL_ATE EQ SY-DATUM AND
          WA_ZLEST0156-HR_VAL_ATE GE SY-UZEIT.
        IF XTOTAL > VVALOR_ATE.
          VVALOR_ATE = WA_ZLEST0156-VALOR_ATE.
        ENDIF.
      ENDIF.
    ENDLOOP.

    WA_ESTRA-BUKRS      = WA_ZLEST0155-ID_BUKRS.
    WA_ESTRA-ORDEM      = WA_ZLEST0155-NR_ORDEM.
    WA_ESTRA-ID_ORDEM   = WA_ZLEST0155-ID_ORDEM.
    WA_ESTRA-VALOR_DE   = WA_ZLEST0156-VALOR_DE.
    WA_ESTRA-VALOR_ATE  = WA_ZLEST0156-VALOR_ATE.
    WA_ESTRA-NIVEL      = WA_ZLEST0156-NIVEL.
    WA_ESTRA-WAERS      = 'BRL'.

    READ TABLE IT_ZLEST0157 INTO WA_ZLEST0157 WITH KEY ORDEM = WA_ZLEST0155-NR_ORDEM ID_ORDEM = WA_ZLEST0155-ID_ORDEM BINARY SEARCH.

    IF SY-SUBRC = 0.
      WA_ESTRA-ESTADO     = ICON_CHECKED.
      WA_ESTRA-OPCOES     = ICON_SYSTEM_UNDO.
      VFLG_ICO            = 'N'.
      WA_ESTRA-APROVADOR  = WA_ZLEST0157-APROVADOR.
    ELSEIF VFLG_ICO       = 'S'.
      WA_ESTRA-ESTADO     = ICON_LED_YELLOW.
      WA_ESTRA-OPCOES     = ''.
      WA_ESTRA-APROVADOR  = WA_ZLEST0156-APROVADOR.
    ELSE.
      IF V_USUARIO NE WA_ZLEST0156-APROVADOR.
        WA_ESTRA-ESTADO   = ''.
        WA_ESTRA-OPCOES   = ICON_LED_YELLOW.
      ELSE.
        WA_ESTRA-ESTADO   = ICON_LED_YELLOW.
        WA_ESTRA-OPCOES   = ICON_SET_STATE.
      ENDIF.
      VFLG_ICO = 'X'.
      WA_ESTRA-APROVADOR = WA_ZLEST0156-APROVADOR.
    ENDIF.

    IF VFLG_ICO = 'X'.
      VFLG_ICO  = 'S'.
    ENDIF.

    APPEND WA_ESTRA TO IT_ESTRA.

    DATA(_COUNT_NIVEL) = 0.
    IF V_ORDEM IS INITIAL.
      SORT IT_ESTRA BY ORDEM APROVADOR.
      CLEAR: E_ROW_ID, V_IC_SET_STATE, V_APPEND_ORDEM.
      LOOP AT IT_ESTRA INTO WA_ESTRA
         WHERE APROVADOR = V_USUARIO
           AND ORDEM     = TG_ORDENS-ORDEM
           AND ID_ORDEM  = TG_ORDENS-ID_ORDEM.

        IF WA_ESTRA-APROVADOR = V_USUARIO.
          ADD 1 TO _COUNT_NIVEL.
        ENDIF.

        IF E_ROW_ID IS NOT INITIAL AND SY-TABIX NE E_ROW_ID + 1.
          EXIT.
        ELSEIF E_ROW_ID IS NOT INITIAL AND SY-TABIX EQ E_ROW_ID + 1.
          IF WA_ESTRA-OPCOES NE ICON_SYSTEM_UNDO.
            V_IC_SET_STATE = 'X'.
          ENDIF.
          E_ROW_ID = SY-TABIX.
        ELSE.
          E_ROW_ID = SY-TABIX.
        ENDIF.

        LOOP AT IT_ESTRA INTO DATA(WL_ESTRA2) WHERE ORDEM = TG_ORDENS-ORDEM AND ID_ORDEM = TG_ORDENS-ID_ORDEM.
          IF WL_ESTRA2-ESTADO NE ICON_CHECKED AND SY-TABIX LT E_ROW_ID.
            V_APPEND_ORDEM = 'N'.
          ENDIF.
        ENDLOOP.
      ENDLOOP.
    ENDIF.

    IF _COUNT_NIVEL > 1.
      CLEAR: V_APPEND_ORDEM.
    ENDIF.

    IF V_APPEND_ORDEM = 'N'.
      CONTINUE.
    ENDIF.

    APPEND TG_ORDENS.
    CLEAR TG_ORDENS.

  ENDLOOP.

  IF TG_ORDENS[] IS NOT INITIAL.
    SORT IT_ESTRA BY ORDEM APROVADOR.
    LOOP AT TG_ORDENS.
      CLEAR VFLAG.
      LOOP AT IT_ESTRA INTO WA_ESTRA WHERE ORDEM     = TG_ORDENS-ORDEM
                                       AND ID_ORDEM  = TG_ORDENS-ID_ORDEM
                                       AND APROVADOR = V_USUARIO.
        VFLAG = 'X'.
        EXIT.
      ENDLOOP.
      LOOP AT IT_ESTRA INTO WA_ESTRA WHERE ORDEM = TG_ORDENS-ORDEM AND ID_ORDEM = TG_ORDENS-ID_ORDEM.
        MOVE-CORRESPONDING WA_ESTRA TO T_ESTRA.
        APPEND T_ESTRA.
      ENDLOOP.
      SORT T_ESTRA BY ORDEM NIVEL.
      IF VFLAG = 'X'.
        LOOP AT IT_ZLEST0155 INTO WA_ZLEST0155 WHERE NR_ORDEM = TG_ORDENS-ORDEM AND ID_ORDEM = TG_ORDENS-ID_ORDEM.
          XTOTAL = 0.
          WA_DOCS-ORDEM     = WA_ZLEST0155-NR_ORDEM.
          WA_DOCS-ID_ORDEM  = WA_ZLEST0155-ID_ORDEM.
          WA_DOCS-PESO      = WA_ZLEST0155-NR_PESO_ALVO.
          WA_DOCS-VALOR     = WA_ZLEST0155-VLR_FRETE_TK11.
          WA_DOCS-VALOR_NEG = WA_ZLEST0155-VLR_FRETE_NEG.
          WA_DOCS-BUKRS     = WA_ZLEST0155-ID_BUKRS.
          WA_DOCS-PRODUTO   = PRODUTO_DESC.
          WA_DOCS-OV        = WA_ZLEST0155-VBELN.
          WA_DOCS-MOTIVO    = WA_ZLEST0155-MOTIVO.

          READ TABLE IT_T001 INTO WA_T001 WITH KEY BUKRS = WA_ZLEST0155-ID_BUKRS BINARY SEARCH.
          WA_DOCS-EMPRESA = |{ WA_ZLEST0155-ID_BUKRS }-{ WA_T001-BUTXT }|.

          LOOP AT IT_CLIENTE INTO WA_CLIENTE WHERE VBELN = WA_ZLEST0155-VBELN.
            SHIFT WA_CLIENTE-KUNNR LEFT DELETING LEADING '0'.
            WA_DOCS-CLIENTE_OV = |{ WA_CLIENTE-KUNNR }-{ WA_CLIENTE-NAME1 }|.
          ENDLOOP.
          APPEND WA_DOCS TO T_DOCS.

        ENDLOOP.
        MOVE-CORRESPONDING TG_ORDENS TO T_ORDENS.
        APPEND T_ORDENS.
      ENDIF.

    ENDLOOP.

    IF T_ORDENS[] IS NOT INITIAL.
      MSG = 'Sucesso'.
    ELSE.
      MSG = 'Não há solicitações à aprovar.'.
    ENDIF.

  ENDIF.

ENDFUNCTION.
