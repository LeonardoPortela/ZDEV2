FUNCTION ZLES_RESUMO_VIAGEM_AQUAVIARIO.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_BUKRS) TYPE  BUKRS
*"     REFERENCE(I_WERKS) TYPE  WERKS_D
*"     REFERENCE(I_ANO_VIAGEM) TYPE  AJAHR
*"     REFERENCE(I_NR_VIAGEM) TYPE  NUM4
*"  TABLES
*"      T_DADOS_COMBOIO STRUCTURE  ZDADOS_COMBOIO_AQUAV OPTIONAL
*"      T_DADOS_NF_VINC STRUCTURE  ZDADOS_NF_VINC_AQUAV OPTIONAL
*"----------------------------------------------------------------------

  DATA: TG_0063          TYPE TABLE OF ZLEST0063 WITH HEADER LINE, "Frete Aquáviário - Comboio
        TG_0060          TYPE TABLE OF ZLEST0060 WITH HEADER LINE, "Frete Aquaviário - NF Vinculadas
        TG_0060_AUX      TYPE TABLE OF ZLEST0060 WITH HEADER LINE, "Frete Aquaviário - NF Vinculadas
        WL_ZLEST0061     TYPE ZLEST0061,
        WL_DADOS_COMBOIO TYPE ZDADOS_COMBOIO_AQUAV,
        WL_DADOS_NF_VINC TYPE ZDADOS_NF_VINC_AQUAV,
        TABIX            TYPE SY-TABIX.

  DATA: TOTAL TYPE ZLEST0057-PESO_VINCULADO.

  CLEAR: TG_0063[], TG_0060[], T_DADOS_COMBOIO[], T_DADOS_NF_VINC[].

  SELECT *
    FROM ZLEST0063 INTO TABLE TG_0063
   WHERE BUKRS      EQ I_BUKRS
     AND WERKS      EQ I_WERKS
     AND ANO_VIAGEM EQ I_ANO_VIAGEM
     AND NR_VIAGEM  EQ I_NR_VIAGEM.

  CHECK TG_0063[] IS NOT INITIAL.

  SELECT *
    FROM ZLEST0060 INTO TABLE TG_0060
     FOR ALL ENTRIES IN TG_0063
   WHERE BUKRS      EQ TG_0063-BUKRS
     AND WERKS      EQ TG_0063-WERKS
     AND ANO_VIAGEM EQ TG_0063-ANO_VIAGEM
     AND NR_VIAGEM  EQ TG_0063-NR_VIAGEM.

  CHECK TG_0060[] IS NOT INITIAL.

  LOOP AT TG_0063.

    CLEAR: WL_DADOS_COMBOIO.

    TABIX = SY-TABIX.

    WL_DADOS_COMBOIO-BUKRS       = TG_0063-BUKRS.
    WL_DADOS_COMBOIO-WERKS       = TG_0063-WERKS.
    WL_DADOS_COMBOIO-ANO_VIAGEM  = TG_0063-ANO_VIAGEM.
    WL_DADOS_COMBOIO-NR_VIAGEM   = TG_0063-NR_VIAGEM.

    WL_DADOS_COMBOIO-EMBARCACAO  = TG_0063-EMBARCACAO.

    CASE TG_0063-EMBARCACAO.
      WHEN: 'B'.
        WL_DADOS_COMBOIO-DS_EMBARCACAO   = 'B-Barcaça'.
      WHEN: 'E'.
        WL_DADOS_COMBOIO-DS_EMBARCACAO   = 'E-Empurrador'.
      WHEN: 'R'.
        WL_DADOS_COMBOIO-DS_EMBARCACAO   = 'R-Rebocador'.
    ENDCASE.

    WL_DADOS_COMBOIO-NOME_EMB   = TG_0063-NOME_EMB.

    WL_DADOS_COMBOIO-TP_BARCACA = TG_0063-TP_BARCACA.

    CASE TG_0063-TP_BARCACA.
      WHEN: 'A'.
        WL_DADOS_COMBOIO-DS_TP_BARCACA   = 'A-Acoplável'.
      WHEN: 'B'.
        WL_DADOS_COMBOIO-DS_TP_BARCACA   = 'B-Box'.
      WHEN: 'P'.
        WL_DADOS_COMBOIO-DS_TP_BARCACA   = 'P-Proa'.
      WHEN: 'M'.
        WL_DADOS_COMBOIO-DS_TP_BARCACA   = 'M-Mineralizadora'.
    ENDCASE.

    WL_DADOS_COMBOIO-GR_MATERIAL    = TG_0063-GR_MATERIAL.
    WL_DADOS_COMBOIO-MATNR          = TG_0063-COD_MATERIAL.

    SELECT SINGLE *
      FROM MAKT INTO @DATA(_WL_MAKT)
     WHERE MATNR EQ @TG_0063-COD_MATERIAL
       AND SPRAS EQ @SY-LANGU.

    IF SY-SUBRC = 0.
      WL_DADOS_COMBOIO-MAKTX          = _WL_MAKT-MAKTX.
    ENDIF.

    WL_DADOS_COMBOIO-TP_CLASS       = TG_0063-TP_CLASS.

    CASE TG_0063-TP_CLASS.
      WHEN: 'CO'.
        WL_DADOS_COMBOIO-DS_TP_CLASS = 'CO-Convencional'.
      WHEN: 'R1'.
        WL_DADOS_COMBOIO-DS_TP_CLASS = 'R1-RR'.
      WHEN: 'R2'.
        WL_DADOS_COMBOIO-DS_TP_CLASS = 'R2-RR2'.
    ENDCASE.

    WL_DADOS_COMBOIO-UN_MEDIDA       = TG_0063-UN_MEDIDA.

    CASE TG_0063-UN_MEDIDA.
      WHEN: 'KG'.
        IF ( TG_0063-EMBARCACAO(1) EQ 'B' ).
          WL_DADOS_COMBOIO-DS_UNID_MEDIDA = 'KG-Quilograma'.
        ENDIF.
      WHEN: 'TO'.
        IF ( TG_0063-EMBARCACAO(1) EQ 'B' ).
          WL_DADOS_COMBOIO-DS_UNID_MEDIDA = 'To-Tonelada'.
        ENDIF.
    ENDCASE.

    APPEND WL_DADOS_COMBOIO TO T_DADOS_COMBOIO.
  ENDLOOP.

  TG_0060_AUX[] = TG_0060[].

  LOOP AT TG_0060_AUX.

    CLEAR: WL_DADOS_NF_VINC.

    TABIX = SY-TABIX.

    WL_DADOS_NF_VINC-BUKRS       = TG_0060_AUX-BUKRS.
    WL_DADOS_NF_VINC-WERKS       = TG_0060_AUX-WERKS.
    WL_DADOS_NF_VINC-ANO_VIAGEM  = TG_0060_AUX-ANO_VIAGEM.
    WL_DADOS_NF_VINC-NR_VIAGEM   = TG_0060_AUX-NR_VIAGEM.
    WL_DADOS_NF_VINC-EMBARCACAO  = TG_0060_AUX-EMBARCACAO.
    WL_DADOS_NF_VINC-NOME_EMB    = TG_0060_AUX-NOME_EMB.

    LOOP AT TG_0060 WHERE EMBARCACAO  = TG_0060_AUX-EMBARCACAO
                      AND NOME_EMB    = TG_0060_AUX-NOME_EMB
                      AND RM_CODIGO   = TG_0060_AUX-RM_CODIGO
                      AND SAFRA       = TG_0060_AUX-SAFRA
                      AND NR_DCO      = TG_0060_AUX-NR_DCO.

      IF TG_0060-PESO_LIQ_RET IS NOT INITIAL.
        WL_DADOS_NF_VINC-PESO_VINCULADO = WL_DADOS_NF_VINC-PESO_VINCULADO + TG_0060-PESO_LIQ_RET.
      ELSE.
        WL_DADOS_NF_VINC-PESO_VINCULADO = WL_DADOS_NF_VINC-PESO_VINCULADO + TG_0060-PESO_FISCAL.
      ENDIF.
    ENDLOOP.

    WL_DADOS_NF_VINC-DT_MOVIMENTO   = TG_0060_AUX-DT_MOVIMENTO.
    WL_DADOS_NF_VINC-RM_CODIGO      = TG_0060_AUX-RM_CODIGO.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = TG_0060_AUX-DT_CODIGO
      IMPORTING
        OUTPUT = WL_DADOS_NF_VINC-DT_CODIGO.

    SELECT SINGLE * FROM KNA1 INTO @DATA(_WL_KNA1) WHERE KUNNR = @WL_DADOS_NF_VINC-DT_CODIGO.

    IF SY-SUBRC = 0.
      WL_DADOS_NF_VINC-NAME1_DEST = _WL_KNA1-NAME1.
      WL_DADOS_NF_VINC-STCD1_DEST = _WL_KNA1-STCD1.
    ENDIF.

    SELECT SINGLE * FROM LFA1 INTO @DATA(_WL_LFA1) WHERE LIFNR = @TG_0060_AUX-RM_CODIGO.
    IF SY-SUBRC = 0.
      WL_DADOS_NF_VINC-NAME1_REME = _WL_LFA1-NAME1.
      WL_DADOS_NF_VINC-STCD1_REME = _WL_LFA1-STCD1.
    ENDIF.

    WL_DADOS_NF_VINC-NR_DCO       = TG_0060_AUX-NR_DCO.
    WL_DADOS_NF_VINC-SAFRA        = TG_0060_AUX-SAFRA.

    WL_DADOS_NF_VINC-CL_CODIGO    = TG_0060_AUX-CL_CODIGO.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = TG_0060_AUX-CL_CODIGO
      IMPORTING
        OUTPUT = WL_DADOS_NF_VINC-CL_CODIGO.

    IF TG_0060_AUX-ID_FRETE_AQUA IS NOT INITIAL.
      SELECT SINGLE * FROM ZLEST0061 INTO @WL_ZLEST0061 WHERE ID_FRETE_AQUA EQ @TG_0060_AUX-ID_FRETE_AQUA.
    ELSE.

      SELECT SINGLE * FROM ZLEST0061 INTO WL_ZLEST0061 WHERE BUKRS         EQ WL_DADOS_NF_VINC-BUKRS
                                                         AND WERKS         EQ WL_DADOS_NF_VINC-WERKS
                                                         AND ANO_VIAGEM    EQ WL_DADOS_NF_VINC-ANO_VIAGEM
                                                         AND NR_VIAGEM     EQ WL_DADOS_NF_VINC-NR_VIAGEM
                                                         AND EMBARCACAO    EQ WL_DADOS_NF_VINC-EMBARCACAO
                                                         AND NOME_EMB      EQ WL_DADOS_NF_VINC-NOME_EMB
                                                         AND RM_CODIGO     EQ WL_DADOS_NF_VINC-RM_CODIGO
                                                         AND NR_DCO        EQ WL_DADOS_NF_VINC-NR_DCO
                                                         AND SAFRA         EQ WL_DADOS_NF_VINC-SAFRA.
      IF SY-SUBRC NE 0.
        SELECT SINGLE * FROM ZLEST0061 INTO WL_ZLEST0061 WHERE BUKRS         EQ WL_DADOS_NF_VINC-BUKRS
                                                           AND WERKS         EQ WL_DADOS_NF_VINC-WERKS
                                                           AND ANO_VIAGEM    EQ WL_DADOS_NF_VINC-ANO_VIAGEM
                                                           AND NR_VIAGEM     EQ WL_DADOS_NF_VINC-NR_VIAGEM
                                                           AND EMBARCACAO    EQ WL_DADOS_NF_VINC-EMBARCACAO
                                                           AND NOME_EMB      EQ WL_DADOS_NF_VINC-NOME_EMB
                                                           AND RM_CODIGO     EQ ''
                                                           AND CL_CODIGO     EQ WL_DADOS_NF_VINC-CL_CODIGO
                                                           AND NR_DCO        EQ WL_DADOS_NF_VINC-NR_DCO
                                                           AND SAFRA         EQ WL_DADOS_NF_VINC-SAFRA.
      ENDIF.
    ENDIF.

    IF ( SY-SUBRC EQ 0 ).

      WL_DADOS_NF_VINC-DOCNUM = WL_ZLEST0061-DOCNUM.

      SELECT SINGLE * FROM J_1BNFE_ACTIVE INTO @DATA(WL_J_1BNFE_ACTIVE) WHERE DOCNUM EQ @WL_ZLEST0061-DOCNUM.

      IF ( SY-SUBRC EQ 0 ).
        CASE WL_J_1BNFE_ACTIVE-DOCSTA.
          WHEN: '1'.
            WL_DADOS_NF_VINC-STATUS_OV = ICON_COMPLETE.
          WHEN: '2' OR '3'.
            WL_DADOS_NF_VINC-STATUS_OV = ICON_DEFECT.
          WHEN OTHERS.
            IF ( WL_J_1BNFE_ACTIVE-DOCSTA IS INITIAL ) AND ( WL_J_1BNFE_ACTIVE-SCSSTA IS INITIAL ).
              WL_DADOS_NF_VINC-STATUS_OV = ICON_WARNING.
            ELSEIF ( WL_J_1BNFE_ACTIVE-DOCSTA IS INITIAL ) AND ( WL_J_1BNFE_ACTIVE-SCSSTA EQ 0 ).
              WL_DADOS_NF_VINC-STATUS_OV = ICON_ACTIVITY.
            ENDIF.
        ENDCASE.
      ENDIF.

    ENDIF.

    APPEND WL_DADOS_NF_VINC TO T_DADOS_NF_VINC.

    DELETE TG_0060_AUX WHERE EMBARCACAO  = TG_0060_AUX-EMBARCACAO
                         AND NOME_EMB    = TG_0060_AUX-NOME_EMB
                         AND RM_CODIGO   = TG_0060_AUX-RM_CODIGO
                         AND SAFRA       = TG_0060_AUX-SAFRA
                         AND NR_DCO      = TG_0060_AUX-NR_DCO.
  ENDLOOP.

ENDFUNCTION.
