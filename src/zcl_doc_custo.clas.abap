class ZCL_DOC_CUSTO definition
  public
  final
  create public .

public section.

  interfaces ZIF_DOC_CUSTO .
protected section.
private section.
ENDCLASS.



CLASS ZCL_DOC_CUSTO IMPLEMENTATION.


  METHOD ZIF_DOC_CUSTO~GET_CK_VALIDA_VI_VT.

    DATA(LC_VTTKF) = I_VTTKF.

    IF I_TKNUM IS NOT INITIAL.
      SELECT SINGLE * INTO @DATA(WA_VTTK)
        FROM VTTK
       WHERE TKNUM EQ @I_TKNUM.

      MOVE-CORRESPONDING WA_VTTK TO LC_VTTKF.
    ENDIF.

    "STDIS 1 Tipo  STDIS CHAR  1 0 Status da organização do transporte
    IF LC_VTTKF-STDIS EQ ABAP_FALSE.
      RAISE EXCEPTION TYPE ZCX_DOC_CUSTO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STDIS-MSGID
                            MSGNO = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STDIS-MSGNO
                            ATTR1 = I_VTTKF-TKNUM )
          MSGID  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STDIS-MSGID
          MSGNO  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STDIS-MSGNO
          MSGTY  = 'E'
          MSGV1  = CONV #( I_VTTKF-TKNUM ).
    ENDIF.

    "STREG 1 Tipo  STREG CHAR  1 0 Status do registro
    IF LC_VTTKF-STREG EQ ABAP_FALSE.
      RAISE EXCEPTION TYPE ZCX_DOC_CUSTO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STREG-MSGID
                            MSGNO = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STREG-MSGNO
                            ATTR1 = I_VTTKF-TKNUM )
          MSGID  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STREG-MSGID
          MSGNO  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STREG-MSGNO
          MSGTY  = 'E'
          MSGV1  = CONV #( I_VTTKF-TKNUM ).
    ENDIF.

    "STLBG 1 Tipo  STLBG CHAR  1 0 Status do início do carregamento
    IF LC_VTTKF-STLBG EQ ABAP_FALSE.
      RAISE EXCEPTION TYPE ZCX_DOC_CUSTO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLBG-MSGID
                            MSGNO = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLBG-MSGNO
                            ATTR1 = I_VTTKF-TKNUM )
          MSGID  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLBG-MSGID
          MSGNO  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLBG-MSGNO
          MSGTY  = 'E'
          MSGV1  = CONV #( I_VTTKF-TKNUM ).
    ENDIF.

    "STLAD 1 Tipo  STLAD CHAR  1 0 Status do fim do carregamento
    IF LC_VTTKF-STLAD EQ ABAP_FALSE.
      RAISE EXCEPTION TYPE ZCX_DOC_CUSTO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLAD-MSGID
                            MSGNO = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLAD-MSGNO
                            ATTR1 = I_VTTKF-TKNUM )
          MSGID  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLAD-MSGID
          MSGNO  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STLAD-MSGNO
          MSGTY  = 'E'
          MSGV1  = CONV #( I_VTTKF-TKNUM ).
    ENDIF.

    "STABF 1 Tipo  STABF CHAR  1 0 Status do processamento para transporte
    IF LC_VTTKF-STABF EQ ABAP_FALSE.
      RAISE EXCEPTION TYPE ZCX_DOC_CUSTO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STABF-MSGID
                            MSGNO = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STABF-MSGNO
                            ATTR1 = I_VTTKF-TKNUM )
          MSGID  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STABF-MSGID
          MSGNO  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STABF-MSGNO
          MSGTY  = 'E'
          MSGV1  = CONV #( I_VTTKF-TKNUM ).
    ENDIF.

    "STTBG 1 Tipo  STTBG CHAR  1 0 Status para o início do transporte
    IF LC_VTTKF-STTBG EQ ABAP_FALSE.
      RAISE EXCEPTION TYPE ZCX_DOC_CUSTO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTBG-MSGID
                            MSGNO = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTBG-MSGNO
                            ATTR1 = I_VTTKF-TKNUM )
          MSGID  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTBG-MSGID
          MSGNO  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTBG-MSGNO
          MSGTY  = 'E'
          MSGV1  = CONV #( I_VTTKF-TKNUM ).
    ENDIF.

*    "STTEN 1 Tipo  STTEN CHAR  1 0 Status do fim do transporte
*    IF I_VTTKF-STTEN EQ ABAP_FALSE.
*      RAISE EXCEPTION TYPE ZCX_DOC_CUSTO
*        EXPORTING
*          TEXTID = VALUE #( MSGID = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTEN-MSGID
*                            MSGNO = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTEN-MSGNO
*                            ATTR1 = I_VTTKF-TKNUM )
*          MSGID  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTEN-MSGID
*          MSGNO  = ZCX_DOC_CUSTO=>ZCX_DOC_TRANS_STTEN-MSGNO
*          MSGTY  = 'E'
*          MSGV1  = CONV #( I_VTTKF-TKNUM ).
*    ENDIF.

  ENDMETHOD.


  METHOD ZIF_DOC_CUSTO~GET_INSTANCE.

    IF ZIF_DOC_CUSTO~AT_IF_DOC_CUSTO IS NOT BOUND.
      CREATE OBJECT ZIF_DOC_CUSTO~AT_IF_DOC_CUSTO TYPE ZCL_DOC_CUSTO.
    ENDIF.

    R_IF_DOC_CUSTO = ZIF_DOC_CUSTO~AT_IF_DOC_CUSTO.

  ENDMETHOD.
ENDCLASS.
