FUNCTION ZPLANCOMP_EMAIL_PROGRAMACAO.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_ID_NOMEACAO_TRAN) TYPE  ZID_NOM
*"     REFERENCE(P_ZNOM_PROGRAMACAO) TYPE  ZNOM_PROGRAMACAO OPTIONAL
*"     REFERENCE(P_EXECUTADO) TYPE  CHAR01 DEFAULT ' '
*"  EXCEPTIONS
*"      NOT_QUALIFIED
*"      USER_NOT_FOUND
*"      ADDRESS_NOT_FOUND
*"----------------------------------------------------------------------

  DATA: WA_ZNOM_TRANSPORTE      TYPE ZNOM_TRANSPORTE,
        IT_ZNOM_PROGRAMACAO     TYPE TABLE OF ZNOM_PROGRAMACAO WITH HEADER LINE,
        IT_ZNOM_PROGRAMACAO_AUX TYPE TABLE OF ZNOM_PROGRAMACAO WITH HEADER LINE,
        IT_ZNOM_REMETENTE     TYPE TABLE OF ZNOM_REMETENTE WITH HEADER LINE,
        IT_ZNOM_REMETENTE_AUX TYPE TABLE OF ZNOM_REMETENTE WITH HEADER LINE,
        IT_LFA1               TYPE TABLE OF LFA1 WITH HEADER LINE,
        IT_KNA1               TYPE TABLE OF KNA1 WITH HEADER LINE,
        IT_J_1BBRANCH         TYPE TABLE OF J_1BBRANCH WITH HEADER LINE,
        IT_ZMAIL              TYPE TABLE OF ZMAIL,
        IT_ZNOM_REMETENTE_ALV TYPE TABLE OF ZPLAC_NOM_REMETENTE WITH HEADER LINE,
        WA_ZNOM_REMETENTE_ALV TYPE ZPLAC_NOM_REMETENTE,
        WA_ZNOM_REMETENTE     TYPE ZNOM_REMETENTE,
        WA_ZNOM_PROGRAMACAO   TYPE ZNOM_PROGRAMACAO,
        WA_ZNOM_PROGRAMACAO_ALV TYPE ZPLAC_NOM_PROGRAMACAO_2,
        WA_ZMAIL              TYPE ZMAIL,
        TEXT_CLIENTE_CGC      TYPE C LENGTH 18,
        TEXT_CLIENTE_CPF      TYPE C LENGTH 14,
        WA_ADRC               TYPE ADRC,
        CIDADE                TYPE J_1BTXJURT,
        IT_HTML               TYPE TABLE OF W3HTML INITIAL SIZE 0,
        RECEIVERS             TYPE TABLE OF SOMLRECI1 WITH HEADER LINE,
        PACKING_LIST          TYPE TABLE OF SOPCKLSTI1 WITH HEADER LINE,
        DOCUMENT_DATA         TYPE SODOCCHGI1,
        WA_J_1BBRANCH         TYPE J_1BBRANCH,
        WA_T001               TYPE T001,
        VG_HTML               TYPE STRING,
        VG_TOTAL              TYPE J_1BNETQTY,
        VG_TOTAL_COM          TYPE J_1BNETQTY,
        VG_TOTAL_SEM          TYPE J_1BNETQTY,
        LC_VG_TOTAL_COM       TYPE J_1BNETQTY,
        LC_VG_TOTAL_SEM       TYPE J_1BNETQTY,
        VG_PRIMEIRO           TYPE C LENGTH 1,
        XNUMERO               TYPE C LENGTH 15.

  SELECT SINGLE * INTO WA_ZNOM_TRANSPORTE
    FROM ZNOM_TRANSPORTE
   WHERE ID_NOMEACAO_TRAN EQ P_ID_NOMEACAO_TRAN.

  IF P_ZNOM_PROGRAMACAO IS INITIAL.
    SELECT *
      INTO TABLE IT_ZNOM_PROGRAMACAO
      FROM ZNOM_PROGRAMACAO
     WHERE ID_NOMEACAO_TRAN EQ P_ID_NOMEACAO_TRAN.

    SELECT *
      INTO TABLE IT_ZNOM_REMETENTE
      FROM ZNOM_REMETENTE
     WHERE ID_NOMEACAO_TRAN EQ P_ID_NOMEACAO_TRAN.
  ELSE.
    SELECT *
      INTO TABLE IT_ZNOM_PROGRAMACAO
      FROM ZNOM_PROGRAMACAO
     WHERE ID_NOMEACAO_TRAN EQ P_ZNOM_PROGRAMACAO-ID_NOMEACAO_TRAN
       AND ID_EMPRESA       EQ P_ZNOM_PROGRAMACAO-ID_EMPRESA
       AND ID_FILIAL        EQ P_ZNOM_PROGRAMACAO-ID_FILIAL
       AND ID_MATERIAL      EQ P_ZNOM_PROGRAMACAO-ID_MATERIAL.

    SELECT *
      INTO TABLE IT_ZNOM_REMETENTE
      FROM ZNOM_REMETENTE
     WHERE ID_NOMEACAO_TRAN EQ P_ZNOM_PROGRAMACAO-ID_NOMEACAO_TRAN
       AND ID_EMPRESA       EQ P_ZNOM_PROGRAMACAO-ID_EMPRESA
       AND ID_FILIAL        EQ P_ZNOM_PROGRAMACAO-ID_FILIAL
       AND ID_MATERIAL      EQ P_ZNOM_PROGRAMACAO-ID_MATERIAL.
  ENDIF.

  MOVE IT_ZNOM_REMETENTE[] TO IT_ZNOM_REMETENTE_AUX[].
  SORT IT_ZNOM_REMETENTE_AUX BY ID_REMETENTE.
  DELETE ADJACENT DUPLICATES FROM IT_ZNOM_REMETENTE_AUX COMPARING ID_REMETENTE.
  DELETE IT_ZNOM_REMETENTE_AUX WHERE ID_REMETENTE EQ SPACE.

  IF NOT IT_ZNOM_REMETENTE_AUX[] IS INITIAL.
    SELECT * INTO TABLE IT_LFA1
      FROM LFA1
       FOR ALL ENTRIES IN IT_ZNOM_REMETENTE_AUX
     WHERE LIFNR EQ IT_ZNOM_REMETENTE_AUX-ID_REMETENTE.
  ENDIF.

  LOOP AT IT_ZNOM_REMETENTE INTO WA_ZNOM_REMETENTE.

    CLEAR: WA_ZNOM_REMETENTE_ALV.
    MOVE-CORRESPONDING WA_ZNOM_REMETENTE TO WA_ZNOM_REMETENTE_ALV.

    READ TABLE IT_LFA1 WITH KEY LIFNR = WA_ZNOM_REMETENTE-ID_REMETENTE.
    IF SY-SUBRC IS INITIAL.
      WA_ZNOM_REMETENTE_ALV-NAME1 = IT_LFA1-NAME1.
      IF ( IT_LFA1-STKZN IS INITIAL ) AND ( IT_LFA1-STCD1 IS NOT INITIAL ).
        CALL FUNCTION 'CONVERSION_EXIT_CGCBR_OUTPUT'
          EXPORTING
            INPUT  = IT_LFA1-STCD1
          IMPORTING
            OUTPUT = TEXT_CLIENTE_CGC.
        WA_ZNOM_REMETENTE_ALV-STCD1 = TEXT_CLIENTE_CGC.
      ELSEIF ( IT_LFA1-STKZN IS NOT INITIAL ) AND ( IT_LFA1-STCD2 IS NOT INITIAL ).
        CALL FUNCTION 'CONVERSION_EXIT_CPFBR_OUTPUT'
          EXPORTING
            INPUT  = IT_LFA1-STCD2
          IMPORTING
            OUTPUT = TEXT_CLIENTE_CPF.
        WA_ZNOM_REMETENTE_ALV-STCD1 = TEXT_CLIENTE_CPF.
      ENDIF.

      SELECT SINGLE * INTO WA_ADRC
        FROM ADRC
       WHERE ADDRNUMBER EQ IT_LFA1-ADRNR.

      IF SY-SUBRC IS INITIAL.
        WA_ZNOM_REMETENTE_ALV-UF = WA_ADRC-TAXJURCODE(3).

        SELECT SINGLE * INTO CIDADE
          FROM J_1BTXJURT
         WHERE SPRAS      = WA_ADRC-LANGU
           AND COUNTRY    = WA_ADRC-COUNTRY
           AND TAXJURCODE = WA_ADRC-TAXJURCODE.

        IF SY-SUBRC IS INITIAL.
          WA_ZNOM_REMETENTE_ALV-MUNIC = CIDADE-TEXT.
        ENDIF.
      ENDIF.
    ENDIF.

    IF ( WA_ZNOM_REMETENTE-ID_REMETENTE IS INITIAL ) OR
       ( ( NOT WA_ZNOM_REMETENTE-ID_EMPRESA IS INITIAL ) AND ( NOT WA_ZNOM_REMETENTE-ID_FILIAL IS INITIAL ) ).

      SELECT SINGLE * INTO WA_J_1BBRANCH
        FROM J_1BBRANCH
       WHERE BUKRS  EQ WA_ZNOM_REMETENTE-ID_EMPRESA
         AND BRANCH EQ WA_ZNOM_REMETENTE-ID_FILIAL.

      CALL FUNCTION 'CONVERSION_EXIT_CGCBR_OUTPUT'
        EXPORTING
          INPUT  = WA_J_1BBRANCH-STCD1
        IMPORTING
          OUTPUT = TEXT_CLIENTE_CGC.

      IF WA_ZNOM_REMETENTE-ID_REMETENTE IS INITIAL.
        WA_ZNOM_REMETENTE_ALV-NAME1        = WA_J_1BBRANCH-NAME.
        WA_ZNOM_REMETENTE_ALV-STCD1        = TEXT_CLIENTE_CGC.
        WA_ZNOM_REMETENTE_ALV-NAME_FILIAL  = WA_J_1BBRANCH-NAME.
        WA_ZNOM_REMETENTE_ALV-STCD1_FILIAL = TEXT_CLIENTE_CGC.
      ELSE.
        WA_ZNOM_REMETENTE_ALV-NAME_FILIAL  = WA_J_1BBRANCH-NAME.
        WA_ZNOM_REMETENTE_ALV-STCD1_FILIAL = TEXT_CLIENTE_CGC.
      ENDIF.

      SELECT SINGLE * INTO WA_ADRC
        FROM ADRC
       WHERE ADDRNUMBER EQ WA_J_1BBRANCH-ADRNR.

      IF SY-SUBRC IS INITIAL.
        IF WA_ZNOM_REMETENTE-ID_REMETENTE IS INITIAL.
          WA_ZNOM_REMETENTE_ALV-UF        = WA_ADRC-TAXJURCODE(3).
          WA_ZNOM_REMETENTE_ALV-UF_FILIAL = WA_ADRC-TAXJURCODE(3).
        ELSE.
          WA_ZNOM_REMETENTE_ALV-UF_FILIAL = WA_ADRC-TAXJURCODE(3).
        ENDIF.

        SELECT SINGLE * INTO CIDADE
          FROM J_1BTXJURT
         WHERE SPRAS      = WA_ADRC-LANGU
           AND COUNTRY    = WA_ADRC-COUNTRY
           AND TAXJURCODE = WA_ADRC-TAXJURCODE.

        IF SY-SUBRC IS INITIAL.
          IF WA_ZNOM_REMETENTE-ID_REMETENTE IS INITIAL.
            WA_ZNOM_REMETENTE_ALV-MUNIC        = CIDADE-TEXT.
            WA_ZNOM_REMETENTE_ALV-MUNIC_FILIAL = CIDADE-TEXT.
          ELSE.
            WA_ZNOM_REMETENTE_ALV-MUNIC_FILIAL = CIDADE-TEXT.
          ENDIF.
        ENDIF.
      ENDIF.

    ENDIF.

    APPEND WA_ZNOM_REMETENTE_ALV TO IT_ZNOM_REMETENTE_ALV.
  ENDLOOP.

  SORT IT_ZNOM_REMETENTE_ALV BY NAME1.

  IF NOT IT_ZNOM_REMETENTE_ALV[] IS INITIAL.
    "E-mail por programação
    CLEAR: RECEIVERS[], IT_HTML[], PACKING_LIST[].

    READ TABLE IT_ZNOM_REMETENTE_ALV INTO WA_ZNOM_REMETENTE_ALV INDEX 1.

    PERFORM ADD TABLES IT_HTML USING '<table width="100%">'.

    PERFORM MONTA_CABECALHO TABLES IT_HTML USING WA_ZNOM_TRANSPORTE WA_ZNOM_REMETENTE_ALV.

    LOOP AT IT_ZNOM_PROGRAMACAO INTO WA_ZNOM_PROGRAMACAO WHERE ID_FILIAL NE SPACE AND ID_CLIENTE EQ SPACE.

      PERFORM ADD TABLES IT_HTML USING '<tr><td>'.
      SELECT SINGLE * INTO WA_T001
        FROM T001
       WHERE BUKRS EQ WA_ZNOM_PROGRAMACAO-ID_EMPRESA.

      "Início da Tabela de detalhe
      PERFORM ADD TABLES IT_HTML USING '<table cellspacing="0" align="left" border="1" bordercolor="FFFFFF" width="100%">'.
      CONCATENATE '<tr><td width="20%" colspan="6"><p align="center"><font color="#000030" size=2><b>' WA_T001-BUTXT '</b></font></p></td>'
                      "'<td width="80%" colspan="5" align="center" bgcolor="FFFFFF"><font color="#FFFFFF" size=2><strong></strong></font></td>'
                  '</tr>'
             INTO VG_HTML SEPARATED BY SPACE.

      PERFORM ADD TABLES IT_HTML USING VG_HTML.
      CONCATENATE '<tr bgcolor="B0C4DE">'
                  '<td width="20%"><p align="center"><font color="#000030" size=1><b>Filial</b></font></p></td>'
                  '<td width="15%"><p align="center"><font color="#000030" size=1><b>CNPJ</b></font></p></td>'
                  '<td width="20%"><p align="center"><font color="#000030" size=1><b>Produtor(RE)</b></font></p></td>'
                  '<td width="15%"><p align="center"><font color="#000030" size=1><b>CNPJ do Produtor</b></font></p></td>'
                  '<td width="15%"><p align="center"><font color="#000030" size=1><b>Estado Produtor</b></font></p></td>'
                  '<td width="15%"><p align="center"><font color="#000030" size=1><b>Quantidade(kg)</b></font></p></td>'
                  '</tr>' INTO VG_HTML.
      PERFORM ADD TABLES IT_HTML USING VG_HTML.

      VG_TOTAL = 0.

      LOOP AT IT_ZNOM_REMETENTE_ALV INTO WA_ZNOM_REMETENTE_ALV
        WHERE ID_NOMEACAO_TRAN EQ WA_ZNOM_PROGRAMACAO-ID_NOMEACAO_TRAN
          AND ID_EMPRESA       EQ WA_ZNOM_PROGRAMACAO-ID_EMPRESA
          AND ID_FILIAL        EQ WA_ZNOM_PROGRAMACAO-ID_FILIAL
          AND ID_MATERIAL      EQ WA_ZNOM_PROGRAMACAO-ID_MATERIAL.
        VG_TOTAL = VG_TOTAL + WA_ZNOM_REMETENTE_ALV-NR_PROGRAMADA.
      ENDLOOP.

      VG_PRIMEIRO = 'X'.

      LC_VG_TOTAL_SEM = 0.
      LC_VG_TOTAL_COM = 0.

      "Remetente da Programação
      LOOP AT IT_ZNOM_REMETENTE_ALV INTO WA_ZNOM_REMETENTE_ALV
        WHERE ID_NOMEACAO_TRAN EQ WA_ZNOM_PROGRAMACAO-ID_NOMEACAO_TRAN
          AND ID_EMPRESA       EQ WA_ZNOM_PROGRAMACAO-ID_EMPRESA
          AND ID_FILIAL        EQ WA_ZNOM_PROGRAMACAO-ID_FILIAL
          AND ID_MATERIAL      EQ WA_ZNOM_PROGRAMACAO-ID_MATERIAL
          AND ID_REMETENTE     EQ SPACE.
        PERFORM MONTA_DETALHE TABLES IT_HTML USING WA_ZNOM_REMETENTE_ALV 0 1 CHANGING VG_PRIMEIRO.
        VG_TOTAL_SEM    = VG_TOTAL_SEM + WA_ZNOM_REMETENTE_ALV-NR_PROGRAMADA.
        LC_VG_TOTAL_SEM = LC_VG_TOTAL_SEM + WA_ZNOM_REMETENTE_ALV-NR_PROGRAMADA.
      ENDLOOP.

      VG_PRIMEIRO = 'X'.

      LOOP AT IT_ZNOM_REMETENTE_ALV INTO WA_ZNOM_REMETENTE_ALV
        WHERE ID_NOMEACAO_TRAN EQ WA_ZNOM_PROGRAMACAO-ID_NOMEACAO_TRAN
          AND ID_EMPRESA       EQ WA_ZNOM_PROGRAMACAO-ID_EMPRESA
          AND ID_FILIAL        EQ WA_ZNOM_PROGRAMACAO-ID_FILIAL
          AND ID_MATERIAL      EQ WA_ZNOM_PROGRAMACAO-ID_MATERIAL
          AND ID_REMETENTE     NE SPACE.
        MOVE-CORRESPONDING WA_ZNOM_REMETENTE_ALV TO WA_ZNOM_REMETENTE.
        PERFORM MONTA_DETALHE TABLES IT_HTML USING WA_ZNOM_REMETENTE_ALV VG_TOTAL LC_VG_TOTAL_SEM CHANGING VG_PRIMEIRO.
        VG_TOTAL_COM    = VG_TOTAL_COM + WA_ZNOM_REMETENTE_ALV-NR_PROGRAMADA.
        LC_VG_TOTAL_COM = LC_VG_TOTAL_COM + WA_ZNOM_REMETENTE_ALV-NR_PROGRAMADA.
        IF P_EXECUTADO EQ 'X'.
          "Notas Efetivadas
          CALL FUNCTION 'ZPLANCOMP_EMAIL_EXECUCAO'
            EXPORTING
              WA_ZNOM_REMETENTE = WA_ZNOM_REMETENTE
            TABLES
              IT_HTML           = IT_HTML.
        ENDIF.
      ENDLOOP.

      IF VG_TOTAL GT 0.
        CLEAR WA_ZNOM_REMETENTE_ALV.
        PERFORM MONTA_DETALHE TABLES IT_HTML USING WA_ZNOM_REMETENTE_ALV VG_TOTAL 1 CHANGING VG_PRIMEIRO.
      ENDIF.

      "Fim da Tabela de detalhe
      PERFORM ADD TABLES IT_HTML USING '</table>'.
      "perform add tables p_html using '</DIV>'.
      PERFORM ADD TABLES IT_HTML USING '</td></tr>'.

    ENDLOOP.


    "Monta Tabela de Fechamento de Quantidades
    PERFORM ADD TABLES IT_HTML USING '<tr><td>'.
    PERFORM ADD TABLES IT_HTML USING '<br><div align="center"><font face="Arial" color="#ff0000" size="4"></strong></font></div>'.

    PERFORM ADD TABLES IT_HTML USING '<table cellspacing="0" align="left" border="1" bordercolor="FFFFFF" width="35%">'.

    VG_TOTAL = VG_TOTAL_COM + VG_TOTAL_SEM.
    WRITE: VG_TOTAL TO XNUMERO.
    SHIFT: XNUMERO LEFT DELETING LEADING SPACE.
    CONCATENATE '<tr bgcolor="B0C4DE">'
                '<td width="57%"><p align="left"><font color="#000030" size=1><b>Total Informado:</b></font></p></td>'
                '<td width="43%"><p align="right"><font color="#000030" size=1><b>' XNUMERO '</b></font></p></td>'
                '</tr>' INTO VG_HTML.
    PERFORM ADD TABLES IT_HTML USING VG_HTML.

    WRITE: VG_TOTAL_COM TO XNUMERO.
    SHIFT: XNUMERO LEFT DELETING LEADING SPACE.
    CONCATENATE '<tr bgcolor="B0E0E6">'
                '<td width="57%"><p align="left"><font color="#000030" size=1><b>Com Compromisso:</b></font></p></td>'
                '<td width="43%"><p align="right"><font color="#000030" size=1><b>' XNUMERO '</b></font></p></td>'
                '</tr>' INTO VG_HTML.
    PERFORM ADD TABLES IT_HTML USING VG_HTML.

    WRITE: VG_TOTAL_SEM TO XNUMERO.
    SHIFT: XNUMERO LEFT DELETING LEADING SPACE.
    CONCATENATE '<tr bgcolor="B0E0E6">'
                '<td width="57%"><p align="left"><font color="#000030" size=1><b>Sem Compromisso:</b></font></p></td>'
                '<td width="43%"><p align="right"><font color="#000030" size=1><b>' XNUMERO '</b></font></p></td>'
                '</tr>' INTO VG_HTML.
    PERFORM ADD TABLES IT_HTML USING VG_HTML.

    VG_TOTAL = VG_TOTAL_COM + VG_TOTAL_SEM.
    WRITE: VG_TOTAL TO XNUMERO.
    SHIFT: XNUMERO LEFT DELETING LEADING SPACE.
    CONCATENATE '<tr bgcolor="B0E0E6">'
                '<td width="57%"><p align="left"><font color="#000030" size=1><b>Sem/Com Compromisso:</b></font></p></td>'
                '<td width="43%"><p align="right"><font color="#000030" size=1><b>' XNUMERO '</b></font></p></td>'
                '</tr>' INTO VG_HTML.
    PERFORM ADD TABLES IT_HTML USING VG_HTML.

    "Fim da Tabela de detalhe
    PERFORM ADD TABLES IT_HTML USING '</table>'.
    "perform add tables p_html using '</DIV>'.
    PERFORM ADD TABLES IT_HTML USING '</td></tr>'.

    PERFORM ADD TABLES IT_HTML USING '</table>'.
  ENDIF.

  "Tabela de Performance********************************************************************
  DELETE IT_ZNOM_PROGRAMACAO WHERE ID_FILIAL = SPACE OR ID_CLIENTE = SPACE.

  MOVE IT_ZNOM_PROGRAMACAO[] TO IT_ZNOM_PROGRAMACAO_AUX[].
  SORT IT_ZNOM_PROGRAMACAO_AUX BY ID_CLIENTE.
  DELETE ADJACENT DUPLICATES FROM IT_ZNOM_PROGRAMACAO_AUX COMPARING ID_CLIENTE.

  IF NOT IT_ZNOM_PROGRAMACAO_AUX[] IS INITIAL.
    SELECT * INTO TABLE IT_KNA1
      FROM KNA1
       FOR ALL ENTRIES IN IT_ZNOM_PROGRAMACAO_AUX
     WHERE KUNNR EQ IT_ZNOM_PROGRAMACAO_AUX-ID_CLIENTE.
  ENDIF.

  MOVE IT_ZNOM_PROGRAMACAO[] TO IT_ZNOM_PROGRAMACAO_AUX[].
  SORT IT_ZNOM_PROGRAMACAO_AUX BY ID_EMPRESA ID_FILIAL.
  DELETE ADJACENT DUPLICATES FROM IT_ZNOM_PROGRAMACAO_AUX COMPARING ID_EMPRESA ID_FILIAL.

  SELECT * INTO TABLE IT_J_1BBRANCH
    FROM J_1BBRANCH
     FOR ALL ENTRIES IN IT_ZNOM_PROGRAMACAO_AUX
   WHERE BUKRS  EQ IT_ZNOM_PROGRAMACAO_AUX-ID_EMPRESA
     AND BRANCH EQ IT_ZNOM_PROGRAMACAO_AUX-ID_FILIAL.

  IF NOT IT_ZNOM_PROGRAMACAO[] IS INITIAL.

    PERFORM ADD TABLES IT_HTML USING '<tr><td></td></tr>'.
    PERFORM ADD TABLES IT_HTML USING '<tr><td></td></tr>'.

    PERFORM MONTA_CABECALHO_P TABLES IT_HTML USING WA_ZNOM_TRANSPORTE WA_ZNOM_REMETENTE_ALV.
    PERFORM ADD TABLES IT_HTML USING '<tr><td>'.
    PERFORM ADD TABLES IT_HTML USING '<table cellspacing="0" align="left" border="1" bordercolor="FFFFFF" width="100%">'.
    CONCATENATE '<tr bgcolor="B0C4DE">'
                '<td width="20%"><p align="center"><font color="#000030" size=1><b>Filial</b></font></p></td>'
                '<td width="15%"><p align="center"><font color="#000030" size=1><b>CNPJ</b></font></p></td>'
                '<td width="20%"><p align="center"><font color="#000030" size=1><b>Cliente</b></font></p></td>'
                '<td width="15%"><p align="center"><font color="#000030" size=1><b>CNPJ do Cliente</b></font></p></td>'
                '<td width="15%"><p align="center"><font color="#000030" size=1><b>Estado Cliente</b></font></p></td>'
                '<td width="15%"><p align="center"><font color="#000030" size=1><b>Quantidade(kg)</b></font></p></td>'
                '</tr>' INTO VG_HTML.
    PERFORM ADD TABLES IT_HTML USING VG_HTML.

    LOOP AT IT_ZNOM_PROGRAMACAO INTO WA_ZNOM_PROGRAMACAO WHERE ID_FILIAL NE SPACE AND ID_CLIENTE NE SPACE.
      MOVE-CORRESPONDING WA_ZNOM_PROGRAMACAO TO WA_ZNOM_PROGRAMACAO_ALV.

      READ TABLE IT_KNA1 WITH KEY KUNNR = WA_ZNOM_PROGRAMACAO-ID_CLIENTE.
      IF SY-SUBRC IS INITIAL.
        WA_ZNOM_PROGRAMACAO_ALV-CLIENTE_NAME1 = IT_KNA1-NAME1.
        IF ( IT_KNA1-STKZN IS INITIAL ) AND ( IT_KNA1-STCD1 IS NOT INITIAL ).
          CALL FUNCTION 'CONVERSION_EXIT_CGCBR_OUTPUT'
            EXPORTING
              INPUT  = IT_KNA1-STCD1
            IMPORTING
              OUTPUT = TEXT_CLIENTE_CGC.
          WA_ZNOM_PROGRAMACAO_ALV-CLIENTE_STCD1 = TEXT_CLIENTE_CGC.
        ELSEIF ( IT_KNA1-STKZN IS NOT INITIAL ) AND ( IT_KNA1-STCD2 IS NOT INITIAL ).
          CALL FUNCTION 'CONVERSION_EXIT_CPFBR_OUTPUT'
            EXPORTING
              INPUT  = IT_KNA1-STCD2
            IMPORTING
              OUTPUT = TEXT_CLIENTE_CPF.
          WA_ZNOM_PROGRAMACAO_ALV-CLIENTE_STCD1 = TEXT_CLIENTE_CPF.
        ENDIF.

        SELECT SINGLE * INTO WA_ADRC
          FROM ADRC
         WHERE ADDRNUMBER EQ IT_KNA1-ADRNR.

        IF SY-SUBRC IS INITIAL.
          WA_ZNOM_PROGRAMACAO_ALV-CLIENTE_UF = WA_ADRC-TAXJURCODE(3).

          SELECT SINGLE * INTO CIDADE
            FROM J_1BTXJURT
           WHERE SPRAS      = WA_ADRC-LANGU
             AND COUNTRY    = WA_ADRC-COUNTRY
             AND TAXJURCODE = WA_ADRC-TAXJURCODE.

          IF SY-SUBRC IS INITIAL.
            WA_ZNOM_PROGRAMACAO_ALV-CLIENTE_MUNIC = CIDADE-TEXT.
          ENDIF.
        ENDIF.
      ENDIF.

      READ TABLE IT_J_1BBRANCH WITH KEY BUKRS  = WA_ZNOM_PROGRAMACAO-ID_EMPRESA
                                        BRANCH = WA_ZNOM_PROGRAMACAO-ID_FILIAL.

      CALL FUNCTION 'CONVERSION_EXIT_CGCBR_OUTPUT'
        EXPORTING
          INPUT  = IT_J_1BBRANCH-STCD1
        IMPORTING
          OUTPUT = TEXT_CLIENTE_CGC.

      WA_ZNOM_PROGRAMACAO_ALV-FILI_NAME1 = IT_J_1BBRANCH-NAME.
      WA_ZNOM_PROGRAMACAO_ALV-FILI_STCD1 = TEXT_CLIENTE_CGC.

      PERFORM MONTA_DETALHE_P TABLES IT_HTML USING WA_ZNOM_PROGRAMACAO_ALV.
    ENDLOOP.

    PERFORM ADD TABLES IT_HTML USING '</table>'.
    PERFORM ADD TABLES IT_HTML USING '</td></tr>'.
  ENDIF.
  "*****************************************************************************************
  "*****************************************************************************************

  IF NOT IT_HTML[] IS INITIAL.

    PERFORM MONTA_FIM TABLES IT_HTML PACKING_LIST USING DOCUMENT_DATA.

    "Verificar quais e-mail devem ser enviados
    IF SY-MANDT EQ '300'.
      SELECT * FROM ZMAIL INTO TABLE IT_ZMAIL
          WHERE TCODE = SY-TCODE.
        LOOP AT IT_ZMAIL INTO WA_ZMAIL.

          RECEIVERS-RECEIVER = WA_ZMAIL-EMAIL.
          RECEIVERS-REC_TYPE = 'U'.
          RECEIVERS-EXPRESS  = 'X'.
          APPEND RECEIVERS.
          CLEAR WA_ZMAIL.

        ENDLOOP.
*      RECEIVERS-RECEIVER = 'mercadointerno@grupomaggi.com.br'.
    ELSE.

      CALL FUNCTION 'EFG_GEN_GET_USER_EMAIL'
        EXPORTING
          I_UNAME           = SY-UNAME
        IMPORTING
          E_EMAIL_ADDRESS   = RECEIVERS-RECEIVER
        EXCEPTIONS
          NOT_QUALIFIED     = 1
          USER_NOT_FOUND    = 2
          ADDRESS_NOT_FOUND = 3
          OTHERS            = 4.

      CASE SY-SUBRC.
        WHEN 1.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING NOT_QUALIFIED.
        WHEN 2.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING USER_NOT_FOUND.
        WHEN 3.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING ADDRESS_NOT_FOUND.
        WHEN 4.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDCASE.

      IF RECEIVERS-RECEIVER IS INITIAL.
        RECEIVERS-RECEIVER = 'marcus.barbara@grupomaggi.com.br'.
      ENDIF.

    ENDIF.

    IF NOT RECEIVERS-RECEIVER IS INITIAL.

*      RECEIVERS-REC_TYPE = 'U'.
*      RECEIVERS-EXPRESS  = 'X'.
*      APPEND RECEIVERS.

      CALL FUNCTION 'ZHTML_ENVIA_EMAIL_CP'
        EXPORTING
          I_TITULO      = 'Programação de Embarque'
          DOCUMENT_DATA = DOCUMENT_DATA
          VG_TEXTO      = 'E-mail Planejamento de Compromisso de Exportação'
        TABLES
          PACKING_LIST  = PACKING_LIST
          HTML          = IT_HTML
          RECEIVERS     = RECEIVERS.

    ENDIF.
**** Baixar o HTML resultante
*    DATA FILENAME LIKE RLGRAP-FILENAME .
*    FILENAME = 'c:\\teste\\teste.html'.
*    CALL FUNCTION 'WS_DOWNLOAD'
*      EXPORTING
*        FILENAME = FILENAME
*        FILETYPE = 'ASC'
*      TABLES
*        DATA_TAB = IT_HTML
*      EXCEPTIONS
*        OTHERS   = 1.
  ENDIF.

ENDFUNCTION.
