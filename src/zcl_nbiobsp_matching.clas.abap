class ZCL_NBIOBSP_MATCHING definition
  public
  final
  create public .

public section.

  interfaces ZIF_NBIOBSP_MATCHING .

  methods CONSTRUCTOR
    importing
      !I_OLE_MATCHING type OLE2_OBJECT
    raising
      ZCX_NBIOBSP .
protected section.
private section.
ENDCLASS.



CLASS ZCL_NBIOBSP_MATCHING IMPLEMENTATION.


  METHOD CONSTRUCTOR.

    IF I_OLE_MATCHING IS INITIAL.
      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_MATCHING-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_MATCHING-MSGNO )
          MSGID  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_MATCHING-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_REF_OBJ_OLE_MATCHING-MSGNO
          MSGTY  = 'E'.
    ENDIF.

    ME->ZIF_NBIOBSP_MATCHING~MATCHING = I_OLE_MATCHING.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_MATCHING~GET_ERRORCODE.

    R_MATCHING = ME.
    GET PROPERTY OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'ErrorCode' = ME->ZIF_NBIOBSP_MATCHING~ERRORCODE.
    E_ERRORCODE = ME->ZIF_NBIOBSP_MATCHING~ERRORCODE.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_MATCHING~GET_ERRORDESCRIPTION.

    R_MATCHING = ME.
    GET PROPERTY OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'ErrorDescription' = ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION.
    E_ERRORDESCRIPTION = ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_MATCHING~GET_MATCHINGRESULT.

    R_MATCHING = ME.
    GET PROPERTY OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'MatchingResult' = ME->ZIF_NBIOBSP_MATCHING~MATCHINGRESULT.
    E_MATCHINGRESULT = ME->ZIF_NBIOBSP_MATCHING~MATCHINGRESULT.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_MATCHING~SET_FINGERWND.

    R_MATCHING = ME.
    SET PROPERTY OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'FingerWnd' = I_FINGERWND.

    IF ME->ZIF_NBIOBSP_MATCHING~GET_ERRORCODE( )->ERRORCODE IS NOT INITIAL.

      ME->ZIF_NBIOBSP_MATCHING~GET_ERRORDESCRIPTION( ).

      SY-MSGV2 = ME->ZIF_NBIOBSP_MATCHING~ERRORCODE.
      CONDENSE SY-MSGV2 NO-GAPS.

      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
                            ATTR1  = 'ZIF_NBIOBSP_MATCHING~SET_FINGERWND'
                            ATTR2  = CONV #( SY-MSGV2 )
                            ATTR3  = ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION )
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
          MSGTY  = 'E'
          MSGV1  = 'ZIF_NBIOBSP_MATCHING~SET_FINGERWND'
          MSGV2  = SY-MSGV2
          MSGV3  = CONV #( ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION ).
    ENDIF.


  ENDMETHOD.


  method ZIF_NBIOBSP_MATCHING~SET_WINDOWSTYLE.

    R_MATCHING = ME.
    SET PROPERTY OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'WindowStyle' = I_WINDOW_STYLE.

    IF ME->ZIF_NBIOBSP_MATCHING~GET_ERRORCODE( )->ERRORCODE IS NOT INITIAL.

      ME->ZIF_NBIOBSP_MATCHING~GET_ERRORDESCRIPTION( ).

      SY-MSGV2 = ME->ZIF_NBIOBSP_MATCHING~ERRORCODE.
      CONDENSE SY-MSGV2 NO-GAPS.

      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
                            ATTR1  = 'ZIF_NBIOBSP_MATCHING~SET_WINDOWSTYLE'
                            ATTR2  = CONV #( SY-MSGV2 )
                            ATTR3  = ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION )
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
          MSGTY  = 'E'
          MSGV1  = 'ZIF_NBIOBSP_MATCHING~SET_WINDOWSTYLE'
          MSGV2  = SY-MSGV2
          MSGV3  = CONV #( ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION ).
    ENDIF.

  endmethod.


  METHOD ZIF_NBIOBSP_MATCHING~VERIFYMATCH.

    R_MATCHING = ME.

    CALL METHOD OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'VerifyMatch'
      EXPORTING
        #1 = I_PROCESSEDFIR
        #2 = I_STOREDFIR.

    IF ME->ZIF_NBIOBSP_MATCHING~GET_ERRORCODE( )->ERRORCODE IS NOT INITIAL.

      ME->ZIF_NBIOBSP_MATCHING~GET_ERRORDESCRIPTION( ).

      SY-MSGV2 = CONV #( ME->ZIF_NBIOBSP_MATCHING~ERRORCODE ).
      CONDENSE SY-MSGV2 NO-GAPS.

      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
                            ATTR1  = 'ZIF_NBIOBSP_MATCHING~VERIFYMATCH'
                            ATTR2  = CONV #( SY-MSGV2 )
                            ATTR3  = ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION )
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_METODO-MSGNO
          MSGTY  = 'E'
          MSGV1  = 'ZIF_NBIOBSP_MATCHING~VERIFYMATCH'
          MSGV2  = SY-MSGV2
          MSGV3  = CONV #( ME->ZIF_NBIOBSP_MATCHING~ERRORDESCRIPTION ).
    ENDIF.

    IF ME->ZIF_NBIOBSP_MATCHING~GET_MATCHINGRESULT( )->MATCHINGRESULT EQ ZIF_NBIOBSP=>ST_NBIOBSP_FALSE.
      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGNO )
          MSGTY  = 'E'
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGNO.
    ENDIF.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_MATCHING~VERIFY_FIR.

    R_MATCHING = ME.
    CALL METHOD OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'Verify' EXPORTING #1 = I_FIR.

    IF ME->ZIF_NBIOBSP_MATCHING~GET_MATCHINGRESULT( )->MATCHINGRESULT EQ ZIF_NBIOBSP=>ST_NBIOBSP_FALSE.
      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGNO )
          MSGTY  = 'E'
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGNO.
    ENDIF.

  ENDMETHOD.


  METHOD ZIF_NBIOBSP_MATCHING~VERIFY_TEXTENCODEFIR.

    R_MATCHING = ME.
    CALL METHOD OF ME->ZIF_NBIOBSP_MATCHING~MATCHING 'Verify' EXPORTING #1 = I_TEXTENCODEFIR.

    IF ME->ZIF_NBIOBSP_MATCHING~GET_MATCHINGRESULT( )->MATCHINGRESULT EQ ZIF_NBIOBSP=>ST_NBIOBSP_FALSE.
      RAISE EXCEPTION TYPE ZCX_NBIOBSP
        EXPORTING
          TEXTID = VALUE #( MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGID
                            MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGNO )
          MSGTY  = 'E'
          MSGID  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGID
          MSGNO  = ZCX_NBIOBSP=>ZCX_ERRO_VERIF_DIGITAL-MSGNO.
    ENDIF.

  ENDMETHOD.
ENDCLASS.
