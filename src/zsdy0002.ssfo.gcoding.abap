DATA : W_XBLNR      TYPE VBRK-XBLNR.
DATA : W_IT_GEN     LIKE LINE OF T_IT_GEN.
DATA : W_KONV       LIKE LINE OF T_KONV.
DATA : WA_VBRP      LIKE LINE OF T_VBRP.
DATA : WA_VBAP      LIKE LINE OF T_VBAP.
DATA : W_VBRK_XBLNR TYPE VBRK-XBLNR.
DATA : WA_KNMT      LIKE LINE OF T_KNMT.
DATA : S_VBPA       TYPE VBPA.
DATA : W_KPEIN      TYPE KONV-KPEIN.
DATA : W_KMEIN      TYPE KONV-KMEIN.
DATA : W_KUMZA      TYPE KONV-KUMZA.
DATA : W_VBTYP      TYPE T001L-LGOBE.
DATA : W_ADRNR      TYPE ADRC-ADDRNUMBER.
DATA : W_IMPOSTO    TYPE VBRK-MWSBK.


*Empresa
SELECT SINGLE BUKRS
  FROM TVKO
  INTO W_BUKRS
  WHERE VKORG = IS_BIL_INVOICE-HD_ORG-SALESORG.
SELECT SINGLE ADRNR
  INTO W_ADRNR
  FROM T001
  WHERE BUKRS EQ W_BUKRS.

V_ADRNR = W_ADRNR.

SELECT SINGLE *
  INTO ST_ADRC
  FROM ADRC
  WHERE ADDRNUMBER EQ W_ADRNR.

SELECT SINGLE LANDX
  INTO H_LAND
  FROM T005T
  WHERE SPRAS EQ SY-LANGU
    AND LAND1 EQ ST_ADRC-COUNTRY.
*--------------------------------------------------

* IVA
CLEAR W_VARIABLE.
SELECT SINGLE PAVAL
  FROM T001Z
  INTO W_VARIABLE
  WHERE BUKRS = W_BUKRS
    AND PARTY = 'J1AFTV'.

IF W_VARIABLE IS NOT INITIAL.

  SELECT SINGLE TEXT60
    FROM J_1AFITPVT
    INTO W_IVA
    WHERE J_1AFITP = W_VARIABLE
      AND SPRAS    = 'S'.

ENDIF.
*------------------------------------------------

* CUIT
SELECT SINGLE PAVAL
  FROM T001Z
  INTO W_CUIT
  WHERE BUKRS = W_BUKRS
    AND PARTY = 'J1AIDN'.

W_CUIT_AUX = W_CUIT.

CONCATENATE W_CUIT(2) W_CUIT+2(8) W_CUIT+10(1)
       INTO W_CUIT
       SEPARATED BY '-'.
*-----------------------------------------------

* IIBB
CLEAR W_IIBB_TXT.
SELECT SINGLE PAVAL
  FROM T001Z
  INTO W_IIBB_TXT
  WHERE BUKRS = W_BUKRS
    AND PARTY = 'J1AGIN'.

IF W_IIBB_TXT IS NOT INITIAL.

  CONCATENATE W_IIBB_TXT(3)
              W_IIBB_TXT+3(6)
              W_IIBB_TXT+9(1)
         INTO W_IIBB_TXT
         SEPARATED BY '-'.

ENDIF.
*-------------------------------------------

* Inicio de Actividad
CLEAR W_INICIO_ACT.
SELECT SINGLE PAVAL
  FROM T001Z
  INTO W_INICIO_ACT
  WHERE BUKRS = W_BUKRS
    AND PARTY = 'J1AFDT'.

*-----------------------------------------------

* Factura
SELECT SINGLE VBELN FKDAT KUNRG XBLNR ZTERM
  FROM VBRK
  INTO S_XBLNR
  WHERE VBELN EQ IS_BIL_INVOICE-HD_GEN-BIL_NUMBER.

V_DOCSAP = S_XBLNR-VBELN.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
  EXPORTING
    INPUT  = V_DOCSAP
  IMPORTING
    OUTPUT = V_DOCSAP.

W_XBLNR = S_XBLNR-XBLNR.
W_LETRA = W_XBLNR+4(1).

CONCATENATE W_XBLNR(4) W_XBLNR+5(8)
       INTO W_NRO_FAC
       SEPARATED BY '-'.

CONCATENATE S_XBLNR-FKDAT+6(2) S_XBLNR-FKDAT+4(2) S_XBLNR-FKDAT(4)
       INTO W_FECHA
       SEPARATED BY '/'.

* Cliente / Interlocutor
DATA: W_KUNNR    TYPE KNA1-KUNNR,
      W_LIFNR    TYPE LFA1-LIFNR,
      W_KUNNR_AG TYPE KNA1-KUNNR,
      WA_LFA1    TYPE LFA1,
      S_KNA1_AG  TYPE TY_KNA1,
      VL_LIFNR   TYPE LFA1-LIFNR,
      VL_FATURA  TYPE ZSDYT0049-DOC_FAT.

* Corredor
SELECT SINGLE KUNNR
  FROM VBPA
  INTO W_KUNNR
  WHERE VBELN = IS_BIL_INVOICE-HD_GEN-BIL_NUMBER
    AND PARVW = 'Y1'.

IF SY-SUBRC IS NOT INITIAL.
* Pagador
  SELECT SINGLE KUNNR
  FROM VBPA
  INTO W_KUNNR
  WHERE VBELN = IS_BIL_INVOICE-HD_GEN-BIL_NUMBER
    AND PARVW = 'RG'.

ENDIF.

*Señores
IF W_KUNNR IS NOT INITIAL.
  SELECT SINGLE REGIO LAND1 NAME1 STRAS PSTLZ ORT01 STCD1 FITYP
    FROM KNA1
    INTO S_KNA1
    WHERE KUNNR EQ W_KUNNR.

  IF S_KNA1 IS NOT INITIAL.

*Descripcion de region
    SELECT SINGLE BEZEI
       FROM T005U
       INTO W_BEZEI
       WHERE LAND1 EQ S_KNA1-LAND1
         AND BLAND EQ S_KNA1-REGIO
         AND SPRAS EQ 'S'.

*Descripcion IVA
    SELECT SINGLE TEXT60
      FROM J_1AFITPVT
      INTO W_TEXT60
      WHERE SPRAS    EQ 'S'
        AND J_1AFITP EQ S_KNA1-FITYP.

    W_IVA_DEST   = W_TEXT60.

    CONCATENATE S_KNA1-STCD1(2) S_KNA1-STCD1+2(8) S_KNA1-STCD1+10(1)
           INTO W_CUIT_DEST
           SEPARATED BY '-'.

    CONCATENATE S_KNA1-STRAS S_KNA1-PSTLZ S_KNA1-ORT01
           INTO W_DIR
           SEPARATED BY '  '.

  ENDIF.

ENDIF.

* Solicitante
SELECT SINGLE KUNNR
FROM VBPA
INTO W_KUNNR_AG
WHERE VBELN = IS_BIL_INVOICE-HD_GEN-BIL_NUMBER
  AND PARVW = 'AG'.

IF W_KUNNR_AG IS NOT INITIAL.

*Señores
  SELECT SINGLE REGIO LAND1 NAME1 STRAS PSTLZ ORT01 STCD1 FITYP
    FROM KNA1
    INTO S_KNA1_AG
    WHERE KUNNR EQ W_KUNNR_AG.

  IF S_KNA1_AG IS NOT INITIAL.

    W_CLIENTE_AG = S_KNA1_AG-NAME1.

*Descripcion IVA
    CLEAR W_TEXT60.
    SELECT SINGLE TEXT60
      FROM J_1AFITPVT
      INTO W_TEXT60
      WHERE SPRAS    EQ 'S'
        AND J_1AFITP EQ S_KNA1_AG-FITYP.

    W_IVA_DEST_AG   = W_TEXT60.

    CONCATENATE S_KNA1_AG-STCD1(2) S_KNA1_AG-STCD1+2(8) S_KNA1_AG-STCD1+10(1)
           INTO W_CUIT_DEST_AG
           SEPARATED BY '-'.

    CONCATENATE S_KNA1_AG-STRAS S_KNA1_AG-PSTLZ S_KNA1_AG-ORT01
           INTO W_DIR_AG
           SEPARATED BY '  '.

  ENDIF.

ENDIF.


CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
  EXPORTING
    INPUT  = V_DOCSAP
  IMPORTING
    OUTPUT = VL_FATURA.

SELECT SINGLE LIFNR
  INTO W_LIFNR
  FROM ZSDYT0049
 WHERE DOC_FAT EQ VL_FATURA.

IF W_LIFNR IS NOT INITIAL.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      INPUT  = W_LIFNR
    IMPORTING
      OUTPUT = VL_LIFNR.

  SELECT SINGLE *
   FROM LFA1
   INTO WA_LFA1
  WHERE LIFNR EQ VL_LIFNR.

  W_CLIENTE_AG = WA_LFA1-NAME1.

  CLEAR W_TEXT60.
  SELECT SINGLE TEXT60
    INTO W_TEXT60
    FROM J_1AFITPVT
    WHERE SPRAS    EQ 'S'
      AND J_1AFITP EQ WA_LFA1-FITYP.

  W_IVA_DEST   = W_TEXT60.

  CONCATENATE WA_LFA1-STCD1(2) WA_LFA1-STCD1+2(8) WA_LFA1-STCD1+10(1)
         INTO W_CUIT_DEST_AG
         SEPARATED BY '-'.

  CONCATENATE WA_LFA1-STRAS WA_LFA1-PSTLZ WA_LFA1-ORT01
         INTO W_DIR_AG
         SEPARATED BY '  '.


  W_IVA_DEST_AG   = W_TEXT60.

ENDIF.

*----------------------------------------

* Tipo de Documento
SELECT SINGLE COD_DOC DESCRIPCION
  FROM ZYSD0001
  INTO (W_COD_DOCUMENT,W_DOC)
  WHERE TIPO_DOC EQ IS_BIL_INVOICE-HD_GEN-BIL_VBTYPE
    AND LETRA EQ W_LETRA.

*----------------------------------------------
* Nro de documento
W_DOCUMENTO  = S_XBLNR-VBELN.
*-----------------------------------------------

* Detalles de Productos y Cantidades
LOOP AT IS_BIL_INVOICE-IT_GEN
     INTO S_IT_GEN
     WHERE BIL_NUMBER EQ IS_BIL_INVOICE-HD_GEN-BIL_NUMBER.

  APPEND S_IT_GEN TO T_IT_GEN.

ENDLOOP.

SELECT SINGLE XBLNR KNUMV WAERK KURRF VTWEG KUNAG
  FROM VBRK
  INTO S_VBRK
  WHERE VBELN = S_IT_GEN-BIL_NUMBER.

SELECT MATNR VBELN POSNR FKIMG VRKME ARKTX NETWR WERKS LGORT
  FROM VBRP
  INTO CORRESPONDING FIELDS OF TABLE T_VBRP
  WHERE VBELN = S_IT_GEN-BIL_NUMBER.

*Interlocutores
LOOP AT T_VBRP
     INTO S_VBRP
     WHERE VBELN = S_IT_GEN-BIL_NUMBER.

* Interlocutor.
  SELECT SINGLE KUNNR
    FROM VBPA
    INTO S_VBRP-KUNAG
    WHERE VBELN = S_IT_GEN-BIL_NUMBER AND
          POSNR = S_VBRP-POSNR AND
          PARVW = 'AG'.

  SELECT SINGLE KUNNR
    FROM VBPA
    INTO S_VBRP-KUNWE
   WHERE VBELN = S_IT_GEN-BIL_NUMBER AND
         PARVW = 'WE'.

  IF SY-SUBRC NE 0.
    S_VBRP-KUNWE = S_VBRP-KUNAG.
  ENDIF.

  MODIFY T_VBRP FROM S_VBRP INDEX SY-TABIX.

  CLEAR: WA_KNMT-MATNR, WA_KNMT-KDMAT ,WA_KNMT-KUNNR.

  IF S_VBRP-KUNAG = S_VBRP-KUNWE.

    SELECT SINGLE MATNR KDMAT KUNNR
    FROM KNMT
    INTO WA_KNMT
    WHERE VKORG   = IS_BIL_INVOICE-HD_ORG-SALESORG
      AND VTWEG   = S_VBRK-VTWEG
      AND KUNNR   = S_VBRP-KUNAG
      AND MATNR   = S_VBRP-MATNR.

  ELSE.

    SELECT SINGLE MATNR KDMAT KUNNR
    FROM KNMT
    INTO WA_KNMT
    WHERE VKORG   = IS_BIL_INVOICE-HD_ORG-SALESORG
      AND VTWEG   = S_VBRK-VTWEG
      AND KUNNR   = S_VBRP-KUNWE
      AND MATNR   = S_VBRP-MATNR.

  ENDIF.

  IF NOT WA_KNMT-KDMAT IS INITIAL.
    MOVE WA_KNMT-KDMAT TO S_VBRP-KDMAT.
  ENDIF.

  MODIFY T_VBRP FROM S_VBRP INDEX SY-TABIX.

ENDLOOP.
*-------------------------------------------

* CAI
W_VBRK_XBLNR = S_VBRK-XBLNR(4).

W_BRNCH = S_XBLNR-XBLNR(4).

*-------------------------------------------

*Precios
IF S_VBRK-KNUMV IS NOT INITIAL.



*--> 21/06/2023 - Migração S4 - DG - Início
*  SELECT KPOSN KSCHL KAPPL KBETR KWERT
*         KPEIN KMEIN
*         KNUMV KUMZA
*         KOAID KSTAT
*    FROM KONV
*    INTO CORRESPONDING FIELDS OF TABLE T_KONV
*   WHERE KNUMV EQ S_VBRK-KNUMV.
*

  SELECT KPOSN, KSCHL, KAPPL, KBETR, KWERT,
         KPEIN, KMEIN, KNUMV, KUMZA, KOAID, KSTAT
    FROM v_KONV
    INTO TABLE @data(lT_KONV_aux)
   WHERE KNUMV EQ @S_VBRK-KNUMV.


  move-corresponding lT_KONV_aux[] to T_KONV[].
*<-- 21/06/2023 - Migração S4 - DG - Fim

  LOOP AT T_KONV INTO S_KONV.

    SELECT SINGLE VTEXT
             INTO S_KONV-VTEXT
      FROM T685T
      WHERE KSCHL EQ S_KONV-KSCHL
        AND KAPPL EQ S_KONV-KAPPL
        AND SPRAS EQ SY-LANGU.

    MODIFY T_KONV FROM S_KONV.

  ENDLOOP.

ENDIF.

*Armado de tabla final
*--------------------------------
DATA: W_PREC_UN      LIKE KONV-KBETR,
      W_POSNR        LIKE VBRP-POSNR,
      W_PREC_DEC     TYPE P DECIMALS 5. "LIKE konv-kbetr,

SORT T_VBRP ASCENDING BY MATNR POSNR.
SORT T_KONV ASCENDING BY KPOSN.

T_KONV3[] = T_KONV[].

*REFRESH T_KONV.
*


DELETE T_KONV3  WHERE KSCHL EQ  'PR00' OR
KOAID NE  'D' OR KSTAT NE ' '.

SORT T_KONV3 ASCENDING BY KSCHL .
DATA: LV_END,LV_KWERT LIKE KONV-KWERT, LV_TABIX LIKE SY-TABIX.


LOOP AT T_KONV3 INTO S_KONV2 .
  LV_TABIX = SY-TABIX + 1.

  READ TABLE T_KONV3 INTO S_KONV INDEX LV_TABIX.
  IF SY-SUBRC EQ 0.
    IF S_KONV-KSCHL NE S_KONV2-KSCHL.
      LV_END = 'X'.
    ENDIF.
  ELSE.
    LV_END = 'X'.
  ENDIF.

  LV_KWERT = LV_KWERT + S_KONV2-KWERT.

  IF LV_END = 'X'.
    S_KONV2-KWERT = LV_KWERT.
    APPEND S_KONV2 TO T_KONV2.
    CLEAR LV_END.
    CLEAR LV_KWERT.
  ENDIF.

ENDLOOP.

CLEAR W_TOTAL.

LOOP AT T_VBRP INTO WA_VBRP.

* Inicializar
  CLEAR: S_FINAL,
         W_POSNR.

* Cargar posiciones en tabla auxiliar
  S_FINAL-COD_VENT = WA_VBRP-MATNR.
  S_FINAL-DESCRIP  = WA_VBRP-ARKTX.

  W_POSNR          = WA_VBRP-POSNR.

*Precio Unitario
  CLEAR: W_PREC_DEC,
         W_KPEIN,
         W_KMEIN,
         W_KONV,
         W_TOTAL.

  LOOP AT T_KONV INTO W_KONV WHERE KPOSN EQ W_POSNR.

    IF W_KONV-KSCHL EQ 'PR00' or W_KONV-KSCHL = 'YL02'.

      W_PREC_DEC  = W_PREC_DEC + W_KONV-KBETR.
      W_KPEIN     = W_KONV-KPEIN.
      W_KMEIN     = W_KONV-KMEIN.
      W_KUMZA     = W_KONV-KUMZA.
      W_TOTAL     = W_TOTAL + W_KONV-KWERT.

    ENDIF.

  ENDLOOP.

  SELECT SINGLE MWSBK
    FROM VBRK
    INTO W_IMPOSTO
   WHERE VBELN EQ IS_BIL_INVOICE-HD_GEN-BIL_NUMBER.

  "W_TOTAL = W_TOTAL + W_IMPOSTO ."W_TOTAL + W_IVA .

  W_TOTAL_C_IMP = W_TOTAL + W_IMPOSTO .

  IF WA_VBRP-VRKME NE W_KMEIN.
    S_FINAL-CANTIDAD = WA_VBRP-FKIMG / W_KUMZA.
  ELSE.
    S_FINAL-CANTIDAD = WA_VBRP-FKIMG.
  ENDIF.

  SELECT SINGLE MSEH6
    INTO S_FINAL-UM
    FROM T006A
    WHERE SPRAS EQ SY-LANGU
      AND MSEHI EQ W_KMEIN.

  S_FINAL-PREC_UN = W_PREC_DEC.
  S_FINAL-TOTAL   = W_TOTAL.
  S_FINAL-CODIGO  = 'GRAVADA'.

  APPEND S_FINAL TO T_FINAL.

  CLEAR S_FINAL.
  READ TABLE T_KONV INTO W_KONV
       WITH KEY KPOSN = W_POSNR
                KSCHL = 'YLIQ'.

  IF SY-SUBRC IS INITIAL.

    S_FINAL-DESCRIP  = 'A CUENTA DE CALIDAD - FINAL'.
    S_FINAL-PREC_UN  = W_KONV-KBETR / 10.
    S_FINAL-CHAR%   = '%'.
    S_FINAL-TOTAL    = W_KONV-KWERT.

    APPEND S_FINAL TO T_FINAL.

  ENDIF.

ENDLOOP.
* ----------------------------------------------

*FIELD-SYMBOLS: <FS_FINAL> TYPE Y_FINAL.

**Subtotal
*LOOP AT T_FINAL ASSIGNING <FS_FINAL>.
*  WA_FINAL-TOTAL = <FS_FINAL>-TOTAL.
*  W_SUBTOTAL = W_SUBTOTAL + WA_FINAL-TOTAL.
*ENDLOOP.

*Total
*IF IS_BIL_INVOICE-HD_GEN-BIL_TYPE EQ 'YV07'.
* W_TOTAL = IS_BIL_INVOICE-HD_GEN-BIL_NETWR.
*ELSE.
* W_TOTAL = IS_BIL_INVOICE-HD_GEN-BIL_DISC.
*ENDIF.

"W_CANT_EN_LETRAS = '123'.
*Importe en Letras
*------------------------------
CALL FUNCTION 'SPELL_AMOUNT'
 EXPORTING
   AMOUNT          = W_TOTAL
   CURRENCY        = S_VBRK-WAERK
*   FILLER          = ' '
   LANGUAGE        = SY-LANGU
 IMPORTING
   IN_WORDS        = W_CANT_EN_LETRAS
 EXCEPTIONS
   NOT_FOUND       = 1
   TOO_LARGE       = 2
   OTHERS          = 3
          .
IF SY-SUBRC <> 0.
  MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
          WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

IF S_VBRK-WAERK EQ 'USD'.
  W_TEXTO_MONEDA = 'SON DOLARES '.
ELSE.
  W_TEXTO_MONEDA ='SON PESOS '.
ENDIF.

DATA: W_KTEXT TYPE TCURT-KTEXT.

SELECT SINGLE KTEXT
  INTO W_KTEXT
  FROM TCURT
  WHERE SPRAS EQ SY-LANGU
    AND WAERS EQ S_VBRK-WAERK.

W_TEXT_DIVISA(4) = S_VBRK-WAERK.
W_TEXT_DIVISA+5  = W_KTEXT.

W_TEXT_COTIZACION = 'COTIZACION DE LA MONEDA '.
W_COTIZACION = S_VBRK-KURRF.
CONCATENATE W_KTEXT ' = 1 Dolar'
       INTO W_TEXT_COTIZACION2.

IF W_CANT_EN_LETRAS-DECWORD NE 'CERO'.
  W_CON = 'CON '.
  W_CENTAVOS = 'CENTAVOS'.
ELSE.
  W_CANT_EN_LETRAS-DECWORD = ' '.
ENDIF.

*--------------------------------------------------------
* Textos de Cabecera
*--------------------------------------------------------*
DATA: VL_NAME TYPE THEAD-TDNAME.

VL_NAME = IS_BIL_INVOICE-HD_GEN-BIL_NUMBER.

CALL FUNCTION 'READ_TEXT'
  EXPORTING
    CLIENT                  = SY-MANDT
    ID                      = '0001'
    LANGUAGE                = SY-LANGU
    NAME                    = VL_NAME
    OBJECT                  = 'VBBK'
  TABLES
    LINES                   = TXT_0001
  EXCEPTIONS
    ID                      = 1
    LANGUAGE                = 2
    NAME                    = 3
    NOT_FOUND               = 4
    OBJECT                  = 5
    REFERENCE_CHECK         = 6
    WRONG_ACCESS_TO_ARCHIVE = 7
    OTHERS                  = 8.



CALL FUNCTION 'READ_TEXT'
  EXPORTING
    CLIENT                  = SY-MANDT
    ID                      = '0002'
    LANGUAGE                = SY-LANGU
    NAME                    = VL_NAME
    OBJECT                  = 'VBBK'
  TABLES
    LINES                   = TXT_0002
  EXCEPTIONS
    ID                      = 1
    LANGUAGE                = 2
    NAME                    = 3
    NOT_FOUND               = 4
    OBJECT                  = 5
    REFERENCE_CHECK         = 6
    WRONG_ACCESS_TO_ARCHIVE = 7
    OTHERS                  = 8.
