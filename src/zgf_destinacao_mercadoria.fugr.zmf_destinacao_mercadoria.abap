FUNCTION ZMF_DESTINACAO_MERCADORIA.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_ID_DESTINACAO) TYPE  ZDE_DESTINACAO OPTIONAL
*"     REFERENCE(I_ORIG_NFE_INBOUND) TYPE  ZDE_CHAVE_NFE OPTIONAL
*"     REFERENCE(I_ORIG_ROMANEIO) TYPE  ZCH_REF OPTIONAL
*"     REFERENCE(I_TP_DESTINACAO) TYPE  ZDE_TP_DESTINACAO OPTIONAL
*"     REFERENCE(CK_TOTAL_ORIGEM) TYPE  CHAR01
*"  EXPORTING
*"     REFERENCE(E_GEROU) TYPE  CHAR01
*"     REFERENCE(E_MBLNR) TYPE  MBLNR
*"     REFERENCE(E_MJAHR) TYPE  MJAHR
*"     REFERENCE(E_DOCNUM) TYPE  J_1BDOCNUM
*"     REFERENCE(E_MBLNR_DEV) TYPE  MBLNR
*"     REFERENCE(E_MJAHR_DEV) TYPE  MJAHR
*"     REFERENCE(E_DOCNUM_DEV) TYPE  J_1BDOCNUM
*"     REFERENCE(E_BELNR_DEV) TYPE  RE_BELNR
*"     REFERENCE(E_GJAHR_DEV) TYPE  GJAHR
*"  RAISING
*"      ZCX_MATERIAL_DESTINACAO
*"      ZCX_NFE_INBOUND_EXCEPTION
*"      ZCX_CADASTRO
*"----------------------------------------------------------------------

  CLEAR: OB_DESTINACAO,
         ZMMT0114,
         IT_ZMMT0115,
         IT_ZMMT0115[],
         IT_ZMMT0116,
         IT_ZMMT0116[],
         IT_LIVRE[],
         IT_ZMMT0118,
         IT_ZMMT0118[],
         LC_ORIG_NFE_INBOUND,
         LC_GEROU,
         LC_MBLNR,
         LC_MJAHR,
         LC_DOCNUM,
         IT_LIVRE[],
         IT_VINCULADO[],
         IT_MSEG_VINCULAR[],
         LC_FORNE.

  CK_READ_ONLY = ABAP_TRUE.

  IF I_ID_DESTINACAO IS NOT INITIAL.
    PERFORM CARREGA_BY_ID_DESTINACAO USING I_ID_DESTINACAO.
    PERFORM CHAMAR_TELA_LANCAMENTO.

    IF OB_DESTINACAO IS NOT INITIAL.
      CASE OB_DESTINACAO->AT_TP_DESTINACAO.
        WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_ARMAZENAR.
          E_MBLNR      = OB_DESTINACAO->AT_ZMMT0114-MBLNR.
          E_MJAHR      = OB_DESTINACAO->AT_ZMMT0114-MJAHR.
          E_DOCNUM     = OB_DESTINACAO->AT_ZMMT0114-DOCNUM.
        WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_DEVOLUCAO.
          E_MBLNR_DEV  = OB_DESTINACAO->AT_ZMMT0114-MBLNR.
          E_MJAHR_DEV  = OB_DESTINACAO->AT_ZMMT0114-MJAHR.
          E_DOCNUM_DEV = OB_DESTINACAO->AT_ZMMT0114-DOCNUM_DEV.
          E_BELNR_DEV  = OB_DESTINACAO->AT_ZMMT0114-BELNR_DEV.
          E_GJAHR_DEV  = OB_DESTINACAO->AT_ZMMT0114-GJAHR_DEV.
      ENDCASE.
    ENDIF.

    EXIT.
  ENDIF.

  IF I_ORIG_NFE_INBOUND IS NOT INITIAL.
    CK_READ_ONLY = ABAP_FALSE.
    CK_PERMITE_INCLUIR_DOC_MATERAL = ABAP_FALSE.
    CK_ORIGEM_NFE_INBOUND = ABAP_TRUE.
    LC_ORIG_NFE_INBOUND = I_ORIG_NFE_INBOUND.

    DATA: NFE_INBOUND TYPE REF TO ZCL_NFE_INBOUND.
    CREATE OBJECT NFE_INBOUND EXPORTING I_SEM_BLOQUEIO = ABAP_TRUE.
    NFE_INBOUND->ZIF_CADASTRO~SET_REGISTRO( I_ID_REGISTRO = I_ORIG_NFE_INBOUND ).
    DATA(LC_NFE) = NFE_INBOUND->GET_CABECALHO_NOTA( ).
    NFE_INBOUND->FREE( ).
    CLEAR: NFE_INBOUND.

    CASE I_TP_DESTINACAO.
      WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_ARMAZENAR.
        LC_FORNE = LC_NFE-F_ARMAZEM.

        OB_DESTINACAO = ZCL_FACTORY_MAT_DESTINACAO=>ZIF_FACTORY_MAT_DESTINACAO~GET_INSTANCE(
          )->SET_FACTORY_OBJETO( EXPORTING I_TP_DESTINACAO = I_TP_DESTINACAO
          )->GET_FACTORY_OBJETO(
          ).

      WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_DEVOLUCAO.
        LC_FORNE = LC_NFE-P_EMISSOR.

        OB_DESTINACAO = ZCL_FACTORY_MAT_DESTINACAO=>ZIF_FACTORY_MAT_DESTINACAO~GET_INSTANCE(
          )->SET_FACTORY_OBJETO( EXPORTING I_TP_DESTINACAO = I_TP_DESTINACAO
          )->GET_FACTORY_OBJETO(
          ).

      WHEN OTHERS.

    ENDCASE.

    IF LC_NFE-MBLNR IS NOT INITIAL AND LC_NFE-MJAHR IS NOT INITIAL.
      PERFORM CARREGA_VINCULAR_DOC_MATERIAL USING LC_NFE-MBLNR LC_NFE-MJAHR.
      PERFORM CHAMAR_TELA_LANCAMENTO.
    ENDIF.

    IF OB_DESTINACAO IS NOT INITIAL.
      CASE OB_DESTINACAO->AT_TP_DESTINACAO.
        WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_ARMAZENAR.
          E_MBLNR      = OB_DESTINACAO->AT_ZMMT0114-MBLNR.
          E_MJAHR      = OB_DESTINACAO->AT_ZMMT0114-MJAHR.
          E_DOCNUM     = OB_DESTINACAO->AT_ZMMT0114-DOCNUM.
        WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_DEVOLUCAO.
          E_MBLNR_DEV  = OB_DESTINACAO->AT_ZMMT0114-MBLNR.
          E_MJAHR_DEV  = OB_DESTINACAO->AT_ZMMT0114-MJAHR.
          E_DOCNUM_DEV = OB_DESTINACAO->AT_ZMMT0114-DOCNUM_DEV.
          E_BELNR_DEV  = OB_DESTINACAO->AT_ZMMT0114-BELNR_DEV.
          E_GJAHR_DEV  = OB_DESTINACAO->AT_ZMMT0114-GJAHR_DEV.
      ENDCASE.
    ENDIF.

    EXIT.
  ENDIF.

  IF I_ORIG_ROMANEIO IS NOT INITIAL.
    CK_READ_ONLY = ABAP_FALSE.
    CK_PERMITE_INCLUIR_DOC_MATERAL = ABAP_FALSE.
    CK_ORIGEM_ROMANEIO = ABAP_TRUE.

    SELECT SINGLE * INTO @DATA(WA_ROMANEIO_SAIDA)
      FROM ZSDT0001
     WHERE CH_REFERENCIA EQ @I_ORIG_ROMANEIO
       AND TP_MOVIMENTO  EQ 'S'.

    IF SY-SUBRC IS NOT INITIAL.
      EXIT.
    ENDIF.

    OB_DESTINACAO = ZCL_FACTORY_MAT_DESTINACAO=>ZIF_FACTORY_MAT_DESTINACAO~GET_INSTANCE(
      )->SET_FACTORY_OBJETO( EXPORTING I_TP_DESTINACAO = I_TP_DESTINACAO
      )->GET_FACTORY_OBJETO(
      ).

    PERFORM CARREGA_VINCULAR_ROM_SAIDA USING WA_ROMANEIO_SAIDA.
    PERFORM CHAMAR_TELA_LANCAMENTO.

    IF OB_DESTINACAO IS NOT INITIAL.
      CASE OB_DESTINACAO->AT_TP_DESTINACAO.
        WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_ARMAZENAR.
          E_MBLNR      = OB_DESTINACAO->AT_ZMMT0114-MBLNR.
          E_MJAHR      = OB_DESTINACAO->AT_ZMMT0114-MJAHR.
          E_DOCNUM     = OB_DESTINACAO->AT_ZMMT0114-DOCNUM.
          "WHEN ZIF_MATERIAL_DESTINACAO=>ST_TP_DESTINACAO_DEVOLUCAO.
          "  E_MBLNR_DEV  = OB_DESTINACAO->AT_ZMMT0114-MBLNR.
          "  E_MJAHR_DEV  = OB_DESTINACAO->AT_ZMMT0114-MJAHR.
          "  E_DOCNUM_DEV = OB_DESTINACAO->AT_ZMMT0114-DOCNUM_DEV.
          "  E_BELNR_DEV  = OB_DESTINACAO->AT_ZMMT0114-BELNR_DEV.
          "  E_GJAHR_DEV  = OB_DESTINACAO->AT_ZMMT0114-GJAHR_DEV.
      ENDCASE.
    ENDIF.

    EXIT.

  ENDIF.

ENDFUNCTION.
