*&---------------------------------------------------------------------*
*&  Include           ZSDR0068_5000
*&---------------------------------------------------------------------*

DATA:  G_CUSTOM_CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       CTL_ALV1           TYPE REF TO CL_GUI_ALV_GRID,
       GS_LAYOUT          TYPE LVC_S_LAYO,
       IT_FIELDCATALOG    TYPE LVC_T_FCAT,
       IT_SORT            TYPE LVC_T_SORT,
       IT_EXCLUDE         TYPE UI_FUNCTIONS.
*-----------------------------------------------------------------------
* Classe
*-----------------------------------------------------------------------
CLASS LCL_EVENT_HANDLER DEFINITION.

  PUBLIC SECTION.
    CLASS-METHODS:
      TOOLBAR FOR EVENT TOOLBAR OF  CL_GUI_ALV_GRID
        IMPORTING E_OBJECT,

      USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID
        IMPORTING E_UCOMM,

      DATA_CHANGED FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID
        IMPORTING ER_DATA_CHANGED
                    E_ONF4
                    E_ONF4_BEFORE
                    E_ONF4_AFTER
                    E_UCOMM.

ENDCLASS.                    "LCL_EVENT_HANDLER DEFINITION

*---------------------------------------------------------------------*
*       CLASS lcl_event_handler IMPLEMENTATION
*---------------------------------------------------------------------*
CLASS LCL_EVENT_HANDLER IMPLEMENTATION.

  METHOD TOOLBAR.

    DATA WA_TOOL TYPE STB_BUTTON.
    "Separador
    MOVE 3 TO WA_TOOL-BUTN_TYPE.
    APPEND WA_TOOL TO E_OBJECT->MT_TOOLBAR.
    CLEAR WA_TOOL.
    "Botão Nova Linha
    WA_TOOL-FUNCTION = 'NEW'.
    WA_TOOL-ICON     = '@17@'.
    APPEND WA_TOOL TO E_OBJECT->MT_TOOLBAR.
    CLEAR WA_TOOL.
    "Botão Deleta Nova Linha
    WA_TOOL-FUNCTION = 'DEL'.
    WA_TOOL-ICON     = '@18@'.
    APPEND WA_TOOL TO E_OBJECT->MT_TOOLBAR.
    CLEAR WA_TOOL.
    "Botão Edita Linha Antiga
    WA_TOOL-FUNCTION = 'EDIT'.
    WA_TOOL-ICON     = '@0Z@'.
    APPEND WA_TOOL TO E_OBJECT->MT_TOOLBAR.
    CLEAR WA_TOOL.

  ENDMETHOD.

  METHOD USER_COMMAND.

    DATA: IT_SELECTED_ROWS TYPE LVC_T_ROW,
          WA_SELECTED_ROWS TYPE LVC_S_ROW,
          WA_ZSDT0136      TYPE TY_ZSDT0136_ALV.

    IF E_UCOMM = 'NEW'.


      APPEND WA_ZSDT0136 TO IT_ZSDT0136.
      PERFORM BLOQUEIA_LINHAS.
      "PERFORM BUSCA_INFO_DOCS.

    ELSEIF E_UCOMM = 'DEL'.

      CLEAR: IT_SELECTED_ROWS, WA_SELECTED_ROWS.

      CALL METHOD CTL_ALV1->GET_SELECTED_ROWS
        IMPORTING
          ET_INDEX_ROWS = IT_SELECTED_ROWS.

      LOOP AT IT_SELECTED_ROWS INTO WA_SELECTED_ROWS.
        READ TABLE IT_ZSDT0136 INTO WA_ZSDT0136 INDEX WA_SELECTED_ROWS-INDEX.
        IF SY-SUBRC IS INITIAL.
          IF WA_ZSDT0136-ANTIG NE ABAP_TRUE AND WA_ZSDT0136-SEQ_ATUAL IS INITIAL.
            WA_ZSDT0136-WERKS = 'DELE'.
            MODIFY IT_ZSDT0136 FROM WA_ZSDT0136 INDEX WA_SELECTED_ROWS-INDEX.
          ENDIF.
          CLEAR: WA_ZSDT0136.
        ENDIF.
      ENDLOOP.

      DELETE IT_ZSDT0136 WHERE WERKS EQ 'DELE'.
      "CALL METHOD CTL_ALV1->REFRESH_TABLE_DISPLAY.

    ELSEIF E_UCOMM = 'EDIT'.

      CLEAR: IT_SELECTED_ROWS, WA_SELECTED_ROWS.

      CALL METHOD CTL_ALV1->GET_SELECTED_ROWS
        IMPORTING
          ET_INDEX_ROWS = IT_SELECTED_ROWS.

      LOOP AT IT_SELECTED_ROWS INTO WA_SELECTED_ROWS.
        READ TABLE IT_ZSDT0136 INTO WA_ZSDT0136 INDEX WA_SELECTED_ROWS-INDEX.
        IF SY-SUBRC IS INITIAL.
          MOVE ABAP_FALSE TO WA_ZSDT0136-ANTIG.
          MODIFY IT_ZSDT0136 FROM WA_ZSDT0136 INDEX WA_SELECTED_ROWS-INDEX..
          CLEAR: WA_ZSDT0136.
        ENDIF.
      ENDLOOP.

      PERFORM BLOQUEIA_LINHAS.
      "CALL METHOD CTL_ALV1->REFRESH_TABLE_DISPLAY.

    ENDIF.

    DATA: WL TYPE LVC_S_STBL.

    CALL METHOD CTL_ALV1->GET_FRONTEND_LAYOUT
      IMPORTING
        ES_LAYOUT = GS_LAYOUT.

    GS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.

    CALL METHOD CTL_ALV1->SET_FRONTEND_LAYOUT
      EXPORTING
        IS_LAYOUT = GS_LAYOUT.

    CALL METHOD CTL_ALV1->REFRESH_TABLE_DISPLAY.


  ENDMETHOD.

  METHOD DATA_CHANGED.


  ENDMETHOD.                    "ON_DATA_CHANGED_FINISHED_


ENDCLASS.                    "LCL_EVENT_HANDLER IMPLEMENTATION

*&---------------------------------------------------------------------*
*&      Module  STATUS_5000  OUTPUT
*&---------------------------------------------------------------------*
MODULE STATUS_5000 OUTPUT.

  SET PF-STATUS 'SG5000'.
  SET TITLEBAR 'TG5000'.

  PERFORM BLOQUEIA_LINHAS.
  PERFORM CARREGA_ALV.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_5000  INPUT
*&---------------------------------------------------------------------*
MODULE USER_COMMAND_5000 INPUT.

  DATA: E_VALID   TYPE CHAR1,
        C_REFRESH TYPE CHAR1.

  CLEAR: E_VALID, C_REFRESH.

  CASE SY-UCOMM.
    WHEN 'SAVE'.

      CTL_ALV1->CHECK_CHANGED_DATA(
        IMPORTING E_VALID   = E_VALID
        CHANGING  C_REFRESH = C_REFRESH ).

      IF E_VALID EQ ABAP_TRUE.
        PERFORM SALVAR_NROMANEIOS.
      ENDIF.

    WHEN OTHERS.
  ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_5000_EXIT  INPUT
*&---------------------------------------------------------------------*
MODULE USER_COMMAND_5000_EXIT INPUT.
  LEAVE TO SCREEN 0.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  CARREGA_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CARREGA_ALV .

  IF G_CUSTOM_CONTAINER IS INITIAL.

    CREATE OBJECT G_CUSTOM_CONTAINER
      EXPORTING
        CONTAINER_NAME              = 'CONTAINER5000'
      EXCEPTIONS
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5.

    IF SY-SUBRC <> 0.
      MESSAGE A000(TREE_CONTROL_MSG).
    ENDIF.

    PERFORM FILL_IT_FIELDCATALOG TABLES IT_FIELDCATALOG USING:
      01 'WERKS'     ' '   ' '    'X'  ' '  'X'   ''   ' '   'Centro',
      02 'SAFRA'     ' '   ' '    'X'  ' '  ' '   ''   ' '   'Ano',
      03 'SEQ_INI'   ' '   ' '    'X'  ' '  ' '   ''   ' '   'Sequência De',
      04 'SEQ_FIM'   ' '   ' '    'X'  ' '  ' '   ''   ' '   'Sequência Até',
      05 'SEQ_ATUAL' ' '   ' '    'X'  ' '  ' '   ''   ' '   'Número do Romaneio'.

    "GS_LAYOUT-SEL_MODE   = 'A'.
    GS_LAYOUT-STYLEFNAME = 'CELLSTYLES'.
    GS_LAYOUT-CWIDTH_OPT = 'X'.

    PERFORM SORT USING 'WERKS' CHANGING IT_SORT.
    PERFORM EXCLUIR_BOTOES.

    CREATE OBJECT CTL_ALV1
      EXPORTING
        I_PARENT = G_CUSTOM_CONTAINER.           "ALV Lote

    SET HANDLER:
      LCL_EVENT_HANDLER=>TOOLBAR FOR CTL_ALV1,
      LCL_EVENT_HANDLER=>USER_COMMAND FOR CTL_ALV1,
      LCL_EVENT_HANDLER=>DATA_CHANGED FOR CTL_ALV1.

    CALL METHOD CTL_ALV1->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG
        IT_OUTTAB            = IT_ZSDT0136
        IT_SORT              = IT_SORT.

    CALL METHOD CTL_ALV1->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
      EXCEPTIONS
        ERROR      = 1
        OTHERS     = 2.

  ELSE.

    CALL METHOD CTL_ALV1->GET_FRONTEND_LAYOUT
      IMPORTING
        ES_LAYOUT = GS_LAYOUT.

    GS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.

    CALL METHOD CTL_ALV1->SET_FRONTEND_LAYOUT
      EXPORTING
        IS_LAYOUT = GS_LAYOUT.

    CALL METHOD CTL_ALV1->REFRESH_TABLE_DISPLAY.

  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG
*&---------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG  TABLES P_IT_FIELDACATALOG_LOTE STRUCTURE LVC_S_FCAT
                           USING VALUE(P_COLNUM)
                                 VALUE(P_FIELDNAME)
                                 VALUE(P_TABNAME)
                                 VALUE(P_LEN)
                                 VALUE(P_EDIT)
                                 VALUE(P_F4)
                                 VALUE(P_LZERO)
                                 VALUE(P_OPT)
                                 VALUE(P_JUST)
                                 VALUE(P_HEADER).

  DATA: WA_FIELDCATALOG TYPE LVC_S_FCAT.

  WA_FIELDCATALOG-COL_POS    = P_COLNUM.
  WA_FIELDCATALOG-FIELDNAME  = P_FIELDNAME.
  WA_FIELDCATALOG-TABNAME    = P_TABNAME.
  WA_FIELDCATALOG-OUTPUTLEN  = P_LEN.
  WA_FIELDCATALOG-COLTEXT    = P_HEADER.
  WA_FIELDCATALOG-EDIT       = P_EDIT.
  WA_FIELDCATALOG-F4AVAILABL = P_F4.
  WA_FIELDCATALOG-REF_TABLE  = P_TABNAME.
  WA_FIELDCATALOG-CHECKTABLE = P_TABNAME.
  WA_FIELDCATALOG-LZERO      = P_LZERO.
  WA_FIELDCATALOG-COL_OPT    = P_OPT.
  WA_FIELDCATALOG-JUST       = P_JUST.
  APPEND WA_FIELDCATALOG TO P_IT_FIELDACATALOG_LOTE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SORT
*&---------------------------------------------------------------------*
FORM SORT USING P_FIELDNAME
               CHANGING P_IT_SORT TYPE LVC_T_SORT.

  DATA WA_SORT TYPE LVC_S_SORT.

  WA_SORT-SPOS = '1' .
  WA_SORT-FIELDNAME = P_FIELDNAME.
  WA_SORT-UP = 'X' . "A to Z
  WA_SORT-DOWN = SPACE .
  APPEND WA_SORT TO P_IT_SORT.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  BLOQUEIA_LINHAS
*&---------------------------------------------------------------------*
FORM BLOQUEIA_LINHAS.

  DATA: VL_CONT     TYPE I,
        IT_CELLTAB  TYPE LVC_T_STYL,
        WA_ZSDT0136 TYPE TY_ZSDT0136_ALV.

  LOOP AT IT_ZSDT0136 INTO WA_ZSDT0136.
    VL_CONT = VL_CONT + 1.
    CLEAR: IT_CELLTAB, WA_ZSDT0136-CELLSTYLES.
    "REFRESH IT_CELLTAB.
    PERFORM FILL_CELLTAB USING WA_ZSDT0136-ANTIG
                         CHANGING IT_CELLTAB.
    "CLEAR WA_ZSDT0132-CELLSTYLES.
    INSERT LINES OF IT_CELLTAB INTO TABLE WA_ZSDT0136-CELLSTYLES.
    MODIFY IT_ZSDT0136 FROM WA_ZSDT0136 INDEX VL_CONT.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_CELLTAB
*&---------------------------------------------------------------------*
FORM FILL_CELLTAB  USING    P_ANTIG
                   CHANGING P_IT_CELLTAB TYPE LVC_T_STYL.

  DATA: WA_CELLTAB TYPE LVC_S_STYL,
        STATUS     TYPE RAW4.

  IF P_ANTIG EQ ABAP_TRUE.
    STATUS = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
  ELSE.
    STATUS = CL_GUI_ALV_GRID=>MC_STYLE_ENABLED.
  ENDIF.

  WA_CELLTAB-FIELDNAME = 'SEQ_ATUAL'.
  WA_CELLTAB-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED. "Sempre disabled
  INSERT WA_CELLTAB INTO TABLE P_IT_CELLTAB.
  WA_CELLTAB-FIELDNAME = 'WERKS'.
  WA_CELLTAB-STYLE = STATUS.
  INSERT WA_CELLTAB INTO TABLE P_IT_CELLTAB.
  WA_CELLTAB-FIELDNAME = 'SAFRA'.
  WA_CELLTAB-STYLE = STATUS.
  INSERT WA_CELLTAB INTO TABLE P_IT_CELLTAB.
  WA_CELLTAB-FIELDNAME = 'SEQ_INI'.
  WA_CELLTAB-STYLE = STATUS.
  INSERT WA_CELLTAB INTO TABLE P_IT_CELLTAB.
  WA_CELLTAB-FIELDNAME = 'SEQ_FIM'.
  WA_CELLTAB-STYLE = STATUS.
  INSERT WA_CELLTAB INTO TABLE P_IT_CELLTAB.

ENDFORM.                               " FILL_CELLTAB

*&---------------------------------------------------------------------*
*&      Form  EXCLUIR_BOTOES
*&---------------------------------------------------------------------*
FORM EXCLUIR_BOTOES.

  DATA: LS_EXCLUDE     TYPE UI_FUNC.

  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_PRINT.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.
  LS_EXCLUDE = CL_GUI_ALV_GRID=>MC_FC_CHECK.
  APPEND LS_EXCLUDE TO IT_EXCLUDE.
  CLEAR LS_EXCLUDE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SALVAR_ROTEIROS
*&---------------------------------------------------------------------*
FORM SALVAR_NROMANEIOS.

  DATA: WA_ZSDT0136     TYPE TY_ZSDT0136_ALV,
        WA_ZSDT0136_AUX TYPE ZSDT0136.

  LOOP AT IT_ZSDT0136 INTO WA_ZSDT0136 WHERE ANTIG NE ABAP_TRUE.

    WA_ZSDT0136_AUX-WERKS     = WA_ZSDT0136-WERKS.
    WA_ZSDT0136_AUX-SAFRA     = WA_ZSDT0136-SAFRA.
    WA_ZSDT0136_AUX-SEQ_INI   = WA_ZSDT0136-SEQ_INI.
    WA_ZSDT0136_AUX-SEQ_FIM   = WA_ZSDT0136-SEQ_FIM.
    WA_ZSDT0136_AUX-SEQ_ATUAL = WA_ZSDT0136-SEQ_ATUAL.

    MODIFY ZSDT0136 FROM WA_ZSDT0136_AUX.

    WA_ZSDT0136-ANTIG = 'X'.
    MODIFY IT_ZSDT0136 FROM WA_ZSDT0136 INDEX SY-TABIX.

    MESSAGE TEXT-004 TYPE 'S'.

  ENDLOOP.

  CALL METHOD CTL_ALV1->GET_FRONTEND_LAYOUT
    IMPORTING
      ES_LAYOUT = GS_LAYOUT.

  GS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.

  CALL METHOD CTL_ALV1->SET_FRONTEND_LAYOUT
    EXPORTING
      IS_LAYOUT = GS_LAYOUT.

  CALL METHOD CTL_ALV1->REFRESH_TABLE_DISPLAY.

ENDFORM.
