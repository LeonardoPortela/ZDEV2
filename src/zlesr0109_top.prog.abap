*&---------------------------------------------------------------------*
*&  Include           ZLESR0109_TOP
*&---------------------------------------------------------------------*

REPORT ZLESR0109.

TABLES: ZLEST0141.

TYPES: BEGIN OF TY_ESTRUTURA.
         INCLUDE TYPE SLIS_FIELDCAT_MAIN.
         INCLUDE TYPE SLIS_FIELDCAT_ALV_SPEC.
       TYPES: END OF TY_ESTRUTURA.

TYPES: BEGIN OF TY_DATAS,
         DATAA(8) TYPE C.
TYPES END OF TY_DATAS.

*TYPES: BEGIN OF TY_SAIDA_0100.
*         INCLUDE STRUCTURE ZDE_ZLES0145_0100_OUT.
*TYPES END OF TY_SAIDA_0100.

TYPES: BEGIN OF TY_T001,
         BUKRS TYPE T001-BUKRS,
         BUTXT TYPE T001-BUTXT.
TYPES END OF TY_T001.

TYPES: BEGIN OF TY_BSIK,
         BUKRS TYPE BSIK-BUKRS,
         BELNR TYPE BSIK-BELNR,
         BUZEI TYPE BSIK-BUZEI,
         GJAHR TYPE BSIK-GJAHR,
         ZFBDT TYPE BSIK-ZFBDT.
TYPES END OF TY_BSIK.

TYPES: BEGIN OF TY_BSAK,
         BUKRS TYPE BSIK-BUKRS,
         BELNR TYPE BSIK-BELNR,
         BUZEI TYPE BSIK-BUZEI,
         GJAHR TYPE BSIK-GJAHR,
         ZFBDT TYPE BSIK-ZFBDT.
TYPES END OF TY_BSAK.

TYPES: BEGIN OF TY_ZLEST0141,
         DT_SALDO_ESTORNO     TYPE ZLEST0141_RESUMO-CANDAT,
         DT_PROC_INDISPONIVEL TYPE C.
         INCLUDE STRUCTURE ZLEST0141.
       TYPES END OF TY_ZLEST0141.

*---------------------------------------------------------------------*
*  Inicio Definition Classes
*---------------------------------------------------------------------*

CLASS LCL_ALV_TOOLBAR_0100 DEFINITION.
  PUBLIC SECTION.
*Constructor
    METHODS: CONSTRUCTOR
      IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,
*Event for toolbar
      ON_TOOLBAR FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID
        IMPORTING E_OBJECT,

      HANDLE_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID
        IMPORTING E_UCOMM.

ENDCLASS.                    "LCL_ALV_TOOLBAR DEFINITION


CLASS LCL_EVENT_HANDLER_0100 DEFINITION.
  PUBLIC SECTION.

    CLASS-METHODS:
      CATCH_HOTSPOT FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID
        IMPORTING E_ROW_ID E_COLUMN_ID ES_ROW_NO.
ENDCLASS.


DATA: OBJ_ALV_0100       TYPE REF TO CL_GUI_ALV_GRID,
      OBJ_CONTAINER_0100 TYPE REF TO CL_GUI_CUSTOM_CONTAINER.

DATA: GT_CATALOG TYPE LVC_T_FCAT,
      GW_CATALOG TYPE LVC_S_FCAT.

DATA: OBJ_TOOLBAR_0100 TYPE REF TO LCL_ALV_TOOLBAR_0100.

* ALV field catalogs
DATA: IT_FCAT TYPE LVC_T_FCAT,
      WA_FCAT TYPE LVC_S_FCAT.

* ALV excluded functions
DATA: IT_EXCLUDE_FCODE TYPE UI_FUNCTIONS,
      WA_EXCLUDE_FCODE LIKE LINE OF IT_EXCLUDE_FCODE.

* Alv Styles
DATA: LS_EDIT TYPE LVC_S_STYL,
      LT_EDIT TYPE LVC_T_STYL.

* ALV layout variant
DATA: GS_VARIANT       TYPE DISVARIANT.

* ALV layout
DATA: GS_LAYOUT        TYPE LVC_S_LAYO.

* ALV Stable
DATA: WA_STABLE        TYPE LVC_S_STBL.

DATA: IT_SELECTEDCELL TYPE LVC_T_CELL,
      WA_SELECTEDCELL TYPE LVC_S_CELL.

DATA: IT_SEL_ROWS TYPE LVC_T_ROW,
      WA_SEL_ROWS TYPE LVC_S_ROW.

DATA: GT_ESTILO TYPE LVC_T_STYL WITH HEADER LINE,
      WL_ESTILO TYPE LVC_S_STYL.

DATA: GT_F4  TYPE LVC_T_F4 WITH HEADER LINE.

* Objetos
DATA: C_ALV_TOOLBARMANAGER TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      TY_TOOLBAR           TYPE STB_BUTTON.

DATA: WA_ESTRUTURA TYPE TY_ESTRUTURA,
      ESTRUTURA    TYPE TABLE OF TY_ESTRUTURA.

TYPES:BEGIN OF TY_TESTE.
        INCLUDE TYPE  ZLEST0140.
        TYPES: CHCK TYPE CHAR1,
      END OF TY_TESTE.

DATA: WA_ZLEST0195 TYPE ZLEST0195.

*-------------------------------------------------------------------
* Tabelas Internas and Work Areas.
*-------------------------------------------------------------------
DATA: IT_SAIDA_0100       TYPE TABLE OF ZDE_ZLES0145_0100_OUT,
      WA_SAIDA_0100       TYPE ZDE_ZLES0145_0100_OUT,
      WA_ZIB_CHAVE        TYPE ZIB_CONTABIL_CHV,
      WA_ZIB_ERRO         TYPE ZIB_CONTABIL_ERR,
      TG_0141             TYPE TABLE OF TY_ZLEST0141 WITH HEADER LINE,
      TG_0141_B           TYPE TABLE OF TY_ZLEST0141 WITH HEADER LINE,
      TG_0141_SLD_FRE     TYPE TABLE OF ZLEST0141_RESUMO WITH HEADER LINE,
      TG_0141_SLD_FRE_GRP TYPE TABLE OF ZLEST0141_RESUMO WITH HEADER LINE,
      TG_0140             TYPE TABLE OF ZLEST0140 WITH HEADER LINE,
      TG_0140_B           TYPE TABLE OF TY_TESTE WITH HEADER LINE,
      TG_BSIK             TYPE TABLE OF TY_BSIK WITH HEADER LINE,
      TG_BSAK             TYPE TABLE OF TY_BSAK WITH HEADER LINE,
      TG_T001             TYPE TABLE OF TY_T001 WITH HEADER LINE,
      TG_TESTE            TYPE TABLE OF TY_TESTE WITH HEADER LINE,
      TG_ZLEST0195        TYPE TABLE OF ZLEST0195.

*-------------------------------------------------------------------
* Váriaveis
*-------------------------------------------------------------------
DATA: VG_OPERACAO  TYPE C LENGTH 20,
      VAR_ANSWER   TYPE C,
      VG_NOT_FOUND TYPE C,
      VG_DATA_PROC TYPE ZLEST0141-DATA,
      VG_VIS_ATUAL TYPE C,
      VG_PROC_LCTO TYPE C.

*-------------------------------------------------------------------
* Constantes
*-------------------------------------------------------------------
CONSTANTS: C_NOVO   TYPE C VALUE 'NOVO'   LENGTH 4,
           C_CHANGE TYPE C VALUE 'CHANGE' LENGTH 6.

SELECTION-SCREEN: BEGIN OF SCREEN 0001 AS SUBSCREEN.

SELECT-OPTIONS: P_BUKRS FOR ZLEST0141-BUKRS NO-EXTENSION NO INTERVALS,
                P_DATA  FOR ZLEST0141-DATA,
                P_LIFNR FOR ZLEST0141-LIFNR NO-EXTENSION NO INTERVALS NO-DISPLAY.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(60) P_FORN.
SELECTION-SCREEN END OF LINE.


SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: P_G_ADT RADIOBUTTON GROUP RB1 DEFAULT 'X'.
SELECTION-SCREEN COMMENT 3(20) TEXT-002 FOR FIELD   P_G_ADT.
PARAMETERS: P_C_ADT RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT 27(20) TEXT-003 FOR FIELD   P_C_ADT.
SELECTION-SCREEN END OF LINE.

PARAMETERS: P_SD_INI AS CHECKBOX.

SELECTION-SCREEN: END OF SCREEN 0001.

AT SELECTION-SCREEN OUTPUT.

  CLEAR: P_FORN, P_LIFNR, P_LIFNR[].

  IF ( P_BUKRS-LOW IS NOT INITIAL ) AND ( P_DATA-LOW IS NOT INITIAL ).
    SELECT *
      FROM ZLEST0140 INTO TABLE @DATA(_TG_0140)
     WHERE BUKRS IN @P_BUKRS
       AND DATA  IN @P_DATA.

    IF _TG_0140[] IS INITIAL.
      MESSAGE 'Não existe parâmetros para essa Empresa no periodo informado!' TYPE 'S'.
      CLEAR: TG_0141[], IT_SAIDA_0100[].
      PERFORM F_REFRESH_ALV USING '0100'.
      EXIT.
    ELSE.

      SORT _TG_0140 BY LIFNR.
      DELETE ADJACENT DUPLICATES FROM _TG_0140 COMPARING LIFNR.

      IF _TG_0140[] IS INITIAL.
        MESSAGE 'Existe mais de um fornecedor parametrizado nessa Empresa/período informado!' TYPE 'S'.
        CLEAR: TG_0141[], IT_SAIDA_0100[].
        PERFORM F_REFRESH_ALV USING '0100'.
        EXIT.
      ENDIF.

      READ TABLE _TG_0140 INTO DATA(_WL_0140) INDEX 1.

      SELECT SINGLE *
        FROM LFA1 INTO @DATA(_WL_LFA1)
       WHERE LIFNR = @_WL_0140-LIFNR.

      IF SY-SUBRC = 0.

        P_LIFNR-SIGN   = 'I'.
        P_LIFNR-OPTION = 'EQ'.
        P_LIFNR-LOW    = _WL_LFA1-LIFNR.
        APPEND P_LIFNR.

        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
          EXPORTING
            INPUT  = _WL_LFA1-LIFNR
          IMPORTING
            OUTPUT = _WL_LFA1-LIFNR.

        CONCATENATE 'Fornecedor:' _WL_LFA1-LIFNR '-' _WL_LFA1-NAME1
               INTO P_FORN SEPARATED BY SPACE.

      ELSE.
        MESSAGE 'Fornecedor não encontrado!' TYPE 'S'.
        CLEAR: TG_0141[], IT_SAIDA_0100[].
        PERFORM F_REFRESH_ALV USING '0100'.
      ENDIF.

    ENDIF.

  ENDIF.


START-OF-SELECTION.

  IF P_G_ADT IS NOT INITIAL.
    VG_VIS_ATUAL = 'G'.
  ELSEIF P_C_ADT IS NOT INITIAL.
    VG_VIS_ATUAL = 'C'.
  ENDIF.

  CLEAR: VG_PROC_LCTO.

  AUTHORITY-CHECK OBJECT 'ZLES0145'
       ID 'ZVS_000004' FIELD '1'. "Geração Adiantamento

  IF SY-SUBRC = 0.
    VG_PROC_LCTO = ABAP_TRUE.
  ENDIF.

  CALL SCREEN 0100.
