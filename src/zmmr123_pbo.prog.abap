*&---------------------------------------------------------------------*
*&  Include           ZMMR123_PBO
*&---------------------------------------------------------------------*

MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'PF0100'.
  SET TITLEBAR 'T0100'.
ENDMODULE.

MODULE PBO_0100 OUTPUT.

  IF OBJ_CONTAINER_0100 IS INITIAL.

    PERFORM F_REFRESH_OBJETOS.
    PERFORM F_CRIAR_CATALOG USING '0100'.

    CREATE OBJECT OBJ_CONTAINER_0100
      EXPORTING
        CONTAINER_NAME = 'CC_ALV_0100'.

    CREATE OBJECT OBJ_ALV_0100
      EXPORTING
        I_PARENT = OBJ_CONTAINER_0100.

    CREATE OBJECT OBJ_TOOLBAR_0100
      EXPORTING
        IO_ALV_GRID = OBJ_ALV_0100.

    GS_LAYOUT-SEL_MODE   = 'A'.
    GS_VARIANT-REPORT  = SY-REPID.
    WA_STABLE-ROW         = 'X'.
    WA_STABLE-COL         = 'X'.

    SET HANDLER: OBJ_TOOLBAR_0100->ON_TOOLBAR          FOR OBJ_ALV_0100,
                 OBJ_TOOLBAR_0100->HANDLE_USER_COMMAND FOR OBJ_ALV_0100,
                 LCL_EVENT_HANDLER_0100=>CATCH_HOTSPOT FOR OBJ_ALV_0100.

    PERFORM F_EXCLUDE_FCODE USING '0100'.

    CALL METHOD OBJ_ALV_0100->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
        IS_VARIANT           = GS_VARIANT
      CHANGING
        IT_FIELDCATALOG      = IT_FCAT
        IT_OUTTAB            = IT_SAIDA_0100.

    CALL METHOD OBJ_ALV_0100->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

    CALL METHOD OBJ_ALV_0100->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.

  ELSE.
    CALL METHOD OBJ_ALV_0100->REFRESH_TABLE_DISPLAY
       EXPORTING
         IS_STABLE = WA_STABLE.
  ENDIF.


ENDMODULE.

MODULE STATUS_0110 OUTPUT.

  SET PF-STATUS 'PF0110'.
  SET TITLEBAR 'T0110'.

  LOOP AT SCREEN.

    CASE SCREEN-NAME.
      WHEN 'WA_SAIDA_0110-EBELN' OR 'WA_SAIDA_0110-EBELP'.
        CASE VG_OPERACAO.
          WHEN C_NOVO.

          WHEN C_CHANGE.
            SCREEN-INPUT = 0.
            MODIFY SCREEN.
        ENDCASE.
    ENDCASE.

  ENDLOOP.

  IF WA_SAIDA_0110-EBELN IS NOT INITIAL.

    "Preencher dados Cabe√ßalho
    SELECT SINGLE *
      FROM EKKO INTO @DATA(WL_EKKO)
     WHERE EBELN = @WA_SAIDA_0110-EBELN.

    IF SY-SUBRC = 0.

      SELECT SINGLE *
        FROM LFA1 INTO @DATA(WL_LFA1)
       WHERE LIFNR = @WL_EKKO-LIFNR.

      IF ( SY-SUBRC = 0 ) AND ( WL_EKKO-LIFNR IS NOT INITIAL ).

        WA_SAIDA_0110-LIFNR = WL_LFA1-LIFNR.

        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
          EXPORTING
            INPUT         = WL_LFA1-LIFNR
          IMPORTING
            OUTPUT        = WL_LFA1-LIFNR.

        CONCATENATE WL_LFA1-LIFNR '-' WL_LFA1-NAME1
               INTO WA_SAIDA_0110-NAME1 SEPARATED BY SPACE.
      ENDIF.

    ENDIF.

    "Preencher dados Item
    IF WA_SAIDA_0110-EBELP IS NOT INITIAL.
       SELECT SINGLE *
         FROM EKPO INTO @DATA(WL_EKPO)
        WHERE EBELN = @WA_SAIDA_0110-EBELN
          AND EBELP = @WA_SAIDA_0110-EBELP.

       IF ( SY-SUBRC = 0 ) AND ( WL_EKPO-MATNR IS NOT INITIAL ).

         SELECT SINGLE *
           FROM MAKT INTO @DATA(WL_MATK)
          WHERE MATNR = @WL_EKPO-MATNR
            AND SPRAS = @SY-LANGU.

         IF SY-SUBRC = 0.

           CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
             EXPORTING
               INPUT         = WL_MATK-MATNR
             IMPORTING
               OUTPUT        = WL_MATK-MATNR.

           CONCATENATE WL_MATK-MATNR '-' WL_MATK-MAKTX
                  INTO WA_SAIDA_0110-MAKTX SEPARATED BY SPACE.
         ENDIF.

         WA_SAIDA_0110-MATNR = WL_EKPO-MATNR.
         WA_SAIDA_0110-BUKRS = WL_EKKO-BUKRS.
         WA_SAIDA_0110-MENGE = WL_EKPO-MENGE.
         WA_SAIDA_0110-MEINS = WL_EKPO-MEINS.
         WA_SAIDA_0110-WERKS = WL_EKPO-WERKS.
         WA_SAIDA_0110-LGORT = WL_EKPO-LGORT.

         SELECT SINGLE *
           FROM EKET INTO @DATA(WL_EKET)
          WHERE EBELN = @WL_EKPO-EBELN
            AND EBELP = @WL_EKPO-EBELP.

         IF SY-SUBRC = 0.
           WA_SAIDA_0110-CHARG = WL_EKET-CHARG.
         ENDIF.

       ENDIF.


    ENDIF.

  ENDIF.

ENDMODULE.

MODULE PBO_0110 OUTPUT.
ENDMODULE.
