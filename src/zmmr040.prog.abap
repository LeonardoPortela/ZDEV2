*&---------------------------------------------------------------------*
*& Report  ZMMR040
*&
*&---------------------------------------------------------------------*
*&TITULO: Extrator dados para tempos de carregamentos
*&AUTOR : ANTONIO LUIZ RODRIGUES DA SILVA
*&DATA. : 24.10.2013
*TRANSACAO: ZMM0060
*&---------------------------------------------------------------------*

REPORT  ZMMR040.

*----------------------------------------------------------------------*
* TYPE POOLS
*----------------------------------------------------------------------*
TYPE-POOLS: ICON,
            SLIS.


*----------------------------------------------------------------------*
* TABLES
*----------------------------------------------------------------------*
TABLES: ZSDT0001,ZMMT0045.


*----------------------------------------------------------------------*
* ESTRUTURAS
*----------------------------------------------------------------------*

TYPES:
   BEGIN OF TY_J_1BNFLIN,
         DOCNUM   TYPE J_1BNFLIN-DOCNUM,
         REFKEY   TYPE J_1BNFLIN-REFKEY,
   END OF TY_J_1BNFLIN,

   BEGIN OF TY_VBFA,
        VBELV    TYPE VBFA-VBELV,
        VBELN    TYPE VBFA-VBELN,
        MJAHR    TYPE VBFA-MJAHR,
        REFKEY   TYPE J_1BNFLIN-REFKEY,
   END OF TY_VBFA,

   BEGIN OF TY_VBAK,
     TKNUM    TYPE VBAK-TKNUM,
     VBELN    TYPE VBAK-VBELN,
   END OF TY_VBAK,

   BEGIN OF TY_J_1BNFE_ACTIVE,
     DOCNUM      TYPE J_1BNFE_ACTIVE-DOCNUM,
     ACTION_TIME TYPE J_1BNFE_ACTIVE-ACTION_TIME,
     ACTION_DATE TYPE J_1BNFE_ACTIVE-ACTION_DATE,
   END OF TY_J_1BNFE_ACTIVE,

   BEGIN OF TY_ZCTE_VIAGEM,
     DOCNUM          TYPE ZCTE_VIAGEM-DOCNUM,
     DT_SOLICITACAO  TYPE ZCTE_VIAGEM-DT_SOLICITACAO,
     HR_SOLICITACAO  TYPE ZCTE_VIAGEM-HR_SOLICITACAO,
     DT_RETORNO      TYPE ZCTE_VIAGEM-DT_RETORNO,
     HR_RETORNO      TYPE ZCTE_VIAGEM-HR_RETORNO,
   END OF TY_ZCTE_VIAGEM,

   BEGIN OF TY_ZCTE_CIOT,
     DOCNUM         TYPE ZCTE_CIOT-DOCNUM,
     DT_CREDITO     TYPE ZCTE_CIOT-DT_CREDITO,
     HR_CREDITO     TYPE ZCTE_CIOT-HR_CREDITO,
   END OF TY_ZCTE_CIOT,

   BEGIN OF TY_J_1BNFDOC,
     DOCNUM TYPE J_1BNFDOC-DOCNUM,
     PSTDAT TYPE J_1BNFDOC-PSTDAT,
     CRETIM TYPE J_1BNFDOC-CRETIM,
   END OF TY_J_1BNFDOC,

   BEGIN OF TY_SAIDA,
      CAP_CORREIAS      TYPE ZMMT0045-CAP_CORREIAS,
      BUTXT             TYPE T001-BUTXT,
      REGIONAL          TYPE ZMMT0045-REGIONAL,
      NAME1             TYPE T001W-NAME1,
      MAKTX             TYPE MAKT-MAKTX,
      MES(2),
      DT_ABERTURA       TYPE ZSDT0001-DT_ABERTURA,
      NR_ROMANEIO       TYPE ZSDT0001-NR_ROMANEIO,
      PESO_LIQ          TYPE ZSDT0001-PESO_LIQ,
      TP_CARREGAMENTO   TYPE SY-UZEIT,

   END OF TY_SAIDA.


*----------------------------------------------------------------------*
* TABELAS INTERNA
*----------------------------------------------------------------------*
DATA: IT_ZSDT0001         TYPE TABLE OF ZSDT0001,
      IT_ZMMT0045         TYPE TABLE OF ZMMT0045,
      IT_ZMMT0047         TYPE TABLE OF ZMMT0047,
      IT_ZMMT0047_ANT     TYPE TABLE OF ZMMT0047,
      IT_J_1BNFLIN        TYPE TABLE OF TY_J_1BNFLIN,
      IT_J_1BNFDOC        TYPE TABLE OF TY_J_1BNFDOC,
      IT_VBFA             TYPE TABLE OF TY_VBFA,
      IT_VBAK             TYPE TABLE OF TY_VBAK,
      IT_VBFA_8           TYPE TABLE OF TY_VBFA,
      IT_VBFA_M           TYPE TABLE OF TY_VBFA,
      IT_VBFA_CTE         TYPE TABLE OF TY_VBFA,
      IT_J_1BNFE_ACTIVE   TYPE TABLE OF TY_J_1BNFE_ACTIVE,
      IT_ZCTE_VIAGEM      TYPE TABLE OF TY_ZCTE_VIAGEM,
      IT_ZCTE_CIOT        TYPE TABLE OF TY_ZCTE_CIOT.

*----------------------------------------------------------------------*
* WORKAREA INTERNA
*----------------------------------------------------------------------*
DATA: WA_ZSDT0001         TYPE ZSDT0001,
      WA_ZMMT0045         TYPE ZMMT0045,
      WA_ZMMT0047         TYPE ZMMT0047,
      WA_ZMMT0047_CLC     TYPE ZMMT0047,
      WA_ZMMT0047_ANT     TYPE ZMMT0047,
      WA_ZMMT0047_ANT2    TYPE ZMMT0047,
      WA_J_1BNFLIN        TYPE TY_J_1BNFLIN,
      WA_J_1BNFDOC        TYPE TY_J_1BNFDOC,
      WA_VBFA             TYPE TY_VBFA,
      WA_VBFA_8           TYPE TY_VBFA,
      WA_VBFA_M           TYPE TY_VBFA,
      WA_VBFA_CTE         TYPE TY_VBFA,
      WA_VBAK             TYPE TY_VBAK,
      WA_J_1BNFE_ACTIVE   TYPE TY_J_1BNFE_ACTIVE,
      WA_ZCTE_VIAGEM      TYPE TY_ZCTE_VIAGEM,
      WA_ZCTE_CIOT        TYPE TY_ZCTE_CIOT.


*----------------------------------------------------------------------*
*                            TELA DE SELEÇÂO                           *
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK A1 WITH FRAME TITLE TEXT-001.
SELECTION-SCREEN BEGIN OF BLOCK A2 WITH FRAME.
SELECT-OPTIONS:
  P_WERKS FOR ZSDT0001-BRANCH  ,
  P_REGI  FOR ZMMT0045-REGIONAL NO INTERVALS NO-EXTENSION,
  P_PERI  FOR ZSDT0001-DT_ABERTURA  OBLIGATORY.
SELECTION-SCREEN END   OF BLOCK A2.
SELECTION-SCREEN END   OF BLOCK A1.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_REGI-LOW.
  DATA: TL_RETURN_TAB TYPE TABLE OF DDSHRETVAL WITH HEADER LINE,
        TL_DSELC      TYPE TABLE OF DSELC      WITH HEADER LINE.

  DATA: BEGIN OF TL_REGI OCCURS 0,
          REGIONAL      TYPE ZMMT0045-REGIONAL,
          CAP_CORREIAS  TYPE ZMMT0045-CAP_CORREIAS,
          TP_PADRAO     TYPE ZMMT0045-TP_PADRAO,
         END OF TL_REGI.

  REFRESH TL_REGI.

  SELECT DISTINCT REGIONAL CAP_CORREIAS TP_PADRAO
    FROM ZMMT0045
    INTO TABLE TL_REGI
    ORDER BY REGIONAL.


  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      RETFIELD        = 'REGIONAL'
      DYNPPROG        = SY-REPID                            "'ZFINR018'
      DYNPNR          = SY-DYNNR
      DYNPROFIELD     = 'ZMMT0045-REGIONAL'
      VALUE_ORG       = 'S'
    TABLES
      VALUE_TAB       = TL_REGI
      RETURN_TAB      = TL_RETURN_TAB
      DYNPFLD_MAPPING = TL_DSELC.

*----------------------------------------------------------------------*
*                         START OF SELECTION                           *
*----------------------------------------------------------------------*
START-OF-SELECTION.

  PERFORM: Z_SELECIONA_DADOS,
           Z_PROCESSA_DADOS.


*&---------------------------------------------------------------------*
*&      Form  Z_SELECIONA_DADOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM Z_SELECIONA_DADOS.

  DATA TABIX TYPE SY-TABIX.

  IF P_REGI IS NOT INITIAL.
    SELECT *
    FROM ZMMT0045
    INTO TABLE IT_ZMMT0045
    WHERE REGIONAL IN P_REGI.

    IF IT_ZMMT0045[] IS NOT INITIAL.
      SELECT *
       FROM ZSDT0001
       INTO TABLE IT_ZSDT0001
       FOR ALL ENTRIES IN IT_ZMMT0045
       WHERE BRANCH      EQ IT_ZMMT0045-WERKS
       AND   DT_MOVIMENTO IN P_PERI
       AND   TP_MOVIMENTO = 'S'.
      " Carregamentos anteriores ao romaneio por centro (por dia)
      LOOP AT IT_ZSDT0001 INTO WA_ZSDT0001.
        WA_ZMMT0047_ANT-MANDT           = SY-MANDT.
        WA_ZMMT0047_ANT-CH_REFERENCIA   = WA_ZSDT0001-CH_REFERENCIA.
        WA_ZMMT0047_ANT-FILIAL          = WA_ZSDT0001-BRANCH.
        WA_ZMMT0047_ANT-DT_ENTRADA      = WA_ZSDT0001-DT_ABERTURA.
        WA_ZMMT0047_ANT-HR_ENTRADA      = WA_ZSDT0001-HR_ABERTURA.
        APPEND WA_ZMMT0047_ANT TO IT_ZMMT0047_ANT.
      ENDLOOP.
*      SELECT *
*        FROM ZMMT0047
*        INTO TABLE IT_ZMMT0047_ANT
*        FOR ALL ENTRIES IN IT_ZMMT0045
*        WHERE FILIAL EQ IT_ZMMT0045-WERKS
*        AND   DT_ENTRADA IN P_PERI.

    ENDIF.
  ELSE.
    SELECT *
     FROM ZSDT0001
     INTO TABLE IT_ZSDT0001
     WHERE BRANCH      IN P_WERKS
     AND   DT_MOVIMENTO IN P_PERI
      AND   TP_MOVIMENTO = 'S'.

    " Carregamentos anteriores ao romaneio por centro (por dia)
    LOOP AT IT_ZSDT0001 INTO WA_ZSDT0001.
      WA_ZMMT0047_ANT-MANDT           = SY-MANDT.
      WA_ZMMT0047_ANT-CH_REFERENCIA   = WA_ZSDT0001-CH_REFERENCIA.
      WA_ZMMT0047_ANT-FILIAL          = WA_ZSDT0001-BRANCH.
      WA_ZMMT0047_ANT-DT_ENTRADA      = WA_ZSDT0001-DT_ABERTURA.
      WA_ZMMT0047_ANT-HR_ENTRADA      = WA_ZSDT0001-HR_ABERTURA.
      WA_ZMMT0047_ANT-DT_SAIDA        = WA_ZSDT0001-DT_FECHAMENTO.
      WA_ZMMT0047_ANT-HR_SAIDA        = WA_ZSDT0001-HR_FECHAMENTO.
      APPEND WA_ZMMT0047_ANT TO IT_ZMMT0047_ANT.
    ENDLOOP.
*    SELECT *
*      FROM ZMMT0047
*      INTO TABLE IT_ZMMT0047_ANT
*      WHERE FILIAL IN P_WERKS
*      AND   DT_ENTRADA IN P_PERI.
  ENDIF.

  IF IT_ZSDT0001[] IS INITIAL.
    EXIT.
  ENDIF.

  " Dados da Nota Fiscal
  SELECT VBFA~VBELV VBFA~VBELN VBFA~MJAHR
    FROM VBFA
    INNER JOIN VBRK
    ON  VBRK~VBELN = VBFA~VBELN
    AND VBRK~FKSTO NE 'X'
    INTO TABLE IT_VBFA
    FOR ALL ENTRIES IN IT_ZSDT0001
    WHERE VBFA~VBELV = IT_ZSDT0001-DOC_REM
    AND   VBFA~VBTYP_N = 'M' AND VBRK~DRAFT = SPACE .

  IT_VBFA_M[] = IT_VBFA[].

  SELECT VBFA~VBELV VBFA~VBELN VBFA~MJAHR
  FROM VBFA
  INTO TABLE IT_VBFA
  FOR ALL ENTRIES IN IT_ZSDT0001
  WHERE VBFA~VBELV = IT_ZSDT0001-DOC_REM
  AND   VBFA~VBTYP_N = 'R'.

  SORT IT_VBFA_M BY VBELV.
  LOOP AT IT_VBFA INTO WA_VBFA.
    TABIX = SY-TABIX.
    READ TABLE IT_VBFA_M INTO WA_VBFA_M WITH KEY VBELV = WA_VBFA BINARY SEARCH.
    IF SY-SUBRC = 0.
      DELETE IT_VBFA INDEX TABIX.
    ENDIF.
  ENDLOOP.
  LOOP AT IT_VBFA INTO WA_VBFA.
    WA_VBFA-REFKEY = WA_VBFA-VBELN.
    CONCATENATE WA_VBFA-VBELN WA_VBFA-MJAHR INTO WA_VBFA-REFKEY.
    MODIFY IT_VBFA FROM WA_VBFA INDEX SY-TABIX TRANSPORTING REFKEY.
  ENDLOOP.

  LOOP AT IT_VBFA_M INTO WA_VBFA.
    WA_VBFA-REFKEY = WA_VBFA-VBELN.
    APPEND WA_VBFA TO IT_VBFA.
  ENDLOOP.

  IF IT_VBFA[] IS INITIAL.
    EXIT.
  ENDIF.

  SELECT DOCNUM REFKEY
    FROM J_1BNFLIN
    INTO TABLE IT_J_1BNFLIN
    FOR ALL ENTRIES IN IT_VBFA
    WHERE REFKEY = IT_VBFA-REFKEY.

  " Dados do Frete
  SELECT VBFA~VBELV VBFA~VBELN
    FROM VBFA
    INNER JOIN VTTK
    ON  VTTK~TKNUM = VBFA~VBELN
    "AND VTTK~SHTYP = 'Z001'
    INTO TABLE IT_VBFA_8
    FOR ALL ENTRIES IN IT_ZSDT0001
    WHERE VBFA~VBELV = IT_ZSDT0001-DOC_REM
    AND   VBFA~VBTYP_N = '8'.

  CHECK SY-SUBRC = 0.

  SELECT TKNUM VBELN
    FROM VBAK
    INTO TABLE IT_VBAK
    FOR ALL ENTRIES IN IT_VBFA_8
    WHERE TKNUM = IT_VBFA_8-VBELN.

  CHECK SY-SUBRC = 0.

  SELECT VBFA~VBELV VBFA~VBELN
     FROM VBFA
     INNER JOIN VBRK
     ON  VBRK~VBELN = VBFA~VBELN
     AND VBRK~FKSTO NE 'X'
     INTO TABLE IT_VBFA_CTE
     FOR ALL ENTRIES IN IT_VBAK
     WHERE VBFA~VBELV = IT_VBAK-VBELN AND VBRK~DRAFT = SPACE .

  IF IT_VBFA_CTE[] IS INITIAL.
    EXIT.
  ENDIF.

  LOOP AT IT_VBFA_CTE INTO WA_VBFA_CTE.
    WA_VBFA_CTE-REFKEY = WA_VBFA_CTE-VBELN.
    MODIFY IT_VBFA_CTE FROM WA_VBFA_CTE INDEX SY-TABIX TRANSPORTING REFKEY.
  ENDLOOP.

  SELECT DOCNUM REFKEY
    FROM J_1BNFLIN
    APPENDING TABLE IT_J_1BNFLIN
    FOR ALL ENTRIES IN IT_VBFA_CTE
    WHERE REFKEY = IT_VBFA_CTE-REFKEY.

  IF IT_J_1BNFLIN[] IS INITIAL.
    EXIT.
  ENDIF.

  SELECT DOCNUM PSTDAT CRETIM
    FROM J_1BNFDOC
    INTO TABLE IT_J_1BNFDOC
    FOR ALL ENTRIES IN IT_J_1BNFLIN
    WHERE DOCNUM EQ IT_J_1BNFLIN-DOCNUM
    AND   CANCEL NE 'X'
    AND   DOCTYP EQ '1'.

  CHECK SY-SUBRC = 0.

  SELECT DOCNUM ACTION_TIME ACTION_DATE
    FROM J_1BNFE_ACTIVE
    INTO TABLE IT_J_1BNFE_ACTIVE
    FOR ALL ENTRIES IN IT_J_1BNFDOC
    WHERE DOCNUM = IT_J_1BNFDOC-DOCNUM
    AND   DOCSTA = '1'.

  CHECK SY-SUBRC = 0.

  SELECT DOCNUM DT_SOLICITACAO HR_SOLICITACAO DT_RETORNO HR_RETORNO
    FROM ZCTE_VIAGEM
    INTO TABLE IT_ZCTE_VIAGEM
    FOR ALL ENTRIES IN IT_J_1BNFE_ACTIVE
    WHERE DOCNUM = IT_J_1BNFE_ACTIVE-DOCNUM
    AND   ST_ULTIMO = 'X'.

  SELECT DOCNUM DT_CREDITO HR_CREDITO
   FROM ZCTE_CIOT
   INTO TABLE IT_ZCTE_CIOT
   FOR ALL ENTRIES IN IT_J_1BNFE_ACTIVE
   WHERE DOCNUM = IT_J_1BNFE_ACTIVE-DOCNUM.
  "AND   ST_CIOT = '5'.


ENDFORM.                    " Z_SELECIONA_DADOS
*&---------------------------------------------------------------------*
*&      Form  Z_PROCESSA_DADOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM Z_PROCESSA_DADOS .
  SORT: IT_VBFA            BY VBELV,
        IT_VBFA_8          BY VBELV,
        IT_VBAK            BY TKNUM,
        IT_VBFA_CTE        BY VBELV,
        IT_J_1BNFLIN       BY REFKEY,
        IT_J_1BNFDOC       BY DOCNUM,
        IT_J_1BNFE_ACTIVE  BY DOCNUM,
        IT_ZCTE_VIAGEM     BY DOCNUM,
        IT_ZCTE_CIOT       BY DOCNUM,
        IT_ZMMT0047_ANT    BY FILIAL DT_ENTRADA HR_ENTRADA CH_REFERENCIA,
        IT_ZSDT0001        BY BRANCH DT_ABERTURA HR_ABERTURA.

  DATA: LV_SECONDS  TYPE SYTABIX ,
        V_TEMPO_INTERVALO TYPE I,
        V_TEMPO_ROMANEIO TYPE I,
        V_TEMPO_ROMANEIO_ANT TYPE I,
        V_HORA      TYPE I,
        V_RESTO     TYPE I,
        V_MINUTO    TYPE I,
        V_SEGUNDO   TYPE I,
        C_HORA(2),
        C_MINUTO(2),
        C_SEGUNDO(2),
        V_PRI(1),
        V_CA1(1),
        V_CA2(1).

  LOOP AT IT_ZSDT0001 INTO WA_ZSDT0001.
    WA_ZMMT0047-MANDT           = SY-MANDT.
    WA_ZMMT0047-CH_REFERENCIA   = WA_ZSDT0001-CH_REFERENCIA.
    WA_ZMMT0047-FILIAL          = WA_ZSDT0001-BRANCH.
    WA_ZMMT0047-DT_ENTRADA      = WA_ZSDT0001-DT_ABERTURA.
    WA_ZMMT0047-HR_ENTRADA      = WA_ZSDT0001-HR_ABERTURA.
    WA_ZMMT0047-DT_SAIDA        = WA_ZSDT0001-DT_FECHAMENTO.
    WA_ZMMT0047-HR_SAIDA        = WA_ZSDT0001-HR_FECHAMENTO.

    "dados romaneio anterior
    CLEAR: WA_ZMMT0047_ANT, WA_ZMMT0047_ANT2.
    LOOP AT IT_ZMMT0047_ANT INTO WA_ZMMT0047_ANT WHERE FILIAL     = WA_ZMMT0047-FILIAL
                                                 AND   DT_ENTRADA = WA_ZMMT0047-DT_ENTRADA.
      IF WA_ZMMT0047_ANT-HR_ENTRADA GE  WA_ZMMT0047-HR_ENTRADA.
        EXIT.
      ENDIF.
      MOVE-CORRESPONDING WA_ZMMT0047_ANT TO WA_ZMMT0047_ANT2.
    ENDLOOP.
    MOVE-CORRESPONDING WA_ZMMT0047_ANT2 TO WA_ZMMT0047_ANT.

    IF WA_ZMMT0047_ANT-DT_ENTRADA IS INITIAL.
      WA_ZMMT0047_ANT-DT_ENTRADA = WA_ZMMT0047-DT_ENTRADA.
      WA_ZMMT0047_ANT-HR_ENTRADA = WA_ZMMT0047-HR_ENTRADA.
    ENDIF.

    V_CA1 = 'F'.
    V_CA2 = 'F'.
    IF ( WA_ZMMT0047-HR_ENTRADA > WA_ZMMT0047_ANT-HR_SAIDA ) AND ( WA_ZMMT0047-DT_ENTRADA = WA_ZMMT0047_ANT-DT_SAIDA ) .
      V_CA1 = 'V'.
    ENDIF.

    IF ( WA_ZMMT0047-HR_SAIDA < WA_ZMMT0047_ANT-HR_SAIDA ) AND ( WA_ZMMT0047-DT_SAIDA = WA_ZMMT0047_ANT-DT_SAIDA ).
      V_CA2 = 'V'.
    ENDIF.

    " Intervalo Entrada
    CALL FUNCTION 'SWI_DURATION_DETERMINE'
      EXPORTING
        START_DATE = WA_ZMMT0047_ANT-DT_ENTRADA
        END_DATE   = WA_ZMMT0047-DT_ENTRADA
        START_TIME = WA_ZMMT0047_ANT-HR_ENTRADA
        END_TIME   = WA_ZMMT0047-HR_ENTRADA
      IMPORTING
        DURATION   = LV_SECONDS.

    V_TEMPO_INTERVALO  = LV_SECONDS.

    "Tempo do romaneio ANTERIOR
    CALL FUNCTION 'SWI_DURATION_DETERMINE'
      EXPORTING
        START_DATE = WA_ZMMT0047_ANT-DT_ENTRADA
        END_DATE   = WA_ZMMT0047_ANT-DT_SAIDA
        START_TIME = WA_ZMMT0047_ANT-HR_ENTRADA
        END_TIME   = WA_ZMMT0047_ANT-HR_SAIDA
      IMPORTING
        DURATION   = LV_SECONDS.

    V_TEMPO_ROMANEIO_ANT  = LV_SECONDS.

    "Tempo do romaneio
    CALL FUNCTION 'SWI_DURATION_DETERMINE'
      EXPORTING
        START_DATE = WA_ZMMT0047-DT_ENTRADA
        END_DATE   = WA_ZMMT0047-DT_SAIDA
        START_TIME = WA_ZMMT0047-HR_ENTRADA
        END_TIME   = WA_ZMMT0047-HR_SAIDA
      IMPORTING
        DURATION   = LV_SECONDS.

    V_TEMPO_ROMANEIO  = LV_SECONDS.
    IF V_CA1 = V_CA2.
      WA_ZMMT0047-TP_CARREGAMENTO = V_TEMPO_ROMANEIO - V_TEMPO_ROMANEIO_ANT +  V_TEMPO_INTERVALO .
    ELSE.
      WA_ZMMT0047-TP_CARREGAMENTO = V_TEMPO_ROMANEIO.
    ENDIF.
*    IF WA_ZMMT0047-TP_CARREGAMENTO LT 0.
*      WA_ZMMT0047-TP_CARREGAMENTO = V_TEMPO_ROMANEIO.
*    ENDIF.


    V_HORA     = WA_ZMMT0047-TP_CARREGAMENTO DIV 3600.
    V_RESTO    = WA_ZMMT0047-TP_CARREGAMENTO MOD 3600.
    V_MINUTO   = V_RESTO DIV 60.
    V_SEGUNDO  = V_RESTO MOD 60.
*

    WA_ZMMT0047-NR_ROMANEIO     = WA_ZSDT0001-NR_ROMANEIO.
    WA_ZMMT0047-MATNR           = WA_ZSDT0001-MATNR.
    WA_ZMMT0047-PESO_LIQ        =  WA_ZSDT0001-PESO_LIQ.

    CLEAR:  WA_VBFA,WA_J_1BNFLIN,WA_J_1BNFDOC,WA_J_1BNFE_ACTIVE.
    "Dados Nota fiscal
    READ TABLE IT_VBFA           INTO WA_VBFA           WITH KEY VBELV  = WA_ZSDT0001-DOC_REM BINARY SEARCH.
    IF SY-SUBRC = 0.
      READ TABLE IT_J_1BNFLIN      INTO WA_J_1BNFLIN      WITH KEY REFKEY = WA_VBFA-REFKEY BINARY SEARCH.
      READ TABLE IT_J_1BNFDOC      INTO WA_J_1BNFDOC      WITH KEY DOCNUM = WA_J_1BNFLIN-DOCNUM BINARY SEARCH.

      WA_ZMMT0047-DOC_NFE         = WA_J_1BNFDOC-DOCNUM.
      WA_ZMMT0047-DT_NFE          = WA_J_1BNFDOC-PSTDAT.
      WA_ZMMT0047-HR_NFE          = WA_J_1BNFDOC-CRETIM.

      READ TABLE IT_J_1BNFE_ACTIVE INTO WA_J_1BNFE_ACTIVE WITH KEY DOCNUM = WA_J_1BNFLIN-DOCNUM BINARY SEARCH.
      WA_ZMMT0047-DT_SEFAZ_NFE    = WA_J_1BNFE_ACTIVE-ACTION_DATE.
      WA_ZMMT0047-HR_SEFAZ_NFE    = WA_J_1BNFE_ACTIVE-ACTION_TIME.
    ENDIF.

    "Dados Frete
    CLEAR:  WA_VBFA_8, WA_VBAK,WA_VBFA_CTE,WA_J_1BNFLIN,WA_J_1BNFDOC,WA_J_1BNFE_ACTIVE.
    READ TABLE IT_VBFA_8         INTO WA_VBFA_8         WITH KEY VBELV = WA_ZSDT0001-DOC_REM BINARY SEARCH.
    IF SY-SUBRC = 0.
      READ TABLE IT_VBAK           INTO WA_VBAK           WITH KEY TKNUM = WA_VBFA_8-VBELN BINARY SEARCH.
      READ TABLE IT_VBFA_CTE       INTO WA_VBFA_CTE       WITH KEY VBELV = WA_VBAK-VBELN BINARY SEARCH.
      READ TABLE IT_J_1BNFLIN      INTO WA_J_1BNFLIN      WITH KEY REFKEY = WA_VBFA_CTE-REFKEY BINARY SEARCH.
      READ TABLE IT_J_1BNFDOC      INTO WA_J_1BNFDOC      WITH KEY DOCNUM = WA_J_1BNFLIN-DOCNUM BINARY SEARCH.

      WA_ZMMT0047-DOC_CTE         = WA_J_1BNFDOC-DOCNUM.
      WA_ZMMT0047-DT_CTE          = WA_J_1BNFDOC-PSTDAT.
      WA_ZMMT0047-HR_CTE          = WA_J_1BNFDOC-CRETIM.

      READ TABLE IT_J_1BNFE_ACTIVE INTO WA_J_1BNFE_ACTIVE WITH KEY DOCNUM = WA_J_1BNFLIN-DOCNUM BINARY SEARCH.
      WA_ZMMT0047-DT_SEFAZ_CTE    = WA_J_1BNFE_ACTIVE-ACTION_DATE.
      WA_ZMMT0047-HR_SEFAZ_CTE    = WA_J_1BNFE_ACTIVE-ACTION_TIME.

      READ TABLE IT_ZCTE_VIAGEM INTO WA_ZCTE_VIAGEM WITH KEY DOCNUM = WA_J_1BNFLIN-DOCNUM BINARY SEARCH.
      WA_ZMMT0047-DT_SOLICITACAO  = WA_ZCTE_VIAGEM-DT_SOLICITACAO.
      WA_ZMMT0047-HR_SOLICITACAO  = WA_ZCTE_VIAGEM-HR_SOLICITACAO.
      WA_ZMMT0047-DT_RETORNO      = WA_ZCTE_VIAGEM-DT_RETORNO.
      WA_ZMMT0047-HR_RETORNO      = WA_ZCTE_VIAGEM-HR_RETORNO.

      READ TABLE IT_ZCTE_CIOT INTO WA_ZCTE_CIOT WITH KEY DOCNUM = WA_J_1BNFLIN-DOCNUM BINARY SEARCH.
      WA_ZMMT0047-DT_CREDITO      = WA_ZCTE_CIOT-DT_CREDITO.
      WA_ZMMT0047-HR_CREDITO      = WA_ZCTE_CIOT-HR_CREDITO.
    ENDIF.

    APPEND WA_ZMMT0047 TO IT_ZMMT0047.
    CLEAR WA_ZMMT0047.

  ENDLOOP.

  MODIFY ZMMT0047 FROM TABLE IT_ZMMT0047.

ENDFORM.                    " Z_PROCESSA_DADOS
