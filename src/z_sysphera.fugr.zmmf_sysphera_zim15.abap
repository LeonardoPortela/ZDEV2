FUNCTION ZMMF_SYSPHERA_ZIM15.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  EXPORTING
*"     REFERENCE(IS_VALID) TYPE  CHAR50
*"  TABLES
*"      T_INVESTIMENTOS STRUCTURE  ZMM_SYSPHERA_ZIM02
*"----------------------------------------------------------------------

  DATA: V_URL        TYPE STRING,
        V_URL_TOKEN  TYPE STRING,
        JSON_INPUT   TYPE STRING,
        JSON_RETORNO TYPE STRING,
        TOKEN        TYPE STRING.

  DATA: IT_INVESTIMENTOS TYPE TABLE OF ZMM_SYSPHERA_ZIM02.

  TYPES: BEGIN OF ESTRUCT_INVESTIMENTOS,
           LINE LIKE IT_INVESTIMENTOS,
         END OF ESTRUCT_INVESTIMENTOS.

  DATA WA_RETORNO TYPE ZMM_SYSPHERA_ZIM02_E.


  DEFINE ADD_TAG.
    CONCATENATE JSON_INPUT '"' &1 '": "' &2 '"' &3 INTO JSON_INPUT.
  END-OF-DEFINITION.


  CLEAR: JSON_INPUT, JSON_RETORNO.

  " Tabela aonde ficam os endereÃ§os da URL a ser requisitada.
  SELECT SINGLE
    Z~URL, Z~URL_TOKEN
  FROM
    ZAUTH_WEBSERVICE AS Z
  INTO
    @DATA(WA_URLS)
  WHERE
    Z~SERVICE = 'INVESTIMENTOS_SYSPHERA'.

  V_URL = WA_URLS-URL.
  V_URL_TOKEN = WA_URLS-URL_TOKEN.

  CHECK ( V_URL IS NOT INITIAL ).

  " Realizar chamada para a API
  DATA: V_USERNAME TYPE STRING,V_PASSWORD TYPE STRING, E_REASON   TYPE STRING.
*
  DATA(OBJ_WEBSERVICE) = NEW ZCL_WEBSERVICE( ).
*
  "OBJ_WEBSERVICE->ZIF_WEBSERVICE~CK_USA_AUTH_WEBSERVICE = ABAP_TRUE.
  "OBJ_WEBSERVICE->ZIF_WEBSERVICE~NM_AUTH_WEBSERVICE = 'INVESTIMENTOS_SYSPHERA'.
  "OBJ_WEBSERVICE->ZIF_WEBSERVICE~AUTENTICA_OPUS = ABAP_TRUE.
*  DATA(E_HTTP) = OBJ_WEBSERVICE->URL( ).

  CL_HTTP_CLIENT=>CREATE_BY_URL(
    EXPORTING
      URL                =  V_URL "Minha URL que busquei na tabela
    IMPORTING
      CLIENT             = DATA(E_HTTP)
    EXCEPTIONS
      ARGUMENT_NOT_FOUND = 1
      PLUGIN_NOT_ACTIVE  = 2
      INTERNAL_ERROR     = 3
      OTHERS             = 4 ).
*
**    CALL FUNCTION 'ZGET_TOKEN_OPUS_API'
**      IMPORTING
**        TOKEN =  TOKEN.
*
  CALL METHOD E_HTTP->REQUEST->SET_HEADER_FIELD
    EXPORTING
      NAME  = '~request_method'
      VALUE = 'GET'.

  CALL METHOD E_HTTP->REQUEST->SET_HEADER_FIELD
    EXPORTING
      NAME  = '~server_protocol'
      VALUE = 'HTTP/1.1'.

  CALL METHOD E_HTTP->REQUEST->SET_HEADER_FIELD
    EXPORTING
      NAME  = 'Content-Type'
      VALUE = 'application/json; charset=UTF-8'.

  CALL METHOD E_HTTP->REQUEST->SET_HEADER_FIELD
    EXPORTING
      NAME  = 'Accept'
      VALUE = 'application/json'.

*    CALL METHOD E_HTTP->REQUEST->SET_HEADER_FIELD
*      EXPORTING
*        NAME  = 'Authorization'
*        VALUE = TOKEN.

  ZCL_WEBSERVICE=>ZIF_WEBSERVICE~ADD_TOKEN_OPUS_HTTP_CLIENTE(
    EXPORTING
      I_URL_DESTINO              = V_URL
      I_URL_TOKEN                = V_URL_TOKEN
    CHANGING
      I_HTTP                     = E_HTTP
   EXCEPTIONS
     HTTP_COMMUNICATION_FAILURE = 1
     HTTP_INVALID_STATE         = 2
     HTTP_PROCESSING_FAILED     = 3
     HTTP_INVALID_TIMEOUT       = 4
     OTHERS                     = 5
  ).

  OBJ_WEBSERVICE->ZIF_WEBSERVICE~CONSULTAR(
   EXPORTING
     I_HTTP                     = E_HTTP
     I_XML                      = JSON_INPUT
   IMPORTING
     E_REASON                   = E_REASON
   RECEIVING
     E_RESULTADO                = JSON_RETORNO
   EXCEPTIONS
     HTTP_COMMUNICATION_FAILURE = 1
     HTTP_INVALID_STATE         = 2
     HTTP_PROCESSING_FAILED     = 3
     HTTP_INVALID_TIMEOUT       = 4
     OTHERS                     = 5 ).

  IF JSON_RETORNO IS  NOT INITIAL   .

    /UI2/CL_JSON=>DESERIALIZE( EXPORTING JSON = JSON_RETORNO CHANGING DATA = WA_RETORNO ).

    T_INVESTIMENTOS[] = WA_RETORNO-D[].

    IS_VALID = 'Sucess'.

  ELSE.
    IS_VALID = 'Not Found'.
  ENDIF.


ENDFUNCTION.
