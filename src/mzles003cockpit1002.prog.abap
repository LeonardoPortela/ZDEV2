*----------------------------------------------------------------------*
***INCLUDE MZLES003COCKPIT1002 .
*----------------------------------------------------------------------*

***********************************************************************
* LOCAL CLASSES
***********************************************************************
*---------- Definition -----------------------------------------------*
CLASS COCKIP_EVENT_HANDLER_CONF DEFINITION.
  PUBLIC SECTION.
    METHODS COCKPIT_HOTSPOT_CLICK_CONF
                  FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID
      IMPORTING E_COLUMN_ID ES_ROW_NO.
    METHODS COCKPIT_DOUBLE_CLICK_CONF
                  FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID
      IMPORTING E_ROW E_COLUMN.
ENDCLASS.                    "cockip_event_handler_lotes DEFINITION
*---------- Implementation -------------------------------------------*
CLASS COCKIP_EVENT_HANDLER_CONF IMPLEMENTATION.

  METHOD COCKPIT_HOTSPOT_CLICK_CONF.
    PERFORM COCKPIT_HOTSPOT_CLICK_CONF USING ES_ROW_NO-ROW_ID E_COLUMN_ID-FIELDNAME.
  ENDMETHOD.                    "cockpit_hotspot_click_lotes

  METHOD COCKPIT_DOUBLE_CLICK_CONF.
    PERFORM COCKPIT_DOUBLE_CLICK_CONF USING E_ROW.
  ENDMETHOD.                    "ON_DOUBLE_CLICK

ENDCLASS.                    "cockip_event_handler_lotes IMPLEMENTATION

*&---------------------------------------------------------------------*
*&      Form  cockpit_hotspot_click_item
*&---------------------------------------------------------------------*
FORM COCKPIT_HOTSPOT_CLICK_CONF  USING VALUE(ROW_ID) LIKE LVC_S_ROID-ROW_ID VALUE(FIELDNAME) LIKE LVC_S_COL-FIELDNAME.

  DATA: WA_LOTES_ITEM_ALV TYPE ZPFE_LOTE_ITEM_ALV,
        VG_BELNR          TYPE BELNR_D,
        VG_GJAHR          TYPE GJAHR,
        VG_BUKRS          TYPE BUKRS,
        WA_ZPFE_CHVID_AG  TYPE ZPFE_CHVID_AG,
        E_ROW             TYPE LVC_S_ROW.

  IF VG_SEL_AJUSTE IS NOT INITIAL.
    PERFORM DISMARCA_GRID_CONF.
    CALL METHOD COCKPIT_ALV_LOTES_CONF->REFRESH_TABLE_DISPLAY.
  ENDIF.

  CASE FIELDNAME.
    WHEN 'ICOSTATUS'.
      READ TABLE IT_LOTES_ITEM_ALV  INDEX ROW_ID INTO WA_LOTES_ITEM_ALV.
      CHECK ( SY-SUBRC IS INITIAL ) AND ( WA_LOTES_ITEM_ALV-NM_LOTE IS NOT INITIAL ).
      CALL FUNCTION 'Z_PFE_MSG_CONTAB'
        EXPORTING
          P_NM_LOTE      = WA_LOTES_ITEM_ALV-NM_LOTE
          P_NM_LOTE_ITEM = WA_LOTES_ITEM_ALV-NM_LOTE_ITEM.
    WHEN 'TKNUM'.
      READ TABLE IT_LOTES_ITEM_ALV  INDEX ROW_ID INTO WA_LOTES_ITEM_ALV.
      CHECK: ( SY-SUBRC IS INITIAL ) AND ( NOT WA_LOTES_ITEM_ALV-TKNUM IS INITIAL ).
      SET PARAMETER ID: 'TNR' FIELD WA_LOTES_ITEM_ALV-TKNUM.
      CALL TRANSACTION 'VT03N' AND SKIP FIRST SCREEN.
    WHEN 'CHVID' OR 'DESCHVID'.
      E_ROW-INDEX = ROW_ID.
      PERFORM COCKPIT_DOUBLE_CLICK_CONF USING E_ROW.
      CHECK 1 = 2.
    WHEN 'CK_CONFERIDO'.
      READ TABLE IT_LOTES_ITEM_ALV  INDEX ROW_ID INTO WA_LOTES_ITEM_ALV.
      CHECK ( SY-SUBRC IS INITIAL ) AND ( WA_LOTES_ITEM_ALV-NM_LOTE IS NOT INITIAL ).
      IF  NOT ( ( WA_LOTES_ITEM_ALV-STATUS EQ 'I' ) OR ( WA_LOTES_ITEM_ALV-STATUS EQ 'E' ) ).
        MESSAGE S026.
      ELSE.
        SELECT SINGLE * INTO WA_ZPFE_CHVID_AG
          FROM ZPFE_CHVID_AG
         WHERE CHVID_CH_VINC EQ WA_LOTES_ITEM_ALV-CHVID.

        IF SY-SUBRC IS INITIAL.
          MESSAGE S026.
        ELSE.
          IF ( WA_LOTES_ITEM_ALV-CHVID EQ '2' ) AND ( WA_LOTES_ITEM_ALV-CK_CONFERIDO IS INITIAL ).
            CALL FUNCTION 'Z_PFE_AJUSTA_PESO_CHEGADA'
              EXPORTING
                P_LOTE            = WA_LOTES_ITEM_ALV-NM_LOTE
                P_ITEM            = WA_LOTES_ITEM_ALV-NM_LOTE_ITEM
                P_PESO            = WA_LOTES_ITEM_ALV-PESO_CHEGADA
              TABLES
                IT_LOTE_ITEM      = IT_LOTES_ITEM
                IT_LOTES_ITEM_ALV = IT_LOTES_ITEM_ALV.
            READ TABLE IT_LOTES_ITEM_ALV WITH KEY NM_LOTE      = WA_LOTES_ITEM_ALV-NM_LOTE
                                                  NM_LOTE_ITEM = WA_LOTES_ITEM_ALV-NM_LOTE_ITEM.
          ENDIF.

          IF WA_LOTES_ITEM_ALV-CK_CONFERIDO IS INITIAL.
            WA_LOTES_ITEM_ALV-CK_CONFERIDO = 'X'.
          ELSE.
            CLEAR: WA_LOTES_ITEM_ALV-CK_CONFERIDO.
          ENDIF.
          WA_LOTES_ITEM_ALV-DS_USUARIO_CONF = SY-UNAME.
          MODIFY IT_LOTES_ITEM_ALV FROM WA_LOTES_ITEM_ALV INDEX SY-TABIX TRANSPORTING CK_CONFERIDO DS_USUARIO_CONF.

          CALL FUNCTION 'Z_PFE_SET_ITENS_AGRUPADOS'
            EXPORTING
              P_ITEM      = WA_LOTES_ITEM_ALV
            TABLES
              P_ITENS_ALV = IT_LOTES_ITEM_ALV.

          VG_ALTEROU_CONF = 'X'.
        ENDIF.
      ENDIF.
    WHEN 'DOCNUM'.
      READ TABLE IT_LOTES_ITEM_ALV  INDEX ROW_ID INTO WA_LOTES_ITEM_ALV.
      CHECK ( SY-SUBRC IS INITIAL ) AND ( WA_LOTES_ITEM_ALV-NM_LOTE IS NOT INITIAL ).
      PERFORM VISUALIZAR_NOTA USING WA_LOTES_ITEM_ALV-DOCNUM.
    WHEN 'CD_CIOT'.
      READ TABLE IT_LOTES_ITEM_ALV  INDEX ROW_ID INTO WA_LOTES_ITEM_ALV.
      CHECK ( SY-SUBRC IS INITIAL ) AND ( WA_LOTES_ITEM_ALV-NM_LOTE IS NOT INITIAL ).
      PERFORM VISUALIZAR_CIOT USING WA_LOTES_ITEM_ALV-CD_CIOT.
    WHEN 'BELNR'.
      READ TABLE IT_LOTES_ITEM_ALV  INDEX ROW_ID INTO WA_LOTES_ITEM_ALV.
      CHECK ( SY-SUBRC IS INITIAL ) AND ( WA_LOTES_ITEM_ALV-NM_LOTE IS NOT INITIAL ).
      IF WA_LOTES_ITEM_ALV-BELNR IS INITIAL.
        MESSAGE S006 WITH WA_LOTES_ITEM_ALV-NM_LOTE.
        CHECK 1 = 2.
      ENDIF.
      VG_BELNR = WA_LOTES_ITEM_ALV-BELNR.
      VG_GJAHR = WA_LOTES_ITEM_ALV-GJAHR.
      VG_BUKRS = WA_LOTES_ALV-BUKRS.
      SET PARAMETER ID: 'BLN' FIELD VG_BELNR, 'BUK' FIELD VG_BUKRS, 'GJR' FIELD VG_GJAHR.
      CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
  ENDCASE.

  CALL METHOD COCKPIT_ALV_LOTES_CONF->GET_SCROLL_INFO_VIA_ID
    IMPORTING
      ES_ROW_NO   = ES_ROW_NO
      ES_ROW_INFO = ES_ROW_INFO
      ES_COL_INFO = ES_COL_INFO.

  LEAVE TO SCREEN 0001.

ENDFORM.                    " handle_hotspot_click

*&---------------------------------------------------------------------*
*&      Form  COCKPIT_DOUBLE_CLICK_CONF
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM COCKPIT_DOUBLE_CLICK_CONF  USING P_E_ROW TYPE LVC_S_ROW.

  DATA: WA_ZPFE_CHVID_AG TYPE ZPFE_CHVID_AG,
        VG_TABIX         TYPE SY-TABIX.

  PERFORM DISMARCA_GRID_CONF.

  READ TABLE IT_LOTES_ITEM_ALV  INDEX P_E_ROW-INDEX INTO WA_LOTES_ITEM_CONF.
  VG_TABIX = SY-TABIX.

  SELECT SINGLE * INTO WA_ZCTE_CIOT
    FROM ZCTE_CIOT
   WHERE DOCNUM EQ WA_LOTES_ITEM_CONF-DOCNUM.

  CHECK SY-SUBRC IS INITIAL.

  SELECT SINGLE * INTO WA_ZPFE_CHVID_AG
    FROM ZPFE_CHVID_AG
   WHERE CHVID_CH_VINC = WA_LOTES_ITEM_CONF-CHVID.

  IF NOT SY-SUBRC IS INITIAL.
    VG_CORTROCA = WA_LOTES_ITEM_CONF-ROWCOLOR.
    WA_LOTES_ITEM_CONF-ROWCOLOR = 'C710'.
    VG_SEL_AJUSTE               = 'X'.
    MODIFY IT_LOTES_ITEM_ALV INDEX VG_TABIX FROM WA_LOTES_ITEM_CONF TRANSPORTING ROWCOLOR.
    VG_SCROLL_ROW-ROW_ID = VG_TABIX.
  ELSE.
    WA_LOTES_ITEM_CONF-ROWCOLOR = WA_LOTES_ITEM_CONF-ROWCOLOR_ATUAL.
    MODIFY IT_LOTES_ITEM_ALV INDEX VG_TABIX FROM WA_LOTES_ITEM_CONF TRANSPORTING ROWCOLOR.
    VG_SCROLL_ROW-ROW_ID = VG_TABIX.
  ENDIF.

  CALL METHOD COCKPIT_ALV_LOTES_CONF->GET_SCROLL_INFO_VIA_ID
    IMPORTING
      ES_ROW_NO   = ES_ROW_NO
      ES_ROW_INFO = ES_ROW_INFO
      ES_COL_INFO = ES_COL_INFO.

  LEAVE TO SCREEN 0001.

ENDFORM.                    " COCKPIT_DOUBLE_CLICK_CONF


DATA: COCKPIT_EVENT_HANDLER_CONF  TYPE REF TO COCKIP_EVENT_HANDLER_CONF.

*&---------------------------------------------------------------------*
*&      Module  CRIA_ITENS_LOTE_CONFE  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CRIA_ITENS_LOTE_CONFE OUTPUT.

  IF ( VG_ALTEROU_CONF IS INITIAL ) AND ( VG_SCROLL_ROW-ROW_ID IS INITIAL ).
    PERFORM PESQUISA_ITENS_LOTE.
  ENDIF.

  PERFORM CRIA_ALV_LOTE_CONF.

  CALL METHOD COCKPIT_ALV_LOTES_CONF->REFRESH_TABLE_DISPLAY.

  CALL METHOD COCKPIT_ALV_LOTES_CONF->SET_SCROLL_INFO_VIA_ID
    EXPORTING
      IS_ROW_INFO = ES_ROW_INFO
      IS_COL_INFO = ES_COL_INFO
      IS_ROW_NO   = ES_ROW_NO.

ENDMODULE.                 " CRIA_ITENS_LOTE_CONFE  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  CRIA_ALV_LOTE_CONF
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CRIA_ALV_LOTE_CONF .

  DATA: IT_EXCLUDE_FCODE TYPE UI_FUNCTIONS,
        WA_EXCLUDE_FCODE LIKE LINE OF IT_EXCLUDE_FCODE.

  CONSTANTS: TABELA_ITEM TYPE STRING VALUE 'IT_LOTES_ITEM_ALV'.

  IF COCKPIT_PRIM_CONF IS INITIAL.

    CLEAR: IT_EXCLUDE_FCODE.

    WA_EXCLUDE_FCODE = '&PRINT'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&AVERAGE'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&MB_VIEW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    "wa_exclude_fcode = '&MB_FILTER'.
    "append wa_exclude_fcode to it_exclude_fcode.
    WA_EXCLUDE_FCODE = '&INFO'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.

*   Create object for container
    CREATE OBJECT COCKPIT_CONTAINER_LOTES_CONF
      EXPORTING
        CONTAINER_NAME = 'CTN_CONF'.

    CREATE OBJECT COCKPIT_ALV_LOTES_CONF
      EXPORTING
        I_PARENT = COCKPIT_CONTAINER_LOTES_CONF.

    CLEAR: IT_COCKPIT_CATALOG.

    PERFORM Z_ESTRUTURA_FIELDCAT TABLES IT_COCKPIT_CATALOG USING:
        TABELA_ITEM 'ICOSTATUS'      TEXT-L00 'X' 01 04 'X'   SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CK_CONFERIDO'   TEXT-L16 'X' 02 04 'X'   SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 'X'   'X',
        TABELA_ITEM 'NR_LOTE_ADM'    TEXT-L22 ' ' 03 05 'X'   'ALPHA' SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'NM_LOTE_ITEM'   TEXT-D02 ' ' 03 05 'X'   'ALPHA' SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CHVID'          TEXT-D03 'X' 04 02 'X'   SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DESCHVID'       TEXT-D04 'X' 05 25 'X'   SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CD_CIOT'        TEXT-D05 'X' 06 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'NR_CIOT'        TEXT-D06 ' ' 07 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'NUCONTRATO'     TEXT-D12 ' ' 08 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'TKNUM'          TEXT-D20 'X' 09 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DOCNUM'         TEXT-D07 'X' 10 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CTENUM'         TEXT-D13 ' ' 11 09 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CTESERIE'       TEXT-D14 ' ' 12 03 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DT_TRANSACAO'   TEXT-D08 ' ' 13 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DT_BAIXA'       TEXT-D21 ' ' 13 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'VL_TRANSACAO'   TEXT-D09 ' ' 14 15 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'VL_PAGO_LOTE'   TEXT-D19 ' ' 15 15 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'VL_CONFERIDO'   TEXT-D15 ' ' 16 15 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'VL_DIFERENCA'   TEXT-D16 ' ' 17 15 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DT_CHEGADA'     TEXT-D10 ' ' 18 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'PESO_ORIGEM'    TEXT-D17 ' ' 19 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'PESO_IMPORTADO' TEXT-D18 ' ' 20 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'PESO_CHEGADA'   TEXT-D11 ' ' 21 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'BELNR'          TEXT-L13 'X' 22 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'GJAHR'          TEXT-L14 ' ' 23 06 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DS_USUARIO_CTB' TEXT-L15 ' ' 24 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE.

    CLEAR: COCKPIT_GS_LAYOUT.
    COCKPIT_GS_LAYOUT-ZEBRA      = C_X.
    COCKPIT_GS_LAYOUT-INFO_FNAME = 'ROWCOLOR'.

    WA_EXCLUDE_FCODE = '&LOCAL&CUT'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&INSERT_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&DELETE_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&MOVE_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&PASTE'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&PASTE_NEW_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&UNDO'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&VARI_ADMIN'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&APPEND'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&COPY'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&COPY_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&VLOTUS'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&AQW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&MB_VIEW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&REFRESH'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&REPREP'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&CHECK'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    IS_VARIANT-REPORT = SY-REPID.
    IS_VARIANT-HANDLE = '1002'.

    CALL METHOD COCKPIT_ALV_LOTES_CONF->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_DEFAULT            = SPACE
        IS_LAYOUT            = COCKPIT_GS_LAYOUT
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
        IS_VARIANT           = IS_VARIANT
        I_SAVE               = 'A'
      CHANGING
        IT_FIELDCATALOG      = IT_COCKPIT_CATALOG
        IT_OUTTAB            = IT_LOTES_ITEM_ALV[].

    CREATE OBJECT COCKPIT_EVENT_HANDLER_CONF.
    SET HANDLER COCKPIT_EVENT_HANDLER_CONF->COCKPIT_HOTSPOT_CLICK_CONF FOR COCKPIT_ALV_LOTES_CONF.
    SET HANDLER COCKPIT_EVENT_HANDLER_CONF->COCKPIT_DOUBLE_CLICK_CONF  FOR COCKPIT_ALV_LOTES_CONF.

    COCKPIT_PRIM_CONF = C_X.

  ENDIF.

ENDFORM.                    " CRIA_ALV_LOTE_CONF
*&---------------------------------------------------------------------*
*&      Form  cria_alv_lote_conf_adm
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CRIA_ALV_LOTE_CONF_ADM .

  DATA: IT_EXCLUDE_FCODE TYPE UI_FUNCTIONS,
        WA_EXCLUDE_FCODE LIKE LINE OF IT_EXCLUDE_FCODE.

  CONSTANTS: TABELA_ITEM TYPE STRING VALUE 'IT_LOTES_ITEM_CONF_ADM'.

  IF COCKPIT_ALV_LOTES_CONF_ADM IS INITIAL.

    CLEAR: IT_EXCLUDE_FCODE.

    WA_EXCLUDE_FCODE = '&PRINT'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&AVERAGE'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&MB_VIEW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    "wa_exclude_fcode = '&MB_FILTER'.
    "append wa_exclude_fcode to it_exclude_fcode.
    WA_EXCLUDE_FCODE = '&INFO'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.

*   Create object for container
    CREATE OBJECT COCKPIT_CONTAINER_LOTES_ADM
      EXPORTING
        CONTAINER_NAME = 'CTN_CONF_ADM'.

    CREATE OBJECT COCKPIT_ALV_LOTES_CONF_ADM
      EXPORTING
        I_PARENT = COCKPIT_CONTAINER_LOTES_ADM.

    CLEAR: IT_COCKPIT_CATALOG.

    PERFORM Z_ESTRUTURA_FIELDCAT TABLES IT_COCKPIT_CATALOG USING:
        TABELA_ITEM 'STATUS_CONF'    TEXT-L00 'X' 01 04 'X'   SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
*        tabela_item 'ICOSTATUS'      text-l00 'X' 01 04 'X'   space   space space space c_grid_color_c200 space space,
*        tabela_item 'CK_CONFERIDO'   text-l16 'X' 02 04 'X'   space   space space space c_grid_color_c200 'X'   'X',
        TABELA_ITEM 'NR_LOTE_ADM'    TEXT-L22 ' ' 03 05 'X'   'ALPHA' SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'NM_LOTE'        TEXT-L24 ' ' 03 05 'X'   'ALPHA' SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'NM_LOTE_ITEM'   TEXT-D02 ' ' 03 05 'X'   'ALPHA' SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CHVID'          TEXT-D03 'X' 04 02 'X'   SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DESCHVID'       TEXT-D04 'X' 05 25 'X'   SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CD_CIOT'        TEXT-D05 'X' 06 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'NR_CIOT'        TEXT-D06 ' ' 07 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'NUCONTRATO'     TEXT-D12 ' ' 08 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'TKNUM'          TEXT-D20 'X' 09 12 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DOCNUM'         TEXT-D07 'X' 10 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CTENUM'         TEXT-D13 ' ' 11 09 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'CTESERIE'       TEXT-D14 ' ' 12 03 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
*        tabela_item 'DT_TRANSACAO'   text-d08 ' ' 13 10 space space   space space space c_grid_color_c200 space space,
        TABELA_ITEM 'DT_BAIXA'       TEXT-D21 ' ' 13 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'DT_CONF_ADM'    TEXT-L28 ' ' 13 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
*        tabela_item 'VL_TRANSACAO'   text-d09 ' ' 14 15 space space   space space space c_grid_color_c200 space space,
        TABELA_ITEM 'VL_PAGO_LOTE'   TEXT-D19 ' ' 15 15 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'VL_CONF_ADM'    TEXT-L25 ' ' 16 15 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'VL_DIF_ADM'     TEXT-L26 ' ' 16 15 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
*        tabela_item 'VL_DIFERENCA'   text-d16 ' ' 17 15 space space   space space space c_grid_color_c200 space space,
        TABELA_ITEM 'DT_CHEGADA'     TEXT-D10 ' ' 18 10 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'PESO_ORIGEM'    TEXT-D17 ' ' 19 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'PESO_IMPORTADO' TEXT-D18 ' ' 20 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'PESO_CHEGADA'   TEXT-D11 ' ' 21 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE,
        TABELA_ITEM 'PESO_CONF_ADM'  TEXT-L27 ' ' 21 13 SPACE SPACE   SPACE SPACE SPACE C_GRID_COLOR_C200 SPACE SPACE.
*        tabela_item 'BELNR'          text-l13 'X' 22 10 space space   space space space c_grid_color_c200 space space,
*        tabela_item 'GJAHR'          text-l14 ' ' 23 06 space space   space space space c_grid_color_c200 space space,
*        tabela_item 'DS_USUARIO_CTB' text-l15 ' ' 24 13 space space   space space space c_grid_color_c200 space space.

    CLEAR: COCKPIT_GS_LAYOUT.
    COCKPIT_GS_LAYOUT-ZEBRA      = C_X.
    COCKPIT_GS_LAYOUT-INFO_FNAME = 'ROWCOLOR'.

    WA_EXCLUDE_FCODE = '&LOCAL&CUT'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&INSERT_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&DELETE_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&MOVE_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&PASTE'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&PASTE_NEW_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&UNDO'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&VARI_ADMIN'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&APPEND'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&COPY'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&LOCAL&COPY_ROW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&VLOTUS'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&AQW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&MB_VIEW'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&REFRESH'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&REPREP'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = '&CHECK'.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    IS_VARIANT-REPORT = SY-REPID.
    IS_VARIANT-HANDLE = '1002'.

    CALL METHOD COCKPIT_ALV_LOTES_CONF_ADM->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_DEFAULT            = SPACE
        IS_LAYOUT            = COCKPIT_GS_LAYOUT
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
        IS_VARIANT           = IS_VARIANT
        I_SAVE               = 'A'
      CHANGING
        IT_FIELDCATALOG      = IT_COCKPIT_CATALOG
        IT_OUTTAB            = IT_LOTES_ITEM_COF_ADM[].

*** Stefanini - IR219442 - 31/01/2024 - LAZAROSR - Início de Alteração
*    CREATE OBJECT COCKPIT_EVENT_HANDLER_CONF.
*    SET HANDLER COCKPIT_EVENT_HANDLER_CONF->COCKPIT_HOTSPOT_CLICK_CONF FOR COCKPIT_ALV_LOTES_CONF_ADM.
*    SET HANDLER COCKPIT_EVENT_HANDLER_CONF->COCKPIT_DOUBLE_CLICK_CONF  FOR COCKPIT_ALV_LOTES_CONF_ADM.
*** Stefanini - IR219442 - 31/01/2024 - LAZAROSR - Fim de Alteração


  ENDIF.

ENDFORM.                    " CRIA_ALV_LOTE_CONF_adm
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1002  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1002 INPUT.
  DATA: WL_TP_CONTABIL TYPE ZTIPCONTABIL.
  CASE OK_CODE.
    WHEN OK_SALV_CONF.
      PERFORM GRAVAR_CONFERENCIAS.
    WHEN OK_ATUALIZA.
      PERFORM PESQUISA_ITENS_LOTE.
    WHEN OK_CONTB.

      IF VG_ALTEROU_CONF IS NOT INITIAL.
        MESSAGE E028 WITH WA_LOTES_ALV-NM_LOTE.
        CHECK 1 = 2.
      ENDIF.

      CALL FUNCTION 'Z_PFE_TIPO_CONTAB'
        EXPORTING
          P_DT_POSICAO  = WA_LOTES_ALV-DT_POSICAO
        IMPORTING
          P_TIPCONTABIL = WL_TP_CONTABIL.

      IF WL_TP_CONTABIL NE 'FS'.
        CALL FUNCTION 'Z_PFE_LOTE_FINAN_PAGO'
          EXPORTING
            P_NM_LOTE           = WA_LOTES_ALV-NM_LOTE
            PESQUISAR           = 'X'
          IMPORTING
            WA_ZPFE_LOTE        = WA_AUX_LOTE
            WA_ZPFE_LOTE_ALV    = WA_AUX_LOTE_ALV
          CHANGING
            NR_DOC_COMPENSACAO  = WA_LOTES_ALV-AUGBL
            DT_DOC_COMPENSACAO  = WA_LOTES_ALV-AUGDT
          EXCEPTIONS
            SEM_LOTE            = 1
            SEM_FINANCEIRO      = 2
            SEM_BKPF            = 3
            BKPF_ESTORNADA      = 4
            FINANCEIRO_NAO_PAGO = 5
            OTHERS              = 6.
      ELSE.
        SY-SUBRC = 0.
      ENDIF.
      IF NOT SY-SUBRC IS INITIAL.
        MESSAGE ID SY-MSGID TYPE 'W' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ELSE.
        READ TABLE IT_LOTES_ALV INTO WA_LOTES_ALV WITH KEY NM_LOTE = WA_AUX_LOTE-NM_LOTE.
        IF SY-SUBRC IS INITIAL.
          MOVE-CORRESPONDING WA_AUX_LOTE_ALV TO WA_LOTES_ALV.
          MODIFY IT_LOTES_ALV FROM WA_LOTES_ALV INDEX SY-TABIX.
        ENDIF.

        READ TABLE IT_LOTES INTO WA_LOTES WITH KEY NM_LOTE = WA_AUX_LOTE-NM_LOTE.
        IF SY-SUBRC IS INITIAL.
          MOVE-CORRESPONDING WA_AUX_LOTE TO WA_LOTES.
          MODIFY IT_LOTES FROM WA_LOTES INDEX SY-TABIX.
        ENDIF.

        PERFORM SELECIONA_ITEM USING VG_SELECIONOU.

        IF VG_SELECIONOU IS INITIAL.
          CLEAR: IT_LOTES_ITEM_SEL[].
          MOVE IT_LOTES_ITEM_ALV[] TO IT_LOTES_ITEM_SEL[].
        ENDIF.

        LOOP AT IT_LOTES_ITEM_SEL INTO WA_LOTES_ITEM_ALV.


          IF ( WA_LOTES_ITEM_ALV-DT_BAIXA IS INITIAL ) AND ( WA_LOTES_ITEM_ALV-CK_CONFERIDO EQ 'X' ).
            MESSAGE E030 WITH 'Item' WA_LOTES_ITEM_ALV-NM_LOTE_ITEM 'não tem data de baixa.' .
          ENDIF.

          CALL FUNCTION 'Z_PFE_GERA_CONTAB'
            EXPORTING
              P_NM_LOTE        = WA_LOTES_ITEM_ALV-NM_LOTE
              P_NM_LOTE_ITEM   = WA_LOTES_ITEM_ALV-NM_LOTE_ITEM
            IMPORTING
              WA_LOTE_ITEM     = WA_AUX_LOTES_ITEM
              WA_LOTE_ITEM_ALV = WA_AUX_LOTES_ITEM_ALV
            TABLES
              IT_LOTE_ITEM     = IT_LOTES_ITEM
            EXCEPTIONS
              SEM_LOTE         = 1
              SEM_LOTE_ITEM    = 2
              GERANDO_CONTB    = 3
              CONCLUIDO_CONTB  = 4
              GERADO_CONTB     = 5
              CONTA_DEB_CRED   = 6
              SEM_PROPRIETARIO = 7
              NAO_CONFERIDO    = 8
              ERROR            = 9
              SEM_DATA_BAIXA   = 10
              OTHERS           = 11.

          IF ( SY-SUBRC NE 0 ).
            IF SY-MSGNO NE 027.
              MESSAGE ID SY-MSGID TYPE 'W' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
            ENDIF.
          ELSE.

            READ TABLE IT_LOTES_ITEM_ALV INTO WA_LOTES_ITEM_ALV WITH KEY NM_LOTE      = WA_AUX_LOTES_ITEM-NM_LOTE
                                                                         NM_LOTE_ITEM = WA_AUX_LOTES_ITEM-NM_LOTE_ITEM.
            IF SY-SUBRC IS INITIAL.
              MOVE-CORRESPONDING WA_AUX_LOTES_ITEM_ALV TO WA_LOTES_ITEM_ALV.
              MODIFY IT_LOTES_ITEM_ALV FROM WA_LOTES_ITEM_ALV INDEX SY-TABIX.
            ENDIF.

            READ TABLE IT_LOTES_ITEM INTO WA_LOTES_ITEM WITH KEY NM_LOTE      = WA_AUX_LOTES_ITEM-NM_LOTE
                                                                 NM_LOTE_ITEM = WA_AUX_LOTES_ITEM-NM_LOTE_ITEM.
            IF SY-SUBRC IS INITIAL.
              MOVE-CORRESPONDING WA_AUX_LOTES_ITEM TO WA_LOTES_ITEM.
              MODIFY IT_LOTES_ITEM FROM WA_LOTES_ITEM INDEX SY-TABIX.
            ENDIF.
          ENDIF.

        ENDLOOP.
      ENDIF.
    WHEN OK_LOG_PROC.
      PERFORM SELECIONA_ITEM USING VG_SELECIONOU.
      IF NOT VG_SELECIONOU IS INITIAL.
        CALL FUNCTION 'Z_PFE_MSG_CONTAB'
          EXPORTING
            P_NM_LOTE      = WA_LOTES_ITEM_ALV-NM_LOTE
            P_NM_LOTE_ITEM = WA_LOTES_ITEM_ALV-NM_LOTE_ITEM.
      ENDIF.
  ENDCASE.


ENDMODULE.                 " USER_COMMAND_1002  INPUT

*&---------------------------------------------------------------------*
*&      Form  DISMARCA_GRID_CONF
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISMARCA_GRID_CONF .

  IF ( VG_SEL_AJUSTE IS NOT INITIAL ) AND ( IT_LOTES_ITEM_ALV[] IS NOT INITIAL ).
    READ TABLE IT_LOTES_ITEM_ALV WITH KEY NM_LOTE      = WA_LOTES_ITEM_CONF-NM_LOTE
                                          NM_LOTE_ITEM = WA_LOTES_ITEM_CONF-NM_LOTE_ITEM.
    IF SY-SUBRC IS  INITIAL.
      WA_LOTES_ITEM_CONF-ROWCOLOR = IT_LOTES_ITEM_ALV-ROWCOLOR_ATUAL.

      MODIFY IT_LOTES_ITEM_ALV INDEX SY-TABIX
        FROM WA_LOTES_ITEM_CONF
      TRANSPORTING ROWCOLOR.

      CLEAR: WA_LOTES_ITEM_CONF,
             VG_SCROLL_ROW,
             WA_ZCTE_CIOT,
             VG_PESO_DIGITAR,
             VG_PESO_DIGITADO.
    ENDIF.
  ENDIF.

ENDFORM.                    " DISMARCA_GRID_CONF

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_2001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_2001 INPUT.

  DATA: WA_ZCTE_CIOT_C TYPE ZCTE_CIOT.

  CASE OK_CODE.
    WHEN OK_BTNE.
      IF ( WA_LOTES_ITEM_CONF IS NOT INITIAL ) AND ( WA_LOTES_ITEM_CONF-CHVID EQ '2' ) AND
         ( ( WA_LOTES_ITEM_CONF-STATUS EQ 'I' ) OR ( WA_LOTES_ITEM_CONF-STATUS EQ 'E' ) ).

        SELECT SINGLE * INTO WA_ZCTE_CIOT_C
          FROM ZCTE_CIOT
        WHERE DOCNUM EQ WA_LOTES_ITEM_CONF-DOCNUM.

        IF NOT WA_ZCTE_CIOT_C-PESO_CHEGADA IS INITIAL.
          VG_PESO_DIGITAR  = 'X'.
          VG_PESO_DIGITADO = WA_LOTES_ITEM_CONF-PESO_CHEGADA.
        ENDIF.
      ENDIF.
      CLEAR: OK_CODE.
    WHEN OK_BTNC.
      CLEAR: OK_CODE.

      CALL FUNCTION 'Z_PFE_AJUSTA_PESO_CHEGADA'
        EXPORTING
          P_LOTE            = WA_LOTES_ITEM_CONF-NM_LOTE
          P_ITEM            = WA_LOTES_ITEM_CONF-NM_LOTE_ITEM
          P_PESO            = VG_PESO_DIGITADO
        TABLES
          IT_LOTE_ITEM      = IT_LOTES_ITEM
          IT_LOTES_ITEM_ALV = IT_LOTES_ITEM_ALV.

      VG_ALTEROU_CONF = 'X'.
      VG_PESO_DIGITAR = SPACE.
      WA_LOTES_ITEM_CONF-PESO_CHEGADA = VG_PESO_DIGITADO.
      "perform dismarca_grid_conf.

    WHEN: OK_DT_BAIXA.

      PERFORM SELECIONA_ITEM USING VG_SELECIONOU.

      IF NOT ( VG_SELECIONOU IS INITIAL ).

        CALL SCREEN 9004 STARTING AT 07 05 ENDING AT 40 10.

      ELSE.
        MESSAGE E032.
      ENDIF.


  ENDCASE.

ENDMODULE.                 " USER_COMMAND_2001  INPUT

*&---------------------------------------------------------------------*
*&      Form  GRAVAR_CONFERENCIAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GRAVAR_CONFERENCIAS .

  DATA: VG_TABIX          TYPE SY-TABIX,
        VG_ITEM           TYPE ZPFE_LOTE_ITEM,
        IT_LOTES_ITEM_AUX TYPE TABLE OF ZPFE_LOTE_ITEM WITH HEADER LINE.


  PERFORM DISMARCA_GRID_CONF.

  READ TABLE IT_LOTES_ITEM INDEX 1.

  SELECT * INTO TABLE IT_LOTES_ITEM_AUX
    FROM ZPFE_LOTE_ITEM
   WHERE NM_LOTE = IT_LOTES_ITEM-NM_LOTE.

  LOOP AT IT_LOTES_ITEM_AUX.
    READ TABLE IT_LOTES_ITEM WITH KEY NM_LOTE      = IT_LOTES_ITEM_AUX-NM_LOTE
                                      NM_LOTE_ITEM = IT_LOTES_ITEM_AUX-NM_LOTE_ITEM.
    IF NOT SY-SUBRC IS INITIAL.
      DELETE FROM ZPFE_LOTE_ITEM
       WHERE NM_LOTE      = IT_LOTES_ITEM_AUX-NM_LOTE
         AND NM_LOTE_ITEM = IT_LOTES_ITEM_AUX-NM_LOTE_ITEM.
    ENDIF.


  ENDLOOP.



  LOOP AT IT_LOTES_ITEM.
    VG_TABIX = SY-TABIX.
    LOOP AT IT_LOTES_ITEM_ALV WHERE NM_LOTE      = IT_LOTES_ITEM-NM_LOTE
                                AND NM_LOTE_ITEM = IT_LOTES_ITEM-NM_LOTE_ITEM.



      SELECT SINGLE * INTO VG_ITEM
        FROM ZPFE_LOTE_ITEM
       WHERE NM_LOTE      EQ IT_LOTES_ITEM-NM_LOTE
         AND NM_LOTE_ITEM EQ IT_LOTES_ITEM-NM_LOTE_ITEM.

      IF ( IT_LOTES_ITEM_ALV-CK_CONFERIDO NE IT_LOTES_ITEM-CK_CONFERIDO ) OR
         ( IT_LOTES_ITEM-PESO_CHEGADA NE IT_LOTES_ITEM_ALV-PESO_CHEGADA ) OR
         ( NOT SY-SUBRC IS INITIAL ).
        IT_LOTES_ITEM-CK_CONFERIDO    = IT_LOTES_ITEM_ALV-CK_CONFERIDO.
        IT_LOTES_ITEM-DS_USUARIO_CONF = IT_LOTES_ITEM_ALV-DS_USUARIO_CONF.
        IT_LOTES_ITEM-PESO_CHEGADA    = IT_LOTES_ITEM_ALV-PESO_CHEGADA.
        MODIFY ZPFE_LOTE_ITEM FROM IT_LOTES_ITEM.
        MODIFY IT_LOTES_ITEM INDEX VG_TABIX FROM IT_LOTES_ITEM TRANSPORTING CK_CONFERIDO DS_USUARIO_CONF PESO_CHEGADA.
      ENDIF.
    ENDLOOP.
  ENDLOOP.
  CLEAR: VG_ALTEROU_CONF.

ENDFORM.                    " GRAVAR_CONFERENCIAS
