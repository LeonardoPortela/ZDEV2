FUNCTION ZFIY_CRIATE_ORD_PAGO_PDF_TEXT.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_BUKRS) TYPE  BUKRS
*"     REFERENCE(I_GJAHR) TYPE  GJAHR
*"     REFERENCE(I_BELNR) TYPE  BELNR_D
*"     REFERENCE(I_WITHT) TYPE  WITHT OPTIONAL
*"     REFERENCE(I_ALL_PDFS) TYPE  CHAR01 DEFAULT 'X'
*"  EXPORTING
*"     REFERENCE(E_PDF) TYPE  XSTRING
*"     REFERENCE(E_NAME) TYPE  STRING
*"----------------------------------------------------------------------

  DATA: LC_ORDEM_PAGO TYPE REF TO ZCL_ORDEM_PAGO,
        I_XSTRING     TYPE XSTRING,
        PDF_TAB       TYPE TABLE OF TLINE,
        BIN_FILESIZE  TYPE I,
        E_TEXT_BINARY TYPE ZDE_PDF_CHAR80.

  CREATE OBJECT LC_ORDEM_PAGO.

  LC_ORDEM_PAGO->GET_CRIATE_ORD_PAGO_PDF_TEXT(
    EXPORTING
      I_BUKRS      = I_BUKRS
      I_GJAHR      = I_GJAHR
      I_BELNR      = I_BELNR
    "IMPORTING
    "  E_TEXT       = DATA(E_TEXT_S)
    "  E_TEXT_X     = DATA(E_TEXT_X)
    "  E_OTF        = DATA(E_TEXT_OTF)
    "  E_TEXTO_TIPO = DATA(ZDE_TEXTO_TIPO_T)
    )->SET_WRITE_PDF(
           "EXPORTING
           "  I_TEXTO_X = E_TEXT_X
           IMPORTING
             E_NAME = DATA(R_NAME)
    ).

  E_NAME = R_NAME.

*  LOOP AT ZDE_TEXTO_TIPO_T INTO DATA(WA_ZDE_TEXTO_TIPO).
*
*    SPLIT WA_ZDE_TEXTO_TIPO-NM_TIPO AT '-' INTO TABLE DATA(ITAB).
*
*    CALL FUNCTION 'CONVERT_OTF'
*      EXPORTING
*        FORMAT        = 'PDF'
*        MAX_LINEWIDTH = 132
*      IMPORTING
*        BIN_FILESIZE  = BIN_FILESIZE
*        BIN_FILE      = I_XSTRING
*      TABLES
*        OTF           = WA_ZDE_TEXTO_TIPO-OTF
*        LINES         = PDF_TAB.
*
*    READ TABLE ITAB INDEX 1 INTO DATA(P_BUKRS).
*    READ TABLE ITAB INDEX 2 INTO DATA(P_GJAHR).
*    READ TABLE ITAB INDEX 3 INTO DATA(P_AUGBL).
*    READ TABLE ITAB INDEX 4 INTO DATA(P_WT_WITHCD).
*    READ TABLE ITAB INDEX 5 INTO DATA(P_WITHT).
*    READ TABLE ITAB INDEX 6 INTO DATA(P_CERTIFICADO).
*    READ TABLE ITAB INDEX 7 INTO DATA(P_BELNR_O).
*    READ TABLE ITAB INDEX 8 INTO DATA(P_GJAHR_O).
*
*    LC_ORDEM_PAGO->SET_WITH_WRITE_PDF(
*    EXPORTING
*      I_BUKRS       = CONV #( P_BUKRS )       " Empresa
*      I_GJAHR       = CONV #( P_GJAHR )       " Exercício
*      I_AUGBL       = CONV #( P_AUGBL )       " Nº documento de compensação
*      I_WT_WITHCD   = CONV #( P_WT_WITHCD )   " Código de imposto retido na fonte
*      I_WITHT       = CONV #( P_WITHT )       " Código para categoria de imposto retido na fonte
*      I_BELNR_O     = CONV #( P_BELNR_O )     " Nº documento de um documento contábil
*      I_GJAHR_O     = CONV #( P_GJAHR_O )     " Exercício
*      I_CERTIFICADO = CONV #( P_CERTIFICADO ) " Texto (30 caracteres)
*      I_TEXTO_X     = I_XSTRING ).
*
*    IF I_WITHT IS NOT INITIAL AND I_WITHT EQ P_WITHT.
*      E_TEXT_S   = WA_ZDE_TEXTO_TIPO-TEXTO.
*      E_TEXT_X = I_XSTRING.
*    ENDIF.
*
*  ENDLOOP.

  SELECT SINGLE * INTO @DATA(WA_ZSDYT0052)
    FROM ZSDYT0052
   WHERE BUKRS    EQ @I_BUKRS
     AND GJAHR    EQ @I_GJAHR
     AND AUGBL    EQ @I_BELNR
     AND CK_PRINT EQ 'X'.

  CHECK SY-SUBRC IS INITIAL.

  DATA: IT_TABLE TYPE ZDE_TSFOTF_BASE64_T.
  /UI2/CL_JSON=>DESERIALIZE( EXPORTING JSON = WA_ZSDYT0052-PDF CHANGING DATA = IT_TABLE ).

  DATA: WA_ITCOO TYPE ITCOO,
        E_OTF	   TYPE TT_ITCOO.
  LOOP AT IT_TABLE INTO DATA(WA_TABLE).
    CLEAR: WA_ITCOO.
    WA_ITCOO-TDPRINTCOM = WA_TABLE-TDPRINTCOM.
    WA_ITCOO-TDPRINTPAR = ZCL_STRING=>BASE64_TO_STRING( WA_TABLE-TDPRINTPAR ).
    APPEND WA_ITCOO TO E_OTF.
  ENDLOOP.

  IF I_ALL_PDFS EQ ABAP_TRUE.

    DATA: I_TEXTOS_IMPOSTOS	TYPE ZDE_TEXTO_TIPO_T,
          W_TEXTOS_IMPOSTOS	TYPE ZDE_TEXTO_TIPO.

    SELECT * INTO TABLE @DATA(IT_ZSDYT0053)
      FROM ZSDYT0053
     WHERE BUKRS    EQ @I_BUKRS
       AND GJAHR_O  EQ @I_GJAHR
       AND BELNR_O  EQ @I_BELNR
       AND CK_PRINT EQ 'X'.

    LOOP AT IT_ZSDYT0053 INTO DATA(WA_ZSDYT0053).
      CLEAR: IT_TABLE[], W_TEXTOS_IMPOSTOS.
      /UI2/CL_JSON=>DESERIALIZE( EXPORTING JSON = WA_ZSDYT0053-PDF CHANGING DATA = IT_TABLE ).

      LOOP AT IT_TABLE INTO WA_TABLE.
        CLEAR: WA_ITCOO.
        WA_ITCOO-TDPRINTCOM = WA_TABLE-TDPRINTCOM.
        WA_ITCOO-TDPRINTPAR = ZCL_STRING=>BASE64_TO_STRING( WA_TABLE-TDPRINTPAR ).
        APPEND WA_ITCOO TO W_TEXTOS_IMPOSTOS-OTF.
      ENDLOOP.

      APPEND W_TEXTOS_IMPOSTOS TO I_TEXTOS_IMPOSTOS.

    ENDLOOP.

    LC_ORDEM_PAGO->SET_WRITE_PDF_ALL(
        EXPORTING
          I_TEXTO_OTF = E_OTF
          I_TEXTOS_IMPOSTOS = I_TEXTOS_IMPOSTOS
        IMPORTING
          E_TEXTO_X = DATA(E_TEXT_X) ).
  ELSE.
    LC_ORDEM_PAGO->SET_WRITE_PDF_ALL(
        EXPORTING
          I_TEXTO_OTF = E_OTF
        IMPORTING
          E_TEXTO_X = E_TEXT_X ).
  ENDIF.

  E_PDF = E_TEXT_X.

  CLEAR: LC_ORDEM_PAGO.

ENDFUNCTION.
