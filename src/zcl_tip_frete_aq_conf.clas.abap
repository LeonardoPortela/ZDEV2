class ZCL_TIP_FRETE_AQ_CONF definition
  public
  final
  create public .

public section.

  interfaces ZIF_CADASTRO .
  interfaces ZIF_PESQUISA .

  aliases CK_ALTEROU
    for ZIF_CADASTRO~CK_ALTEROU .
  aliases EXCLUIR_REGISTRO
    for ZIF_CADASTRO~EXCLUIR_REGISTRO .
  aliases GET_REGISTRO
    for ZIF_CADASTRO~GET_REGISTRO .
  aliases GRAVAR_REGISTRO
    for ZIF_CADASTRO~GRAVAR_REGISTRO .
  aliases LIMPAR_REGISTRO
    for ZIF_CADASTRO~LIMPAR_REGISTRO .
  aliases NOVO_REGISTRO
    for ZIF_CADASTRO~NOVO_REGISTRO .
  aliases SET_REGISTRO
    for ZIF_CADASTRO~SET_REGISTRO .
  aliases VALIDAR_EXCLUSAO
    for ZIF_CADASTRO~VALIDAR_EXCLUSAO .
  aliases VALIDAR_REGISTRO
    for ZIF_CADASTRO~VALIDAR_REGISTRO .
  aliases VALIDA_ATRIBUTO_ALTERAVEL
    for ZIF_CADASTRO~VALIDA_ATRIBUTO_ALTERAVEL .

  methods SET_BUKRS
    importing
      !I_BUKRS type BUKRS .
  methods SET_BRANCH
    importing
      !I_BRANCH type J_1BBRANC_ .
  methods SET_DT_INICIAL
    importing
      !I_DT_INICIAL type ZDE_DT_INICIAL_CORTE .
  methods SET_DT_FINAL
    importing
      !I_DT_FINAL type ZDE_DT_FINAL_CORTE .
  methods SET_DS_FILENAME
    importing
      !I_DS_FILENAME type /BOFU/FILE_PATH .
  methods SET_CORPO_ARQUIVO
    importing
      !I_CORPO_ARQUIVO type ZDE_LINHA_TXT_1000_T .
  methods SET_NR_LOTE_ADM
    importing
      !I_NR_LOTE_ADM type ZPFE_NR_LOTE_ADM .
  methods VISUALIZAR_TEXTO_ARQUIVO .
  methods VISUALIZAR_LOG_ARQUIVO
    raising
      CX_SALV_MSG .
  PROTECTED SECTION.
private section.

  data ARQUIVO type ZLEST0138 .
  data CORPO_ARQUIVO type ZDE_LINHA_TXT_1000_T .
ENDCLASS.



CLASS ZCL_TIP_FRETE_AQ_CONF IMPLEMENTATION.


  METHOD SET_BRANCH.
    IF ME->ARQUIVO-BRANCH NE I_BRANCH.
      ME->ZIF_CADASTRO~CK_ALTEROU = ABAP_TRUE.
    ENDIF.
    ME->ARQUIVO-BRANCH = I_BRANCH.
  ENDMETHOD.


  METHOD SET_BUKRS.
    IF ME->ARQUIVO-BUKRS NE I_BUKRS.
      ME->ZIF_CADASTRO~CK_ALTEROU = ABAP_TRUE.
    ENDIF.
    ME->ARQUIVO-BUKRS = I_BUKRS.
  ENDMETHOD.


  METHOD SET_CORPO_ARQUIVO.
    ME->CORPO_ARQUIVO[] = I_CORPO_ARQUIVO[].
  ENDMETHOD.


  METHOD SET_DS_FILENAME.
    IF ME->ARQUIVO-DS_FILENAME NE I_DS_FILENAME.
      ME->ZIF_CADASTRO~CK_ALTEROU = ABAP_TRUE.
    ENDIF.
    ME->ARQUIVO-DS_FILENAME = I_DS_FILENAME.
  ENDMETHOD.


  METHOD SET_DT_FINAL.

    IF ME->ARQUIVO-DT_FINAL NE I_DT_FINAL.
      ME->ZIF_CADASTRO~CK_ALTEROU = ABAP_TRUE.
    ENDIF.
    ME->ARQUIVO-DT_FINAL = I_DT_FINAL.

  ENDMETHOD.


  METHOD SET_DT_INICIAL.

    IF ME->ARQUIVO-DT_INICIAL NE I_DT_INICIAL.
      ME->ZIF_CADASTRO~CK_ALTEROU = ABAP_TRUE.
    ENDIF.
    ME->ARQUIVO-DT_INICIAL = I_DT_INICIAL.

  ENDMETHOD.


  METHOD SET_NR_LOTE_ADM.

    IF ME->ARQUIVO-NR_LOTE_ADM NE I_NR_LOTE_ADM.
      ME->CK_ALTEROU = ABAP_TRUE.
    ENDIF.

    ME->ARQUIVO-NR_LOTE_ADM = I_NR_LOTE_ADM.

  ENDMETHOD.


  METHOD VISUALIZAR_LOG_ARQUIVO.

    SELECT * INTO TABLE @DATA(IT_ZLEST0062)
      FROM ZLEST0062
     WHERE NR_LOTE_ADM EQ @ME->ARQUIVO-NR_LOTE_ADM.

    CL_SALV_TABLE=>FACTORY(
      EXPORTING
        LIST_DISPLAY   = IF_SALV_C_BOOL_SAP=>FALSE
*    R_CONTAINER    =
*    CONTAINER_NAME =
      IMPORTING
        R_SALV_TABLE   = DATA(R_SALV_TABLE)
      CHANGING
        T_TABLE        = IT_ZLEST0062
    ).
*  CATCH CX_SALV_MSG.    "

    R_SALV_TABLE->DISPLAY( ).

  ENDMETHOD.


  METHOD VISUALIZAR_TEXTO_ARQUIVO.

    DATA: IT_LINES TYPE TABLE OF TLINE,
          WA_LINES TYPE TLINE.

    LOOP AT ME->CORPO_ARQUIVO INTO DATA(WA_CORPO).
      WA_LINES-TDLINE = WA_CORPO.
      APPEND WA_LINES TO IT_LINES.
    ENDLOOP.

    CALL FUNCTION 'ZTIPFRETE_VIEW_TEXTO'
      EXPORTING
        IT_LINES = IT_LINES.


  ENDMETHOD.


  METHOD ZIF_CADASTRO~EXCLUIR_REGISTRO.

    DATA: LC_TDID     TYPE TDID,
          LC_OBJECT   TYPE THEAD-TDOBJECT,
          LC_NAME     TYPE THEAD-TDNAME,
          LC_LANGUAGE TYPE THEAD-TDSPRAS.

    I_EXCLUIU = ABAP_FALSE.

    IF ME->VALIDAR_EXCLUSAO( ) EQ ABAP_TRUE.

      DELETE FROM ZLEST0138 WHERE CD_IMPORTACAO EQ ME->ARQUIVO-CD_IMPORTACAO.
      COMMIT WORK.

      LC_TDID   = 'ZAQC'.
      LC_NAME   = ME->ARQUIVO-CD_IMPORTACAO.
      LC_OBJECT = 'ZTIPFRETE'.

      CALL FUNCTION 'CONVERSION_EXIT_ISOLA_INPUT'
        EXPORTING
          INPUT            = 'PT'
        IMPORTING
          OUTPUT           = LC_LANGUAGE
        EXCEPTIONS
          UNKNOWN_LANGUAGE = 1
          OTHERS           = 2.

      CALL FUNCTION 'DELETE_TEXT'
        EXPORTING
          ID        = LC_TDID
          LANGUAGE  = LC_LANGUAGE
          NAME      = LC_NAME
          OBJECT    = LC_OBJECT
        EXCEPTIONS
          NOT_FOUND = 1
          OTHERS    = 2.

      I_EXCLUIU = ABAP_TRUE.
      MESSAGE S002 WITH ME->ARQUIVO-CD_IMPORTACAO.
      ME->LIMPAR_REGISTRO( ).
    ENDIF.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~GET_REGISTRO.

    MOVE-CORRESPONDING ME->ARQUIVO TO E_REGISTRO.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~GRAVAR_REGISTRO.

    DATA: IT_TLINES TYPE TABLE OF TLINE,
          WA_TLINES TYPE TLINE,
          WA_HEADER TYPE THEAD.

    I_GRAVOU = ABAP_FALSE.

    IF ME->CK_ALTEROU EQ ABAP_TRUE.

      IF ME->VALIDAR_REGISTRO( ) EQ ABAP_TRUE.

        IF ME->ARQUIVO-CD_IMPORTACAO IS INITIAL.

          CALL FUNCTION 'NUMBER_GET_NEXT'
            EXPORTING
              NR_RANGE_NR             = '01'
              OBJECT                  = 'ZTIPFRETEA'
            IMPORTING
              NUMBER                  = ME->ARQUIVO-CD_IMPORTACAO
            EXCEPTIONS
              INTERVAL_NOT_FOUND      = 1
              NUMBER_RANGE_NOT_INTERN = 2
              OBJECT_NOT_FOUND        = 3
              QUANTITY_IS_0           = 4
              QUANTITY_IS_NOT_1       = 5
              INTERVAL_OVERFLOW       = 6
              BUFFER_OVERFLOW         = 7
              OTHERS                  = 8.

          IF SY-SUBRC IS NOT INITIAL.
            RAISE EXCEPTION TYPE ZCX_CADASTRO
              EXPORTING
                TEXTID = VALUE #( MSGID = SY-MSGID MSGNO = SY-MSGNO ATTR1 = CONV #( SY-MSGV1 ) ATTR2 = CONV #( SY-MSGV2 ) ATTR3 = CONV #( SY-MSGV3 ) ATTR4 = CONV #( SY-MSGV4 ) )
                MSGID  = SY-MSGID
                MSGNO  = SY-MSGNO
                MSGTY  = 'E'
                MSGV1  = SY-MSGV1
                MSGV2  = SY-MSGV2
                MSGV3  = SY-MSGV3
                MSGV4  = SY-MSGV4.
          ENDIF.
        ENDIF.

        ME->ARQUIVO-DT_IMPORTACAO = SY-DATUM.
        ME->ARQUIVO-HR_IMPORTACAO = SY-UZEIT.
        ME->ARQUIVO-USUARIO       = SY-UNAME.
        MODIFY ZLEST0138 FROM ME->ARQUIVO.

        CLEAR: IT_TLINES[].
        WA_HEADER-TDOBJECT = 'ZTIPFRETE'.
        WA_HEADER-TDID     = 'ZAQC'.
        WA_HEADER-TDNAME   = ME->ARQUIVO-CD_IMPORTACAO.

        CALL FUNCTION 'CONVERSION_EXIT_ISOLA_INPUT'
          EXPORTING
            INPUT            = 'PT'
          IMPORTING
            OUTPUT           = WA_HEADER-TDSPRAS
          EXCEPTIONS
            UNKNOWN_LANGUAGE = 1
            OTHERS           = 2.

        CLEAR: IT_TLINES, IT_TLINES[].
        LOOP AT ME->CORPO_ARQUIVO INTO DATA(WA_TEXTO).
          CLEAR: WA_TLINES.
          MOVE WA_TEXTO TO WA_TLINES-TDLINE.
          APPEND WA_TLINES TO IT_TLINES.
        ENDLOOP.

        IF IT_TLINES IS NOT INITIAL.
          CALL FUNCTION 'SAVE_TEXT'
            EXPORTING
              HEADER          = WA_HEADER
              INSERT          = ABAP_TRUE
              SAVEMODE_DIRECT = ABAP_TRUE
            TABLES
              LINES           = IT_TLINES
            EXCEPTIONS
              ID              = 1
              LANGUAGE        = 2
              NAME            = 3
              OBJECT          = 4
              OTHERS          = 5.

          IF SY-SUBRC IS NOT INITIAL.
            RAISE EXCEPTION TYPE ZCX_CADASTRO
              EXPORTING
                TEXTID = VALUE #( MSGID = SY-MSGID MSGNO = SY-MSGNO ATTR1 = CONV #( SY-MSGV1 ) ATTR2 = CONV #( SY-MSGV2 ) ATTR3 = CONV #( SY-MSGV3 ) ATTR4 = CONV #( SY-MSGV4 ) )
                MSGID  = SY-MSGID
                MSGNO  = SY-MSGNO
                MSGTY  = 'E'
                MSGV1  = SY-MSGV1
                MSGV2  = SY-MSGV2
                MSGV3  = SY-MSGV3
                MSGV4  = SY-MSGV4.
          ENDIF.

        ENDIF.

        COMMIT WORK.
        ME->CK_ALTEROU = ABAP_FALSE.
        I_GRAVOU = ABAP_TRUE.
        MESSAGE S001 WITH ME->ARQUIVO-CD_IMPORTACAO.
      ENDIF.

    ENDIF.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~LIMPAR_REGISTRO.

    CLEAR: ME->ARQUIVO,
           ME->CORPO_ARQUIVO.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~NOVO_REGISTRO.
    ME->LIMPAR_REGISTRO( ).
  ENDMETHOD.


  METHOD ZIF_CADASTRO~SET_REGISTRO.

    DATA: LC_TDID     TYPE TDID,
          LC_OBJECT   TYPE THEAD-TDOBJECT,
          LC_NAME     TYPE THEAD-TDNAME,
          LC_LANGUAGE TYPE THEAD-TDSPRAS,
          IT_TLINES   TYPE TABLE OF TLINE.

    ME->LIMPAR_REGISTRO( ).

    SELECT SINGLE * INTO ME->ARQUIVO FROM ZLEST0138 WHERE CD_IMPORTACAO EQ I_ID_REGISTRO.

    IF SY-SUBRC IS INITIAL.
      "Buscar Corpo
      LC_TDID   = 'ZAQC'.
      LC_NAME   = ME->ARQUIVO-CD_IMPORTACAO.
      LC_OBJECT = 'ZTIPFRETE'.

      CALL FUNCTION 'CONVERSION_EXIT_ISOLA_INPUT'
        EXPORTING
          INPUT            = 'PT'
        IMPORTING
          OUTPUT           = LC_LANGUAGE
        EXCEPTIONS
          UNKNOWN_LANGUAGE = 1
          OTHERS           = 2.

      CALL FUNCTION 'READ_TEXT'
        EXPORTING
          ID                      = LC_TDID
          LANGUAGE                = LC_LANGUAGE
          NAME                    = LC_NAME
          OBJECT                  = LC_OBJECT
        TABLES
          LINES                   = IT_TLINES
        EXCEPTIONS
          ID                      = 1
          LANGUAGE                = 2
          NAME                    = 3
          NOT_FOUND               = 4
          OBJECT                  = 5
          REFERENCE_CHECK         = 6
          WRONG_ACCESS_TO_ARCHIVE = 7
          OTHERS                  = 8.

      IF SY-SUBRC IS INITIAL.
        LOOP AT IT_TLINES INTO DATA(WA_LINE).
          APPEND WA_LINE-TDLINE TO ME->CORPO_ARQUIVO.
        ENDLOOP.
      ENDIF.

      ME->CK_ALTEROU = ABAP_FALSE.

    ENDIF.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~VALIDAR_EXCLUSAO.

    E_VALIDOU = ABAP_FALSE.

    MESSAGE S003 DISPLAY LIKE 'E'.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~VALIDAR_REGISTRO.

    E_VALIDOU = ABAP_FALSE.

    IF ME->ARQUIVO-BUKRS IS INITIAL.
      MESSAGE S004 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    IF ME->ARQUIVO-BRANCH IS INITIAL.
      MESSAGE S005 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    IF ME->ARQUIVO-DT_INICIAL IS INITIAL.
      MESSAGE S006 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    IF ME->ARQUIVO-DT_FINAL IS INITIAL.
      MESSAGE S007 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    IF ME->ARQUIVO-DT_FINAL LT ME->ARQUIVO-DT_INICIAL.
      MESSAGE S008 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    E_VALIDOU = ABAP_TRUE.


  ENDMETHOD.


  METHOD ZIF_CADASTRO~VALIDA_ATRIBUTO_ALTERAVEL.

    R_PERMITIDO = ABAP_TRUE.

  ENDMETHOD.


  METHOD ZIF_PESQUISA~PESQUISAR.

    DATA: LC_FILTRO  TYPE ZDE_ZLEST0138_FILTRO,
          LC_RETORNO TYPE ZDE_ZLEST0138_T.

    LC_FILTRO = I_FILTROS.

    E_PESQUISOU = ABAP_FALSE.

    SELECT * INTO TABLE @DATA(IT_ZLEST0138)
      FROM ZLEST0138
     WHERE BUKRS      IN @LC_FILTRO-BUKRS
       AND BRANCH     IN @LC_FILTRO-BRANCH
       AND DT_INICIAL IN @LC_FILTRO-DT_INICIAL
       AND DT_FINAL   IN @LC_FILTRO-DT_FINAL.

    CHECK SY-SUBRC IS INITIAL.

    MOVE IT_ZLEST0138[] TO LC_RETORNO[].

    E_REGISTROS = LC_RETORNO.
    E_PESQUISOU = ABAP_TRUE.

  ENDMETHOD.
ENDCLASS.
