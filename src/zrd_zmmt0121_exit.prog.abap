*&---------------------------------------------------------------------*
*& Report  ZRD_ZMMT0121_EXIT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZRD_ZMMT0121_EXIT.


FORM F_EXIT_ZMMT0121_0001 CHANGING P_REGISTRO_MANTER TYPE ANY.

  DATA: WL_ZMMT0121 TYPE ZMMT0121,
        VSEQ(10)    TYPE P.

  CLEAR: WL_ZMMT0121.
  CALL METHOD ZCL_BIOMETRY=>GET_SYSTEM_DATA(
    IMPORTING
      USERNAME      = DATA(_USERNAME)
      COMPUTER_NAME = DATA(_COMPUTER_NAME)
      IP_ADRESS     = DATA(_IP_ADRESS) ).

  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      NR_RANGE_NR = '01'
      OBJECT      = 'ZID_LIBPAS'
    IMPORTING
      NUMBER      = VSEQ.

  WL_ZMMT0121-NU_LIB          = VSEQ.
  WL_ZMMT0121-DATA_CRIACAO    = SY-DATUM.
  WL_ZMMT0121-HORA_CRIACAO    = SY-UZEIT.
  WL_ZMMT0121-CRIADO_POR      = SY-UNAME.
  WL_ZMMT0121-NOME_COMPUTADOR = _COMPUTER_NAME.
  WL_ZMMT0121-USUARIO_LOGADO  = _USERNAME.
  WL_ZMMT0121-IP              = _IP_ADRESS.

  MOVE-CORRESPONDING WL_ZMMT0121 TO P_REGISTRO_MANTER.


ENDFORM.

FORM F_EXIT_ZMMT0121_0002 USING P_REGISTRO_MANTER TYPE ANY
                       CHANGING P_ERROR.

  DATA: WL_ZMMT0121 TYPE ZMMT0121.
  DATA USER_REGISTER TYPE PA0001.

  CLEAR: WL_ZMMT0121.

  MOVE-CORRESPONDING P_REGISTRO_MANTER TO WL_ZMMT0121.

  CLEAR: P_ERROR.

  IF WL_ZMMT0121-MATRICULA IS INITIAL .
    P_ERROR = ABAP_TRUE.
    MESSAGE 'Informar a matricula!' TYPE 'S'.
    EXIT.
  ENDIF.

  DATA(VTAM) = STRLEN( WL_ZMMT0121-JUSTIFICA ).

  IF VTAM LT 10 .
    P_ERROR = ABAP_TRUE.
    MESSAGE 'Justifique com ao menos 10 caracteres!' TYPE 'S'.
    EXIT.
  ENDIF.

  SELECT SINGLE *
    FROM PA0001 AS A
   INNER JOIN PA0465 AS B ON A~PERNR = B~PERNR
    INTO CORRESPONDING FIELDS OF USER_REGISTER
   WHERE A~PERNR = WL_ZMMT0121-MATRICULA
     AND A~ENDDA = '99991231'
     AND B~SUBTY = '0001'.

  IF SY-SUBRC  NE 0.
    P_ERROR = ABAP_TRUE.
    MESSAGE 'Matricula não existe!' TYPE 'S'.
    EXIT.
  ENDIF.

ENDFORM.

FORM F_EXIT_ZMMT0121_0003 CHANGING P_REGISTRO_MANTER TYPE ANY.
*
*  DATA: WL_ZMMT0121 TYPE ZMMT0121.
*
*  CLEAR: WL_ZMMT0121.
*
*  MOVE-CORRESPONDING P_REGISTRO_MANTER TO WL_ZMMT0121.
*
**  WL_ZMMT0121-DATA = SY-DATUM.
**  WL_ZMMT0121-HORA = SY-UZEIT.
**  WL_ZMMT0121-USUARIO = SY-UNAME.
*
*  MOVE-CORRESPONDING WL_ZMMT0121 TO P_REGISTRO_MANTER.

ENDFORM.

FORM F_EXIT_ZMMT0121_0004 CHANGING P_SAIDA TYPE ANY.

*  DATA: WL_ZMMT0121_OUT TYPE ZMME0121.
*
*  CLEAR: WL_ZMMT0121_OUT.
*
*  MOVE-CORRESPONDING P_SAIDA TO WL_ZMMT0121_OUT.
*
*
*  MOVE-CORRESPONDING WL_ZMMT0121_OUT TO P_SAIDA.

ENDFORM.

FORM F_EXIT_ZMMT0121_0006 USING P_REGISTRO_MANTER TYPE ANY
                       CHANGING P_ERROR.

  DATA: WL_ZMMT0121 TYPE ZMMT0121.

  CLEAR: WL_ZMMT0121.

  MOVE-CORRESPONDING P_REGISTRO_MANTER TO WL_ZMMT0121.

  CLEAR: P_ERROR.

  IF WL_ZMMT0121-MATRICULA IS INITIAL .
    P_ERROR = ABAP_TRUE.
    MESSAGE 'Informar a matricula!' TYPE 'S'.
    EXIT.
  ENDIF.

  SELECT SINGLE *
       FROM ZMMT0121
       INTO WL_ZMMT0121
       WHERE MATRICULA = WL_ZMMT0121-MATRICULA
       AND   NU_LIB    = WL_ZMMT0121-NU_LIB
       AND  EXISTS ( SELECT * FROM ZMMT0120
                       WHERE MATRICULA = ZMMT0121~MATRICULA
                       AND   NU_LIB    = ZMMT0121~NU_LIB ).

  IF SY-SUBRC EQ 0.
    P_ERROR = ABAP_TRUE.
    MESSAGE 'Liberação já utilizada, não apagar!' TYPE 'S'.
    EXIT.
  ENDIF.

ENDFORM.
