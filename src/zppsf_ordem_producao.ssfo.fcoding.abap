FORM GET_TEOR_REAL USING MATERIAL
                         TABLE TYPE TY_GENERIC_LIST
                         MODEL TYPE REF TO ZCL_PP_SERVICES.

*  DATA OBJKEY       TYPE BAPI1003_KEY-OBJECT.
*  DATA LT_TEOR_REAL TYPE TABLE OF CLOBJDAT.

*  PERFORM GET_OBJKEY_COMPONENT
*    USING MATERIAL CHANGING OBJKEY.
*
*  PERFORM GET_COMPONENT_DETAIL
*   TABLES LT_TEOR_REAL
*    USING OBJKEY 'ZFERT_TEOR_REAL'.

    MODEL->GET_COMPONENT_DETAIL(
     exporting
      MATERIAL = MATERIAL
      CLASSE = 'ZFERT_TEOR_REAL'
                         importing
                           data = data(_teor_real)
                          exceptions
                            data_not_found = 4    ).

  LOOP AT _TEOR_REAL INTO DATA(LW_TEOR_REAL).
    CASE LW_TEOR_REAL-ATNAM.
      WHEN 'ZTEOR_N_REAL'.    "/NITROGENIO
        TABLE-NITROGENIO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_PCNA_REAL'. "/FOSFORO
        TABLE-FOSFORO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_K_REAL'.    "/POTASSIO
        TABLE-POTASSIO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_ZN_REAL'.   "/ZINCO
        TABLE-ZINCO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_B_REAL'.    "/BORO
        TABLE-BORO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_MO_REAL'.   "/MOLIBDENIO
        TABLE-MOLIBDENIO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_CU_REAL'.   "/COBRE
        TABLE-COBRE = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_MG_REAL'.   "/MAGNESIO
        TABLE-MAGNESIO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_CA_REAL'.   "/CALCIO
        TABLE-CALCIO = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_S_REAL'.    "/ENXOFRE
        TABLE-ENXOFRE = LW_TEOR_REAL-AUSP1.
      WHEN 'ZTEOR_PH2O_REAL'. "/AGUA
        TABLE-AGUA = LW_TEOR_REAL-AUSP1.
    ENDCASE.

*    ASSIGN COMPONENT LW_TEOR_REAL-SMBEZ(2)
*        OF STRUCTURE TABLE TO FIELD-SYMBOL(<FS_COMPONENT>).
*
*    CHECK <FS_COMPONENT> IS ASSIGNED.
*    <FS_COMPONENT> = LW_TEOR_REAL-AUSP1.
  ENDLOOP.
ENDFORM.

FORM GET_TEOR_NOMINAL USING MATERIAL
                            TABLE TYPE TY_GENERIC_LIST
                            MODEL TYPE REF TO ZCL_PP_SERVICES.
*  DATA objkey          TYPE bapi1003_key-object.
*  DATA LT_TEOR_NOMINAL TYPE TABLE OF CLOBJDAT.

*  PERFORM get_objkey_component
*    USING material CHANGING objkey.

  MODEL->GET_COMPONENT_DETAIL(
                         EXPORTING
                          MATERIAL = MATERIAL
                          CLASSE   = 'ZFERT_TEOR_NOMINAL'
                         importing
                           data = data(_teor_nominal)
                          exceptions
                            data_not_found = 4
                        ).

  LOOP AT _TEOR_NOMINAL INTO DATA(LW_TEOR_NOMINAL).
    CASE LW_TEOR_NOMINAL-ATNAM.
      WHEN 'ZTEOR_N_NOMINAL'.    "/NITROGENIO
        TABLE-NITROGENIO = |{ TABLE-NITROGENIO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_PCNA_NOMINAL'. "/FOSFORO
        TABLE-FOSFORO = |{ TABLE-FOSFORO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_K_NOMINAL'.    "/POTASSIO
        TABLE-POTASSIO = |{ TABLE-POTASSIO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_ZN_NOMINAL'.   "/ZINCO
        TABLE-ZINCO = |{ TABLE-FOSFORO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_B_NOMINAL'.    "/BORO
        TABLE-BORO = |{ TABLE-BORO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_MO_NOMINAL'.   "/MOLIBDENIO
        TABLE-MOLIBDENIO = |{ TABLE-MOLIBDENIO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_CU_NOMINAL'.   "/COBRE
        TABLE-COBRE = |{ TABLE-COBRE }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_MG_NOMINAL'.   "/MAGNESIO
        TABLE-MAGNESIO = |{ TABLE-MAGNESIO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_CA_NOMINAL'.   "/CALCIO
        TABLE-CALCIO = |{ TABLE-CALCIO }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_S_NOMINAL'.    "/ENXOFRE
        TABLE-ENXOFRE = |{ TABLE-ENXOFRE }/{ LW_TEOR_NOMINAL-AUSP1 }|.
      WHEN 'ZTEOR_PH2O_NOMINAL'. "/AGUA
        TABLE-AGUA = |{ TABLE-AGUA }/{ LW_TEOR_NOMINAL-AUSP1 }|.
    ENDCASE.

*  PERFORM get_component_detail
*   TABLES lt_teor_nominal
*    USING objkey 'ZFERT_TEOR_NOMINAL'.

*  LOOP AT _TEOR_NOMINAL INTO DATA(LW_TEOR_NOMINAL).
*    ASSIGN COMPONENT LW_TEOR_NOMINAL-SMBEZ(2)
*        OF STRUCTURE TABLE TO FIELD-SYMBOL(<FS_COMPONENT>).
*
*    CHECK <FS_COMPONENT> IS ASSIGNED.
*    IF <FS_COMPONENT> IS INITIAL.
*      <FS_COMPONENT> = '?'.
*    ENDIF.
*    <FS_COMPONENT> = |{ <FS_COMPONENT> }/{ LW_TEOR_NOMINAL-AUSP1 }|.
  ENDLOOP.
ENDFORM.

*FORM GET_COMPONENT_DETAIL TABLES T_OBJECTDATA
*                           USING OBJKEY CLASS.
*
*  DATA LT_CLASS      TYPE TABLE OF SCLASS.
*  "//DATA LT_OBJECTDATA TYPE TABLE OF CLOBJDAT.
*
*  CALL FUNCTION 'CLAF_CLASSIFICATION_OF_OBJECTS'
*    EXPORTING
*      CLASS             = CLASS
*      CLASSTYPE         = '001'
*      FEATURES          = 'X'
*      LANGUAGE          = SY-LANGU
*      OBJECT            = OBJKEY
*      OBJECTTABLE       = 'MARA'
*      KEY_DATE          = SY-DATUM
*      INITIAL_CHARACT   = ' '
*    TABLES
*      T_CLASS           = LT_CLASS
*      T_OBJECTDATA      = T_OBJECTDATA
*    EXCEPTIONS
*      NO_CLASSIFICATION = 4
*      NO_CLASSTYPES     = 7.
*ENDFORM.

*FORM CONVERT_COMPONENT_VALUE CHANGING COMPONENT.
*  CALL FUNCTION 'CONVERSION_EXIT_ATINN_OUTPUT '
*    EXPORTING
*      INPUT  = COMPONENT
*    IMPORTING
*      OUTPUT = COMPONENT.
*ENDFORM.

*FORM GET_OBJKEY_COMPONENT USING COMPONENT CHANGING OBJKEY.
*  DATA LV_TABLE TYPE BAPI1003_KEY-OBJECTTABLE VALUE 'MARA'.
*  DATA RETURN   TYPE TABLE OF BAPIRET2.
*
*  SHIFT COMPONENT LEFT DELETING LEADING '0'.
*
*  DATA(_OBJKEY_TABLE) =
*    VALUE TT_BAPI1003_OBJECT_KEYS( ( KEY_FIELD = 'MATNR'
*                                     VALUE_INT = COMPONENT
*                                 ) ).
*
*  CALL FUNCTION 'BAPI_OBJCL_CONCATENATEKEY'
*    EXPORTING
*      OBJECTTABLE    = LV_TABLE
*    IMPORTING
*      OBJECTKEY_CONC = OBJKEY
*    TABLES
*      OBJECTKEYTABLE = _OBJKEY_TABLE
*      RETURN         = RETURN.
*ENDFORM.

FORM GET_COMPONENTS TABLES COMPONENTS TYPE STANDARD TABLE
                     USING MATERIAL CENTRO LISTA_ALTERNATIVA.

  DATA WARNING TYPE CAPIFLAG-FLWARNING.

  CALL FUNCTION 'CSAP_MAT_BOM_READ'
    EXPORTING
      MATERIAL    = MATERIAL
      PLANT       = CENTRO
      BOM_USAGE   = '1'
      ALTERNATIVE = LISTA_ALTERNATIVA
*     VALID_FROM  =
*     VALID_TO    =
*     CHANGE_NO   =
*     REVISION_LEVEL       =
*     FL_DOC_LINKS         =
*     FL_DMU_TMX  =
    IMPORTING
      FL_WARNING  = WARNING
    TABLES
      T_STPO      = COMPONENTS
*     T_STKO      =
*     T_DEP_DATA  =
*     T_DEP_DESCR =
*     T_DEP_ORDER =
*     T_DEP_SOURCE         =
*     T_DEP_DOC   =
*     T_DOC_LINK  =
*     T_DMU_TMX   =
*     T_LTX_LINE  =
*     T_STPU      =
*     T_SGT_BOMC  =
*     EXCEPTIONS
*     ERROR       = 1
*     OTHERS      = 2
    .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
