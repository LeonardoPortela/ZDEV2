*----------------------------------------------------------------------*
***INCLUDE MZDRE0001_9005 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9005_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_9005_EXIT INPUT.
  CLEAR: ZGL015_DRE_EST02.
  LEAVE TO SCREEN 0.
ENDMODULE.                 " USER_COMMAND_9005_EXIT  INPUT


*&---------------------------------------------------------------------*
*&      Module  STATUS_9005  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_9005 OUTPUT.

  SET PF-STATUS 'PF9003'.
  SET TITLEBAR 'TL9005'.

  CLEAR: VG_EMPRESA_DEST, VG_ESTRUTURA_DEST.

  IF NOT ZGL015_DRE_EST02-BUKRS IS INITIAL.
    SELECT SINGLE BUTXT INTO VG_EMPRESA_DEST
      FROM T001
     WHERE BUKRS EQ ZGL015_DRE_EST02-BUKRS.

    IF NOT ZGL015_DRE_EST02-VERSN IS INITIAL.
      SELECT SINGLE VSTXT INTO VG_ESTRUTURA_DEST
        FROM ZGL015_DRE_EST01
       WHERE BUKRS EQ ZGL015_DRE_EST02-BUKRS
         AND VERSN EQ ZGL015_DRE_EST02-VERSN.
    ENDIF.
  ENDIF.

ENDMODULE.                 " STATUS_9005  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9005  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_9005 INPUT.

  DATA: IT_COPIA    TYPE TABLE OF ZGL015_DRE_EST02 WITH HEADER LINE,
        IT_COPIA_CR TYPE TABLE OF ZGL015_DRE_EST03 WITH HEADER LINE,
        IT_COPIA_CC TYPE TABLE OF ZGL015_DRE_EST04 WITH HEADER LINE,
        IT_COPIA_CL TYPE TABLE OF ZGL015_DRE_EST05 WITH HEADER LINE,
        IT_COPIA_GM TYPE TABLE OF ZGL015_DRE_EST06 WITH HEADER LINE,
        IT_COPIA_AG TYPE TABLE OF ZGL015_DRE_EST07 WITH HEADER LINE.

  IF OK_CODE_9005 EQ C_CONF.

    IF ( WA_ZGL015_DRE_EST01_ALV-VERSN EQ ZGL015_DRE_EST02-VERSN ) AND
       ( WA_ZGL015_DRE_EST01_ALV-BUKRS EQ ZGL015_DRE_EST02-BUKRS ).
      MESSAGE 'Deve ser informado Estrutura diferentes para cópia!' TYPE 'E'.
    ENDIF.

    SELECT * INTO TABLE IT_COPIA
      FROM ZGL015_DRE_EST02
     WHERE BUKRS EQ WA_ZGL015_DRE_EST01_ALV-BUKRS
       AND VERSN EQ WA_ZGL015_DRE_EST01_ALV-VERSN.

    IF NOT SY-SUBRC IS INITIAL.
      MESSAGE 'Estrutura não possui níveis para cópia!' TYPE 'E'.
    ENDIF.

    SELECT * INTO TABLE IT_COPIA_CR
      FROM ZGL015_DRE_EST03
     WHERE BUKRS EQ WA_ZGL015_DRE_EST01_ALV-BUKRS
       AND VERSN EQ WA_ZGL015_DRE_EST01_ALV-VERSN.

    SELECT * INTO TABLE IT_COPIA_CC
      FROM ZGL015_DRE_EST04
     WHERE BUKRS EQ WA_ZGL015_DRE_EST01_ALV-BUKRS
       AND VERSN EQ WA_ZGL015_DRE_EST01_ALV-VERSN.

    DATA: LC_KOKRS TYPE KOKRS.
    SELECT SINGLE KOKRS INTO LC_KOKRS FROM TKA02 WHERE BUKRS EQ ZGL015_DRE_EST02-BUKRS.

    SELECT * INTO TABLE IT_COPIA_CL
      FROM ZGL015_DRE_EST05
     WHERE VERSN EQ WA_ZGL015_DRE_EST01_ALV-VERSN
       AND KOKRS EQ LC_KOKRS.

    SELECT * INTO TABLE IT_COPIA_GM
      FROM ZGL015_DRE_EST06
     WHERE BUKRS EQ WA_ZGL015_DRE_EST01_ALV-BUKRS
       AND VERSN EQ WA_ZGL015_DRE_EST01_ALV-VERSN.

    SELECT * INTO TABLE IT_COPIA_AG
      FROM ZGL015_DRE_EST07
     WHERE BUKRS EQ WA_ZGL015_DRE_EST01_ALV-BUKRS
       AND VERSN EQ WA_ZGL015_DRE_EST01_ALV-VERSN.

    LOOP AT IT_COPIA.
      IT_COPIA-BUKRS = ZGL015_DRE_EST02-BUKRS.
      IT_COPIA-VERSN = ZGL015_DRE_EST02-VERSN.
      MODIFY IT_COPIA INDEX SY-TABIX TRANSPORTING BUKRS VERSN.
    ENDLOOP.

    LOOP AT IT_COPIA_CR.
      IT_COPIA_CR-BUKRS = ZGL015_DRE_EST02-BUKRS.
      IT_COPIA_CR-VERSN = ZGL015_DRE_EST02-VERSN.
      MODIFY IT_COPIA_CR INDEX SY-TABIX TRANSPORTING BUKRS VERSN.
    ENDLOOP.

    LOOP AT IT_COPIA_CC.
      IT_COPIA_CC-BUKRS = ZGL015_DRE_EST02-BUKRS.
      IT_COPIA_CC-VERSN = ZGL015_DRE_EST02-VERSN.
      MODIFY IT_COPIA_CC INDEX SY-TABIX TRANSPORTING BUKRS VERSN.
    ENDLOOP.

    LOOP AT IT_COPIA_CL.
      IT_COPIA_CL-BUKRS = ZGL015_DRE_EST02-BUKRS.
      IT_COPIA_CL-VERSN = ZGL015_DRE_EST02-VERSN.
      MODIFY IT_COPIA_CL INDEX SY-TABIX TRANSPORTING BUKRS VERSN.
    ENDLOOP.

    LOOP AT IT_COPIA_GM.
      IT_COPIA_GM-BUKRS = ZGL015_DRE_EST02-BUKRS.
      IT_COPIA_GM-VERSN = ZGL015_DRE_EST02-VERSN.
      MODIFY IT_COPIA_GM INDEX SY-TABIX TRANSPORTING BUKRS VERSN.
    ENDLOOP.

    LOOP AT IT_COPIA_AG.
      IT_COPIA_AG-BUKRS = ZGL015_DRE_EST02-BUKRS.
      IT_COPIA_AG-VERSN = ZGL015_DRE_EST02-VERSN.
      MODIFY IT_COPIA_AG INDEX SY-TABIX TRANSPORTING BUKRS VERSN.
    ENDLOOP.

    CLEAR: ZGL015_DRE_EST02.
    IF NOT IT_COPIA[] IS INITIAL.
      MODIFY ZGL015_DRE_EST02 FROM TABLE IT_COPIA.
    ENDIF.
    IF NOT IT_COPIA_CR[] IS INITIAL.
      MODIFY ZGL015_DRE_EST03 FROM TABLE IT_COPIA_CR.
    ENDIF.
    IF NOT IT_COPIA_CC[] IS INITIAL.
      MODIFY ZGL015_DRE_EST04 FROM TABLE IT_COPIA_CC.
    ENDIF.
    IF NOT IT_COPIA_CL[] IS INITIAL.
      MODIFY ZGL015_DRE_EST05 FROM TABLE IT_COPIA_CL.
    ENDIF.
    IF NOT IT_COPIA_GM[] IS INITIAL.
      MODIFY ZGL015_DRE_EST06 FROM TABLE IT_COPIA_GM.
    ENDIF.
    IF NOT IT_COPIA_AG[] IS INITIAL.
      MODIFY ZGL015_DRE_EST07 FROM TABLE IT_COPIA_AG.
    ENDIF.
    MESSAGE 'Cópia efetuada!' TYPE 'S'.
    LEAVE TO SCREEN 0.
  ENDIF.

ENDMODULE.                 " USER_COMMAND_9005  INPUT
