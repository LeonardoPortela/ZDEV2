FUNCTION Z_SAMPLE_INTERFACE_00001421.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     VALUE(I_LFA1) LIKE  LFA1 STRUCTURE  LFA1 OPTIONAL
*"     VALUE(I_LFA1_OLD) LIKE  LFA1 STRUCTURE  LFA1 OPTIONAL
*"     VALUE(I_LFB1) LIKE  LFB1 STRUCTURE  LFB1 OPTIONAL
*"     VALUE(I_LFB1_OLD) LIKE  LFB1 STRUCTURE  LFB1 OPTIONAL
*"     VALUE(I_LFM1) LIKE  LFM1 STRUCTURE  LFM1 OPTIONAL
*"     VALUE(I_LFM1_OLD) LIKE  LFM1 STRUCTURE  LFM1 OPTIONAL
*"     VALUE(UPD_LFA1) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFAS) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFAT) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFB1) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFB5) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFBK) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFBK_IBAN) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFBW) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFEI) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFLR) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFM1) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFM2) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_LFZA) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_WYT1) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_WYT1T) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(UPD_WYT3) LIKE  CDPOS-CHNGIND OPTIONAL
*"     VALUE(I_ADD_ON_DATA) LIKE  VEND_ADD_ON_DATA STRUCTURE
*"        VEND_ADD_ON_DATA OPTIONAL
*"  TABLES
*"      T_XLFAS STRUCTURE  FLFAS OPTIONAL
*"      T_YLFAS STRUCTURE  FLFAS OPTIONAL
*"      T_XLFAT STRUCTURE  FLFAT OPTIONAL
*"      T_YLFAT STRUCTURE  FLFAT OPTIONAL
*"      T_XLFB5 STRUCTURE  FLFB5 OPTIONAL
*"      T_YLFB5 STRUCTURE  FLFB5 OPTIONAL
*"      T_XLFBK STRUCTURE  FLFBK OPTIONAL
*"      T_YLFBK STRUCTURE  FLFBK OPTIONAL
*"      T_XLFBK_IBAN STRUCTURE  FLFBK_IBAN OPTIONAL
*"      T_YLFBK_IBAN STRUCTURE  FLFBK_IBAN OPTIONAL
*"      T_XLFBW STRUCTURE  FLFBW OPTIONAL
*"      T_YLFBW STRUCTURE  FLFBW OPTIONAL
*"      T_XLFEI STRUCTURE  FLFEI OPTIONAL
*"      T_YLFEI STRUCTURE  FLFEI OPTIONAL
*"      T_XLFLR STRUCTURE  FLFLR OPTIONAL
*"      T_YLFLR STRUCTURE  FLFLR OPTIONAL
*"      T_XLFM2 STRUCTURE  FLFM2 OPTIONAL
*"      T_YLFM2 STRUCTURE  FLFM2 OPTIONAL
*"      T_XLFZA STRUCTURE  FLFZA OPTIONAL
*"      T_YLFZA STRUCTURE  FLFZA OPTIONAL
*"      T_XWYT1 STRUCTURE  FWYT1 OPTIONAL
*"      T_YWYT1 STRUCTURE  FWYT1 OPTIONAL
*"      T_XWYT1T STRUCTURE  FWYT1T OPTIONAL
*"      T_YWYT1T STRUCTURE  FWYT1T OPTIONAL
*"      T_XWYT3 STRUCTURE  FWYT3 OPTIONAL
*"      T_YWYT3 STRUCTURE  FWYT3 OPTIONAL
*"----------------------------------------------------------------------

  CLEAR VG_TESTEABAP_DEBUG.

  IF ( VG_TESTEABAP_DEBUG IS INITIAL ).
    CALL FUNCTION 'Z_FI_OUTVENDOR_BACKGROUND' IN BACKGROUND TASK
      DESTINATION 'NONE'
      EXPORTING
        I_LFA1   = I_LFA1
        I_LFB1   = I_LFB1
        I_LFM1   = I_LFM1
        UPD_LFA1 = UPD_LFA1
        UPD_LFB1 = UPD_LFB1
        UPD_LFBK = UPD_LFBK
      TABLES
        T_XLFBK  = T_XLFBK
        T_YLFBK  = T_YLFBK.
"BP - cadastro fornecedor sem expansão de empresa não integra com SIGAM #136548 - INICIO
    IF I_LFA1-LIFNR IS NOT INITIAL.
      SELECT * FROM LFB1 UP TO 1 ROWS
               INTO @DATA(P_LFB1)
              WHERE LIFNR EQ @I_LFA1-LIFNR .
      ENDSELECT.

      IF P_LFB1-BUKRS IS INITIAL.
        MESSAGE 'Fornecedor não foi expandido para nenhuma empresa, não será enviado para o SIGAM' TYPE 'I'.
      ENDIF.
    ENDIF.
"BP - cadastro fornecedor sem expansão de empresa não integra com SIGAM #136548 - FIM
    IF UPD_LFAS IS NOT INITIAL.
      DATA : T_LFAS      TYPE TABLE OF ZLFAS_OUT,
             WA_LFAS_OUT TYPE ZLFAS_OUT,
             WA_XLFAS    TYPE FLFAS,
             WA_YLFAS    TYPE FLFAS.

      REFRESH T_LFAS.

      LOOP AT T_XLFAS INTO WA_XLFAS.

        CLEAR WA_LFAS_OUT.

        MOVE-CORRESPONDING WA_XLFAS TO WA_LFAS_OUT.

        WA_LFAS_OUT-TP_ATUALIZACAO  = UPD_LFAS.
        WA_LFAS_OUT-DT_ATUALIZACAO = SY-DATUM.


        READ TABLE T_YLFAS INTO WA_YLFAS INDEX  SY-TABIX.

        IF SY-SUBRC IS INITIAL.
          WA_LFAS_OUT-LAND1_OLD = WA_YLFAS-LAND1.
          WA_LFAS_OUT-STCEG_OLD = WA_YLFAS-STCEG.
        ENDIF.

        APPEND WA_LFAS_OUT TO T_LFAS.

      ENDLOOP.

      LOOP AT T_YLFAS INTO WA_YLFAS WHERE KZ EQ ''.

        CLEAR WA_LFAS_OUT.

        MOVE-CORRESPONDING WA_YLFAS TO WA_LFAS_OUT.

        WA_LFAS_OUT-TP_ATUALIZACAO  = 'D'.
        WA_LFAS_OUT-DT_ATUALIZACAO = SY-DATUM.

        APPEND WA_LFAS_OUT TO T_LFAS.

      ENDLOOP.

*--->S4 MIGRATION 10/08/2023 - MA
      DATA: LO_OUTBOUND_VENDOR TYPE REF TO ZCO_Z_FI_OUTBOUND_VENDOR_VAT_P,
            LS_INPUT           TYPE ZZFI_OUTBOUND_VENDOR_VAT_INP1,
            LS_ITEM            TYPE ZZLFAS_OUT.

      LOOP AT T_LFAS INTO DATA(LS_LFAS).

        MOVE-CORRESPONDING LS_LFAS TO LS_ITEM.

        APPEND LS_ITEM TO LS_INPUT-T_LFAS-ITEM.
      ENDLOOP.

      IF LO_OUTBOUND_VENDOR IS NOT BOUND.
        CREATE OBJECT LO_OUTBOUND_VENDOR.
      ENDIF.

      LO_OUTBOUND_VENDOR->Z_FI_OUTBOUND_VENDOR_VAT(
        EXPORTING
          INPUT = LS_INPUT
*        IMPORTING
*           output =
      ).
*      CATCH cx_ai_system_fault. " Erro de comunicação


**      CALL FUNCTION 'Z_FI_OUTBOUND_VENDOR_VAT' IN BACKGROUND TASK
**        DESTINATION 'XI_VENDOR_VAT'
**        TABLES
**          T_LFAS = T_LFAS.
*<---S4 MIGRATION 10/08/2023 - MA
      COMMIT WORK.

    ENDIF.

  ELSE.
    CALL FUNCTION 'Z_FI_OUTVENDOR_BACKGROUND' STARTING NEW TASK 'OUTFOR'
      EXPORTING
        I_LFA1   = I_LFA1
        I_LFB1   = I_LFB1
        I_LFM1   = I_LFM1
        UPD_LFA1 = UPD_LFA1
        UPD_LFB1 = UPD_LFB1
        UPD_LFBK = UPD_LFBK
      TABLES
        T_XLFBK  = T_XLFBK
        T_YLFBK  = T_YLFBK.



  ENDIF.

ENDFUNCTION.
