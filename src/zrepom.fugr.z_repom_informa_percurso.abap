FUNCTION Z_REPOM_INFORMA_PERCURSO.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_BRANCH) TYPE  J_1BBRANC_
*"     REFERENCE(I_BUKRS) TYPE  BUKRS
*"     REFERENCE(I_CD_CID_ORIGEM) TYPE  ZDE_CIDADE_ORIGEM OPTIONAL
*"     REFERENCE(I_CD_CID_DESTINO) TYPE  ZDE_CIDADE_DESTINO OPTIONAL
*"     REFERENCE(ID_ROTA_REPOM) TYPE  ZDE_ID_ROTA_REPOM OPTIONAL
*"     REFERENCE(ID_PERCURSO_REPOM) TYPE  ZDE_ID_PERCURSO_REPOM
*"       OPTIONAL
*"     REFERENCE(I_QTD_EIXOS) TYPE  ZQT_EIXO OPTIONAL
*"     REFERENCE(I_SELECIONAR_MENOR_VALOR) TYPE  CHAR01 OPTIONAL
*"  EXPORTING
*"     REFERENCE(E_INFORMADO) TYPE  CHAR01
*"     REFERENCE(E_PERCURSO) TYPE  ZLEST0122
*"  EXCEPTIONS
*"      SEM_PERCURSO
*"----------------------------------------------------------------------

  DATA: IT_J_1BTXJURT_O TYPE TABLE OF J_1BTXJURT WITH HEADER LINE,
        IT_J_1BTXJURT_D TYPE TABLE OF J_1BTXJURT WITH HEADER LINE,
        LC_LINHAS       TYPE I,
        LC_VALOR_TOTAL  TYPE ZDE_VLR_TOTAL_PEDAGIO.

  DATA: RROTA   TYPE RANGE OF ZDE_ID_ROTA_REPOM,
        RPERC   TYPE RANGE OF ZDE_ID_PERCURSO_REPOM,
        RORIGEM TYPE RANGE OF ZDE_CIDADE_ORIGEM,
        RDESTIN TYPE RANGE OF ZDE_CIDADE_DESTINO.

  DATA: REPOM_ROTEIRO TYPE REF TO ZCL_REPOM_ROTEIRO_VLR_VPR.

  CK_INFORMADO = ABAP_FALSE.

  CLEAR: IT_ZLEST0122[], IT_ZLEST0122_ALV[], E_PERCURSO.

  E_INFORMADO = ABAP_FALSE.

  IF ID_ROTA_REPOM IS NOT INITIAL.
    RROTA = VALUE #( SIGN = 'I' OPTION = 'EQ' ( LOW = ID_ROTA_REPOM HIGH = ID_ROTA_REPOM ) ).
  ENDIF.

  IF ID_PERCURSO_REPOM IS NOT INITIAL.
    RPERC = VALUE #( SIGN = 'I' OPTION = 'EQ' ( LOW = ID_PERCURSO_REPOM HIGH = ID_PERCURSO_REPOM ) ).
  ENDIF.

  IF I_CD_CID_ORIGEM IS NOT INITIAL.
    RORIGEM = VALUE #( SIGN = 'I' OPTION = 'EQ' ( LOW = I_CD_CID_ORIGEM HIGH = I_CD_CID_ORIGEM ) ).
  ENDIF.

  IF I_CD_CID_DESTINO IS NOT INITIAL.
    RDESTIN = VALUE #( SIGN = 'I' OPTION = 'EQ' ( LOW = I_CD_CID_DESTINO HIGH = I_CD_CID_DESTINO ) ).
  ENDIF.

  IF I_SELECIONAR_MENOR_VALOR IS NOT INITIAL AND I_QTD_EIXOS IS INITIAL.
    MESSAGE E071(ZREPOM) RAISING SEM_PERCURSO.
  ENDIF.

  SELECT * INTO TABLE IT_ZLEST0122
    FROM ZLEST0122 AS R
   WHERE ID_ROTA_REPOM     IN RROTA
     AND ID_PERCURSO_REPOM IN RPERC
     AND CD_CID_ORIGEM     IN RORIGEM
     AND CD_CID_DESTINO    IN RDESTIN
     AND EXISTS ( SELECT * FROM ZLEST0121 AS C
                   WHERE C~ID_ROTA  EQ R~ID_ROTA
*                     AND C~BUKRS    EQ I_BUKRS
*                     AND C~BRANCH   EQ I_BRANCH
                     AND C~CK_ATIVO EQ ABAP_TRUE ).

  DESCRIBE TABLE IT_ZLEST0122 LINES LC_LINHAS.

  IF LC_LINHAS EQ 1.

    READ TABLE IT_ZLEST0122 INDEX 1.
    E_PERCURSO  = IT_ZLEST0122.
    E_INFORMADO = ABAP_TRUE.

  ELSEIF LC_LINHAS IS NOT INITIAL.

    SELECT * INTO TABLE IT_J_1BTXJURT_O
      FROM J_1BTXJURT
       FOR ALL ENTRIES IN IT_ZLEST0122
     WHERE SPRAS      EQ SY-LANGU
       AND COUNTRY    EQ IT_ZLEST0122-CD_PAIS
       AND TAXJURCODE EQ IT_ZLEST0122-CD_CID_ORIGEM.

    SELECT * INTO TABLE IT_J_1BTXJURT_D
      FROM J_1BTXJURT
       FOR ALL ENTRIES IN IT_ZLEST0122
     WHERE SPRAS      EQ SY-LANGU
       AND COUNTRY    EQ IT_ZLEST0122-CD_PAIS
       AND TAXJURCODE EQ IT_ZLEST0122-CD_CID_DESTINO.

    SORT IT_J_1BTXJURT_O BY TAXJURCODE.
    SORT IT_J_1BTXJURT_D BY TAXJURCODE.

    "Atualiza/Consulta Valores de PedÃ¡gio
    CREATE OBJECT REPOM_ROTEIRO.

    LOOP AT IT_ZLEST0122.
      CLEAR: IT_ZLEST0122_ALV.
      MOVE-CORRESPONDING IT_ZLEST0122 TO IT_ZLEST0122_ALV.

      READ TABLE IT_J_1BTXJURT_O WITH KEY TAXJURCODE = IT_ZLEST0122-CD_CID_ORIGEM BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        IT_ZLEST0122_ALV-DS_CID_ORIGEM = IT_J_1BTXJURT_O-TEXT.
      ENDIF.

      READ TABLE IT_J_1BTXJURT_D WITH KEY TAXJURCODE = IT_ZLEST0122-CD_CID_DESTINO BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        IT_ZLEST0122_ALV-DS_CID_DESTINO = IT_J_1BTXJURT_D-TEXT.
      ENDIF.

      IF I_QTD_EIXOS IS NOT INITIAL.

        REPOM_ROTEIRO->SET_BUKRS( EXPORTING I_BUKRS = I_BUKRS ).
        REPOM_ROTEIRO->SET_BRANCH( EXPORTING I_BRANCH = I_BRANCH ).
        REPOM_ROTEIRO->SET_ID_ROTA_REPOM( EXPORTING I_ID_ROTA_REPOM = IT_ZLEST0122_ALV-ID_ROTA_REPOM ).
        REPOM_ROTEIRO->SET_ID_PERCURSO_REPOM( EXPORTING I_ID_PERCURSO_REPOM = IT_ZLEST0122_ALV-ID_PERCURSO_REPOM ).
        REPOM_ROTEIRO->SET_ID_ROTA( EXPORTING I_ID_ROTA = IT_ZLEST0122_ALV-ID_ROTA ).
        REPOM_ROTEIRO->SET_VEICULO_EIXOS( EXPORTING I_VEICULO_EIXOS = I_QTD_EIXOS ).
        REPOM_ROTEIRO->SET_QTD_EIXOS_SUSPENSOS_IDA( EXPORTING I_QTD_EIXOS_SUSPENSOS_IDA = 0 ).
        REPOM_ROTEIRO->SET_QTD_EIXOS_SUSPENSOS_VOLTA( EXPORTING I_QTD_EIXOS_SUSPENSOS_VOLTA = 0 ).

        CALL METHOD REPOM_ROTEIRO->CONSULTAR_VALOR
          IMPORTING
            E_ERROS                    = DATA(LC_ERROS)
          RECEIVING
            I_RETORNOU                 = DATA(P_RETORNOU)
          EXCEPTIONS
            SERVICO_NAO_ENCONTRADO     = 1
            HTTP_COMMUNICATION_FAILURE = 2
            HTTP_INVALID_STATE         = 3
            HTTP_PROCESSING_FAILED     = 4
            HTTP_INVALID_TIMEOUT       = 5
            ERRO                       = 6
            OTHERS                     = 7.

        IF SY-SUBRC IS NOT INITIAL.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING SEM_PERCURSO.
        ENDIF.

        IF P_RETORNOU EQ ABAP_FALSE.
          "LOOP AT LC_ERROS INTO DATA(LC_ERRO).
          "  MESSAGE W017(ZREPOM) WITH LC_ERRO-ERRO_CODIGO LC_ERRO-ERRO_DESCRICAO.
          "ENDLOOP.
        ELSE.
          IT_ZLEST0122_ALV-VALOR_TOTAL = REPOM_ROTEIRO->GET_VALOR_TOTAL_VPR( ).
          APPEND IT_ZLEST0122_ALV.
        ENDIF.
      ELSE.
        APPEND IT_ZLEST0122_ALV.
      ENDIF.
    ENDLOOP.

    CLEAR: REPOM_ROTEIRO.

    IF I_SELECIONAR_MENOR_VALOR IS NOT INITIAL.

      "Selecionar o Maior Valor
      LC_VALOR_TOTAL = 0.
      LOOP AT IT_ZLEST0122_ALV INTO DATA(WA_ZLEST0122_ALV).
        IF LC_VALOR_TOTAL IS INITIAL OR LC_VALOR_TOTAL GT WA_ZLEST0122_ALV-VALOR_TOTAL.
          LC_VALOR_TOTAL = WA_ZLEST0122_ALV-VALOR_TOTAL.
          DATA(WA_ZLEST0122_MENOR) = WA_ZLEST0122_ALV.
        ENDIF.
      ENDLOOP.

      IF WA_ZLEST0122_MENOR IS NOT INITIAL.
        IT_ZLEST0122_ALV = WA_ZLEST0122_MENOR.
        E_INFORMADO      = ABAP_TRUE.
        MOVE-CORRESPONDING WA_ZLEST0122_MENOR TO E_PERCURSO.
      ENDIF.

    ELSE.

      DESCRIBE TABLE IT_ZLEST0122_ALV LINES LC_LINHAS.

      IF LC_LINHAS EQ 1.
        READ TABLE IT_ZLEST0122_ALV INDEX 1.
        E_INFORMADO = ABAP_TRUE.
        MOVE-CORRESPONDING IT_ZLEST0122_ALV TO E_PERCURSO.
      ELSE.
        CALL SCREEN 0102 STARTING AT 05 05.
        IF CK_INFORMADO EQ ABAP_TRUE.
          MOVE-CORRESPONDING IT_ZLEST0122_ALV TO E_PERCURSO.
          E_INFORMADO = ABAP_TRUE.
        ENDIF.
      ENDIF.
    ENDIF.

  ELSE.
    MESSAGE S040(ZREPOM) WITH I_CD_CID_ORIGEM I_CD_CID_DESTINO DISPLAY LIKE 'E' RAISING SEM_PERCURSO.
  ENDIF.

ENDFUNCTION.
