*&---------------------------------------------------------------------*
*& Report  ZLESR0136
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZLESR0136 MESSAGE-ID ZLES.

TABLES: ZLEST0187,
        ZLEST0189,
        ZLEST0190,
        J_1BTXJURT.

CLASS LCL_EVENT_RECEIVER_01   DEFINITION DEFERRED.
CLASS LCL_EVENT_RECEIVER_02   DEFINITION DEFERRED.
CLASS LCL_EVENT_RECEIVER_03   DEFINITION DEFERRED.
CLASS LCL_EVENT_RECEIVER_0200 DEFINITION DEFERRED.
CLASS LCL_ALV_TOOLBAR_01      DEFINITION DEFERRED.
CLASS LCL_ALV_TOOLBAR_02      DEFINITION DEFERRED.

DATA: OK_CODE             TYPE SY-UCOMM,
      CK_ALTEROU          TYPE CHAR01,
      SPLITTER            TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
      CONTAINER_SEL       TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      CONTAINER_01        TYPE REF TO CL_GUI_CONTAINER,
      CONTAINER_02        TYPE REF TO CL_GUI_CONTAINER,
      CONTAINER_03        TYPE REF TO CL_GUI_CONTAINER,
      ALV_SEL             TYPE REF TO CL_GUI_ALV_GRID,
      ALV_01              TYPE REF TO CL_GUI_ALV_GRID,
      ALV_02              TYPE REF TO CL_GUI_ALV_GRID,
      ALV_03              TYPE REF TO CL_GUI_ALV_GRID,
      IT_FIELDCATALOG_SEL TYPE LVC_T_FCAT,
      IT_FIELDCATALOG_01  TYPE LVC_T_FCAT,
      IT_FIELDCATALOG_02  TYPE LVC_T_FCAT,
      IT_FIELDCATALOG_03  TYPE LVC_T_FCAT,
      VARIANT_SEL         TYPE DISVARIANT,
      VARIANT_01          TYPE DISVARIANT,
      VARIANT_02          TYPE DISVARIANT,
      VARIANT_03          TYPE DISVARIANT,
      LAYOUT_01           TYPE LVC_S_LAYO,
      LAYOUT_SEL          TYPE LVC_S_LAYO,
      LAYOUT_02           TYPE LVC_S_LAYO,
      LAYOUT_03           TYPE LVC_S_LAYO,
      DRAGDROP_ALV_01     TYPE REF TO CL_DRAGDROP,
      DRAGDROP_ALV_02     TYPE REF TO CL_DRAGDROP,
      DRAGDROP_ALV_03     TYPE REF TO CL_DRAGDROP,
      TOOLBAR_01          TYPE REF TO LCL_ALV_TOOLBAR_01,
      TOOLBAR_02          TYPE REF TO LCL_ALV_TOOLBAR_02,
      TOOLBARMANAGER_01   TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      TOOLBARMANAGER_02   TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      HANDLE_ALV_01       TYPE I,
      HANDLE_ALV_02       TYPE I,
      HANDLE_ALV_03       TYPE I.

DATA: EVENT_RECEIVER_01  TYPE REF TO LCL_EVENT_RECEIVER_01,
      EVENT_RECEIVER_02  TYPE REF TO LCL_EVENT_RECEIVER_02,
      EVENT_RECEIVER_03  TYPE REF TO LCL_EVENT_RECEIVER_03,
      EVENT_HANDLER_0200 TYPE REF TO LCL_EVENT_RECEIVER_0200.

DATA: IT_ZLEST0189_ALV     TYPE TABLE OF ZDE_ZLEST0189_ALV,
      IT_ZLEST0190_ALV_ALL TYPE TABLE OF ZDE_ZLEST0190_ALV,
      IT_ZLEST0190_ALV     TYPE TABLE OF ZDE_ZLEST0190_ALV,
      IT_J_1BTXJURT        TYPE TABLE OF J_1BTXJURT,
      IT_ZLEST0187         TYPE TABLE OF ZLEST0187.

CLASS LCL_ALV_TOOLBAR_01 DEFINITION.
  PUBLIC SECTION.
    METHODS: CONSTRUCTOR  IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,
      ON_TOOLBAR          FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID IMPORTING E_OBJECT,
      HANDLE_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID IMPORTING E_UCOMM.
ENDCLASS.

CLASS LCL_ALV_TOOLBAR_02 DEFINITION.
  PUBLIC SECTION.
    METHODS: CONSTRUCTOR  IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,
      ON_TOOLBAR          FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID IMPORTING E_OBJECT,
      HANDLE_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID IMPORTING E_UCOMM.
ENDCLASS.

CLASS LCL_DRAGDROP_03 DEFINITION.
  PUBLIC SECTION.
    DATA: INDEX TYPE TABLE OF I.
ENDCLASS.

CLASS LCL_EVENT_RECEIVER_01 DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_ONDROP_01 FOR EVENT ONDROP OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO E_DRAGDROPOBJ.
    METHODS DOUBLE_CLICK_01 FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID IMPORTING  E_ROW E_COLUMN ES_ROW_NO.
    METHODS DATA_CHANGED_01 FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID IMPORTING ER_DATA_CHANGED E_ONF4 E_ONF4_BEFORE E_ONF4_AFTER E_UCOMM.
    METHODS DATA_CHANGED_FINISHED_01 FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID.
  PRIVATE SECTION.
    DATA: CK_ATUALIZA_TELA TYPE CHAR01.
ENDCLASS.

CLASS LCL_EVENT_RECEIVER_02 DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_ONDROP_02 FOR EVENT ONDROP OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO E_DRAGDROPOBJ.
ENDCLASS.

CLASS LCL_EVENT_RECEIVER_03 DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_ONDRAG_03 FOR EVENT ONDRAG OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO E_DRAGDROPOBJ.
ENDCLASS.

CLASS LCL_EVENT_RECEIVER_0200 DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_DOUBLE_CLICK_0200 FOR EVENT DOUBLE_CLICK  OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO.
ENDCLASS.

CLASS LCL_ALV_TOOLBAR_01 IMPLEMENTATION.

  METHOD CONSTRUCTOR.
    CREATE OBJECT TOOLBARMANAGER_01
      EXPORTING
        IO_ALV_GRID = IO_ALV_GRID.
  ENDMETHOD.                    "constructor

  METHOD ON_TOOLBAR.

    DATA: TY_TOOLBAR   TYPE STB_BUTTON.
*    "Separador
    TY_TOOLBAR-BUTN_TYPE = 3.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.

    "Excluir Mesorregião
    TY_TOOLBAR-ICON      = ICON_DELETE.
    TY_TOOLBAR-FUNCTION  = 'EXCLUIR'.
    TY_TOOLBAR-QUICKINFO = TEXT-007.
    TY_TOOLBAR-TEXT      = TEXT-007.
    TY_TOOLBAR-DISABLED  = COND STRING( WHEN ZLEST0187-ID_REGIAO IS INITIAL THEN ABAP_TRUE ELSE ABAP_FALSE ).
    TY_TOOLBAR-BUTN_TYPE = 0.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR: TY_TOOLBAR.

    CALL METHOD TOOLBARMANAGER_01->REORGANIZE
      EXPORTING
        IO_ALV_TOOLBAR = E_OBJECT.

  ENDMETHOD.                    "on_toolbar

  METHOD HANDLE_USER_COMMAND.

    CASE E_UCOMM.
      WHEN 'EXCLUIR'.

        ALV_01->GET_SELECTED_ROWS(
          IMPORTING
            ET_INDEX_ROWS = DATA(ET_INDEX_ROWS)
        ).

        "Excluir Cidades
        LOOP AT ET_INDEX_ROWS INTO DATA(WA_INDEX_ROWS) WHERE ROWTYPE IS INITIAL.
          READ TABLE IT_ZLEST0189_ALV INDEX WA_INDEX_ROWS-INDEX INTO DATA(WA_ZLEST0189_ALV).
          IF SY-SUBRC IS NOT INITIAL.
            CONTINUE.
          ENDIF.
          DELETE IT_ZLEST0190_ALV WHERE ID_CIDADE_BASE = WA_ZLEST0189_ALV-ID_CIDADE_BASE.
          DELETE IT_ZLEST0190_ALV_ALL WHERE ID_CIDADE_BASE = WA_ZLEST0189_ALV-ID_CIDADE_BASE.
          CK_ALTEROU = ABAP_TRUE.
        ENDLOOP.

        "Excluir Mesorregião
        LOOP AT ET_INDEX_ROWS INTO WA_INDEX_ROWS WHERE ROWTYPE IS INITIAL.
          DELETE IT_ZLEST0189_ALV INDEX WA_INDEX_ROWS-INDEX.
          CK_ALTEROU = ABAP_TRUE.
        ENDLOOP.

        LEAVE TO SCREEN 0100.

    ENDCASE.

  ENDMETHOD.

ENDCLASS.

CLASS LCL_ALV_TOOLBAR_02 IMPLEMENTATION.

  METHOD CONSTRUCTOR.
    CREATE OBJECT TOOLBARMANAGER_02
      EXPORTING
        IO_ALV_GRID = IO_ALV_GRID.
  ENDMETHOD.                    "constructor

  METHOD ON_TOOLBAR.

    DATA: TY_TOOLBAR   TYPE STB_BUTTON.
*    "Separador
    TY_TOOLBAR-BUTN_TYPE = 3.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.

    "Excluir Mesorregião
    TY_TOOLBAR-ICON      = ICON_DELETE.
    TY_TOOLBAR-FUNCTION  = 'EXCLUIR'.
    TY_TOOLBAR-QUICKINFO = TEXT-007.
    TY_TOOLBAR-TEXT      = TEXT-007.
    TY_TOOLBAR-DISABLED  = COND STRING( WHEN ZLEST0187-ID_REGIAO IS INITIAL THEN ABAP_TRUE ELSE ABAP_FALSE ).
    TY_TOOLBAR-BUTN_TYPE = 0.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR: TY_TOOLBAR.

    CALL METHOD TOOLBARMANAGER_02->REORGANIZE
      EXPORTING
        IO_ALV_TOOLBAR = E_OBJECT.

  ENDMETHOD.                    "on_toolbar

  METHOD HANDLE_USER_COMMAND.

    DATA: IT_CIDADES_REMOVE TYPE TABLE OF ZDE_CIDADE_BASE.

    CASE E_UCOMM.
      WHEN 'EXCLUIR'.

        ALV_02->GET_SELECTED_ROWS(
          IMPORTING
            ET_INDEX_ROWS = DATA(ET_INDEX_ROWS)
        ).

        "Excluir Cidades
        LOOP AT ET_INDEX_ROWS INTO DATA(WA_INDEX_ROWS) WHERE ROWTYPE IS INITIAL.
          READ TABLE IT_ZLEST0190_ALV INTO DATA(WA_ZLEST0190_ALV) INDEX WA_INDEX_ROWS-INDEX.
          IF SY-SUBRC IS NOT INITIAL.
            CONTINUE.
          ENDIF.
          APPEND WA_ZLEST0190_ALV-ID_CIDADE TO IT_CIDADES_REMOVE.
        ENDLOOP.

        LOOP AT IT_CIDADES_REMOVE INTO DATA(LC_CIDADE).
          DELETE IT_ZLEST0190_ALV_ALL WHERE ID_CIDADE EQ LC_CIDADE.
          DELETE IT_ZLEST0190_ALV     WHERE ID_CIDADE EQ LC_CIDADE.
          CK_ALTEROU = ABAP_TRUE.
        ENDLOOP.

        LEAVE TO SCREEN 0100.

    ENDCASE.

  ENDMETHOD.

ENDCLASS.

CLASS LCL_EVENT_RECEIVER_01 IMPLEMENTATION.

  METHOD DATA_CHANGED_FINISHED_01.
    IF ME->CK_ATUALIZA_TELA EQ ABAP_TRUE.
      CLEAR: ME->CK_ATUALIZA_TELA.
      LEAVE TO SCREEN 0100.
    ENDIF.
  ENDMETHOD.

  METHOD DATA_CHANGED_01.
    "
    LOOP AT ER_DATA_CHANGED->MT_GOOD_CELLS INTO DATA(WA_GOOD_CELLS).
      IF WA_GOOD_CELLS-FIELDNAME EQ 'DS_MESORREGIAO'.
        ME->CK_ATUALIZA_TELA = ABAP_TRUE.
        CK_ALTEROU = ABAP_TRUE.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.

  METHOD DOUBLE_CLICK_01.

    READ TABLE IT_ZLEST0189_ALV INDEX E_ROW-INDEX INTO DATA(WA_ZLEST0189_ALV).
    PERFORM SEL_MESORREGIAO USING WA_ZLEST0189_ALV-ID_CIDADE_BASE.

    LEAVE TO SCREEN 0100.

  ENDMETHOD.

  METHOD HANDLE_ONDROP_01.

    DATA: LC_TAXJURCODE TYPE J_1BTXJCD.

    DATA(IT_INDEX) = CAST LCL_DRAGDROP_03( E_DRAGDROPOBJ->OBJECT )->INDEX.
    DESCRIBE TABLE IT_INDEX LINES DATA(LC_QTD_INDEX).

    IF LC_QTD_INDEX NE 1.
      READ TABLE IT_ZLEST0189_ALV WITH KEY LINE_COLOR = 'C311' INTO DATA(WA_ZLEST0189_ALV).
      IF SY-SUBRC IS INITIAL.
        LC_TAXJURCODE = WA_ZLEST0189_ALV-ID_CIDADE_BASE.
      ENDIF.
    ENDIF.

    LOOP AT CAST LCL_DRAGDROP_03( E_DRAGDROPOBJ->OBJECT )->INDEX INTO DATA(WA_INDEX).

      READ TABLE IT_J_1BTXJURT INDEX WA_INDEX INTO DATA(WA_J_1BTXJURT).

      IF SY-SUBRC IS NOT INITIAL.
        CONTINUE.
      ENDIF.

      IF LC_TAXJURCODE IS INITIAL.
        LC_TAXJURCODE = WA_J_1BTXJURT-TAXJURCODE.
      ENDIF.

      APPEND VALUE #( ID_REGIAO      = ZLEST0187-ID_REGIAO
                      COUNTRY_BASE   = WA_J_1BTXJURT-COUNTRY
                      ID_CIDADE_BASE = WA_J_1BTXJURT-TAXJURCODE
                      DS_CIDADE_BASE = WA_J_1BTXJURT-TEXT
                      DS_MESORREGIAO = WA_J_1BTXJURT-TEXT ) TO IT_ZLEST0189_ALV.

    ENDLOOP.

    LOOP AT IT_ZLEST0189_ALV INTO WA_ZLEST0189_ALV.
      DELETE IT_J_1BTXJURT WHERE TAXJURCODE = WA_ZLEST0189_ALV-ID_CIDADE_BASE.
    ENDLOOP.

    LOOP AT IT_ZLEST0190_ALV_ALL INTO DATA(WA_ZLEST0190_ALV).
      DELETE IT_J_1BTXJURT WHERE TAXJURCODE = WA_ZLEST0190_ALV-ID_CIDADE.
    ENDLOOP.

    CK_ALTEROU = ABAP_TRUE.

    PERFORM SEL_MESORREGIAO USING LC_TAXJURCODE.

    LEAVE TO SCREEN 0100.

  ENDMETHOD.                    "HANDLE_BUTTON_CLICK

ENDCLASS.

CLASS LCL_EVENT_RECEIVER_02 IMPLEMENTATION.
  METHOD HANDLE_ONDROP_02.

    DATA: LC_TAXJURCODE TYPE J_1BTXJCD.

    READ TABLE IT_ZLEST0189_ALV WITH KEY LINE_COLOR = 'C311' INTO DATA(WA_ZLEST0189_ALV).
    IF SY-SUBRC IS INITIAL.
      LC_TAXJURCODE = WA_ZLEST0189_ALV-ID_CIDADE_BASE.
    ELSE.
      BREAK-POINT.
      EXIT.
    ENDIF.

    LOOP AT CAST LCL_DRAGDROP_03( E_DRAGDROPOBJ->OBJECT )->INDEX INTO DATA(WA_INDEX).

      READ TABLE IT_J_1BTXJURT INDEX WA_INDEX INTO DATA(WA_J_1BTXJURT).

      IF SY-SUBRC IS NOT INITIAL.
        CONTINUE.
      ENDIF.

      APPEND VALUE #( ID_REGIAO      = WA_ZLEST0189_ALV-ID_REGIAO
                      COUNTRY_BASE   = WA_ZLEST0189_ALV-COUNTRY_BASE
                      ID_CIDADE_BASE = WA_ZLEST0189_ALV-ID_CIDADE_BASE
                      DS_CIDADE_BASE = WA_ZLEST0189_ALV-DS_CIDADE_BASE
                      COUNTRY        = WA_J_1BTXJURT-COUNTRY
                      ID_CIDADE      = WA_J_1BTXJURT-TAXJURCODE
                      DS_CIDADE      = WA_J_1BTXJURT-TEXT ) TO IT_ZLEST0190_ALV_ALL.

    ENDLOOP.

    LOOP AT IT_ZLEST0189_ALV INTO WA_ZLEST0189_ALV.
      DELETE IT_J_1BTXJURT WHERE TAXJURCODE = WA_ZLEST0189_ALV-ID_CIDADE_BASE.
    ENDLOOP.

    LOOP AT IT_ZLEST0190_ALV_ALL INTO DATA(WA_ZLEST0190_ALV).
      DELETE IT_J_1BTXJURT WHERE TAXJURCODE = WA_ZLEST0190_ALV-ID_CIDADE.
    ENDLOOP.

    CK_ALTEROU = ABAP_TRUE.

    PERFORM SEL_MESORREGIAO USING LC_TAXJURCODE.

    LEAVE TO SCREEN 0100.

  ENDMETHOD.                    "HANDLE_BUTTON_CLICK
ENDCLASS.

CLASS LCL_EVENT_RECEIVER_03 IMPLEMENTATION.
  METHOD HANDLE_ONDRAG_03.

    DATA: L_OBJ TYPE REF TO LCL_DRAGDROP_03.
    CREATE OBJECT L_OBJ.

    ALV_03->GET_SELECTED_ROWS(
      IMPORTING
        ET_INDEX_ROWS = DATA(ET_INDEX_ROWS)
        ET_ROW_NO     = DATA(ET_ROW_NO)
    ).

    IF ET_INDEX_ROWS[] IS INITIAL.
      APPEND E_ROW-INDEX TO L_OBJ->INDEX.
    ELSE.
      LOOP AT ET_INDEX_ROWS INTO DATA(WA_INDEX_ROWS) WHERE ROWTYPE IS INITIAL.
        APPEND WA_INDEX_ROWS-INDEX TO L_OBJ->INDEX.
      ENDLOOP.
    ENDIF.
    E_DRAGDROPOBJ->OBJECT = L_OBJ.

  ENDMETHOD.                    "HANDLE_BUTTON_CLICK

ENDCLASS.


CLASS LCL_EVENT_RECEIVER_0200 IMPLEMENTATION.

  METHOD HANDLE_DOUBLE_CLICK_0200.
    PERFORM HANDLE_DOUBLE_CLICK_0200 USING E_ROW.
  ENDMETHOD.                    "HANDLE_DOUBLE_CLICK

ENDCLASS.                    "LCL_EVENT_RECEIVER IMPLEMENTATION

START-OF-SELECTION.

  CALL SCREEN 0100.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.

  DATA: IT_CODE          TYPE TABLE OF SY-UCOMM,
        IT_EXCLUDE_FCODE TYPE UI_FUNCTIONS.

  CLEAR: IT_CODE[].

  IF CK_ALTEROU EQ ABAP_FALSE.
    APPEND 'SAVE' TO IT_CODE.
  ENDIF.

  IF ZLEST0187 IS INITIAL.
    APPEND 'DELETAR' TO IT_CODE.
  ENDIF.

  SET PF-STATUS 'PF0100' EXCLUDING IT_CODE.
  SET TITLEBAR 'TL0100' WITH ZLEST0187-DS_REGIAO.

  IF SPLITTER IS INITIAL.

    APPEND CL_GUI_ALV_GRID=>MC_FC_SUM     TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_AVERAGE TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_SUBTOT  TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_AUF     TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_GRAPH   TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_INFO    TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_DETAIL  TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_VIEWS   TO IT_EXCLUDE_FCODE.
    APPEND CL_GUI_ALV_GRID=>MC_FC_PRINT   TO IT_EXCLUDE_FCODE.

    CREATE OBJECT SPLITTER
      EXPORTING
        PARENT  = CL_GUI_CONTAINER=>SCREEN0
        ROWS    = 1
        COLUMNS = 3.

    CONTAINER_01 = SPLITTER->GET_CONTAINER( ROW = 1 COLUMN = 1 ).
    CONTAINER_02 = SPLITTER->GET_CONTAINER( ROW = 1 COLUMN = 2 ).
    CONTAINER_03 = SPLITTER->GET_CONTAINER( ROW = 1 COLUMN = 3 ).

    CREATE OBJECT ALV_01
      EXPORTING
        I_PARENT = CONTAINER_01.

    CREATE OBJECT ALV_02
      EXPORTING
        I_PARENT = CONTAINER_02.

    CREATE OBJECT ALV_03
      EXPORTING
        I_PARENT = CONTAINER_03.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME = 'ZDE_ZLEST0189_ALV'
      CHANGING
        CT_FIELDCAT      = IT_FIELDCATALOG_01.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME = 'ZDE_ZLEST0190_ALV'
      CHANGING
        CT_FIELDCAT      = IT_FIELDCATALOG_02.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME = 'J_1BTXJURT'
      CHANGING
        CT_FIELDCAT      = IT_FIELDCATALOG_03.

    LOOP AT IT_FIELDCATALOG_01 ASSIGNING FIELD-SYMBOL(<FS_01>).
      IF <FS_01>-FIELDNAME EQ 'ID_REGIAO' OR <FS_01>-FIELDNAME EQ 'COUNTRY_BASE'.
        <FS_01>-NO_OUT = ABAP_TRUE.
      ENDIF.
      IF <FS_01>-FIELDNAME EQ 'DS_MESORREGIAO'.
        <FS_01>-EDIT = ABAP_TRUE.
      ENDIF.
    ENDLOOP.

    LOOP AT IT_FIELDCATALOG_02 ASSIGNING FIELD-SYMBOL(<FS_02>).
      IF <FS_02>-FIELDNAME EQ 'ID_REGIAO' OR <FS_02>-FIELDNAME EQ 'COUNTRY_BASE'   OR
         <FS_02>-FIELDNAME EQ 'COUNTRY'   OR <FS_02>-FIELDNAME EQ 'ID_CIDADE_BASE' OR
         <FS_02>-FIELDNAME EQ 'DS_CIDADE_BASE'.
        <FS_02>-NO_OUT = ABAP_TRUE.
      ENDIF.
    ENDLOOP.

    LOOP AT IT_FIELDCATALOG_03 ASSIGNING FIELD-SYMBOL(<FS_03>).
      IF <FS_03>-FIELDNAME EQ 'SPRAS' OR <FS_03>-FIELDNAME EQ 'COUNTRY'.
        <FS_03>-NO_OUT = ABAP_TRUE.
      ENDIF.
    ENDLOOP.

    VARIANT_01-REPORT      = VARIANT_02-REPORT = VARIANT_03-REPORT = SY-REPID.
    VARIANT_01-HANDLE      = '0100'.
    VARIANT_02-HANDLE      = '0101'.
    VARIANT_03-HANDLE      = '0102'.

    LAYOUT_01-SEL_MODE   = 'A'.
    LAYOUT_01-INFO_FNAME = 'LINE_COLOR'.
    LAYOUT_01-STYLEFNAME = 'STYLE'.
    LAYOUT_01-CTAB_FNAME = 'COLOR_CELL'.
    LAYOUT_02 = LAYOUT_01.
    LAYOUT_03 = LAYOUT_01.

    CREATE OBJECT EVENT_RECEIVER_01.
    SET HANDLER EVENT_RECEIVER_01->HANDLE_ONDROP_01 FOR ALV_01.
    SET HANDLER EVENT_RECEIVER_01->DOUBLE_CLICK_01 FOR ALV_01.
    SET HANDLER EVENT_RECEIVER_01->DATA_CHANGED_01 FOR ALV_01.
    SET HANDLER EVENT_RECEIVER_01->DATA_CHANGED_FINISHED_01 FOR ALV_01.

    CREATE OBJECT EVENT_RECEIVER_02.
    SET HANDLER EVENT_RECEIVER_02->HANDLE_ONDROP_02 FOR ALV_02.

    CREATE OBJECT EVENT_RECEIVER_03.
    SET HANDLER EVENT_RECEIVER_03->HANDLE_ONDRAG_03 FOR ALV_03.

    CREATE OBJECT DRAGDROP_ALV_01.
    CREATE OBJECT DRAGDROP_ALV_02.
    CREATE OBJECT DRAGDROP_ALV_03.

    DRAGDROP_ALV_01->ADD( EXPORTING FLAVOR = 'LINE' DRAGSRC = ABAP_FALSE DROPTARGET = ABAP_TRUE  EFFECT = CL_DRAGDROP=>MOVE ).
    DRAGDROP_ALV_02->ADD( EXPORTING FLAVOR = 'LINE' DRAGSRC = ABAP_FALSE DROPTARGET = ABAP_TRUE  EFFECT = CL_DRAGDROP=>MOVE ).
    DRAGDROP_ALV_03->ADD( EXPORTING FLAVOR = 'LINE' DRAGSRC = ABAP_TRUE  DROPTARGET = ABAP_FALSE EFFECT = CL_DRAGDROP=>MOVE ).

    DRAGDROP_ALV_01->GET_HANDLE( IMPORTING HANDLE = HANDLE_ALV_01 ).
    DRAGDROP_ALV_02->GET_HANDLE( IMPORTING HANDLE = HANDLE_ALV_02 ).
    DRAGDROP_ALV_03->GET_HANDLE( IMPORTING HANDLE = HANDLE_ALV_03 ).

    LAYOUT_01-S_DRAGDROP-CNTR_DDID = HANDLE_ALV_01.
    LAYOUT_01-S_DRAGDROP-ROW_DDID  = HANDLE_ALV_01.
    LAYOUT_02-S_DRAGDROP-CNTR_DDID = HANDLE_ALV_02.
    LAYOUT_02-S_DRAGDROP-ROW_DDID  = HANDLE_ALV_02.
    LAYOUT_03-S_DRAGDROP-CNTR_DDID = HANDLE_ALV_03.
    LAYOUT_03-S_DRAGDROP-ROW_DDID  = HANDLE_ALV_03.

    CREATE OBJECT TOOLBAR_01 EXPORTING IO_ALV_GRID = ALV_01.
    SET HANDLER TOOLBAR_01->ON_TOOLBAR FOR ALV_01.
    SET HANDLER TOOLBAR_01->HANDLE_USER_COMMAND FOR ALV_01.

    CREATE OBJECT TOOLBAR_02 EXPORTING IO_ALV_GRID = ALV_02.
    SET HANDLER TOOLBAR_02->ON_TOOLBAR FOR ALV_02.
    SET HANDLER TOOLBAR_02->HANDLE_USER_COMMAND FOR ALV_02.

    LAYOUT_01-GRID_TITLE = 'Mesorregiões'.
    LAYOUT_02-GRID_TITLE = 'Cidades da Messorregião'.
    LAYOUT_03-GRID_TITLE = 'Cidades Não Vinculadas'.

    ALV_01->REGISTER_EDIT_EVENT( EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

    CALL METHOD ALV_01->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = LAYOUT_01
        IS_VARIANT           = VARIANT_01
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = VALUE #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG_01
        IT_OUTTAB            = IT_ZLEST0189_ALV[].

    CALL METHOD ALV_02->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = LAYOUT_02
        IS_VARIANT           = VARIANT_02
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = VALUE #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG_02
        IT_OUTTAB            = IT_ZLEST0190_ALV[].

    CALL METHOD ALV_03->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = LAYOUT_03
        IS_VARIANT           = VARIANT_03
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG_03
        IT_OUTTAB            = IT_J_1BTXJURT[].

  ENDIF.

  CALL METHOD ALV_01->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE )
      I_SOFT_REFRESH = ABAP_TRUE.

  CALL METHOD ALV_02->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE )
      I_SOFT_REFRESH = ABAP_TRUE.

  CALL METHOD ALV_03->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE )
      I_SOFT_REFRESH = ABAP_TRUE.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100_EXIT INPUT.

  DATA: ANSWER TYPE C.

  ANSWER = '1'.

  IF CK_ALTEROU EQ ABAP_TRUE.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        TITLEBAR              = TEXT-001
        TEXT_QUESTION         = TEXT-002
        TEXT_BUTTON_1         = TEXT-003
        ICON_BUTTON_1         = 'ICON_CHECKED'
        TEXT_BUTTON_2         = TEXT-004
        ICON_BUTTON_2         = 'ICON_INCOMPLETE'
        DEFAULT_BUTTON        = '2'
        DISPLAY_CANCEL_BUTTON = ' '
      IMPORTING
        ANSWER                = ANSWER
      EXCEPTIONS
        TEXT_NOT_FOUND        = 1
        OTHERS                = 2.

    IF SY-SUBRC IS NOT INITIAL.
      EXIT.
    ENDIF.

    CHECK ANSWER EQ '1'.

    CK_ALTEROU = ABAP_FALSE.

  ENDIF.

  CHECK CK_ALTEROU EQ ABAP_FALSE.

  LEAVE PROGRAM.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.

  CASE OK_CODE.
    WHEN 'SELECIONAR'.
      CLEAR: OK_CODE.
      PERFORM PESQUISAR_TABELA.

    WHEN 'CADASTRAR'.
      CLEAR: OK_CODE.
      PERFORM CADASTRAR_TABELA.

    WHEN 'SAVE'.
      CLEAR: OK_CODE.
      PERFORM SALVAR_TABELA.

    WHEN 'DELETAR'.
      CLEAR: OK_CODE.
      PERFORM DELETAR_TABELA.

  ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  PESQUISAR_TABELA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZLEST0187  text
*----------------------------------------------------------------------*
FORM PESQUISAR_TABELA.

  IF CK_ALTEROU EQ ABAP_TRUE.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        TITLEBAR              = TEXT-001
        TEXT_QUESTION         = TEXT-002
        TEXT_BUTTON_1         = TEXT-003
        ICON_BUTTON_1         = 'ICON_CHECKED'
        TEXT_BUTTON_2         = TEXT-004
        ICON_BUTTON_2         = 'ICON_INCOMPLETE'
        DEFAULT_BUTTON        = '2'
        DISPLAY_CANCEL_BUTTON = ' '
      IMPORTING
        ANSWER                = ANSWER
      EXCEPTIONS
        TEXT_NOT_FOUND        = 1
        OTHERS                = 2.

    IF SY-SUBRC IS NOT INITIAL.
      EXIT.
    ENDIF.

    CHECK ANSWER EQ '1'.

    CK_ALTEROU = ABAP_FALSE.

  ENDIF.

  CHECK CK_ALTEROU EQ ABAP_FALSE.

  SELECT * INTO TABLE IT_ZLEST0187
    FROM ZLEST0187.

  CALL SCREEN 0200 STARTING AT 30 05.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0200 OUTPUT.
  SET PF-STATUS 'PF0200'.
  SET TITLEBAR 'TL0200'.

  IF ALV_SEL IS INITIAL.

    CREATE OBJECT CONTAINER_SEL
      EXPORTING
        CONTAINER_NAME = 'ALV_SEL'.

    CREATE OBJECT ALV_SEL
      EXPORTING
        I_PARENT = CONTAINER_SEL.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME = 'ZLEST0187'
      CHANGING
        CT_FIELDCAT      = IT_FIELDCATALOG_SEL.

    LOOP AT IT_FIELDCATALOG_SEL ASSIGNING FIELD-SYMBOL(<FS_SEL>).

      IF <FS_SEL>-FIELDNAME EQ 'ID_REGIAO'.
        <FS_SEL>-NO_OUT = ABAP_TRUE.
      ENDIF.

    ENDLOOP.

    VARIANT_SEL-REPORT      = SY-REPID.
    VARIANT_SEL-HANDLE      = '0200'.
    VARIANT_SEL-LOG_GROUP   = ABAP_FALSE.
    VARIANT_SEL-USERNAME    = ABAP_FALSE.
    VARIANT_SEL-VARIANT     = ABAP_FALSE.
    VARIANT_SEL-TEXT        = ABAP_FALSE.
    VARIANT_SEL-DEPENDVARS  = ABAP_FALSE.

    LAYOUT_SEL-SEL_MODE     = 'A'.
    LAYOUT_SEL-ZEBRA        = ABAP_TRUE.

    CALL METHOD ALV_SEL->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = LAYOUT_SEL
        IS_VARIANT           = VARIANT_SEL
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = VALUE #( ( CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL ) )
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG_SEL
        IT_OUTTAB            = IT_ZLEST0187[].

    CREATE OBJECT EVENT_HANDLER_0200.
    SET HANDLER EVENT_HANDLER_0200->HANDLE_DOUBLE_CLICK_0200 FOR ALV_SEL.

  ENDIF.

  CALL METHOD ALV_SEL->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE )
      I_SOFT_REFRESH = ABAP_TRUE.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0200_EXIT INPUT.
  PERFORM SAIR_0200.
  LEAVE TO SCREEN 0.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  HANDLE_DOUBLE_CLICK_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM HANDLE_DOUBLE_CLICK_0200  USING P_ROW TYPE LVC_S_ROW.

  IF P_ROW-ROWTYPE IS INITIAL.

    READ TABLE IT_ZLEST0187 INDEX P_ROW-INDEX INTO ZLEST0187.
    IF SY-SUBRC IS INITIAL.
      PERFORM SELECIONAR_TABELA.
      PERFORM SAIR_0200.
      LEAVE TO SCREEN 0.
    ENDIF.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SAIR_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SAIR_0200 .

  CLEAR: EVENT_HANDLER_0200.

  IF ALV_SEL IS NOT INITIAL.
    ALV_SEL->FREE( ).
  ENDIF.
  CLEAR: ALV_SEL.

  IF CONTAINER_SEL IS NOT INITIAL.
    CONTAINER_SEL->FREE( ).
  ENDIF.
  CLEAR: CONTAINER_SEL.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SELECIONAR_TABELA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECIONAR_TABELA .

  DATA: RG_TAXJURCODE TYPE RANGE OF J_1BTXJCD.

  CHECK ZLEST0187-ID_REGIAO IS NOT INITIAL.

*11-Rondônia-RO
*12-Acre-AC
*13-Amazonas-AM
*14-Roraima-RR
*15-Pará-PA
*16-Amapá-AP
*17-Tocantins-TO
*21-Maranhão-MA
*22-Piauí-PI
*23-Ceará-CE
*24-Rio Grande do Norte-RN
*25-Paraíba-PB
*26-Pernambuco-PE
*27-Alagoas-AL
*28-Sergipe-SE
*29-Bahia-BA
*31-Minas Gerais-MG
*32-Espírito Santo-ES
*33-Rio de Janeiro-RJ
*35-São Paulo-SP
*41-Paraná-PR
*42-Santa Catarina-SC
*43-Rio Grande do Sul-RS
*50-Mato Grosso do Sul-MS
*51-Mato Grosso-MT
*52-Goiás-GO
*53-Distrito Federal-DF

  RG_TAXJURCODE = VALUE #( OPTION = 'CP' SIGN = 'I'
     ( LOW = 'RO 11*' )
     ( LOW = 'AC 12*' )
     ( LOW = 'AM 13*' )
     ( LOW = 'RR 14*' )
     ( LOW = 'PA 15*' )
     ( LOW = 'AP 16*' )
     ( LOW = 'TO 17*' )
     ( LOW = 'MA 21*' )
     ( LOW = 'PI 22*' )
     ( LOW = 'CE 23*' )
     ( LOW = 'RN 24*' )
     ( LOW = 'PB 25*' )
     ( LOW = 'PE 26*' )
     ( LOW = 'AL 27*' )
     ( LOW = 'SE 28*' )
     ( LOW = 'BA 29*' )
     ( LOW = 'MG 31*' )
     ( LOW = 'ES 32*' )
     ( LOW = 'RJ 33*' )
     ( LOW = 'SP 35*' )
     ( LOW = 'PR 41*' )
     ( LOW = 'SC 42*' )
     ( LOW = 'RS 43*' )
     ( LOW = 'MS 50*' )
     ( LOW = 'MS 50*' )
     ( LOW = 'MT 51*' )
     ( LOW = 'GO 52*' )
     ( LOW = 'DF 53*' )
     ).

  SELECT * INTO TABLE @IT_J_1BTXJURT
    FROM J_1BTXJURT
   WHERE SPRAS      EQ @SY-LANGU
     AND COUNTRY    EQ 'BR'
     AND TAXJURCODE IN @RG_TAXJURCODE.

  SORT IT_J_1BTXJURT BY TAXJURCODE.

  CLEAR: IT_ZLEST0189_ALV[], IT_ZLEST0190_ALV_ALL[].

  SELECT * INTO TABLE @DATA(IT_ZLEST0189)
    FROM ZLEST0189
   WHERE ID_REGIAO EQ @ZLEST0187-ID_REGIAO.

  LOOP AT IT_ZLEST0189 INTO DATA(WA_ZLEST0189).
    READ TABLE IT_J_1BTXJURT INTO DATA(WA_J_1BTXJURT) WITH KEY TAXJURCODE = WA_ZLEST0189-ID_CIDADE_BASE.
    APPEND VALUE #( ID_REGIAO      = WA_ZLEST0189-ID_REGIAO
                    COUNTRY_BASE   = WA_ZLEST0189-COUNTRY_BASE
                    ID_CIDADE_BASE = WA_ZLEST0189-ID_CIDADE_BASE
                    DS_CIDADE_BASE = WA_J_1BTXJURT-TEXT
                    DS_MESORREGIAO = WA_ZLEST0189-DS_MESORREGIAO ) TO IT_ZLEST0189_ALV.
  ENDLOOP.

  SELECT * INTO TABLE @DATA(IT_ZLEST0190)
    FROM ZLEST0190
   WHERE ID_REGIAO EQ @ZLEST0187-ID_REGIAO.

  LOOP AT IT_ZLEST0190 INTO DATA(WA_ZLEST0190).

    READ TABLE IT_J_1BTXJURT INTO WA_J_1BTXJURT WITH KEY TAXJURCODE  = WA_ZLEST0190-ID_CIDADE_BASE.
    READ TABLE IT_J_1BTXJURT INTO DATA(WA_J_1BTXJURT_) WITH KEY TAXJURCODE = WA_ZLEST0190-ID_CIDADE.

    APPEND VALUE #( ID_REGIAO      = WA_ZLEST0190-ID_REGIAO
                    COUNTRY_BASE   = WA_ZLEST0190-COUNTRY_BASE
                    ID_CIDADE_BASE = WA_ZLEST0190-ID_CIDADE_BASE
                    DS_CIDADE_BASE = WA_J_1BTXJURT-TEXT
                    COUNTRY        = WA_ZLEST0190-COUNTRY
                    ID_CIDADE      = WA_ZLEST0190-ID_CIDADE
                    DS_CIDADE      = WA_J_1BTXJURT_-TEXT ) TO IT_ZLEST0190_ALV_ALL.

    "Apaga Cidades Já Utilizadas """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    DELETE IT_J_1BTXJURT WHERE TAXJURCODE = WA_ZLEST0190-ID_CIDADE_BASE.
    DELETE IT_J_1BTXJURT WHERE TAXJURCODE = WA_ZLEST0190-ID_CIDADE.
    CLEAR: WA_J_1BTXJURT, WA_J_1BTXJURT_.

  ENDLOOP.

  READ TABLE IT_ZLEST0189 INDEX 1 INTO WA_ZLEST0189.
  IF SY-SUBRC IS INITIAL.
    PERFORM SEL_MESORREGIAO USING WA_ZLEST0189-ID_CIDADE_BASE.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CADASTRAR_TABELA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CADASTRAR_TABELA .

  IF ZLEST0187 IS INITIAL.
    SELECT SUM( ID_REGIAO ) INTO ZLEST0187-ID_REGIAO
      FROM ZLEST0187.
    ADD 1 TO ZLEST0187-ID_REGIAO.
  ENDIF.

  CALL SCREEN 0300 STARTING AT 30 03.

  IF ZLEST0187 IS NOT INITIAL.
    PERFORM SELECIONAR_TABELA.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0300  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0300 OUTPUT.
  SET PF-STATUS 'PF0300'.
  SET TITLEBAR 'TL0300'.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0300_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0300_EXIT INPUT.

  CLEAR: ZLEST0187.
  LEAVE TO SCREEN 0.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0300  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0300 INPUT.

  IF OK_CODE EQ 'SAVE'.
    CLEAR: OK_CODE.
    MODIFY ZLEST0187.
    COMMIT WORK.
    LEAVE TO SCREEN 0.
  ENDIF.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  DELETAR_TABELA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DELETAR_TABELA .

  ANSWER = '1'.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      TITLEBAR              = TEXT-005
      TEXT_QUESTION         = TEXT-002
      TEXT_BUTTON_1         = TEXT-003
      ICON_BUTTON_1         = 'ICON_CHECKED'
      TEXT_BUTTON_2         = TEXT-004
      ICON_BUTTON_2         = 'ICON_INCOMPLETE'
      DEFAULT_BUTTON        = '2'
      DISPLAY_CANCEL_BUTTON = ' '
    IMPORTING
      ANSWER                = ANSWER
    EXCEPTIONS
      TEXT_NOT_FOUND        = 1
      OTHERS                = 2.

  IF SY-SUBRC IS NOT INITIAL.
    EXIT.
  ENDIF.

  CHECK ANSWER EQ '1'.

  DELETE FROM ZLEST0190 WHERE ID_REGIAO = ZLEST0187-ID_REGIAO.
  DELETE FROM ZLEST0189 WHERE ID_REGIAO = ZLEST0187-ID_REGIAO.
  DELETE FROM ZLEST0187 WHERE ID_REGIAO = ZLEST0187-ID_REGIAO.
  COMMIT WORK.

  CLEAR: ZLEST0187, IT_J_1BTXJURT[].

  PERFORM SELECIONAR_TABELA.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SEL_MESORREGIAO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_J_1BTXJURT_TAXJURCODE  text
*----------------------------------------------------------------------*
FORM SEL_MESORREGIAO  USING P_MESORREGIAO TYPE J_1BTXJCD.

  LOOP AT IT_ZLEST0189_ALV ASSIGNING FIELD-SYMBOL(<FS_189>).
    CLEAR:
    <FS_189>-COLOR_CELL,
    <FS_189>-LINE_COLOR,
    <FS_189>-STYLE.
  ENDLOOP.

  READ TABLE IT_ZLEST0189_ALV ASSIGNING <FS_189> WITH KEY ID_CIDADE_BASE = P_MESORREGIAO.
  CHECK SY-SUBRC IS INITIAL.

  <FS_189>-LINE_COLOR = 'C311'.

  CLEAR: IT_ZLEST0190_ALV[].
  LOOP AT IT_ZLEST0190_ALV_ALL INTO DATA(WA_ZLEST0190_ALV_ALL) WHERE ID_CIDADE_BASE = P_MESORREGIAO.
    APPEND WA_ZLEST0190_ALV_ALL TO IT_ZLEST0190_ALV.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SALVAR_TABELA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SALVAR_TABELA .

  DATA: IT_ZLEST0189 TYPE TABLE OF ZLEST0189,
        IT_ZLEST0190 TYPE TABLE OF ZLEST0190.

  ANSWER = '1'.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      TITLEBAR              = TEXT-006
      TEXT_QUESTION         = TEXT-002
      TEXT_BUTTON_1         = TEXT-003
      ICON_BUTTON_1         = 'ICON_CHECKED'
      TEXT_BUTTON_2         = TEXT-004
      ICON_BUTTON_2         = 'ICON_INCOMPLETE'
      DEFAULT_BUTTON        = '2'
      DISPLAY_CANCEL_BUTTON = ' '
    IMPORTING
      ANSWER                = ANSWER
    EXCEPTIONS
      TEXT_NOT_FOUND        = 1
      OTHERS                = 2.

  IF SY-SUBRC IS NOT INITIAL.
    EXIT.
  ENDIF.

  CHECK ANSWER EQ '1'.

  DELETE FROM ZLEST0190 WHERE ID_REGIAO = ZLEST0187-ID_REGIAO.
  DELETE FROM ZLEST0189 WHERE ID_REGIAO = ZLEST0187-ID_REGIAO.

  LOOP AT IT_ZLEST0189_ALV INTO DATA(WA_ZLEST0189_ALV).
    APPEND VALUE #( ID_REGIAO      = WA_ZLEST0189_ALV-ID_REGIAO
                    COUNTRY_BASE   = WA_ZLEST0189_ALV-COUNTRY_BASE
                    ID_CIDADE_BASE = WA_ZLEST0189_ALV-ID_CIDADE_BASE
                    DS_MESORREGIAO = WA_ZLEST0189_ALV-DS_MESORREGIAO ) TO IT_ZLEST0189.
  ENDLOOP.

  LOOP AT IT_ZLEST0190_ALV_ALL INTO DATA(WA_ZLEST0190_ALV_ALL).
    APPEND VALUE #( ID_REGIAO      = WA_ZLEST0190_ALV_ALL-ID_REGIAO
                    COUNTRY_BASE   = WA_ZLEST0190_ALV_ALL-COUNTRY_BASE
                    ID_CIDADE_BASE = WA_ZLEST0190_ALV_ALL-ID_CIDADE_BASE
                    COUNTRY        = WA_ZLEST0190_ALV_ALL-COUNTRY
                    ID_CIDADE      = WA_ZLEST0190_ALV_ALL-ID_CIDADE ) TO IT_ZLEST0190.
  ENDLOOP.

  MODIFY ZLEST0189 FROM TABLE IT_ZLEST0189.
  MODIFY ZLEST0190 FROM TABLE IT_ZLEST0190.

  COMMIT WORK.

  CK_ALTEROU = ABAP_FALSE.

ENDFORM.
