FUNCTION Z_FI_ESTRATEGIA_LISTA.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     VALUE(V_USUARIO) LIKE  SY-UNAME
*"     VALUE(V_LOTE) TYPE  ZIMP_CAD_LOTE-LOTE OPTIONAL
*"  EXPORTING
*"     VALUE(MSG) TYPE  CHAR50
*"  TABLES
*"      T_LOTES STRUCTURE  ZFI_LOTES_IMP
*"      T_ESTRA STRUCTURE  ZFI_ESTRATEGIA_IMP OPTIONAL
*"      T_DOCS STRUCTURE  ZFI_DOCS_IMP OPTIONAL
*"----------------------------------------------------------------------
*
*----------------------------------------------------------------------*
* TYPE POOLS
*----------------------------------------------------------------------*
  TYPE-POOLS: ICON.

*----------------------------------------------------------------------*
* ESTRUTURAS
*----------------------------------------------------------------------*

  TYPES:
    BEGIN OF TY_ESTRA ,
      BUKRS     TYPE ZIMP_LOTES_APROV-BUKRS,
      LOTE      TYPE ZIMP_LOTES_APROV-LOTE,
      VALOR_DE  TYPE ZIMP_APROVADOR-VALOR_DE,
      VALOR_ATE TYPE ZIMP_APROVADOR-VALOR_ATE,
      APROVADOR TYPE ZIMP_APROVADOR-APROVADOR,
      NIVEL     TYPE ZIMP_APROVADOR-NIVEL,
      ESTADO(4),
      OPCOES(4),
    END OF TY_ESTRA,

    BEGIN OF TY_DOCS ,
      LOTE              TYPE ZIMP_CAD_LOTE-LOTE,
      DOC_IMPOSTO       TYPE ZIMP_LANC_IMPOST-DOC_IMPOSTO,
      DESCR_IMPOSTO(55) TYPE C,
      CONV_BANCO        TYPE ZIMP_LANC_IMPOST-CONV_BANCO,
      HBKID(20)         TYPE C,
      VALOR             TYPE ZIMP_LANC_IMP_CT-VALOR_IMP,
      OBSERVACAO        TYPE ZIMP_LANC_IMPOST-OBSERVACAO,
    END OF TY_DOCS,

    BEGIN OF TY_ZIMP_CAD_DEPTO,
      DEP_RESP      TYPE ZIMP_CAD_DEPTO-DEP_RESP,
      DEP_RESP_DESC TYPE ZIMP_CAD_DEPTO-DEP_RESP_DESC,
    END OF TY_ZIMP_CAD_DEPTO,

    BEGIN OF TY_ZIMP_CAD_LOTE,
      LOTE        TYPE ZIMP_CAD_LOTE-LOTE,
      BUKRS       TYPE ZIMP_CAD_LOTE-BUKRS,
      DESCR_LOTE  TYPE ZIMP_CAD_LOTE-DESCR_LOTE,
      STATUS_LOTE TYPE ZIMP_CAD_LOTE-STATUS_LOTE,
      USNAM       TYPE ZIMP_CAD_LOTE-USNAM,
      DEP_RESP    TYPE ZIMP_CAD_LOTE-DEP_RESP,
      DT_VENC     TYPE ZIMP_CAD_LOTE-DT_VENC,
    END OF TY_ZIMP_CAD_LOTE,

    BEGIN OF TY_ZIMP_LANC_IMPOST,
      BUKRS       TYPE ZIMP_LANC_IMPOST-BUKRS,
      LOTE        TYPE ZIMP_LANC_IMPOST-LOTE,
      DT_VENC     TYPE ZIMP_LANC_IMPOST-DT_VENC,
      OBSERVACAO  TYPE ZIMP_LANC_IMPOST-OBSERVACAO,
      DOC_IMPOSTO TYPE ZIMP_LANC_IMPOST-DOC_IMPOSTO,
      CONV_BANCO  TYPE ZIMP_LANC_IMPOST-CONV_BANCO,
      HBKID       TYPE ZIMP_LANC_IMPOST-HBKID,
      COD_IMPOSTO TYPE ZIMP_LANC_IMPOST-COD_IMPOSTO,
      WAERS       TYPE ZIMP_LANC_IMPOST-WAERS,
    END OF TY_ZIMP_LANC_IMPOST,

    BEGIN OF TY_ZIMP_LANC_IMP_CT,
      BUKRS       TYPE ZIMP_LANC_IMP_CT-BUKRS,
      DOC_IMPOSTO TYPE ZIMP_LANC_IMP_CT-DOC_IMPOSTO,
      BSCHL       TYPE ZIMP_LANC_IMP_CT-BSCHL,
      VALOR_IMP   TYPE ZIMP_LANC_IMP_CT-VALOR_IMP,
      HKONT       TYPE ZIMP_LANC_IMP_CT-HKONT,
      KOSTL       TYPE ZIMP_LANC_IMP_CT-KOSTL,
      LIFNR       TYPE ZIMP_LANC_IMP_CT-LIFNR,
    END OF TY_ZIMP_LANC_IMP_CT,


    BEGIN OF TY_TBSL,
      BSCHL TYPE TBSL-BSCHL,
      SHKZG TYPE TBSL-SHKZG,
    END OF TY_TBSL,

    BEGIN OF TY_T001,
      BUKRS TYPE T001-BUKRS,
      BUTXT TYPE T001-BUTXT,
    END OF TY_T001,

    BEGIN OF TY_ZIMP_CAD_IMPOSTO,
      COD_IMPOSTO   TYPE ZIMP_CAD_IMPOSTO-COD_IMPOSTO,
      DEP_RESP      TYPE ZIMP_CAD_IMPOSTO-DEP_RESP,
      DESCR_IMPOSTO TYPE ZIMP_CAD_IMPOSTO-DESCR_IMPOSTO,
    END OF TY_ZIMP_CAD_IMPOSTO,

    BEGIN OF TY_ZIMP_APROVADOR,
      BUKRS      TYPE ZIMP_APROVADOR-BUKRS,
      BUKRS_ATE  TYPE ZIMP_APROVADOR-BUKRS_ATE,
      DEP_RESP   TYPE ZIMP_APROVADOR-DEP_RESP,
      WAERS      TYPE ZIMP_APROVADOR-WAERS,
      NIVEL      TYPE ZIMP_APROVADOR-NIVEL,
      APROVADOR  TYPE ZIMP_APROVADOR-APROVADOR,
      VALOR_DE   TYPE ZIMP_APROVADOR-VALOR_DE,
      VALOR_ATE  TYPE ZIMP_APROVADOR-VALOR_ATE,
      DT_VAL_DE  TYPE ZIMP_APROVADOR-DT_VAL_DE,           "MODIFICAÇÃO 11.10.2016
      DT_VAL_ATE TYPE ZIMP_APROVADOR-DT_VAL_ATE,          "MODIFICAÇÃO 11.10.2016
      HR_VAL_DE  TYPE ZIMP_APROVADOR-HR_VAL_DE,           "modificação 03.01.2017
      HR_VAL_ATE TYPE ZIMP_APROVADOR-HR_VAL_ATE,          "modificação 03.01.2017
    END OF TY_ZIMP_APROVADOR,

    BEGIN OF TY_ZIMP_LOTES_APROV,
      BUKRS      TYPE ZIMP_LOTES_APROV-BUKRS,
      LOTE       TYPE ZIMP_LOTES_APROV-LOTE,
      NIVEL      TYPE ZIMP_LOTES_APROV-NIVEL,
      APROVADOR  TYPE ZIMP_LOTES_APROV-APROVADOR,
      VALOR_DE   TYPE ZIMP_LOTES_APROV-VALOR_DE,
      VALOR_ATE  TYPE ZIMP_LOTES_APROV-VALOR_ATE,
      DATA_ATUAL TYPE ZIMP_LOTES_APROV-DATA_ATUAL,
      HORA_ATUAL TYPE ZIMP_LOTES_APROV-HORA_ATUAL,
      USUARIO    TYPE ZIMP_LOTES_APROV-USUARIO,
    END OF TY_ZIMP_LOTES_APROV.

*&--------------------------------------------------------------------&*
*& Declaração Variáveis                                               &*
*&--------------------------------------------------------------------&*
  DATA: VVALOR_ATE  TYPE ZIMP_LOTES_APROV-VALOR_ATE,
        XTOTAL      TYPE ZIMP_LANC_IMP_CT-VALOR_IMP,
        VDEP_RESP   TYPE ZIMP_APROVADOR-DEP_RESP,
        VFLAG(1),
        VFLG_ICO(1).
*&--------------------------------------------------------------------&*
*& Declaração de tabelas e Work Areas                                 &*
*&--------------------------------------------------------------------&*

  DATA:
    BEGIN OF TG_LOTES OCCURS 0,
      STATUS(4),
      EMPRESA(30)  TYPE C,
      LOTE         TYPE ZIMP_CAD_LOTE-LOTE,
      DEP_RESP(25) TYPE C,
      DT_VENC      TYPE ZIMP_LANC_IMPOST-DT_VENC,
      TOTAL        TYPE ZIMP_LANC_IMP_CT-VALOR_IMP,
      COLOR(4),
    END OF TG_LOTES.

  DATA:
    WA_ZIMP_CAD_LOTE    TYPE TY_ZIMP_CAD_LOTE,
    WA_ZIMP_LANC_IMPOST TYPE TY_ZIMP_LANC_IMPOST,
    WA_ZIMP_LANC_IMP_CT TYPE TY_ZIMP_LANC_IMP_CT,
    WA_ZIMP_CAD_IMPOSTO TYPE TY_ZIMP_CAD_IMPOSTO,
    WA_ZIMP_CAD_DEPTO   TYPE TY_ZIMP_CAD_DEPTO,
    WA_ZIMP_APROVADOR   TYPE TY_ZIMP_APROVADOR,
    WA_ZIMP_LOTES_APROV TYPE TY_ZIMP_LOTES_APROV,
    WA_TBSL             TYPE TY_TBSL,
    WA_T001             TYPE TY_T001,
    WA_DOCS             TYPE TY_DOCS,
    WA_ESTRA            TYPE TY_ESTRA,

    IT_ZIMP_CAD_LOTE    TYPE TABLE OF TY_ZIMP_CAD_LOTE,
    IT_ZIMP_LANC_IMPOST TYPE TABLE OF TY_ZIMP_LANC_IMPOST,
    IT_ZIMP_LANC_IMP_CT TYPE TABLE OF TY_ZIMP_LANC_IMP_CT,
    IT_ZIMP_CAD_IMPOSTO TYPE TABLE OF TY_ZIMP_CAD_IMPOSTO,
    IT_ZIMP_CAD_DEPTO   TYPE TABLE OF TY_ZIMP_CAD_DEPTO,
    IT_ZIMP_APROVADOR   TYPE TABLE OF TY_ZIMP_APROVADOR,
    IT_ZIMP_LOTES_APROV TYPE TABLE OF TY_ZIMP_LOTES_APROV,
    IT_TBSL             TYPE TABLE OF TY_TBSL,
    IT_T001             TYPE TABLE OF TY_T001,
    TG_DOCS             TYPE TABLE OF TY_DOCS,
    TG_ESTRA            TYPE TABLE OF TY_ESTRA,
    IT_ESTRA            TYPE TABLE OF TY_ESTRA.

  IF V_LOTE IS INITIAL.
    SELECT LOTE BUKRS DESCR_LOTE STATUS_LOTE  USNAM DEP_RESP DT_VENC
           FROM ZIMP_CAD_LOTE
           INTO TABLE IT_ZIMP_CAD_LOTE
           WHERE LOEKZ = ''
           AND   STATUS_LOTE = 'L'.
  ELSE.
    SELECT LOTE BUKRS DESCR_LOTE STATUS_LOTE  USNAM DEP_RESP DT_VENC
           FROM ZIMP_CAD_LOTE
           INTO TABLE IT_ZIMP_CAD_LOTE
           WHERE LOEKZ = ''
           AND   LOTE = V_LOTE.
  ENDIF.

  CHECK IT_ZIMP_CAD_LOTE[] IS NOT INITIAL.

  SELECT DEP_RESP DEP_RESP_DESC
    FROM ZIMP_CAD_DEPTO
    INTO TABLE IT_ZIMP_CAD_DEPTO
    FOR ALL ENTRIES IN IT_ZIMP_CAD_LOTE
    WHERE DEP_RESP = IT_ZIMP_CAD_LOTE-DEP_RESP.

  SELECT BUKRS LOTE NIVEL APROVADOR VALOR_DE VALOR_ATE DATA_ATUAL HORA_ATUAL USUARIO
        FROM ZIMP_LOTES_APROV
        INTO TABLE IT_ZIMP_LOTES_APROV
  FOR ALL ENTRIES IN IT_ZIMP_CAD_LOTE
  WHERE  LOTE  =  IT_ZIMP_CAD_LOTE-LOTE.

  SELECT BUKRS BUTXT
    FROM T001
    INTO TABLE IT_T001
    FOR ALL ENTRIES IN IT_ZIMP_CAD_LOTE
    WHERE  BUKRS EQ IT_ZIMP_CAD_LOTE-BUKRS.

  SELECT  BUKRS LOTE DT_VENC OBSERVACAO DOC_IMPOSTO CONV_BANCO HBKID COD_IMPOSTO WAERS
    FROM ZIMP_LANC_IMPOST
    INTO TABLE IT_ZIMP_LANC_IMPOST
    FOR ALL ENTRIES IN IT_ZIMP_CAD_LOTE
    WHERE LOTE EQ IT_ZIMP_CAD_LOTE-LOTE
    AND   LOEKZ = ''.

  SELECT BUKRS DOC_IMPOSTO BSCHL VALOR_IMP HKONT KOSTL LIFNR
    FROM ZIMP_LANC_IMP_CT
    INTO TABLE IT_ZIMP_LANC_IMP_CT
    FOR ALL ENTRIES IN IT_ZIMP_LANC_IMPOST
    WHERE DOC_IMPOSTO EQ IT_ZIMP_LANC_IMPOST-DOC_IMPOSTO
    AND   BUKRS       EQ IT_ZIMP_LANC_IMPOST-BUKRS.

  SELECT  COD_IMPOSTO DEP_RESP DESCR_IMPOSTO
    FROM ZIMP_CAD_IMPOSTO
    INTO TABLE IT_ZIMP_CAD_IMPOSTO
    FOR ALL ENTRIES IN IT_ZIMP_LANC_IMPOST
    WHERE COD_IMPOSTO EQ IT_ZIMP_LANC_IMPOST-COD_IMPOSTO.

  SELECT  BUKRS BUKRS_ATE DEP_RESP WAERS NIVEL APROVADOR VALOR_DE VALOR_ATE
    DT_VAL_DE DT_VAL_ATE                                                        "MODIFICAÇÃO 11.10.2016
    HR_VAL_DE HR_VAL_ATE                                                        "modificação 03.01.2017
    FROM ZIMP_APROVADOR
    INTO TABLE IT_ZIMP_APROVADOR
    FOR ALL ENTRIES IN IT_ZIMP_CAD_LOTE
    WHERE BUKRS     LE IT_ZIMP_CAD_LOTE-BUKRS
    AND   BUKRS_ATE GE IT_ZIMP_CAD_LOTE-BUKRS.

  SELECT BSCHL SHKZG
  FROM TBSL
  INTO TABLE IT_TBSL
  FOR ALL ENTRIES IN IT_ZIMP_LANC_IMP_CT
  WHERE BSCHL EQ IT_ZIMP_LANC_IMP_CT-BSCHL.

  SORT IT_ZIMP_APROVADOR BY BUKRS BUKRS_ATE DEP_RESP NIVEL.

  SELECT BSCHL SHKZG
    FROM TBSL
    INTO TABLE IT_TBSL
    FOR ALL ENTRIES IN IT_ZIMP_LANC_IMP_CT
    WHERE BSCHL EQ IT_ZIMP_LANC_IMP_CT-BSCHL.

  SORT: IT_T001             BY BUKRS,
        IT_ZIMP_LANC_IMPOST BY LOTE,
        IT_ZIMP_LOTES_APROV BY LOTE NIVEL APROVADOR,
        IT_ZIMP_LANC_IMP_CT BY DOC_IMPOSTO BUKRS,
        IT_ZIMP_CAD_IMPOSTO BY COD_IMPOSTO,
        IT_TBSL             BY BSCHL,
        IT_ZIMP_CAD_LOTE    BY LOTE,
        IT_ZIMP_CAD_DEPTO   BY DEP_RESP,
        IT_ZIMP_APROVADOR BY BUKRS BUKRS_ATE DEP_RESP NIVEL.

  REFRESH: TG_LOTES,IT_ESTRA,TG_DOCS.
  LOOP AT IT_ZIMP_CAD_LOTE INTO WA_ZIMP_CAD_LOTE.
    READ TABLE IT_T001 INTO WA_T001 WITH KEY BUKRS = WA_ZIMP_CAD_LOTE-BUKRS BINARY SEARCH.
    CONCATENATE WA_ZIMP_CAD_LOTE-BUKRS '-' WA_T001-BUTXT INTO  TG_LOTES-EMPRESA.

    TG_LOTES-LOTE       = WA_ZIMP_CAD_LOTE-LOTE.
    READ TABLE IT_ZIMP_CAD_DEPTO INTO WA_ZIMP_CAD_DEPTO WITH KEY DEP_RESP = WA_ZIMP_CAD_LOTE-DEP_RESP BINARY SEARCH.

    CONCATENATE WA_ZIMP_CAD_LOTE-DEP_RESP '-' WA_ZIMP_CAD_DEPTO-DEP_RESP_DESC INTO TG_LOTES-DEP_RESP.

    TG_LOTES-DT_VENC = WA_ZIMP_CAD_LOTE-DT_VENC.
    IF WA_ZIMP_CAD_LOTE-DT_VENC LT SY-DATUM.
      TG_LOTES-STATUS = ICON_ALERT.
      TG_LOTES-COLOR = 'C611'.
    ELSE.
      CLEAR TG_LOTES-STATUS.
      CLEAR TG_LOTES-COLOR.
    ENDIF.
    XTOTAL = 0.
    LOOP AT IT_ZIMP_LANC_IMPOST INTO WA_ZIMP_LANC_IMPOST WHERE LOTE = WA_ZIMP_CAD_LOTE-LOTE.
      LOOP AT IT_ZIMP_LANC_IMP_CT INTO WA_ZIMP_LANC_IMP_CT WHERE DOC_IMPOSTO = WA_ZIMP_LANC_IMPOST-DOC_IMPOSTO
                                                            AND  BUKRS       = WA_ZIMP_LANC_IMPOST-BUKRS.
        READ TABLE IT_TBSL INTO WA_TBSL WITH KEY BSCHL = WA_ZIMP_LANC_IMP_CT-BSCHL BINARY SEARCH.
        IF WA_TBSL-SHKZG NE 'H'.
          ADD WA_ZIMP_LANC_IMP_CT-VALOR_IMP TO XTOTAL .
        ENDIF.
      ENDLOOP.
    ENDLOOP.
    TG_LOTES-TOTAL = XTOTAL.

    "Inicio
    CLEAR VDEP_RESP.
    VVALOR_ATE = 0.
    VFLG_ICO = 'N'.

    LOOP AT IT_ZIMP_APROVADOR INTO WA_ZIMP_APROVADOR.
      IF  WA_ZIMP_APROVADOR-BUKRS_ATE IS INITIAL.
        IF  WA_ZIMP_APROVADOR-BUKRS NE WA_ZIMP_CAD_LOTE-BUKRS.
          CONTINUE.
        ENDIF.
      ELSEIF WA_ZIMP_APROVADOR-BUKRS     GT WA_ZIMP_CAD_LOTE-BUKRS OR
             WA_ZIMP_APROVADOR-BUKRS_ATE LT WA_ZIMP_CAD_LOTE-BUKRS.
        CONTINUE.
      ENDIF.
      IF WA_ZIMP_CAD_LOTE-DEP_RESP = WA_ZIMP_APROVADOR-DEP_RESP AND
        ( ( WA_ZIMP_APROVADOR-DT_VAL_DE  LT SY-DATUM AND            "/Modificação 20.03.2017
            WA_ZIMP_APROVADOR-DT_VAL_ATE GT SY-DATUM )              "Caso p/ DT_VAL_DE < SY-DATUM < DT_VAL_ATE (modificação 11.01.2017)
          OR
          ( WA_ZIMP_APROVADOR-DT_VAL_DE  EQ SY-DATUM AND            "Caso p/ DT_VAL_DE = SY-DATUM = DT_VAL_ATE (modificação 11.01.2017)
            WA_ZIMP_APROVADOR-DT_VAL_ATE EQ SY-DATUM AND
            WA_ZIMP_APROVADOR-HR_VAL_DE  LE SY-UZEIT AND
            WA_ZIMP_APROVADOR-HR_VAL_ATE GE SY-UZEIT )
          OR
          ( WA_ZIMP_APROVADOR-DT_VAL_DE  EQ SY-DATUM AND            "Caso p/ DT_VAL_DE = SY-DATUM < DT_VAL_ATE (modificação 11.01.2017)
            WA_ZIMP_APROVADOR-DT_VAL_ATE GT SY-DATUM AND
            WA_ZIMP_APROVADOR-HR_VAL_DE  LE SY-UZEIT )
          OR
          ( WA_ZIMP_APROVADOR-DT_VAL_DE  LT SY-DATUM AND            "Caso p/ DT_VAL_DE < SY-DATUM = DT_VAL_ATE (modificação 11.01.2017)
            WA_ZIMP_APROVADOR-DT_VAL_ATE EQ SY-DATUM AND
            WA_ZIMP_APROVADOR-HR_VAL_ATE GE SY-UZEIT ) ).
        IF XTOTAL > VVALOR_ATE.
          VVALOR_ATE = WA_ZIMP_APROVADOR-VALOR_ATE.
          VDEP_RESP = WA_ZIMP_APROVADOR-DEP_RESP.
        ENDIF.
      ENDIF.
    ENDLOOP.
    IF VDEP_RESP IS INITIAL.
      LOOP AT IT_ZIMP_APROVADOR INTO WA_ZIMP_APROVADOR.
        IF  WA_ZIMP_APROVADOR-BUKRS_ATE IS INITIAL.
          IF  WA_ZIMP_APROVADOR-BUKRS NE WA_ZIMP_CAD_LOTE-BUKRS.
            CONTINUE.
          ENDIF.
        ELSEIF WA_ZIMP_APROVADOR-BUKRS     GT WA_ZIMP_CAD_LOTE-BUKRS OR
               WA_ZIMP_APROVADOR-BUKRS_ATE LT WA_ZIMP_CAD_LOTE-BUKRS.
          CONTINUE.
        ENDIF.
        IF WA_ZIMP_APROVADOR-DEP_RESP IS INITIAL.
          IF XTOTAL > VVALOR_ATE.
            IF ( WA_ZIMP_APROVADOR-DT_VAL_DE  LT SY-DATUM AND            "/Modificação 20.03.2017
                 WA_ZIMP_APROVADOR-DT_VAL_ATE GT SY-DATUM )              "Caso p/ DT_VAL_DE < SY-DATUM < DT_VAL_ATE (modificação 11.01.2017)
               OR
               ( WA_ZIMP_APROVADOR-DT_VAL_DE  EQ SY-DATUM AND            "Caso p/ DT_VAL_DE = SY-DATUM = DT_VAL_ATE (modificação 11.01.2017)
                 WA_ZIMP_APROVADOR-DT_VAL_ATE EQ SY-DATUM AND
                 WA_ZIMP_APROVADOR-HR_VAL_DE  LE SY-UZEIT AND
                 WA_ZIMP_APROVADOR-HR_VAL_ATE GE SY-UZEIT )
               OR
               ( WA_ZIMP_APROVADOR-DT_VAL_DE  EQ SY-DATUM AND            "Caso p/ DT_VAL_DE = SY-DATUM < DT_VAL_ATE (modificação 11.01.2017)
                 WA_ZIMP_APROVADOR-DT_VAL_ATE GT SY-DATUM AND
                 WA_ZIMP_APROVADOR-HR_VAL_DE  LE SY-UZEIT )
               OR
               ( WA_ZIMP_APROVADOR-DT_VAL_DE  LT SY-DATUM AND            "Caso p/ DT_VAL_DE < SY-DATUM = DT_VAL_ATE (modificação 11.01.2017)
                 WA_ZIMP_APROVADOR-DT_VAL_ATE EQ SY-DATUM AND
                 WA_ZIMP_APROVADOR-HR_VAL_ATE GE SY-UZEIT ).
              VVALOR_ATE = WA_ZIMP_APROVADOR-VALOR_ATE.
              VDEP_RESP = WA_ZIMP_APROVADOR-DEP_RESP.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDLOOP.
    ENDIF.

    LOOP AT IT_ZIMP_APROVADOR INTO WA_ZIMP_APROVADOR.
      IF  WA_ZIMP_APROVADOR-BUKRS_ATE IS INITIAL.
        IF  WA_ZIMP_APROVADOR-BUKRS NE WA_ZIMP_CAD_LOTE-BUKRS.
          CONTINUE.
        ENDIF.
      ELSEIF WA_ZIMP_APROVADOR-BUKRS     GT WA_ZIMP_CAD_LOTE-BUKRS OR
             WA_ZIMP_APROVADOR-BUKRS_ATE LT WA_ZIMP_CAD_LOTE-BUKRS.
        CONTINUE.
      ENDIF.
      IF " WA_ZIMP_APROVADOR-VALOR_ATE <= VVALOR_ATE AND
         " WA_ZIMP_APROVADOR-DT_VAL_DE LE SY-DATUM AND                      "MODIFICAÇÃO 11.10.2016
         " WA_ZIMP_APROVADOR-DT_VAL_ATE GE SY-DATUM AND                     "MODIFICAÇÃO 11.10.2016
         " WA_ZIMP_APROVADOR-HR_VAL_DE LE SY-UZEIT AND                      "modificação 03.01.2017
         " WA_ZIMP_APROVADOR-HR_VAL_ATE GE SY-UZEIT.                        "modificação 03.01.2017

        ( WA_ZIMP_APROVADOR-VALOR_ATE  <= VVALOR_ATE AND            "Caso p/ DT_VAL_DE < SY-DATUM < DT_VAL_ATE (modificação 11.01.2017)
          WA_ZIMP_APROVADOR-DT_VAL_DE  LT SY-DATUM AND
          WA_ZIMP_APROVADOR-DT_VAL_ATE GT SY-DATUM )
        OR
        ( WA_ZIMP_APROVADOR-VALOR_ATE  <= VVALOR_ATE AND            "Caso p/ DT_VAL_DE = SY-DATUM = DT_VAL_ATE (modificação 11.01.2017)
          WA_ZIMP_APROVADOR-DT_VAL_DE  EQ SY-DATUM AND
          WA_ZIMP_APROVADOR-DT_VAL_ATE EQ SY-DATUM AND
          WA_ZIMP_APROVADOR-HR_VAL_DE  LE SY-UZEIT AND
          WA_ZIMP_APROVADOR-HR_VAL_ATE GE SY-UZEIT )
        OR
        ( WA_ZIMP_APROVADOR-VALOR_ATE  <= VVALOR_ATE AND            "Caso p/ DT_VAL_DE = SY-DATUM < DT_VAL_ATE (modificação 11.01.2017)
          WA_ZIMP_APROVADOR-DT_VAL_DE  EQ SY-DATUM AND
          WA_ZIMP_APROVADOR-DT_VAL_ATE GT SY-DATUM AND
          WA_ZIMP_APROVADOR-HR_VAL_DE  LE SY-UZEIT )
        OR
        ( WA_ZIMP_APROVADOR-VALOR_ATE  <= VVALOR_ATE AND            "Caso p/ DT_VAL_DE < SY-DATUM = DT_VAL_ATE (modificação 11.01.2017)
          WA_ZIMP_APROVADOR-DT_VAL_DE  LT SY-DATUM AND
          WA_ZIMP_APROVADOR-DT_VAL_ATE EQ SY-DATUM AND
          WA_ZIMP_APROVADOR-HR_VAL_ATE GE SY-UZEIT ).

        WA_ESTRA-BUKRS        = WA_ZIMP_CAD_LOTE-BUKRS.
        WA_ESTRA-LOTE         = WA_ZIMP_CAD_LOTE-LOTE.
        WA_ESTRA-VALOR_DE     = WA_ZIMP_APROVADOR-VALOR_DE.
        WA_ESTRA-VALOR_ATE    = WA_ZIMP_APROVADOR-VALOR_ATE.
        "WA_ESTRA-APROVADOR    = WA_ZIMP_APROVADOR-APROVADOR.
        WA_ESTRA-NIVEL        = WA_ZIMP_APROVADOR-NIVEL.
        READ TABLE IT_ZIMP_LOTES_APROV INTO WA_ZIMP_LOTES_APROV WITH KEY LOTE      = WA_ZIMP_CAD_LOTE-LOTE
                                                                         NIVEL     = WA_ZIMP_APROVADOR-NIVEL
                                                                         "APROVADOR = WA_ZIMP_APROVADOR-APROVADOR
                                                                         BINARY SEARCH.
        IF SY-SUBRC = 0.
          WA_ESTRA-ESTADO       = ICON_CHECKED .
          WA_ESTRA-OPCOES       = ICON_SYSTEM_UNDO.
          VFLG_ICO = 'N'.
          WA_ESTRA-APROVADOR    = WA_ZIMP_LOTES_APROV-APROVADOR.            "modificação 03.01.2017
        ELSEIF VFLG_ICO = 'S'.
          WA_ESTRA-ESTADO       = ICON_LED_YELLOW .
          WA_ESTRA-OPCOES       = '' .
          WA_ESTRA-APROVADOR    = WA_ZIMP_APROVADOR-APROVADOR.              "modificação 03.01.2017
        ELSE.
          IF V_USUARIO NE WA_ZIMP_APROVADOR-APROVADOR.
            WA_ESTRA-ESTADO       =  ' '.
            WA_ESTRA-OPCOES       = ICON_LED_YELLOW  .
          ELSE.
            WA_ESTRA-ESTADO       = ICON_LED_YELLOW .
            WA_ESTRA-OPCOES       = ICON_SET_STATE  .
          ENDIF.
          WA_ESTRA-APROVADOR    = WA_ZIMP_APROVADOR-APROVADOR.              "modificação 03.01.2017
          VFLG_ICO = 'X'.
        ENDIF.

        IF VDEP_RESP IS INITIAL.
          IF VFLG_ICO = 'X'.
            VFLG_ICO = 'S'.
          ENDIF.
          APPEND WA_ESTRA TO IT_ESTRA.
        ELSEIF VDEP_RESP = WA_ZIMP_APROVADOR-DEP_RESP.
          IF VFLG_ICO = 'X'.
            VFLG_ICO = 'S'.
          ENDIF.
          APPEND WA_ESTRA TO IT_ESTRA.
        ENDIF.
      ENDIF.
    ENDLOOP.
    APPEND TG_LOTES.
    CLEAR TG_LOTES.
  ENDLOOP.

  IF TG_LOTES[] IS NOT INITIAL.
    SORT IT_ESTRA BY LOTE APROVADOR.
    LOOP AT TG_LOTES.
      CLEAR VFLAG.
      LOOP AT IT_ESTRA INTO WA_ESTRA WHERE LOTE      = TG_LOTES-LOTE
                                     AND   APROVADOR = V_USUARIO.
        VFLAG = 'X'.
        EXIT.
      ENDLOOP.
      IF V_LOTE IS NOT INITIAL.
        VFLAG = 'X'.
      ENDIF.
      LOOP AT IT_ESTRA INTO WA_ESTRA WHERE LOTE      = TG_LOTES-LOTE.
        MOVE-CORRESPONDING WA_ESTRA TO T_ESTRA.
        APPEND T_ESTRA.
      ENDLOOP.
      IF VFLAG = 'X'.
        LOOP AT IT_ZIMP_LANC_IMPOST INTO WA_ZIMP_LANC_IMPOST WHERE LOTE = TG_LOTES-LOTE.
          XTOTAL = 0.
          LOOP AT IT_ZIMP_LANC_IMP_CT INTO WA_ZIMP_LANC_IMP_CT WHERE DOC_IMPOSTO = WA_ZIMP_LANC_IMPOST-DOC_IMPOSTO
                                                                      AND  BUKRS = WA_ZIMP_LANC_IMPOST-BUKRS.
            READ TABLE IT_TBSL INTO WA_TBSL WITH KEY BSCHL = WA_ZIMP_LANC_IMP_CT-BSCHL BINARY SEARCH.
            IF WA_TBSL-SHKZG NE 'H'.
              ADD WA_ZIMP_LANC_IMP_CT-VALOR_IMP TO XTOTAL .
            ENDIF.
          ENDLOOP.
          WA_DOCS-LOTE              = TG_LOTES-LOTE.
          WA_DOCS-DOC_IMPOSTO       = WA_ZIMP_LANC_IMPOST-DOC_IMPOSTO.

          READ TABLE IT_ZIMP_CAD_IMPOSTO  INTO WA_ZIMP_CAD_IMPOSTO WITH KEY COD_IMPOSTO = WA_ZIMP_LANC_IMPOST-COD_IMPOSTO BINARY SEARCH.
          CONCATENATE WA_ZIMP_LANC_IMPOST-COD_IMPOSTO '-' WA_ZIMP_CAD_IMPOSTO-DESCR_IMPOSTO INTO WA_DOCS-DESCR_IMPOSTO.

          WA_DOCS-CONV_BANCO        = WA_ZIMP_LANC_IMPOST-CONV_BANCO.
          IF WA_ZIMP_LANC_IMPOST-HBKID = 'BBD'.
            CONCATENATE WA_ZIMP_LANC_IMPOST-HBKID '-Bradesco' INTO WA_DOCS-HBKID.
          ELSEIF WA_ZIMP_LANC_IMPOST-HBKID = 'BBRA'.
            CONCATENATE WA_ZIMP_LANC_IMPOST-HBKID '-Banco do Brasil' INTO WA_DOCS-HBKID.
          ELSE.
            WA_DOCS-HBKID =  WA_ZIMP_LANC_IMPOST-HBKID.
          ENDIF.
          WA_DOCS-VALOR             = XTOTAL.
          WA_DOCS-OBSERVACAO        = WA_ZIMP_LANC_IMPOST-OBSERVACAO.
          MOVE-CORRESPONDING WA_DOCS TO T_DOCS.
          APPEND T_DOCS.
        ENDLOOP.
        "
        MOVE-CORRESPONDING TG_LOTES TO T_LOTES.
        CONCATENATE TG_LOTES-DT_VENC+6(2) '.' TG_LOTES-DT_VENC+4(2) '.' TG_LOTES-DT_VENC+0(4) INTO T_LOTES-DT_VENC.
        APPEND T_LOTES.
      ENDIF.
    ENDLOOP.


    IF T_LOTES[] IS NOT INITIAL.
      MSG = 'Sucesso'.
    ELSE.
      MSG = 'Não há lotes à aprovar.'.
    ENDIF.

  ENDIF.

ENDFUNCTION.
