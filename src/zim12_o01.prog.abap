*&---------------------------------------------------------------------*
*&  Include           ZIM12_O01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS 'Z001'.
  SET TITLEBAR 'Z001'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  TS_100_ACTIVE_TAB_SET  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE TS_100_ACTIVE_TAB_SET OUTPUT.
  TS_100-ACTIVETAB = G_TS_100-PRESSED_TAB.
  CASE G_TS_100-PRESSED_TAB.
    WHEN C_TS_100-TAB1.
      G_TS_100-SUBSCREEN = '0101'.
    WHEN C_TS_100-TAB2.
      G_TS_100-SUBSCREEN = '0102'.
    WHEN OTHERS.
  ENDCASE.
  IF X_FIELD IS NOT INITIAL.
    SET CURSOR FIELD X_FIELD.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CRIA_OBJETOS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CRIA_OBJETOS OUTPUT.

  DATA: EVENT       TYPE CNTL_SIMPLE_EVENT,
        EVENTS      TYPE CNTL_SIMPLE_EVENTS,
        TL_FILTER   TYPE LVC_T_FILT,
        WL_FILTER   TYPE LVC_S_FILT,
        TL_FUNCTION TYPE UI_FUNCTIONS,
        WL_FUNCTION LIKE TL_FUNCTION  WITH HEADER LINE,

        LT_F4       TYPE LVC_T_F4     WITH HEADER LINE.

  REFRESH LT_F4.

  DATA: WAREF TYPE REF TO DATA.
  WG_ACAO = C_ADD.
  WA_STABLE-ROW = 'X'.
  WA_STABLE-COL = 'X'.

  PERFORM F_ATUALIZA.

  IF G_TS_100-SUBSCREEN = '0101'.
    IF G_CUSTOM_CONTAINER IS INITIAL.
      WA_LAYOUT-CWIDTH_OPT  = C_X.
      WA_LAYOUT-ZEBRA       = C_X.
      WA_LAYOUT-NO_ROWMARK  = SPACE.
      WA_LAYOUT-COL_OPT     = C_X.
      WA_STABLE-ROW         = C_X.
      WA_LAYOUT-SEL_MODE    = 'A'.
      WA_LAYOUT-BOX_FNAME   = 'MARK'.
      WA_LAYOUT-STYLEFNAME  = 'STYLE'.


      CREATE OBJECT G_CUSTOM_CONTAINER
        EXPORTING
          CONTAINER_NAME = G_CONTAINER.

      CREATE OBJECT SPLITTER
        EXPORTING
          PARENT  = G_CUSTOM_CONTAINER
          ROWS    = 2
          COLUMNS = 1.

      CALL METHOD SPLITTER->GET_CONTAINER
        EXPORTING
          ROW       = 1
          COLUMN    = 1
        RECEIVING
          CONTAINER = CONTAINER_1.

      CREATE OBJECT GRID1
        EXPORTING
          I_PARENT = CONTAINER_1.

      CREATE OBJECT OBG_TOOLBAR
        EXPORTING
          IO_ALV_GRID = GRID1.

*      * Register event handler
      SET HANDLER OBG_TOOLBAR->ON_TOOLBAR FOR GRID1.
      SET HANDLER OBG_TOOLBAR->HANDLE_USER_COMMAND FOR GRID1.

      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_CHECK.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
      APPEND WL_FUNCTION TO TL_FUNCTION.

      PERFORM F_MONTAR_LAYOUT USING C_X.

      CLEAR WA_LAYOUT-CWIDTH_OPT.
      GS_VARIANT_C-REPORT = SY-REPID. "Enable users save own LAYOUTs

      SELECT *
         FROM ZIM12_AVAL
         INTO CORRESPONDING FIELDS OF TABLE TG_AVAL.
      PERFORM F_ATUALIZA.
      CALL METHOD GRID1->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
          IS_VARIANT           = GS_VARIANT_C
          IT_TOOLBAR_EXCLUDING = TL_FUNCTION
          IS_LAYOUT            = WA_LAYOUT
        CHANGING
          IT_FIELDCATALOG      = T_FIELDCATALOG[]
          IT_OUTTAB            = TG_AVAL[].

      CALL METHOD GRID1->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

      CALL METHOD GRID1->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.

      LT_F4-FIELDNAME = 'GPO_CMP'.
      LT_F4-REGISTER = 'X'.
      LT_F4-GETBEFORE = 'X'.
      LT_F4-CHNGEAFTER ='X'.
      APPEND LT_F4.
      CALL METHOD GRID1->REGISTER_F4_FOR_FIELDS
        EXPORTING
          IT_F4 = LT_F4[].

      SET HANDLER:
        LCL_EVENT_HANDLER=>ON_DOUBLE_CLICK          FOR GRID1,
        LCL_EVENT_HANDLER=>ON_DATA_CHANGED_FINISHED FOR GRID1,
        LCL_EVENT_HANDLER=>ON_DATA_CHANGED          FOR GRID1,
        LCL_EVENT_HANDLER=>ON_ONF4                  FOR GRID1.


*    posiciona spliter na altura x
      CALL METHOD SPLITTER->SET_ROW_HEIGHT
        EXPORTING
          ID     = 1
          HEIGHT = 100.
    ELSE.
      PERFORM F_MONTAR_LAYOUT USING C_X.

      CALL METHOD GRID1->SET_FRONTEND_FIELDCATALOG
        EXPORTING
          IT_FIELDCATALOG = T_FIELDCATALOG[].

      CALL METHOD GRID1->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    ENDIF.
  ENDIF.
  " grid2
  IF G_TS_100-SUBSCREEN = '0102'.
    IF G_CUSTOM_CONTAINER2 IS INITIAL.
      WA_LAYOUT-CWIDTH_OPT  = C_X.
      WA_LAYOUT-ZEBRA       = C_X.
      WA_LAYOUT-NO_ROWMARK  = SPACE.
      WA_LAYOUT-COL_OPT     = C_X.
      WA_STABLE-ROW         = C_X.
      WA_LAYOUT-SEL_MODE    = 'A'.
      WA_LAYOUT-BOX_FNAME   = 'MARK'.


      CREATE OBJECT G_CUSTOM_CONTAINER2
        EXPORTING
          CONTAINER_NAME = G_CONTAINER2.

      CREATE OBJECT SPLITTER
        EXPORTING
          PARENT  = G_CUSTOM_CONTAINER2
          ROWS    = 2
          COLUMNS = 1.

      CALL METHOD SPLITTER->GET_CONTAINER
        EXPORTING
          ROW       = 1
          COLUMN    = 1
        RECEIVING
          CONTAINER = CONTAINER_12.

      CREATE OBJECT GRID2
        EXPORTING
          I_PARENT = CONTAINER_12.

      CREATE OBJECT OBG_TOOLBAR2
        EXPORTING
          IO_ALV_GRID = GRID2.

*      * Register event handler
      SET HANDLER OBG_TOOLBAR2->ON_TOOLBAR          FOR GRID2.
      SET HANDLER OBG_TOOLBAR2->HANDLE_USER_COMMAND FOR GRID2.

      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_CHECK.
      APPEND WL_FUNCTION TO TL_FUNCTION.
      WL_FUNCTION = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
      APPEND WL_FUNCTION TO TL_FUNCTION.

      PERFORM F_MONTAR_LAYOUT2 USING C_X.

      CLEAR WA_LAYOUT-CWIDTH_OPT.
      GS_VARIANT_C-REPORT = SY-REPID. "Enable users save own LAYOUTs

      SELECT *
      FROM ZIM12_APROV
      INTO CORRESPONDING FIELDS OF TABLE TG_APROV.
      PERFORM F_ATUALIZA.

      CALL METHOD GRID2->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
          IS_VARIANT           = GS_VARIANT_C
          IT_TOOLBAR_EXCLUDING = TL_FUNCTION
          IS_LAYOUT            = WA_LAYOUT
        CHANGING
          IT_FIELDCATALOG      = T_FIELDCATALOG[]
          IT_OUTTAB            = TG_APROV[].

      CALL METHOD GRID2->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

      CALL METHOD GRID2->REGISTER_EDIT_EVENT
        EXPORTING
          I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.

      LT_F4-FIELDNAME = 'FASE'.
      LT_F4-REGISTER = 'X'.
      LT_F4-GETBEFORE = 'X'.
      LT_F4-CHNGEAFTER ='X'.
      APPEND LT_F4.
      CALL METHOD GRID2->REGISTER_F4_FOR_FIELDS
        EXPORTING
          IT_F4 = LT_F4[].

      SET HANDLER:
        LCL_EVENT_HANDLER=>ON_DOUBLE_CLICK          FOR GRID2,
        LCL_EVENT_HANDLER=>ON_DATA_CHANGED_FINISHED FOR GRID2,
        LCL_EVENT_HANDLER=>ON_DATA_CHANGED          FOR GRID2,
        LCL_EVENT_HANDLER=>ON_ONF4                  FOR GRID2.


*    posiciona spliter na altura x
      CALL METHOD SPLITTER->SET_ROW_HEIGHT
        EXPORTING
          ID     = 1
          HEIGHT = 100.
    ELSE.
      PERFORM F_MONTAR_LAYOUT2 USING C_X.
      CALL METHOD GRID2->SET_FRONTEND_FIELDCATALOG
        EXPORTING
          IT_FIELDCATALOG = T_FIELDCATALOG[].

      CALL METHOD GRID2->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    ENDIF.
  ENDIF.

ENDMODULE.
