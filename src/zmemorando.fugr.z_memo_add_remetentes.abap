FUNCTION Z_MEMO_ADD_REMETENTES.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_VGBEL) TYPE  VGBEL
*"     REFERENCE(P_PAIS) TYPE  LAND1
*"     REFERENCE(P_NOMEACAO) TYPE  ZNOM_TRANSPORTE
*"  TABLES
*"      IT_MEMORANDO STRUCTURE  ZDOC_MEMORANDO OPTIONAL
*"      IT_NOTAS_MEMORANDO STRUCTURE  ZDOC_MEMO_NOTA OPTIONAL
*"  EXCEPTIONS
*"      DOCN_RE_NAO_ENCONTRADA
*"      DOCN_DDE_NAO_ENCONTRADA
*"      DOCN_DDE_NAO_ENCONTRADA2
*"      SEM_SALDO_COMPROVAR
*"----------------------------------------------------------------------

  DATA: WA_J_1BNFDOC2      TYPE J_1BNFDOC,
        WA_J_1BNFLIN2      TYPE J_1BNFLIN,
        WA_MEMORANDO       TYPE ZDOC_MEMORANDO,
        WA_NF_PROD         TYPE ZDOC_NF_PRODUTOR,
        IT_NF_PROD         TYPE TABLE OF ZDOC_NF_PRODUTOR INITIAL SIZE 0 WITH HEADER LINE,
        VG_MEMORANDO       TYPE Z_MEMORANDO,
        VG_MEMORANDO_AUX   TYPE Z_MEMORANDO,
        VG_QUEBRA          TYPE C LENGTH 1,
        WA_NOTAS_MEMORANDO TYPE ZDOC_MEMO_NOTA,
        IT_NOTAS_AUX       TYPE TABLE OF ZDOC_MEMO_NOTA WITH HEADER LINE,
        IT_NOTAS_FORMAT    TYPE TABLE OF ZDOC_MEMO_NOTAS WITH HEADER LINE,
        QTD_LINHAS         TYPE I,
        VG_TABIX           TYPE SY-TABIX,
        IT_ZDOC_EXP_REC_NF TYPE TABLE OF ZDOC_EXP_REC_NF WITH HEADER LINE.

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE IT_NF_PROD
    FROM ZDOC_NF_PRODUTOR
   WHERE VBELN EQ P_VGBEL.

  "Recusas de Exportação
  SELECT *
    INTO TABLE IT_ZDOC_EXP_REC_NF
    FROM ZDOC_EXP_REC_NF
   WHERE VBELN_RE_EXP EQ P_VGBEL.

  LOOP AT IT_NF_PROD.
    VG_TABIX = SY-TABIX.
    READ TABLE IT_ZDOC_EXP_REC_NF WITH KEY DOCNUM_PROD = IT_NF_PROD-DOCNUM_PROD
                                           ITMNUM_PROD = IT_NF_PROD-ITMNUM_PROD.
    IF SY-SUBRC IS INITIAL.
      IT_NF_PROD-MENGE = IT_NF_PROD-MENGE - IT_ZDOC_EXP_REC_NF-MENGE.
      MODIFY IT_NF_PROD INDEX VG_TABIX TRANSPORTING MENGE.
    ENDIF.
  ENDLOOP.

  DELETE IT_NF_PROD WHERE MENGE LE 0.

  IF IT_NF_PROD[] IS INITIAL.
    MESSAGE E084 RAISING SEM_SALDO_COMPROVAR.
  ENDIF.

  VG_MEMORANDO = 1.

  LOOP AT IT_NF_PROD INTO WA_NF_PROD.

    SELECT SINGLE * INTO WA_J_1BNFDOC2 FROM J_1BNFDOC WHERE DOCNUM EQ WA_NF_PROD-DOCNUM_PROD.
    SELECT SINGLE * INTO WA_J_1BNFLIN2 FROM J_1BNFLIN WHERE DOCNUM EQ WA_NF_PROD-DOCNUM_PROD
                                                        AND ITMNUM EQ WA_NF_PROD-ITMNUM_PROD.

    READ TABLE IT_MEMORANDO INTO WA_MEMORANDO WITH KEY REMETENTE = WA_J_1BNFDOC2-PARID.
    IF SY-SUBRC NE 0.
      PERFORM ADD_MEMORANDO_NF_PROF
       TABLES IT_MEMORANDO
        USING WA_NF_PROD
              WA_J_1BNFDOC2
              WA_J_1BNFLIN2
              VG_MEMORANDO
              WA_MEMORANDO
              P_PAIS
              P_NOMEACAO.
    ELSE.
      LOOP AT IT_MEMORANDO INTO WA_MEMORANDO WHERE REMETENTE = WA_J_1BNFDOC2-PARID.
        WA_MEMORANDO-QUANTIDADE_MEMO = WA_MEMORANDO-QUANTIDADE_MEMO + WA_NF_PROD-MENGE.
        MODIFY IT_MEMORANDO INDEX SY-TABIX FROM WA_MEMORANDO TRANSPORTING QUANTIDADE_MEMO.
      ENDLOOP.
    ENDIF.

    PERFORM ADD_NOTA_MEMORANDO TABLES IT_NOTAS_MEMORANDO USING WA_MEMORANDO WA_NF_PROD WA_J_1BNFDOC2 WA_J_1BNFLIN2.

  ENDLOOP.

  SORT IT_NOTAS_MEMORANDO BY NR_MEMORANDO MODEL DOCDAT NFENUM NFNUM.

  "Ajusta quantidades de notas por memorando p/ quebra de impressão
  LOOP AT IT_MEMORANDO INTO WA_MEMORANDO.
    CLEAR: VG_QUEBRA.
    LOOP AT IT_NOTAS_MEMORANDO INTO WA_NOTAS_MEMORANDO WHERE NR_MEMORANDO = WA_MEMORANDO-NR_MEMORANDO.
      VG_TABIX = SY-TABIX.

      IF VG_QUEBRA IS INITIAL.
        APPEND WA_NOTAS_MEMORANDO TO IT_NOTAS_AUX[].

        CLEAR: IT_NOTAS_FORMAT[].

        CALL FUNCTION 'Z_MEMO_AGRUPA_NOTAS_MEMORANDO'
          TABLES
            IT_NOTAS    = IT_NOTAS_FORMAT
            IT_NF_NOTAS = IT_NOTAS_AUX.

        DESCRIBE TABLE IT_NOTAS_FORMAT LINES QTD_LINHAS.

        IF QTD_LINHAS GT QTD_LINHAS_PERMITIDA.
          CLEAR: IT_NOTAS_AUX[].
          VG_MEMORANDO_AUX = VG_MEMORANDO.
          WA_MEMORANDO-NR_MEMORANDO       = VG_MEMORANDO_AUX.
          WA_NOTAS_MEMORANDO-NR_MEMORANDO = VG_MEMORANDO_AUX.
          APPEND WA_MEMORANDO TO IT_MEMORANDO.
          VG_QUEBRA    = C_X.
          VG_MEMORANDO = VG_MEMORANDO + 1.
          "Altera registro atual nr_memorando
          MODIFY IT_NOTAS_MEMORANDO INDEX VG_TABIX FROM WA_NOTAS_MEMORANDO TRANSPORTING NR_MEMORANDO.
        ENDIF.
      ELSE.
        WA_NOTAS_MEMORANDO-NR_MEMORANDO = VG_MEMORANDO_AUX.
        MODIFY IT_NOTAS_MEMORANDO INDEX VG_TABIX FROM WA_NOTAS_MEMORANDO TRANSPORTING NR_MEMORANDO.
      ENDIF.
    ENDLOOP.
  ENDLOOP.

  LOOP AT IT_MEMORANDO INTO WA_MEMORANDO.
    VG_TABIX = SY-TABIX.
    WA_MEMORANDO-QUANTIDADE_MEMO = 0.
    LOOP AT IT_NOTAS_MEMORANDO INTO WA_NOTAS_MEMORANDO WHERE NR_MEMORANDO = WA_MEMORANDO-NR_MEMORANDO.
      WA_MEMORANDO-QUANTIDADE_MEMO = WA_MEMORANDO-QUANTIDADE_MEMO + WA_NOTAS_MEMORANDO-MENGE.
    ENDLOOP.
    MODIFY IT_MEMORANDO INDEX VG_TABIX FROM WA_MEMORANDO TRANSPORTING QUANTIDADE_MEMO.
  ENDLOOP.

  DELETE IT_MEMORANDO WHERE QUANTIDADE_MEMO EQ 0.

ENDFUNCTION.
