class ZCL_AVERBACAO_SEGURO_URI definition
  public
  final
  create public .

public section.

  interfaces ZIF_CADASTRO .
  interfaces ZIF_PESQUISA .

  aliases CK_ALTEROU
    for ZIF_CADASTRO~CK_ALTEROU .
  aliases EXCLUIR_REGISTRO
    for ZIF_CADASTRO~EXCLUIR_REGISTRO .
  aliases GET_REGISTRO
    for ZIF_CADASTRO~GET_REGISTRO .
  aliases GRAVAR_REGISTRO
    for ZIF_CADASTRO~GRAVAR_REGISTRO .
  aliases LIMPAR_REGISTRO
    for ZIF_CADASTRO~LIMPAR_REGISTRO .
  aliases NOVO_REGISTRO
    for ZIF_CADASTRO~NOVO_REGISTRO .
  aliases SET_REGISTRO
    for ZIF_CADASTRO~SET_REGISTRO .
  aliases VALIDAR_EXCLUSAO
    for ZIF_CADASTRO~VALIDAR_EXCLUSAO .
  aliases VALIDAR_REGISTRO
    for ZIF_CADASTRO~VALIDAR_REGISTRO .
  aliases VALIDA_ATRIBUTO_ALTERAVEL
    for ZIF_CADASTRO~VALIDA_ATRIBUTO_ALTERAVEL .

  methods GET_URI
    returning
      value(R_ZLEST0144) type ZLEST0144 .
  methods SET_CD_SEGURADORA
    importing
      !I_CD_SEGURADORA type LIFNR .
  methods SET_URI
    importing
      !I_URI type ZURLWEBADM .
  methods SET_CONTENT_TYPE
    importing
      !I_CONTENT_TYPE type ZDE_WEB_SERV_CTX .
protected section.
private section.

  data URI type ZLEST0144 .
ENDCLASS.



CLASS ZCL_AVERBACAO_SEGURO_URI IMPLEMENTATION.


  METHOD GET_URI.
    R_ZLEST0144 = ME->URI.
  ENDMETHOD.


  METHOD SET_CD_SEGURADORA.

    IF ME->URI-CD_SEGURADORA NE I_CD_SEGURADORA.
      ME->CK_ALTEROU = ABAP_TRUE.
    ENDIF.

    ME->URI-CD_SEGURADORA = I_CD_SEGURADORA.

  ENDMETHOD.


  METHOD SET_CONTENT_TYPE.

    IF ME->URI-CONTENT_TYPE NE I_CONTENT_TYPE.
      ME->CK_ALTEROU = ABAP_TRUE.
    ENDIF.

    ME->URI-CONTENT_TYPE = I_CONTENT_TYPE.

  ENDMETHOD.


  METHOD SET_URI.

    IF ME->URI-URI NE I_URI.
      ME->CK_ALTEROU = ABAP_TRUE.
    ENDIF.

    ME->URI-URI = I_URI.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~EXCLUIR_REGISTRO.

    I_EXCLUIU = ABAP_FALSE.

    IF ME->VALIDAR_EXCLUSAO( ) EQ ABAP_TRUE.

      DELETE FROM ZLEST0144 WHERE CD_SEGURADORA EQ ME->URI-CD_SEGURADORA.
      COMMIT WORK.
      I_EXCLUIU = ABAP_TRUE.
      MESSAGE S002.
    ENDIF.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~GET_REGISTRO.

    MOVE-CORRESPONDING ME->URI TO E_REGISTRO.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~GRAVAR_REGISTRO.

    I_GRAVOU = ABAP_FALSE.

    IF ME->CK_ALTEROU EQ ABAP_TRUE.

      IF ME->VALIDAR_REGISTRO( ) EQ ABAP_TRUE.

        ME->URI-DT_CADASTRO = SY-DATUM.
        ME->URI-HR_CADASTRO = SY-UZEIT.
        ME->URI-US_CADASTRO = SY-UNAME.

        MODIFY ZLEST0144 FROM ME->URI.
        COMMIT WORK.
        ME->CK_ALTEROU = ABAP_FALSE.
        I_GRAVOU = ABAP_TRUE.
        MESSAGE S001.
      ENDIF.

    ENDIF.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~LIMPAR_REGISTRO.

    CLEAR: ME->URI.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~NOVO_REGISTRO.
    ME->LIMPAR_REGISTRO( ).
  ENDMETHOD.


  METHOD ZIF_CADASTRO~SET_REGISTRO.

    ME->LIMPAR_REGISTRO( ).

    SELECT SINGLE * INTO ME->URI FROM ZLEST0144 WHERE CD_SEGURADORA EQ I_ID_REGISTRO.

    ME->CK_ALTEROU = ABAP_FALSE.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~VALIDAR_EXCLUSAO.

    E_VALIDOU = ABAP_FALSE.


*    SELECT SINGLE * INTO @DATA(WA_ZLEST0144) FROM ZLEST0144 WHERE CD_TOKEN EQ @ME->TOKEN-CD_TOKEN.
*
*    IF SY-SUBRC IS INITIAL.
*      MESSAGE S010 DISPLAY LIKE 'E'.
*      EXIT.
*    ENDIF.

    E_VALIDOU = ABAP_TRUE.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~VALIDAR_REGISTRO.

    E_VALIDOU = ABAP_FALSE.

*011  Deve ser Informado e Empresa!
*012  Deve ser Informado o Local de NegÃ³cio!
*013  Deve ser Informado o Nr. do TOKEN!
*014  Deve ser Informado a Data de Validade!

    IF ME->URI-CD_SEGURADORA IS INITIAL.
      MESSAGE S011 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    IF ME->URI-URI IS INITIAL.
      MESSAGE S012 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    IF ME->URI-CONTENT_TYPE IS INITIAL.
      MESSAGE S013 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    E_VALIDOU = ABAP_TRUE.

  ENDMETHOD.


  METHOD ZIF_CADASTRO~VALIDA_ATRIBUTO_ALTERAVEL.

    R_PERMITIDO = ABAP_TRUE.

    IF I_CAMPO EQ 'DT_CADASTRO' OR
       I_CAMPO EQ 'HR_CADASTRO' OR
       I_CAMPO EQ 'US_CADASTRO'.
      R_PERMITIDO = ABAP_FALSE.
    ENDIF.

    IF I_CAMPO EQ 'CD_SEGURADORA' AND ME->URI-CD_SEGURADORA IS NOT INITIAL.
      R_PERMITIDO = ABAP_FALSE.
    ENDIF.

  ENDMETHOD.


  METHOD ZIF_PESQUISA~PESQUISAR.

    DATA: LC_FILTRO  TYPE ZDE_ZLEST0144_FILTRO,
          LC_RETORNO TYPE ZDE_ZLEST0144_T.

    MOVE I_FILTROS TO LC_FILTRO.

    CLEAR: E_REGISTROS, E_PESQUISOU.

    SELECT *
      INTO TABLE LC_RETORNO
      FROM ZLEST0144
     WHERE CD_SEGURADORA IN LC_FILTRO-CD_SEGURADORA
       AND DT_CADASTRO   IN LC_FILTRO-DT_CADASTRO
       AND US_CADASTRO   IN LC_FILTRO-US_CADASTRO.

    CHECK SY-SUBRC IS INITIAL.

    E_REGISTROS = LC_RETORNO.
    E_PESQUISOU = ABAP_TRUE.

  ENDMETHOD.
ENDCLASS.
