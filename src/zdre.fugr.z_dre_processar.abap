FUNCTION Z_DRE_PROCESSAR.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     VALUE(WA_DRE) TYPE  ZGL020_DRE_DADOS OPTIONAL
*"  EXCEPTIONS
*"      ERRO
*"      ESPERA
*"----------------------------------------------------------------------

  DATA: IT_DRE     TYPE TABLE OF ZGL020_DRE_DADOS WITH HEADER LINE,
        GARG       LIKE SEQG3-GARG,
        ENQ        LIKE STANDARD TABLE OF SEQG7 WITH HEADER LINE,
        WG_MSG(40),
        VG_JOB     TYPE I.

  CALL FUNCTION 'ZENQUEUE_PROC_DRE'
    EXCEPTIONS
      FOREIGN_LOCK   = 1
      SYSTEM_FAILURE = 2
      OTHERS         = 3.

  CASE SY-SUBRC.
    WHEN 1.
      GARG = SY-MANDT.

      CALL FUNCTION 'ENQUE_READ2'
        EXPORTING
          GNAME  = 'ZPROCESSA_DRE'
          GARG   = GARG
          GUNAME = '*'
        TABLES
          ENQ    = ENQ.

      READ TABLE ENQ WITH KEY GNAME = 'ZPROCESSA_DRE'.
      MESSAGE E007(ZDRE) WITH ENQ-GUNAME RAISING ERRO.

    WHEN 2 OR 3.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING ESPERA.
  ENDCASE.

  IF WA_DRE IS INITIAL.

    SELECT * INTO TABLE IT_DRE
      FROM ZGL020_DRE_DADOS
     WHERE LIBERADO EQ 'X'
       AND STATUS   EQ SPACE.

    IF SY-SUBRC IS INITIAL.
      DELETE IT_DRE WHERE STATUS NE SPACE.
      SORT IT_DRE BY DATUM_PROG UZEIT_PROG.
      READ TABLE IT_DRE INTO WA_DRE INDEX 1.
    ENDIF.

  ENDIF.

  IF NOT WA_DRE IS INITIAL.
    IF ( ( WA_DRE-DATUM_PROG EQ SY-DATUM ) AND ( WA_DRE-UZEIT_PROG LT SY-UZEIT ) ) OR
*       ( wa_dre-datum_prog gt sy-datum ).
       ( WA_DRE-DATUM_PROG LT SY-DATUM ).
      WA_DRE-DATUM_INIC  = SY-DATUM.
      WA_DRE-UZEIT_INIC  = SY-UZEIT.
      WA_DRE-STATUS      = '1'.
      WA_DRE-STATUS_PROC = 0.
      MODIFY ZGL020_DRE_DADOS FROM WA_DRE.
      "COMMIT WORK.

      IF WA_DRE-DRE_NEW NE 'X'.
        PERFORM LIMPAR_DRE    USING WA_DRE.
        PERFORM PROCESSAR_DRE USING WA_DRE.
      ELSE.

        IF WA_DRE-DRE_FOR_CALL EQ 'X'.

          VG_JOB = 99.

          WHILE VG_JOB IS NOT INITIAL.
            IF VG_JOB NE 99.
              WAIT UP TO 4 SECONDS.
            ENDIF.

            SELECT SINGLE COUNT(*) INTO VG_JOB
              FROM TBTCO
             WHERE JOBNAME EQ 'Z_DRE_PROC_DIARIO'
               AND STATUS  EQ 'R'.
          ENDWHILE.

          CALL FUNCTION 'Z_01_DRE_PROC_DIARIO'
            EXPORTING
              PDATA   = SY-DATUM
              P_BUKRS = WA_DRE-BUKRS.

          IF SY-SUBRC <> 0.
            MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ENDIF.

          WAIT UP TO 10 SECONDS.

        ENDIF.

        DATA: PPOPER TYPE POPER.
        MOVE WA_DRE-MONAT TO PPOPER.

        CALL FUNCTION 'Z_01_DRE_PROCESSAR'
          EXPORTING
            PBUKRS   = WA_DRE-BUKRS
            PGJAHR   = WA_DRE-GJAHR
            PPOPER   = PPOPER
            PVERSN   = WA_DRE-VERSN
            PUKURS   = WA_DRE-UKURS
          EXCEPTIONS
            ERRO_SQL = 1
            ERRO_DRE = 2
            OTHERS   = 3.

        IF SY-SUBRC <> 0.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING ERRO.
        ENDIF.

      ENDIF.

      WA_DRE-LIBERADO   = 'X'.
      WA_DRE-DATUM_TERM = SY-DATUM.
      WA_DRE-UZEIT_TERM = SY-UZEIT.
      WA_DRE-STATUS     = '3'.
      MODIFY ZGL020_DRE_DADOS FROM WA_DRE.
      "COMMIT WORK.

      CONCATENATE 'DRE foi processada com êxito; Empresa:' WA_DRE-BUKRS
                  'Estrutura:' WA_DRE-VERSN 'Mês:' WA_DRE-MONAT 'Ano:' WA_DRE-GJAHR INTO WG_MSG SEPARATED BY SPACE.

      MESSAGE S836(SD) WITH WG_MSG.

    ENDIF.
  ELSE.
    MESSAGE S836(SD) DISPLAY LIKE 'E' WITH 'DRE não foi processada!'.
  ENDIF.

  CALL FUNCTION 'ZDEQUEUE_PROC_DRE'.

ENDFUNCTION.
