*----------------------------------------------------------------------*
***INCLUDE MZTOPFERRO_1110.
*----------------------------------------------------------------------*

DATA: CK_FILTRAR TYPE CHAR01.

SELECTION-SCREEN BEGIN OF SCREEN 1111 AS SUBSCREEN.
SELECTION-SCREEN BEGIN OF BLOCK APODATA WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS: PFORNE FOR ZLEST0119-LIFNR.
PARAMETERS: DTVALI TYPE SY-DATUM DEFAULT SY-DATUM,
            PEXCLU AS CHECKBOX.
SELECTION-SCREEN END OF BLOCK APODATA.
SELECTION-SCREEN END OF SCREEN 1111.

*&---------------------------------------------------------------------*
*&      Module  STATUS_1110  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_1110 OUTPUT.
  SET PF-STATUS 'PF1110'.
  SET TITLEBAR 'TL1110'.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1110_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1110_EXIT INPUT.
  CLEAR: OK_CODE.
  LEAVE TO SCREEN 0.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1110  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1110 INPUT.
  CASE OK_CODE.
    WHEN OK_FILTRAR.
      CK_FILTRAR = ABAP_TRUE.
      CLEAR: OK_CODE.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  PESQUISAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PESQUISAR .

  CK_FILTRAR = ABAP_FALSE.

  CALL SCREEN 1110 STARTING AT 5 5.

  IF CK_FILTRAR EQ ABAP_TRUE.
    PERFORM PESQUISAR_FILTRAR.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  PESQUISAR_FILTRAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PESQUISAR_FILTRAR .

  DATA: IT_LFA1 TYPE TABLE OF LFA1 WITH HEADER LINE,
        IT_MAKT TYPE TABLE OF MAKT WITH HEADER LINE.

  DATA: IT_J_1BTXJURT TYPE TABLE OF J_1BTXJURT WITH HEADER LINE.

  RANGES: RINICIO  FOR ZLEST0119-DT_INICIO,
          RFINAL   FOR ZLEST0119-DT_FIM,
          RMODAL   FOR ZLEST0119-TP_MODAL.

  CLEAR: IT_ZLEST0119,
         IT_ZLEST0119_ALV,
         IT_ZLEST0119[],
         IT_ZLEST0119_ALV[],
         RINICIO,
         RFINAL.

  IF DTVALI IS NOT INITIAL OR DT_INICIAL_VALIDADE IS NOT INITIAL.
    IF DT_INICIAL_VALIDADE IS INITIAL.
      DT_INICIAL_VALIDADE = DTVALI.
    ENDIF.

    RINICIO-SIGN   = 'I'.
    RINICIO-OPTION = 'LE'.
    RINICIO-LOW    = DT_INICIAL_VALIDADE.
    RINICIO-HIGH   = DT_INICIAL_VALIDADE.
    APPEND RINICIO.

    RFINAL-SIGN   = 'I'.
    RFINAL-OPTION = 'GE'.
    RFINAL-LOW    = DT_INICIAL_VALIDADE.
    RFINAL-HIGH   = DT_INICIAL_VALIDADE.
    APPEND RFINAL.

    CLEAR: DT_INICIAL_VALIDADE.
  ENDIF.

  IF GB_TP_MODAL IS NOT INITIAL.
    RMODAL-SIGN   = 'I'.
    RMODAL-OPTION = 'EQ'.
    RMODAL-LOW    = GB_TP_MODAL.
    RMODAL-HIGH   = GB_TP_MODAL.
    APPEND RMODAL.
  ENDIF.

  SELECT * INTO TABLE IT_ZLEST0119
    FROM ZLEST0119
   WHERE LIFNR       IN PFORNE
     AND DT_INICIO   IN RINICIO
     AND DT_FIM      IN RFINAL
     AND CK_EXCLUIDO EQ PEXCLU
     AND TP_PRECO    EQ GB_TP_FRECO
     AND TP_MODAL    IN RMODAL.

  "Verificar tudo que estÃ¡ sem modal preenchido
  IF SY-SUBRC IS NOT INITIAL AND GB_TP_MODAL EQ '4'.
    SELECT * INTO TABLE IT_ZLEST0119
      FROM ZLEST0119
     WHERE TP_MODAL EQ SPACE.

    IF IT_ZLEST0119[] IS NOT INITIAL.
      UPDATE ZLEST0119
         SET TP_MODAL = '4'
       WHERE TP_MODAL EQ SPACE.
      COMMIT WORK.

      SELECT * INTO TABLE IT_ZLEST0119
        FROM ZLEST0119
       WHERE LIFNR       IN PFORNE
         AND DT_INICIO   IN RINICIO
         AND DT_FIM      IN RFINAL
         AND CK_EXCLUIDO EQ PEXCLU
         AND TP_PRECO    EQ GB_TP_FRECO
         AND TP_MODAL    IN RMODAL.
    ENDIF.
  ENDIF.

  CHECK SY-SUBRC IS INITIAL.

  SELECT * INTO TABLE IT_MAKT
    FROM MAKT
    FOR ALL ENTRIES IN IT_ZLEST0119
    WHERE MATNR EQ IT_ZLEST0119-MATNR.

  SORT IT_MAKT BY MATNR.

  SELECT * INTO TABLE IT_LFA1
    FROM LFA1
     FOR ALL ENTRIES IN IT_ZLEST0119
   WHERE LIFNR EQ IT_ZLEST0119-LIFNR.

  SORT IT_LFA1 BY LIFNR.

  SELECT * INTO TABLE IT_J_1BTXJURT
    FROM J_1BTXJURT
     FOR ALL ENTRIES IN IT_ZLEST0119
   WHERE SPRAS   EQ SY-LANGU
     AND COUNTRY EQ IT_ZLEST0119-PAIS
     AND TAXJURCODE EQ IT_ZLEST0119-DOMICILIO_ORIGEM.

  SELECT * APPENDING TABLE IT_J_1BTXJURT
    FROM J_1BTXJURT
     FOR ALL ENTRIES IN IT_ZLEST0119
   WHERE SPRAS   EQ SY-LANGU
     AND COUNTRY EQ IT_ZLEST0119-PAIS
     AND TAXJURCODE EQ IT_ZLEST0119-DOMICILIO_DESTIN.

  SORT IT_J_1BTXJURT BY COUNTRY TAXJURCODE.

  SELECT * INTO TABLE @DATA(IT_T001)
    FROM T001.

  SORT IT_T001 BY BUKRS.

  SELECT * INTO TABLE @DATA(IT_J_1BBRANCH)
    FROM J_1BBRANCH.

  SORT IT_J_1BBRANCH BY BRANCH.

  LOOP AT IT_ZLEST0119.
    CLEAR: IT_ZLEST0119_ALV.
    MOVE-CORRESPONDING IT_ZLEST0119 TO IT_ZLEST0119_ALV.

    READ TABLE IT_LFA1 WITH KEY LIFNR = IT_ZLEST0119-LIFNR BINARY SEARCH.
    IF SY-SUBRC IS INITIAL.
      IT_ZLEST0119_ALV-NAME1 = IT_LFA1-NAME1.
    ENDIF.

    READ TABLE IT_J_1BTXJURT WITH KEY COUNTRY = IT_ZLEST0119-PAIS TAXJURCODE = IT_ZLEST0119-DOMICILIO_ORIGEM BINARY SEARCH.
    IF SY-SUBRC IS INITIAL.
      IT_ZLEST0119_ALV-TEXT_ORIGEM = IT_J_1BTXJURT-TEXT.
    ENDIF.

    READ TABLE IT_J_1BTXJURT WITH KEY COUNTRY = IT_ZLEST0119-PAIS TAXJURCODE = IT_ZLEST0119-DOMICILIO_DESTIN BINARY SEARCH.
    IF SY-SUBRC IS INITIAL.
      IT_ZLEST0119_ALV-TEXT_DESTINO = IT_J_1BTXJURT-TEXT.
    ENDIF.

    READ TABLE IT_MAKT WITH KEY MATNR = IT_ZLEST0119-MATNR SPRAS = SY-LANGU.
    IF SY-SUBRC IS INITIAL.
      IT_ZLEST0119_ALV-MAKTX = IT_MAKT-MAKTX.
    ENDIF.

    IF GB_TP_FRECO IS INITIAL.
      CALL METHOD ZCL_CTE_DIST_G=>BUSCA_VOLUME_UTILIZADO_FERRO
        EXPORTING
          I_CD_SEQ_LANC   = IT_ZLEST0119_ALV-CD_SEQ_LANC
        IMPORTING
          E_QTD_UTILIZADA = IT_ZLEST0119_ALV-QTD_UTILIZADA.
    ELSE.
      IT_ZLEST0119_ALV-QTD_UTILIZADA = 0.
    ENDIF.

    IT_ZLEST0119_ALV-QTD_TOTAL = 0.
    ADD IT_ZLEST0119_ALV-QTD_NEGOCIADO  TO IT_ZLEST0119_ALV-QTD_TOTAL.
    ADD IT_ZLEST0119_ALV-QTD_TOLERANCIA TO IT_ZLEST0119_ALV-QTD_TOTAL.

    IF IT_ZLEST0119-BUKRS IS NOT INITIAL.
      READ TABLE IT_T001 WITH KEY BUKRS = IT_ZLEST0119-BUKRS INTO DATA(WA_T001).
      IF SY-SUBRC IS INITIAL.
        IT_ZLEST0119_ALV-BUTXT = WA_T001-BUTXT.
      ENDIF.
    ENDIF.

    IF IT_ZLEST0119-BRANCH IS NOT INITIAL.
      READ TABLE IT_J_1BBRANCH WITH KEY BRANCH = IT_ZLEST0119-BRANCH INTO DATA(WA_J_1BBRANCH).
      IF SY-SUBRC IS INITIAL.
        IT_ZLEST0119_ALV-NAME = WA_J_1BBRANCH-NAME.
      ENDIF.
    ENDIF.

    APPEND IT_ZLEST0119_ALV.
  ENDLOOP.

ENDFORM.
