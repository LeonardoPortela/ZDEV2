FUNCTION z_01_dre_nao_utilizar.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  EXCEPTIONS
*"      ERRO_SQL
*"      ERRO_DRE
*"----------------------------------------------------------------------

  DATA: exc_ref    TYPE REF TO cx_sy_native_sql_error,
        error_text TYPE string.

  MESSAGE 'Tem certeza que quer fazer este update?' TYPE 'W'.

  MESSAGE 'Este Update irá alterar a estrutura da DRE versão DRE1' TYPE 'W'.

  MESSAGE 'Última chance para cancelar' TYPE 'W'.

  TRY.
      EXEC SQL.
* ---> S4 Migration - 23/07/2023 - MG-5609 - CA
        UPDATE SAPHANADB.ZGL015_DRE_EST06 F
*        UPDATE SAPSR3.ZGL015_DRE_EST06 F
* <--- S4 Migration - 23/07/2023 - MG-5609 - CA
           SET F.NIVEL = CASE WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) <> '' THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE '' END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
                              WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) <> '' THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE '' END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
                              ELSE F.NIVEL
                         END
         WHERE VERSN = 'DRE1'
           AND SUBSTR(F.NIVEL,1,2) IN ('02','03')
      ENDEXEC.
    CATCH cx_sy_native_sql_error INTO exc_ref.
      error_text = exc_ref->get_text( ).
      MESSAGE error_text TYPE 'E' RAISING erro_sql.
  ENDTRY.

*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL015_DRE_EST02 F
*           SET F.NIVEL     = CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                                  WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                                  WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                                  ELSE F.NIVEL
*                             END,
*               F.NIVEL_ANT = CASE WHEN SUBSTR(F.NIVEL_ANT,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL_ANT) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL_ANT) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL_ANT,4,LENGTH(F.NIVEL_ANT)-3 ) ELSE ' ' END
*                                  WHEN SUBSTR(F.NIVEL_ANT,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL_ANT) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL_ANT) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL_ANT,4,LENGTH(F.NIVEL_ANT)-3 ) ELSE ' ' END
*                                  WHEN SUBSTR(F.NIVEL_ANT,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL_ANT) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL_ANT) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL_ANT,4,LENGTH(F.NIVEL_ANT)-3 ) ELSE ' ' END
*                                  ELSE F.NIVEL_ANT
*                             END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL015_DRE_EST03 F
*           SET F.NIVEL = CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              ELSE F.NIVEL
*                         END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL015_DRE_EST04 F
*           SET F.NIVEL = CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              ELSE F.NIVEL
*                         END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL015_DRE_EST05 F
*           SET F.NIVEL = CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              ELSE F.NIVEL
*                         END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL015_DRE_EST06 F
*           SET F.NIVEL = CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '03'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              ELSE F.NIVEL
*                         END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL015_DRE_EST07 F
*           SET F.NIVEL      = CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                                   WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                                   WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '03'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                                   ELSE F.NIVEL
*                              END,
*               F.NIVEL_AGPD = CASE WHEN SUBSTR(F.NIVEL_AGPD,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL_AGPD) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL_AGPD) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL_AGPD,4,LENGTH(F.NIVEL_AGPD)-3 ) ELSE ' ' END
*                                   WHEN SUBSTR(F.NIVEL_AGPD,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL_AGPD) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL_AGPD) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL_AGPD,4,LENGTH(F.NIVEL_AGPD)-3 ) ELSE ' ' END
*                                   WHEN SUBSTR(F.NIVEL_AGPD,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL_AGPD) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL_AGPD) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL_AGPD,4,LENGTH(F.NIVEL_AGPD)-3 ) ELSE ' ' END
*                                   ELSE F.NIVEL_AGPD
*               END
*         WHERE VERSN = 'DRE1'
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL015_DRE_EST03 F
*           SET F.NIVEL = CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                              ELSE F.NIVEL
*                         END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL021_DRE_DADOS F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL022_DRE_DADOS F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL023_DRE_DADOS F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL024_DRE_DADOS F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL025_DRE_ACM F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL026_DRE_ACM F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL027_DRE_ACM F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.
*
*  TRY.
*      EXEC SQL.
*        UPDATE SAPSR3.ZGL028_DRE_ACM F
*           SET F.NIVEL =
*               CASE WHEN SUBSTR(F.NIVEL,1,2) = '01' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '00'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '02' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '01'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    WHEN SUBSTR(F.NIVEL,1,2) = '03' THEN CASE WHEN TRIM(F.NIVEL) IS NOT NULL THEN '02'||CASE WHEN LENGTH(F.NIVEL) > 2 THEN '.' ELSE NULL END ||SUBSTR(F.NIVEL,4,LENGTH(F.NIVEL)-3 ) ELSE ' ' END
*                    ELSE F.NIVEL
*               END
*         WHERE VERSN = 'DRE1'
*           AND SUBSTR(F.NIVEL,1,2) IN ('01','02','03')
*      ENDEXEC.
*    CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
*      ERROR_TEXT = EXC_REF->GET_TEXT( ).
*      MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
*  ENDTRY.

  MESSAGE 'Executado' TYPE 'I' DISPLAY LIKE 'S'.

ENDFUNCTION.
