*----------------------------------------------------------------------*
***INCLUDE MZBALANCO_2201 .
*----------------------------------------------------------------------*

TYPE-POOLS: TRUXS.

DATA: IT_DRE_VBUND1 TYPE TABLE OF TY_ZGL029_DRE_DADOS WITH HEADER LINE, "Dados processados sociedade parceira para DRE - MÊS
      LS_X001       TYPE X001. "Moedas

*----------------------------------------------------------------------*
*   INCLUDE BCALV_TOOLBAR_EVENT_RECEIVER                               *
*----------------------------------------------------------------------*
CLASS LCL_TOOLBAR_EVENT3 DEFINITION.
  PUBLIC SECTION.
    METHODS: ON_FUNCTION_SELECTED
                  FOR EVENT FUNCTION_SELECTED OF CL_GUI_TOOLBAR
      IMPORTING FCODE.
ENDCLASS.                    "lcl_toolbar_event DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_toolbar_event IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS LCL_TOOLBAR_EVENT3 IMPLEMENTATION.
  METHOD ON_FUNCTION_SELECTED.
    CASE FCODE.
      WHEN 'EXCEL'.
        DATA: P_CAMINHO           TYPE STRING,
              CSV_CONVERTED_TABLE TYPE TRUXS_T_TEXT_DATA,
              LD_FILENAME         TYPE STRING,
              LD_PATH             TYPE STRING,
              LD_FULLPATH         TYPE STRING,
              IT_SAIDA            TYPE STANDARD TABLE OF TY_ZGLT047_TREE_B_S,
              WA_SAIDA            TYPE TY_ZGLT047_TREE_B_S,
              WA_ZGLT047_TREE_B   TYPE TY_ZGLT047_TREE_B,
              LC_TEXTO_AUX(100),
              LC_TEXTO(4096).

        CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG
          EXPORTING
            DEFAULT_EXTENSION    = 'csv'
            DEFAULT_FILE_NAME    = '*'
          CHANGING
            FILENAME             = LD_FILENAME
            PATH                 = LD_PATH
            FULLPATH             = LD_FULLPATH
          EXCEPTIONS
            CNTL_ERROR           = 1
            ERROR_NO_GUI         = 2
            NOT_SUPPORTED_BY_GUI = 3
            OTHERS               = 4.

        IF SY-SUBRC IS NOT INITIAL.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.

        IF LD_FULLPATH IS NOT INITIAL.

          CLEAR: IT_SAIDA.

          LOOP AT IT_ZGLT047_TREE_B INTO WA_ZGLT047_TREE_B.
            MOVE-CORRESPONDING WA_ZGLT047_TREE_B TO WA_SAIDA.

            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_01 CHANGING WA_SAIDA-VALOR_01.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_02 CHANGING WA_SAIDA-VALOR_02.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_03 CHANGING WA_SAIDA-VALOR_03.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_04 CHANGING WA_SAIDA-VALOR_04.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_05 CHANGING WA_SAIDA-VALOR_05.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_06 CHANGING WA_SAIDA-VALOR_06.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_07 CHANGING WA_SAIDA-VALOR_07.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_08 CHANGING WA_SAIDA-VALOR_08.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_09 CHANGING WA_SAIDA-VALOR_09.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_10 CHANGING WA_SAIDA-VALOR_10.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_11 CHANGING WA_SAIDA-VALOR_11.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_12 CHANGING WA_SAIDA-VALOR_12.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-VALOR_AC CHANGING WA_SAIDA-VALOR_AC.

            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_01 CHANGING WA_SAIDA-QUANT_01.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_02 CHANGING WA_SAIDA-QUANT_02.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_03 CHANGING WA_SAIDA-QUANT_03.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_04 CHANGING WA_SAIDA-QUANT_04.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_05 CHANGING WA_SAIDA-QUANT_05.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_06 CHANGING WA_SAIDA-QUANT_06.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_07 CHANGING WA_SAIDA-QUANT_07.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_08 CHANGING WA_SAIDA-QUANT_08.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_09 CHANGING WA_SAIDA-QUANT_09.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_10 CHANGING WA_SAIDA-QUANT_10.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_11 CHANGING WA_SAIDA-QUANT_11.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_12 CHANGING WA_SAIDA-QUANT_12.
            PERFORM AJUSTA_VALOR_SAIDA USING WA_ZGLT047_TREE_B-QUANT_AC CHANGING WA_SAIDA-QUANT_AC.

            APPEND WA_SAIDA TO IT_SAIDA.
          ENDLOOP.

          DATA: IT_MONTH_NAMES TYPE TABLE OF T247,
                WA_MONTH_NAMES TYPE T247.

          CALL FUNCTION 'SAP_CONVERT_TO_CSV_FORMAT'
            EXPORTING
              I_FIELD_SEPERATOR    = ';'
            TABLES
              I_TAB_SAP_DATA       = IT_SAIDA[]
            CHANGING
              I_TAB_CONVERTED_DATA = CSV_CONVERTED_TABLE
            EXCEPTIONS
              CONVERSION_FAILED    = 1
              OTHERS               = 2.

          CALL FUNCTION 'MONTH_NAMES_GET'
            EXPORTING
              LANGUAGE              = SY-LANGU
            TABLES
              MONTH_NAMES           = IT_MONTH_NAMES
            EXCEPTIONS
              MONTH_NAMES_NOT_FOUND = 1
              OTHERS                = 2.

          IF SY-SUBRC <> 0.
            MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ENDIF.

          CONCATENATE 'Estrutura'   'Nível' 'Descrição do Nível'
                      'Sequência'   'Nível Pai' 'Nível Somatório'
                      'Sociedade'   'Nome Sociedade Parceira'
                 INTO LC_TEXTO SEPARATED BY ';'.

          LOOP AT IT_MONTH_NAMES INTO WA_MONTH_NAMES.
            CONCATENATE WA_MONTH_NAMES-LTX '(Valor)' INTO LC_TEXTO_AUX SEPARATED BY SPACE.
            CONCATENATE LC_TEXTO LC_TEXTO_AUX INTO LC_TEXTO SEPARATED BY ';'.
          ENDLOOP.
          CONCATENATE LC_TEXTO 'Saldo (Valor)' INTO LC_TEXTO SEPARATED BY ';'.

          LOOP AT IT_MONTH_NAMES INTO WA_MONTH_NAMES.
            CONCATENATE WA_MONTH_NAMES-LTX '(Qtd)' INTO LC_TEXTO_AUX SEPARATED BY SPACE.
            CONCATENATE LC_TEXTO LC_TEXTO_AUX INTO LC_TEXTO SEPARATED BY ';'.
          ENDLOOP.
          CONCATENATE LC_TEXTO 'Saldo (Qtd)' INTO LC_TEXTO SEPARATED BY ';'.

          INSERT LC_TEXTO INTO CSV_CONVERTED_TABLE INDEX 1.

          P_CAMINHO  = LD_FULLPATH.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME                = P_CAMINHO
            TABLES
              DATA_TAB                = CSV_CONVERTED_TABLE
            EXCEPTIONS
              FILE_WRITE_ERROR        = 1
              NO_BATCH                = 2
              GUI_REFUSE_FILETRANSFER = 3
              INVALID_TYPE            = 4
              NO_AUTHORITY            = 5
              UNKNOWN_ERROR           = 6
              HEADER_NOT_ALLOWED      = 7
              SEPARATOR_NOT_ALLOWED   = 8
              FILESIZE_NOT_ALLOWED    = 9
              HEADER_TOO_LONG         = 10
              DP_ERROR_CREATE         = 11
              DP_ERROR_SEND           = 12
              DP_ERROR_WRITE          = 13
              UNKNOWN_DP_ERROR        = 14
              ACCESS_DENIED           = 15
              DP_OUT_OF_MEMORY        = 16
              DISK_FULL               = 17
              DP_TIMEOUT              = 18
              FILE_NOT_FOUND          = 19
              DATAPROVIDER_EXCEPTION  = 20
              CONTROL_FLUSH_ERROR     = 21
              OTHERS                  = 22.
          IF SY-SUBRC <> 0.
            MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ELSE.
            CALL METHOD CL_GUI_FRONTEND_SERVICES=>EXECUTE
              EXPORTING
                DOCUMENT               = P_CAMINHO
              EXCEPTIONS
                CNTL_ERROR             = 1
                ERROR_NO_GUI           = 2
                BAD_PARAMETER          = 3
                FILE_NOT_FOUND         = 4
                PATH_NOT_FOUND         = 5
                FILE_EXTENSION_UNKNOWN = 6
                ERROR_EXECUTE_FAILED   = 7
                SYNCHRONOUS_FAILED     = 8
                NOT_SUPPORTED_BY_GUI   = 9
                OTHERS                 = 10.
            IF SY-SUBRC <> 0.
              MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
            ENDIF.

          ENDIF.
        ENDIF.
    ENDCASE.
  ENDMETHOD.                    "on_function_selected
ENDCLASS.                    "lcl_toolbar_event IMPLEMENTATION

DATA: TOOLBAR_EVENT_RECEIVER3 TYPE REF TO LCL_TOOLBAR_EVENT3.

DATA: G_CUSTOM_CONTAINER3 TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      DG_DYNDOC_ID3       TYPE REF TO CL_DD_DOCUMENT,
      DG_SPLITTER3        TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
      DG_SPLITTER3_2      TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
      DG_PARENT_HTML3     TYPE REF TO CL_GUI_CONTAINER,
      DG_HTML_CNTRL3      TYPE REF TO CL_GUI_HTML_VIEWER,
      DG_PARENT_HTML3_1   TYPE REF TO CL_GUI_CONTAINER,
      DG_PARENT_HTML3_2   TYPE REF TO CL_GUI_CONTAINER,
      PICTURE3            TYPE REF TO CL_GUI_PICTURE,
      DG_PARENT_TREE3     TYPE REF TO CL_GUI_CONTAINER,
      G_TREE4             TYPE REF TO CL_GUI_ALV_TREE,
      MR_TOOLBAR3         TYPE REF TO CL_GUI_TOOLBAR..

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_2201  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_2201 INPUT.

  CASE OK_CODE_2000.
    WHEN OK_BACK.
      "**********************************************************************************
      """""""" Limpar Tela Voltar """""""""""""""""""""""""""""""""""""""""""""""""""""""
      PERFORM LIMPAR_TELA_2201_TREE.
      "**********************************************************************************
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_2201  INPUT

*&---------------------------------------------------------------------*
*&      Module  STATUS_2201  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_2201 OUTPUT.

  IF G_CUSTOM_CONTAINER3 IS INITIAL.
    PERFORM CREATE_CONTAINER_ALV_TREE_3.
  ENDIF.

  IF G_TREE4 IS INITIAL.
    PERFORM GERAR_RELATORIO_TREE_VIEW_4.
    PERFORM CREATE_TREE_ALV_TREE4.
  ENDIF.

ENDMODULE.                 " STATUS_2201  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  CREATE_CONTAINER_ALV_TREE_3
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CREATE_CONTAINER_ALV_TREE_3 .

  DATA: URL(255) TYPE C.

* create a container for the tree control
  CREATE OBJECT G_CUSTOM_CONTAINER3
    EXPORTING
      CONTAINER_NAME              = 'TREE_CONTAINER'
    EXCEPTIONS
      CNTL_ERROR                  = 1
      CNTL_SYSTEM_ERROR           = 2
      CREATE_ERROR                = 3
      LIFETIME_ERROR              = 4
      LIFETIME_DYNPRO_DYNPRO_LINK = 5.

  IF SY-SUBRC <> 0.
    MESSAGE A000(TREE_CONTROL_MSG).
  ENDIF.

  CREATE OBJECT DG_DYNDOC_ID3
    EXPORTING
      STYLE = 'ALV_GRID'.

  CREATE OBJECT DG_SPLITTER3
    EXPORTING
      PARENT  = G_CUSTOM_CONTAINER3
      ROWS    = 2
      COLUMNS = 1.

  CALL METHOD DG_SPLITTER3->GET_CONTAINER
    EXPORTING
      ROW       = 1
      COLUMN    = 1
    RECEIVING
      CONTAINER = DG_PARENT_HTML3.

  CREATE OBJECT DG_SPLITTER3_2
    EXPORTING
      PARENT  = DG_PARENT_HTML3
      ROWS    = 1
      COLUMNS = 2.

  CALL METHOD DG_SPLITTER3_2->GET_CONTAINER
    EXPORTING
      ROW       = 1
      COLUMN    = 1
    RECEIVING
      CONTAINER = DG_PARENT_HTML3_1.

  CALL METHOD DG_SPLITTER3_2->SET_COLUMN_WIDTH
    EXPORTING
      ID    = 1
      WIDTH = 40.

  CALL METHOD DG_SPLITTER3_2->GET_CONTAINER
    EXPORTING
      ROW       = 1
      COLUMN    = 2
    RECEIVING
      CONTAINER = DG_PARENT_HTML3_2.

  CREATE OBJECT PICTURE3
    EXPORTING
      PARENT = DG_PARENT_HTML3_2.

  PERFORM F_PEGA_IMAGEM USING 'LOGO_NOVO' CHANGING URL.

  CALL METHOD PICTURE3->LOAD_PICTURE_FROM_URL
    EXPORTING
      URL = URL.

  CALL METHOD PICTURE3->SET_DISPLAY_MODE
    EXPORTING
      DISPLAY_MODE = PICTURE3->DISPLAY_MODE_FIT_CENTER.

  CALL METHOD DG_SPLITTER3->GET_CONTAINER
    EXPORTING
      ROW       = 2
      COLUMN    = 1
    RECEIVING
      CONTAINER = DG_PARENT_TREE3.

  CALL METHOD DG_SPLITTER3->SET_ROW_HEIGHT
    EXPORTING
      ID     = 1
      HEIGHT = 16.

ENDFORM.                    " CREATE_CONTAINER_ALV_TREE_3

*&---------------------------------------------------------------------*
*&      Form  LIMPAR_TELA_2201_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM LIMPAR_TELA_2201_TREE .

  IF G_TREE4 IS NOT INITIAL.
    CALL METHOD G_TREE4->FREE.
  ENDIF.

  IF PICTURE3 IS NOT INITIAL.
    CALL METHOD PICTURE3->FREE.
  ENDIF.

  IF DG_PARENT_HTML3_2 IS NOT INITIAL.
    CALL METHOD DG_PARENT_HTML3_2->FREE.
  ENDIF.

  IF DG_HTML_CNTRL3 IS NOT INITIAL.
    CALL METHOD DG_HTML_CNTRL3->FREE.
  ENDIF.

  IF DG_PARENT_HTML3_1 IS NOT INITIAL.
    CALL METHOD DG_PARENT_HTML3_1->FREE.
  ENDIF.

  IF DG_SPLITTER3_2 IS NOT INITIAL.
    CALL METHOD DG_SPLITTER3_2->FREE.
  ENDIF.

  IF DG_PARENT_HTML3 IS NOT INITIAL.
    CALL METHOD DG_PARENT_HTML3->FREE.
  ENDIF.

  IF DG_PARENT_TREE3 IS NOT INITIAL.
    CALL METHOD DG_PARENT_TREE3->FREE.
  ENDIF.

  IF DG_SPLITTER3 IS NOT INITIAL.
    CALL METHOD DG_SPLITTER3->FREE.
  ENDIF.

  IF G_CUSTOM_CONTAINER3 IS NOT INITIAL.
    CALL METHOD G_CUSTOM_CONTAINER3->FREE.
  ENDIF.

  CLEAR: G_TREE4,
         G_CUSTOM_CONTAINER3,
         DG_DYNDOC_ID3,
         DG_PARENT_HTML3_2,
         DG_PARENT_HTML3_1,
         DG_PARENT_HTML3,
         DG_SPLITTER3_2,
         DG_SPLITTER3,
         DG_PARENT_TREE3,
         PICTURE3,
         DG_HTML_CNTRL3.

ENDFORM.                    " LIMPAR_TELA_2201_TREE

*&---------------------------------------------------------------------*
*&      Form  CREATE_TREE_ALV_TREE4
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CREATE_TREE_ALV_TREE4 .

  DATA: L_HIERARCHY_HEADER TYPE TREEV_HHDR,
        LT_LIST_COMMENTARY TYPE SLIS_T_LISTHEADER,
        L_LOGO             TYPE SDYDO_VALUE,
        LS_LINE            TYPE SLIS_LISTHEADER,
        LS_VARIANT         TYPE DISVARIANT,
        GT_FIELDCATALOG    TYPE LVC_T_FCAT,
        VG_MES(2),
        VG_ANO(4),
        VG_ANOMES(7),
        LT_EVENTS          TYPE CNTL_SIMPLE_EVENTS,
        L_EVENT            TYPE CNTL_SIMPLE_EVENT.

  CREATE OBJECT G_TREE4
    EXPORTING
      PARENT                      = DG_PARENT_TREE3
      NODE_SELECTION_MODE         = CL_GUI_COLUMN_TREE=>NODE_SEL_MODE_MULTIPLE
      ITEM_SELECTION              = SPACE
      NO_HTML_HEADER              = 'X'
      NO_TOOLBAR                  = ''
    EXCEPTIONS
      CNTL_ERROR                  = 1
      CNTL_SYSTEM_ERROR           = 2
      CREATE_ERROR                = 3
      LIFETIME_ERROR              = 4
      ILLEGAL_NODE_SELECTION_MODE = 5
      FAILED                      = 6
      ILLEGAL_COLUMN_NAME         = 7.

  IF SY-SUBRC IS NOT INITIAL.
    MESSAGE X208(00) WITH 'ERROR'.                          "#EC NOTEXT
  ENDIF.

  CLEAR L_EVENT.
  L_EVENT-EVENTID = CL_GUI_COLUMN_TREE=>EVENTID_NODE_DOUBLE_CLICK.
  L_EVENT-APPL_EVENT = 'X'.
  APPEND L_EVENT TO LT_EVENTS.

  CALL METHOD G_TREE4->SET_REGISTERED_EVENTS
    EXPORTING
      EVENTS                    = LT_EVENTS
    EXCEPTIONS
      CNTL_ERROR                = 1
      CNTL_SYSTEM_ERROR         = 2
      ILLEGAL_EVENT_COMBINATION = 3.

  "CREATE OBJECT ALV_TREE_VIEW_EVENT.
  "SET HANDLER ALV_TREE_VIEW_EVENT->ON_NODE_DOUBLE_CLICK FOR G_TREE4.

  L_HIERARCHY_HEADER-T_IMAGE = 'LOGO_NOVO'.
  L_HIERARCHY_HEADER-HEADING = 'Hierarquia (Cabeçalho)'.
  L_HIERARCHY_HEADER-WIDTH   = 30.

  CLEAR LS_LINE.
  LS_LINE-TYP  = 'H'.
  LS_LINE-INFO = 'Demonstrativo de Receita Operacional'.
  APPEND LS_LINE TO LT_LIST_COMMENTARY.

  "Empresa p/ Plano de Contas do Razão
  SELECT * INTO TABLE IT_T001
    FROM T001
   WHERE BUKRS EQ R_BUKRS.

  READ TABLE IT_T001 INDEX 1.
  CLEAR LS_LINE.
  LS_LINE-KEY  = 'Empresa'.
  LS_LINE-TYP  = 'S'.
  LS_LINE-INFO = IT_T001-BUTXT.
  APPEND LS_LINE TO LT_LIST_COMMENTARY.

  LS_LINE-KEY  = 'Período'.
  MOVE: R_MONAT TO VG_MES,
        R_GJAHR TO VG_ANO.
  CONCATENATE VG_MES '/' VG_ANO INTO LS_LINE-INFO.

  MOVE: R_MONAT2 TO VG_MES,
        R_GJAHR  TO VG_ANO.
  CONCATENATE VG_MES '/' VG_ANO INTO VG_ANOMES.
  CONCATENATE LS_LINE-INFO 'a' VG_ANOMES  INTO LS_LINE-INFO SEPARATED BY SPACE.


  APPEND LS_LINE TO LT_LIST_COMMENTARY.

  CLEAR LS_LINE.
  LS_LINE-KEY  = 'Moeda'.
  LS_LINE-TYP  = 'S'.
  LS_LINE-INFO = R_WAERS.
  APPEND LS_LINE TO LT_LIST_COMMENTARY.

  CLEAR LS_LINE.
  LS_LINE-KEY  = 'Estrutura'.
  LS_LINE-TYP  = 'S'.
  CONCATENATE  R_ESTR '-' R_ESTT INTO LS_LINE-INFO SEPARATED BY SPACE.
  APPEND LS_LINE TO LT_LIST_COMMENTARY.

  CLEAR LS_LINE.
  LS_LINE-KEY  = 'Data:'.
  LS_LINE-TYP  = 'S'.
  WRITE SY-DATUM TO LS_LINE-INFO.
  APPEND LS_LINE TO LT_LIST_COMMENTARY.

  L_LOGO = 'LOGO_NOVO'.

  LS_VARIANT-REPORT = SY-REPID.

  PERFORM CATALOGO_TREE_ALV_DRE_B TABLES GT_FIELDCATALOG.

  CALL METHOD G_TREE4->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
      IS_HIERARCHY_HEADER = L_HIERARCHY_HEADER
      IT_LIST_COMMENTARY  = LT_LIST_COMMENTARY
      I_LOGO              = L_LOGO
      I_BACKGROUND_ID     = 'ALV_BACKGROUND'
      I_SAVE              = 'A'
      IS_VARIANT          = LS_VARIANT
    CHANGING
      IT_OUTTAB           = IT_ZGLT047_TREE_B[]
      IT_FIELDCATALOG     = GT_FIELDCATALOG.


  DATA: IT_NODE_KEY TYPE LVC_T_NKEY.

  PERFORM MOSTRA_TEXTO USING 'Montando Est. Demons. Receita Operacional'.
  PERFORM EST_SAIDA_ALV_TREE_VIEW_3 TABLES IT_NODE_KEY.

* calculate totals
  CALL METHOD G_TREE4->UPDATE_CALCULATIONS.

* this method must be called to send the data to the frontend
  CALL METHOD G_TREE4->FRONTEND_UPDATE.

  CALL METHOD G_TREE4->EXPAND_NODES
    EXPORTING
      IT_NODE_KEY = IT_NODE_KEY.

  CALL METHOD G_TREE4->COLLAPSE_ALL_NODES.

  PERFORM CHANGE_TOOLBAR_REO.

  PERFORM CRIA_HTML_CAB_REO.

ENDFORM.                    " CREATE_TREE_ALV_TREE4

*&---------------------------------------------------------------------*
*&      Form  CRIA_HTML_CAB_REO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CRIA_HTML_CAB_REO .

  DATA: TEXTO(40), VG_MES(2), VG_ANO(4), VG_ANOMES(7),
        VL_DATA                 TYPE C LENGTH 14,
        VL_HORA                 TYPE C LENGTH 8,
        VL_TXT                  TYPE C LENGTH 50,
        SDYDO_TEXT_ELEMENT(255),
        P_TEXT_TABLE            TYPE SDYDO_TEXT_TABLE,
        P_TEXT                  TYPE SDYDO_TEXT_ELEMENT,
        POSITION                TYPE I.

  DATA: COLUMN         TYPE REF TO CL_DD_AREA,
        COLUMN_1       TYPE REF TO CL_DD_AREA,
        COLUMN_2       TYPE REF TO CL_DD_AREA,
        TABLE_ELEMENT  TYPE REF TO CL_DD_TABLE_ELEMENT,
        TABLE_ELEMENT2 TYPE REF TO CL_DD_TABLE_ELEMENT.

  CALL METHOD DG_DYNDOC_ID3->INITIALIZE_DOCUMENT.

  CALL METHOD DG_DYNDOC_ID3->ADD_TABLE
    EXPORTING
      NO_OF_COLUMNS = 1
      BORDER        = '0'
      WIDTH         = '100%'
    IMPORTING
      TABLE         = TABLE_ELEMENT.

  CALL METHOD TABLE_ELEMENT->ADD_COLUMN
    IMPORTING
      COLUMN = COLUMN.

  CALL METHOD TABLE_ELEMENT->SET_COLUMN_STYLE
    EXPORTING
      COL_NO    = 1
      SAP_ALIGN = 'CENTER'
      SAP_STYLE = CL_DD_DOCUMENT=>HEADING.

  P_TEXT = 'Demonstrativo de Receita Operacional'.
  CALL METHOD COLUMN->ADD_TEXT
    EXPORTING
      TEXT      = P_TEXT
      SAP_STYLE = 'HEADING'.

  CALL METHOD DG_DYNDOC_ID3->ADD_TABLE
    EXPORTING
      NO_OF_COLUMNS = 2
      BORDER        = '0'
      WIDTH         = '100%'
    IMPORTING
      TABLE         = TABLE_ELEMENT2.

  CALL METHOD TABLE_ELEMENT2->ADD_COLUMN
    EXPORTING
      SAP_STYLE   = 'SAP_BOLD'
      STYLE_CLASS = 'SAP_BOLD'
    IMPORTING
      COLUMN      = COLUMN_1.

  CALL METHOD TABLE_ELEMENT2->ADD_COLUMN
    IMPORTING
      COLUMN = COLUMN_2.

  CALL METHOD TABLE_ELEMENT2->SET_COLUMN_STYLE
    EXPORTING
      COL_NO       = 2
      SAP_ALIGN    = 'LEFT'
      SAP_FONTSIZE = CL_DD_DOCUMENT=>MEDIUM.

  SDYDO_TEXT_ELEMENT = 'Empresa: '.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  SDYDO_TEXT_ELEMENT = 'Período: '.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  SDYDO_TEXT_ELEMENT = 'Moeda: '.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  SDYDO_TEXT_ELEMENT = 'Estrutura: '.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  SDYDO_TEXT_ELEMENT = 'Data: '.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  SDYDO_TEXT_ELEMENT = 'Gerado por: '.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  CALL METHOD COLUMN_1->ADD_TEXT
    EXPORTING
      TEXT_TABLE = P_TEXT_TABLE
      FIX_LINES  = 'X'.

  CLEAR: P_TEXT_TABLE.
  "Empresa p/ Plano de Contas do Razão
  SELECT * INTO TABLE IT_T001
    FROM T001
   WHERE BUKRS EQ R_BUKRS.

  READ TABLE IT_T001 INDEX 1.
  SDYDO_TEXT_ELEMENT = IT_T001-BUTXT.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  MOVE: R_MONAT TO VG_MES,
        R_GJAHR TO VG_ANO.
  CONCATENATE VG_MES '/' VG_ANO INTO TEXTO.

  MOVE: R_MONAT2 TO VG_MES,
        R_GJAHR  TO VG_ANO.
  CONCATENATE VG_MES '/' VG_ANO INTO VG_ANOMES.
  CONCATENATE TEXTO 'a' VG_ANOMES  INTO TEXTO SEPARATED BY SPACE.

  SDYDO_TEXT_ELEMENT = TEXTO.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  SDYDO_TEXT_ELEMENT = R_WAERS.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  CONCATENATE R_ESTR '-' R_ESTT INTO TEXTO SEPARATED BY SPACE.
  SDYDO_TEXT_ELEMENT = TEXTO.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  WRITE SY-DATUM TO TEXTO.
  SDYDO_TEXT_ELEMENT = TEXTO.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  CONCATENATE SY-DATUM+6(2)
                '.' SY-DATUM+4(2)
                '.' SY-DATUM(4) INTO VL_DATA.

  CONCATENATE SY-UZEIT(2)
              ':' SY-UZEIT+2(2)
              ':' SY-UZEIT+4(2) INTO VL_HORA.

  CONCATENATE  SY-UNAME 'em' VL_DATA '-' VL_HORA INTO VL_TXT SEPARATED BY SPACE.

  SDYDO_TEXT_ELEMENT = VL_TXT.
  APPEND SDYDO_TEXT_ELEMENT TO P_TEXT_TABLE.

  CALL METHOD COLUMN_2->ADD_TEXT
    EXPORTING
      TEXT_TABLE = P_TEXT_TABLE
      FIX_LINES  = 'X'.

  PERFORM CONTAINER_HTML_REO.

ENDFORM.                    " CRIA_HTML_CAB_REO

*&---------------------------------------------------------------------*
*&      Form  CONTAINER_HTML_REO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CONTAINER_HTML_REO .

  DATA : DL_LENGTH        TYPE I,                           " Length
         DL_BACKGROUND_ID TYPE SDYDO_KEY VALUE SPACE. " Background_id

  IF DG_HTML_CNTRL3 IS INITIAL.
    CREATE OBJECT DG_HTML_CNTRL3
      EXPORTING
        PARENT = DG_PARENT_HTML3_1.
  ENDIF.

  CALL FUNCTION 'REUSE_ALV_GRID_COMMENTARY_SET'
    EXPORTING
      DOCUMENT = DG_DYNDOC_ID3
      BOTTOM   = SPACE
    IMPORTING
      LENGTH   = DL_LENGTH.

  CALL METHOD DG_DYNDOC_ID3->MERGE_DOCUMENT.

  CALL METHOD DG_DYNDOC_ID3->SET_DOCUMENT_BACKGROUND
    EXPORTING
      PICTURE_ID = DL_BACKGROUND_ID.

  DG_DYNDOC_ID3->HTML_CONTROL = DG_HTML_CNTRL3.

  CALL METHOD DG_DYNDOC_ID3->DISPLAY_DOCUMENT
    EXPORTING
      REUSE_CONTROL      = 'X'
      PARENT             = DG_PARENT_HTML3_1
    EXCEPTIONS
      HTML_DISPLAY_ERROR = 1.

ENDFORM.                    " CONTAINER_HTML_REO

*&---------------------------------------------------------------------*
*&      Form  EST_SAIDA_ALV_TREE_VIEW_3
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_NODE_KEY  text
*----------------------------------------------------------------------*
FORM EST_SAIDA_ALV_TREE_VIEW_3  TABLES IT_NODE_KEY TYPE LVC_T_NKEY.

  DATA: LT_ITEM_LAYOUT TYPE LVC_T_LAYI,
        LS_ITEM_LAYOUT TYPE LVC_S_LAYI,
        LS_NODE        TYPE LVC_S_LAYN,
        P_NODE_KEY     TYPE LVC_NKEY,
        P_RELAT_KEY    TYPE LVC_NKEY,
        L_NODE_TEXT    TYPE LVC_VALUE,
        WA_ZGLT047_LC  TYPE ZGLT047,
        CK_EXPANDIR(1).

  "  DATA: VG_TABIX LIKE SY-TABIX.

  CLEAR: IT_ZGLT047_TREE_B[], IT_ZGLT047[].

  "PERFORM ATUALIZA_TABELAS_CONSULTAS USING P_VERSN.

  "Níveis da Estrutura de Balanço Patrimonial
  SELECT *
    INTO TABLE IT_ZGLT047
    FROM ZGLT047
   WHERE VERSN EQ R_ESTR
   ORDER BY SQNIVEL.

  "Níveis Somatório da Estrutura de Balanço Patrimonial
  SELECT * INTO TABLE IT_ZGLT048
    FROM ZGLT048
   WHERE VERSN EQ R_ESTR.

  SORT IT_ZGLT048 BY VERSN NIVEL.

  "Notas de Classificação da Estrutura
  SELECT *
    INTO TABLE IT_ZGLT049
    FROM ZGLT049
   WHERE VERSN EQ R_ESTR
   ORDER BY SQNIVEL.

  "Notas de Classificação
  SELECT * INTO TABLE IT_ZGLT039
    FROM ZGLT039
     FOR ALL ENTRIES IN IT_ZGLT049
   WHERE CODIGO   EQ IT_ZGLT049-COD_CLAS_BAL
     AND COD_NOTA EQ IT_ZGLT049-COD_CLAS_NOT.

  SORT IT_ZGLT039 BY CODIGO COD_NOTA.

  "Contas Razões das Notas de Classificação
  SELECT * INTO TABLE IT_ZGLT041
    FROM ZGLT041
   WHERE BUKRS EQ R_BUKRS
*     AND GJAHR EQ R_GJAHR "/Modificação CS2017000372
   ORDER BY BUKRS SAKNR.

  SORT IT_ZGLT041 BY BUKRS SAKNR.

  "Empresa p/ Plano de Contas do Razão
  SELECT * INTO TABLE IT_T001
    FROM T001
   WHERE BUKRS EQ R_BUKRS.

  SORT IT_T001 BY BUKRS.

  SELECT * INTO TABLE IT_T880
    FROM T880.

  SORT IT_T880 BY RCOMP.

  LOOP AT IT_ZGLT047 INTO WA_ZGLT047_LC WHERE NIVELPAI EQ ''.
    CLEAR: IT_ZGLT047_TREE_B.
    MOVE-CORRESPONDING WA_ZGLT047_LC TO IT_ZGLT047_TREE_B.

    IF WA_ZGLT047_LC-NIVELSUM EQ ABAP_TRUE.
      PERFORM BUSCA_TOTAIS_NIVEL_SOMA_B USING WA_ZGLT047_LC CHANGING IT_ZGLT047_TREE_B.
    ELSE.
      PERFORM BUSCA_SALDO_NIVEL_B USING WA_ZGLT047_LC CHANGING IT_ZGLT047_TREE_B.
    ENDIF.

    " Inclui nodos Raises da ALV TREE VIEW """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    "*****************************************************************************************************************
    IF WA_ZGLT047_LC-NIVELSUM EQ ABAP_TRUE.
      LS_ITEM_LAYOUT-T_IMAGE = '@3Z@'.
      LS_NODE-N_IMAGE        = LS_ITEM_LAYOUT-T_IMAGE.
      LS_NODE-EXP_IMAGE      = LS_ITEM_LAYOUT-T_IMAGE.
    ELSE.
      CLEAR: LS_ITEM_LAYOUT-T_IMAGE.
      LS_NODE-N_IMAGE   = SPACE.
      LS_NODE-EXP_IMAGE = SPACE.
    ENDIF.
    LS_ITEM_LAYOUT-FIELDNAME = G_TREE4->C_HIERARCHY_COLUMN_NAME.
    LS_ITEM_LAYOUT-STYLE     = CL_GUI_COLUMN_TREE=>STYLE_DEFAULT.
    APPEND LS_ITEM_LAYOUT TO LT_ITEM_LAYOUT.
    CONCATENATE WA_ZGLT047_LC-NIVEL '-' WA_ZGLT047_LC-DESNVL INTO L_NODE_TEXT.
    CLEAR: P_RELAT_KEY.

    CALL METHOD G_TREE4->ADD_NODE
      EXPORTING
        I_RELAT_NODE_KEY = P_RELAT_KEY
        I_RELATIONSHIP   = CL_GUI_COLUMN_TREE=>RELAT_LAST_CHILD
        I_NODE_TEXT      = L_NODE_TEXT
        IS_OUTTAB_LINE   = IT_ZGLT047_TREE_B
        IS_NODE_LAYOUT   = LS_NODE
        IT_ITEM_LAYOUT   = LT_ITEM_LAYOUT
      IMPORTING
        E_NEW_NODE_KEY   = P_NODE_KEY.
    "*****************************************************************************************************************

    CK_EXPANDIR = ABAP_FALSE.

    PERFORM BUSCA_NOTAS_FILHAS_B USING WA_ZGLT047_LC P_NODE_KEY CHANGING CK_EXPANDIR.

    PERFORM BUSCA_FILHOS_B USING WA_ZGLT047_LC P_NODE_KEY CHANGING CK_EXPANDIR.

    IF ( IT_ZGLT047_TREE_B-NIVELSUM EQ ABAP_FALSE ) AND ( CK_EXPANDIR EQ ABAP_TRUE ).
      APPEND P_NODE_KEY TO IT_NODE_KEY.
    ENDIF.

  ENDLOOP.

ENDFORM.                    " EST_SAIDA_ALV_TREE_VIEW_3

*&---------------------------------------------------------------------*
*&      Form  CHANGE_TOOLBAR_REO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CHANGE_TOOLBAR_REO .

* get toolbar control
  CALL METHOD G_TREE4->GET_TOOLBAR_OBJECT
    IMPORTING
      ER_TOOLBAR = MR_TOOLBAR3.

  CHECK NOT MR_TOOLBAR3 IS INITIAL.

* add seperator to toolbar
  CALL METHOD MR_TOOLBAR3->ADD_BUTTON
    EXPORTING
      FCODE     = ''
      ICON      = ''
      BUTN_TYPE = CNTB_BTYPE_SEP
      TEXT      = ''
      QUICKINFO = 'Seperator'.                              "#EC NOTEXT

* add Standard Button to toolbar (for Delete Subtree)
  CALL METHOD MR_TOOLBAR3->ADD_BUTTON
    EXPORTING
      FCODE     = 'EXCEL'
      ICON      = ICON_IMPORT
      BUTN_TYPE = CNTB_BTYPE_BUTTON
      TEXT      = ''
      QUICKINFO = 'Gerar Excel'.

  CREATE OBJECT TOOLBAR_EVENT_RECEIVER3.
  SET HANDLER TOOLBAR_EVENT_RECEIVER3->ON_FUNCTION_SELECTED FOR MR_TOOLBAR3.

ENDFORM.                    " CHANGE_TOOLBAR_REO

*&---------------------------------------------------------------------*
*&      Form  GERAR_RELATORIO_TREE_VIEW_4
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GERAR_RELATORIO_TREE_VIEW_4 .

  DATA: IT_SALDOS_ATUAL TYPE TABLE OF ZDE_FI_GL_SALDO_FAGLFLEXT WITH HEADER LINE,
        IT_SALDOS_ANTER TYPE TABLE OF ZDE_FI_GL_SALDO_FAGLFLEXT WITH HEADER LINE,
        WA_ZGLT061      TYPE ZGLT061,
        VG_VLR_ACM_01   TYPE ZWRBTR_DRE_ACM,
        VG_VLR_ACM_02   TYPE ZWRBTR_DRE_ACM,
        VG_VLR_ACM_03   TYPE ZWRBTR_DRE_ACM,
        VG_VLR_LUCRO    TYPE HSLXX12,
        VG_VLR_PREJU    TYPE HSLXX12,
        VG_LINES        TYPE I,
        LC_046          TYPE ZGLT046,
        IT_SKA1         TYPE TABLE OF SKA1 WITH HEADER LINE,
        ITZGLT043A      TYPE TABLE OF ZGLT043A WITH HEADER LINE,
        ITZGLT043B      TYPE TABLE OF ZGLT043B WITH HEADER LINE,
        IT_ZGLT049CN    TYPE TABLE OF ZGLT049CN WITH HEADER LINE,
        IT_ZGLT049LN    TYPE TABLE OF ZGLT049LN WITH HEADER LINE,
        IT_ZGLT049MN    TYPE TABLE OF ZGLT049MN WITH HEADER LINE,
        IT_DRE_CC       TYPE TABLE OF ZGL015_DRE_EST04 WITH HEADER LINE,
        IT_DRE_LL       TYPE TABLE OF ZGL015_DRE_EST05 WITH HEADER LINE,
        IT_DRE_MM       TYPE TABLE OF ZGL015_DRE_EST06 WITH HEADER LINE,
        IT_CSKS         TYPE TABLE OF CSKS WITH HEADER LINE,
        VG_TABIX        TYPE SYTABIX,
        CK_CUSTO(1),
        CK_LUCRO(1),
        CK_MERCA(1).

  DATA: REFE1 TYPE HSLXX12,
        REFE2 TYPE HSLXX12,
        REFE3 TYPE HSLXX12.

  RANGES: LC_MONAT FOR ZGL029_DRE_DADOS-MONAT.

  CLEAR: IT_SKA1.

  PERFORM ATUALIZA_TABELAS_CONSULTAS USING R_ESTR R_BUKRS SPACE.". R_GJAHR.  "/Modificação CS2017000372

  DELETE IT_ZGLT041 WHERE BUKRS NE R_BUKRS." OR GJAHR NE R_GJAHR. "/Modificação CS2017000372


  SELECT SINGLE * INTO WA_ZGLT061 FROM ZGLT061 WHERE BUKRS EQ R_BUKRS AND GJAHR EQ R_GJAHR .

  "busca saldo dre dos terceiros e sociedade parceira
  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

  PERFORM MOSTRA_TEXTO USING 'Pesquisa: DRE - Sociedade parceira '.

  SELECT * INTO CORRESPONDING FIELDS OF TABLE IT_DRE_VBUND1
    FROM ZGL029_DRE_DADOS
   WHERE BUKRS EQ R_BUKRS
     AND VERSN EQ WA_ZGLT061-VERSN
     AND MONAT GE R_MONAT
     AND MONAT LE R_MONAT2
     AND GJAHR EQ R_GJAHR.

  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  PERFORM MOSTRA_TEXTO USING 'Pesquisa: DRE - Tipo Custo'.
  SELECT * INTO TABLE IT_DRE_CC FROM ZGL015_DRE_EST04 WHERE VERSN EQ WA_ZGLT061-VERSN.

  PERFORM MOSTRA_TEXTO USING 'Pesquisa: DRE - Centro de Lucro'.
  SELECT * INTO TABLE IT_DRE_LL FROM ZGL015_DRE_EST05 WHERE VERSN EQ WA_ZGLT061-VERSN.

  PERFORM MOSTRA_TEXTO USING 'Pesquisa: DRE - Grupo de Mercadoria'.
  SELECT * INTO TABLE IT_DRE_MM FROM ZGL015_DRE_EST06 WHERE VERSN EQ WA_ZGLT061-VERSN.

  DELETE ADJACENT DUPLICATES FROM IT_DRE_CC COMPARING ALL FIELDS. "#EC CI_SORTED
  DELETE ADJACENT DUPLICATES FROM IT_DRE_LL COMPARING ALL FIELDS. "#EC CI_SORTED
  DELETE ADJACENT DUPLICATES FROM IT_DRE_MM COMPARING ALL FIELDS. "#EC CI_SORTED

  SORT IT_DRE_CC BY SAKNR.
  SORT IT_DRE_LL BY SAKNR.
  SORT IT_DRE_MM BY SAKNR.

  PERFORM MOSTRA_TEXTO USING 'Pesquisa: Nó de Estrutura de Balanço Patrimonial - Custo'.

  SELECT * INTO TABLE IT_ZGLT049CN
    FROM ZGLT049CN
     FOR ALL ENTRIES IN IT_ZGLT049
   WHERE VERSN        EQ R_ESTR
     AND COD_CLAS_BAL EQ IT_ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ IT_ZGLT049-COD_CLAS_NOT.

  SORT IT_ZGLT049CN BY NIVEL COD_CLAS_BAL COD_CLAS_NOT.

  PERFORM MOSTRA_TEXTO USING 'Pesquisa: Nó de Estrutura de Balanço Patrimonial - Lucro'.

  SELECT * INTO TABLE IT_ZGLT049LN
    FROM ZGLT049LN
     FOR ALL ENTRIES IN IT_ZGLT049
   WHERE VERSN        EQ R_ESTR
     AND COD_CLAS_BAL EQ IT_ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ IT_ZGLT049-COD_CLAS_NOT.

  SORT IT_ZGLT049LN BY NIVEL COD_CLAS_BAL COD_CLAS_NOT.

  PERFORM MOSTRA_TEXTO USING 'Pesquisa: Nó de Estrutura de Balanço Patrimonial - G. Mercadoria'.

  SELECT * INTO TABLE IT_ZGLT049MN
    FROM ZGLT049MN
     FOR ALL ENTRIES IN IT_ZGLT049
   WHERE VERSN        EQ R_ESTR
     AND COD_CLAS_BAL EQ IT_ZGLT049-COD_CLAS_BAL
     AND COD_CLAS_NOT EQ IT_ZGLT049-COD_CLAS_NOT.

  CLEAR: IT_TOTAIS_VBUND[].

  SORT IT_ZGLT049MN BY NIVEL COD_CLAS_BAL COD_CLAS_NOT.

  PERFORM MOSTRA_TEXTO USING 'Pesquisa: DRE - Ajustando C. Custo'.

  SELECT * INTO TABLE IT_CSKS
    FROM CSKS
   WHERE DATAB LE  SY-DATUM
     AND DATBI GE  SY-DATUM.

  DESCRIBE TABLE IT_CSKS LINES VG_LINES.

  LOOP AT IT_CSKS.

    LOOP AT IT_DRE_VBUND1 WHERE KOSTL EQ IT_CSKS-KOSTL.
      IT_DRE_VBUND1-KOSAR = IT_CSKS-KOSAR.
      MODIFY IT_DRE_VBUND1 INDEX SY-TABIX TRANSPORTING KOSAR.
    ENDLOOP.

    PERFORM MOSTRA_TEXTO_P USING 'Ajustando C. Custo' VG_LINES SY-TABIX.

  ENDLOOP.

  DESCRIBE TABLE IT_ZGLT047 LINES VG_LINES.

  READ TABLE IT_T001 INDEX 1.

  CALL FUNCTION 'FI_CURRENCY_INFORMATION'
    EXPORTING
      I_BUKRS                = IT_T001-BUKRS
    IMPORTING
      E_X001                 = LS_X001
    EXCEPTIONS
      CURRENCY_2_NOT_DEFINED = 1
      CURRENCY_3_NOT_DEFINED = 2
      OTHERS                 = 3.

  LOOP AT IT_ZGLT047.

    LOOP AT IT_ZGLT049 WHERE NIVEL EQ IT_ZGLT047-NIVEL.

      CK_CUSTO = ABAP_FALSE.
      CK_LUCRO = ABAP_FALSE.
      CK_MERCA = ABAP_FALSE.

      READ TABLE IT_ZGLT049CN WITH KEY NIVEL        = IT_ZGLT049-NIVEL
                                       COD_CLAS_BAL = IT_ZGLT049-COD_CLAS_BAL
                                       COD_CLAS_NOT = IT_ZGLT049-COD_CLAS_NOT
                                       BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        "Somatoria por tipo de centro de custo
        CK_CUSTO = ABAP_TRUE.
        LOOP AT IT_ZGLT049CN WHERE NIVEL        = IT_ZGLT049-NIVEL
                               AND COD_CLAS_BAL = IT_ZGLT049-COD_CLAS_BAL
                               AND COD_CLAS_NOT = IT_ZGLT049-COD_CLAS_NOT.
          PERFORM TOTALIZA_DRE_TIPO_CUSTO_B USING IT_ZGLT049CN VG_MONAT.
        ENDLOOP.
      ENDIF.

      READ TABLE IT_ZGLT049LN WITH KEY NIVEL        = IT_ZGLT049-NIVEL
                                       COD_CLAS_BAL = IT_ZGLT049-COD_CLAS_BAL
                                       COD_CLAS_NOT = IT_ZGLT049-COD_CLAS_NOT
                                       BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        "Somatoria por centro de lucro
        CK_LUCRO = ABAP_TRUE.
        LOOP AT IT_ZGLT049LN WHERE NIVEL        = IT_ZGLT049-NIVEL
                               AND COD_CLAS_BAL = IT_ZGLT049-COD_CLAS_BAL
                               AND COD_CLAS_NOT = IT_ZGLT049-COD_CLAS_NOT.
          PERFORM TOTALIZA_DRE_CENTRO_LUCRO_B USING IT_ZGLT049LN VG_MONAT.
        ENDLOOP.
      ENDIF.

      READ TABLE IT_ZGLT049MN WITH KEY NIVEL        = IT_ZGLT049-NIVEL
                                       COD_CLAS_BAL = IT_ZGLT049-COD_CLAS_BAL
                                       COD_CLAS_NOT = IT_ZGLT049-COD_CLAS_NOT
                                       BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        "Somatoria por Grupo de Material
        CK_MERCA = ABAP_TRUE.
        LOOP AT IT_ZGLT049MN WHERE NIVEL        = IT_ZGLT049-NIVEL
                               AND COD_CLAS_BAL = IT_ZGLT049-COD_CLAS_BAL
                               AND COD_CLAS_NOT = IT_ZGLT049-COD_CLAS_NOT.
          PERFORM TOTALIZA_DRE_GRUPO_MATERIAL_B USING IT_ZGLT049MN VG_MONAT.
        ENDLOOP.
      ENDIF.

      PERFORM TOTALIZA_DRE_CONTA_RAZAO_B
       TABLES IT_ZGLT049CN
              IT_ZGLT049LN
              IT_ZGLT049MN
              IT_DRE_CC
              IT_DRE_LL
              IT_DRE_MM
        USING IT_ZGLT049 VG_MONAT CK_CUSTO CK_LUCRO CK_MERCA.
    ENDLOOP.

    PERFORM MOSTRA_TEXTO_P USING 'Totalizando Demonstrativo' VG_LINES SY-TABIX.

  ENDLOOP.


ENDFORM.                    " GERAR_RELATORIO_TREE_VIEW_4

*&---------------------------------------------------------------------*
*&      Form  TOTALIZA_DRE_TIPO_CUSTO_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM TOTALIZA_DRE_TIPO_CUSTO_B  USING P_ZGLT049C    TYPE ZGLT049CN
                                      VG_MONAT      TYPE MONAT.

  DATA: REFE1 TYPE ZWRBTR_DRE,
        REFE2 TYPE ZWRBTR_DRE,
        REFE3 TYPE ZWRBTR_DRE.

  LOOP AT IT_ZGLT041 WHERE COD_CLAS_BAL  EQ P_ZGLT049C-COD_CLAS_BAL
                       AND COD_CLAS_NOT2 EQ P_ZGLT049C-COD_CLAS_NOT.
    CLEAR: IT_TOTAIS_VBUND.

    IT_TOTAIS_VBUND-COD_CLAS_BAL = P_ZGLT049C-COD_CLAS_BAL.
    IT_TOTAIS_VBUND-COD_CLAS_NOT = P_ZGLT049C-COD_CLAS_NOT.
    IT_TOTAIS_VBUND-NIVEL        = IT_ZGLT047-NIVEL.
    IT_TOTAIS_VBUND-SAKNR        = IT_ZGLT041-SAKNR.

    "Pega Saldo Inicial do Saldo Mês Solicitado
    LOOP AT IT_DRE_VBUND1 WHERE SAKNR EQ IT_ZGLT041-SAKNR
                            AND KOSAR EQ P_ZGLT049C-KOSAR.
      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND1-VBUND.
      PERFORM TOTALIZAR USING IT_DRE_VBUND1 CHANGING IT_TOTAIS_VBUND.
      COLLECT IT_TOTAIS_VBUND.
    ENDLOOP.

*    IT_TOTAIS_VBUND-VALOR_01 = 0.
*    IT_TOTAIS_VBUND-VALOR_02 = 0.
*    IT_TOTAIS_VBUND-VALOR_03 = 0.
*
*    "Pega Saldo Inicial do Saldo Mês Anterior
*    LOOP AT IT_DRE_VBUND2 WHERE SAKNR EQ IT_ZGLT041-SAKNR
*                            AND KOSAR EQ P_ZGLT049C-KOSAR.
*      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND2-VBUND.
*      IT_TOTAIS_VBUND-VALOR_02 = IT_DRE_VBUND2-VLR_REA.
*      COLLECT IT_TOTAIS_VBUND.
*    ENDLOOP.
*
*    IT_TOTAIS_VBUND-VALOR_01 = 0.
*    IT_TOTAIS_VBUND-VALOR_02 = 0.
*    IT_TOTAIS_VBUND-VALOR_03 = 0.
*
*    "Pega Saldo Inicial do Saldo Mês Anterior
*    LOOP AT IT_DRE_VBUND3 WHERE SAKNR EQ IT_ZGLT041-SAKNR
*                            AND KOSAR EQ P_ZGLT049C-KOSAR.
*      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND3-VBUND.
*      IT_TOTAIS_VBUND-VALOR_03 = IT_DRE_VBUND3-VLR_REA.
*      COLLECT IT_TOTAIS_VBUND.
*    ENDLOOP.

  ENDLOOP.

ENDFORM.                    " TOTALIZA_DRE_TIPO_CUSTO_B

*&---------------------------------------------------------------------*
*&      Form  TOTALIZA_DRE_CENTRO_LUCRO_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM TOTALIZA_DRE_CENTRO_LUCRO_B  USING P_ZGLT049L TYPE ZGLT049LN
                                        VG_MONAT   TYPE MONAT.

  DATA: REFE1 TYPE ZWRBTR_DRE,
        REFE2 TYPE ZWRBTR_DRE,
        REFE3 TYPE ZWRBTR_DRE.

  LOOP AT IT_ZGLT041 WHERE COD_CLAS_BAL  EQ P_ZGLT049L-COD_CLAS_BAL
                       AND COD_CLAS_NOT2 EQ P_ZGLT049L-COD_CLAS_NOT.
    CLEAR: IT_TOTAIS_VBUND.

    IT_TOTAIS_VBUND-COD_CLAS_BAL = P_ZGLT049L-COD_CLAS_BAL.
    IT_TOTAIS_VBUND-COD_CLAS_NOT = P_ZGLT049L-COD_CLAS_NOT.
    IT_TOTAIS_VBUND-NIVEL        = IT_ZGLT047-NIVEL.
    IT_TOTAIS_VBUND-SAKNR        = IT_ZGLT041-SAKNR.

    "Pega Saldo Inicial do Saldo Mês Solicitado
    LOOP AT IT_DRE_VBUND1 WHERE SAKNR EQ IT_ZGLT041-SAKNR
                            AND PRCTR EQ P_ZGLT049L-PRCTR.
      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND1-VBUND.
      PERFORM TOTALIZAR USING IT_DRE_VBUND1 CHANGING IT_TOTAIS_VBUND.
      COLLECT IT_TOTAIS_VBUND.
    ENDLOOP.

*    IT_TOTAIS_VBUND-VALOR_01 = 0.
*    IT_TOTAIS_VBUND-VALOR_02 = 0.
*    IT_TOTAIS_VBUND-VALOR_03 = 0.
*
*    "Pega Saldo Inicial do Saldo Mês Anterior
*    LOOP AT IT_DRE_VBUND2 WHERE SAKNR EQ IT_ZGLT041-SAKNR
*                            AND PRCTR EQ P_ZGLT049L-PRCTR.
*      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND2-VBUND.
*      IT_TOTAIS_VBUND-VALOR_02 = IT_DRE_VBUND2-VLR_REA.
*      COLLECT IT_TOTAIS_VBUND.
*    ENDLOOP.
*
*    IT_TOTAIS_VBUND-VALOR_01 = 0.
*    IT_TOTAIS_VBUND-VALOR_02 = 0.
*    IT_TOTAIS_VBUND-VALOR_03 = 0.
*
*    "Pega Saldo Inicial do Saldo Mês Anterior
*    LOOP AT IT_DRE_VBUND3 WHERE SAKNR EQ IT_ZGLT041-SAKNR
*                            AND PRCTR EQ P_ZGLT049L-PRCTR.
*      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND3-VBUND.
*      IT_TOTAIS_VBUND-VALOR_03 = IT_DRE_VBUND3-VLR_REA.
*      COLLECT IT_TOTAIS_VBUND.
*    ENDLOOP.

  ENDLOOP.

ENDFORM.                    " TOTALIZA_DRE_CENTRO_LUCRO_B

*&---------------------------------------------------------------------*
*&      Form  TOTALIZA_DRE_GRUPO_MATERIAL_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_ZGLT049M  text
*      -->P_VG_MONAT  text
*----------------------------------------------------------------------*
FORM TOTALIZA_DRE_GRUPO_MATERIAL_B USING  P_ZGLT049M TYPE ZGLT049MN
                                          VG_MONAT   TYPE MONAT.

  DATA: REFE1 TYPE ZWRBTR_DRE,
        REFE2 TYPE ZWRBTR_DRE,
        REFE3 TYPE ZWRBTR_DRE.

  LOOP AT IT_ZGLT041 WHERE COD_CLAS_BAL  EQ P_ZGLT049M-COD_CLAS_BAL
                       AND COD_CLAS_NOT2 EQ P_ZGLT049M-COD_CLAS_NOT.
    CLEAR: IT_TOTAIS_VBUND.

    IT_TOTAIS_VBUND-COD_CLAS_BAL = P_ZGLT049M-COD_CLAS_BAL.
    IT_TOTAIS_VBUND-COD_CLAS_NOT = P_ZGLT049M-COD_CLAS_NOT.
    IT_TOTAIS_VBUND-NIVEL        = IT_ZGLT047-NIVEL.
    IT_TOTAIS_VBUND-SAKNR        = IT_ZGLT041-SAKNR.

    "Pega Saldo Inicial do Saldo Mês Solicitado
    LOOP AT IT_DRE_VBUND1 WHERE SAKNR EQ IT_ZGLT041-SAKNR
                            AND MATKL EQ P_ZGLT049M-MATKL.
      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND1-VBUND.
      PERFORM TOTALIZAR USING IT_DRE_VBUND1 CHANGING IT_TOTAIS_VBUND.
      COLLECT IT_TOTAIS_VBUND.
    ENDLOOP.

*    IT_TOTAIS_VBUND-VALOR_01 = 0.
*    IT_TOTAIS_VBUND-VALOR_02 = 0.
*    IT_TOTAIS_VBUND-VALOR_03 = 0.
*
*    "Pega Saldo Inicial do Saldo Mês Anterior
*    LOOP AT IT_DRE_VBUND2 WHERE SAKNR EQ IT_ZGLT041-SAKNR
*                            AND MATKL EQ P_ZGLT049M-MATKL.
*      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND2-VBUND.
*      IT_TOTAIS_VBUND-VALOR_02 = IT_DRE_VBUND2-VLR_REA.
*      COLLECT IT_TOTAIS_VBUND.
*    ENDLOOP.
*
*    IT_TOTAIS_VBUND-VALOR_01 = 0.
*    IT_TOTAIS_VBUND-VALOR_02 = 0.
*    IT_TOTAIS_VBUND-VALOR_03 = 0.
*
*    "Pega Saldo Inicial do Saldo Mês Anterior
*    LOOP AT IT_DRE_VBUND3 WHERE SAKNR EQ IT_ZGLT041-SAKNR
*                            AND MATKL EQ P_ZGLT049M-MATKL.
*      IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND3-VBUND.
*      IT_TOTAIS_VBUND-VALOR_03 = IT_DRE_VBUND3-VLR_REA.
*      COLLECT IT_TOTAIS_VBUND.
*    ENDLOOP.

  ENDLOOP.

ENDFORM.                    " TOTALIZA_DRE_GRUPO_MATERIAL_B

*&---------------------------------------------------------------------*
*&      Form  TOTALIZA_DRE_CONTA_RAZAO_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM TOTALIZA_DRE_CONTA_RAZAO_B  TABLES IT_ZGLT049C    STRUCTURE ZGLT049CN
                                        IT_ZGLT049L    STRUCTURE ZGLT049LN
                                        IT_ZGLT049M    STRUCTURE ZGLT049MN
                                        IT_DRE_CC      STRUCTURE ZGL015_DRE_EST04
                                        IT_DRE_LL      STRUCTURE ZGL015_DRE_EST05
                                        IT_DRE_MM      STRUCTURE ZGL015_DRE_EST06

                                  USING P_ZGLT049 TYPE ZGLT049
                                        VG_MONAT  TYPE MONAT
                                        CK_CUSTO
                                        CK_LUCRO
                                        CK_MERCA.

  DATA: REFE1          TYPE ZWRBTR_DRE,
        REFE2          TYPE ZWRBTR_DRE,
        REFE3          TYPE ZWRBTR_DRE,
        CK_CONTINUA(1),
        CK_OBJETO(1),
        WA_ZGLT041     TYPE ZGLT041.

  LOOP AT IT_ZGLT041 INTO WA_ZGLT041
                    WHERE COD_CLAS_BAL  EQ P_ZGLT049-COD_CLAS_BAL
                      AND COD_CLAS_NOT2 EQ P_ZGLT049-COD_CLAS_NOT.

    CK_OBJETO = ABAP_FALSE.

    "Verificar se a conta da nota que possui classificação de objetos possui objeto
    "configurado na DRE
    IF CK_CUSTO EQ ABAP_TRUE OR CK_LUCRO EQ ABAP_TRUE OR CK_MERCA EQ ABAP_TRUE.

      READ TABLE IT_DRE_CC WITH KEY SAKNR = WA_ZGLT041-SAKNR BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        CK_OBJETO = ABAP_TRUE.
      ENDIF.

      READ TABLE IT_DRE_LL WITH KEY SAKNR = WA_ZGLT041-SAKNR BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        CK_OBJETO = ABAP_TRUE.
      ENDIF.

      READ TABLE IT_DRE_MM WITH KEY SAKNR = WA_ZGLT041-SAKNR BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        CK_OBJETO = ABAP_TRUE.
      ENDIF.

    ENDIF.

    "Se existe objeto de custo não continuar.
    IF CK_OBJETO EQ ABAP_TRUE.
      CONTINUE.
    ENDIF.

    CLEAR: IT_TOTAIS_VBUND.

    IT_TOTAIS_VBUND-COD_CLAS_BAL = P_ZGLT049-COD_CLAS_BAL.
    IT_TOTAIS_VBUND-COD_CLAS_NOT = P_ZGLT049-COD_CLAS_NOT.

    IT_TOTAIS_VBUND-NIVEL        = IT_ZGLT047-NIVEL.
    IT_TOTAIS_VBUND-SAKNR        = WA_ZGLT041-SAKNR.

    "Pega Saldo Inicial do Saldo Mês Solicitado
    LOOP AT IT_DRE_VBUND1 WHERE SAKNR = WA_ZGLT041-SAKNR.
      PERFORM VERIFICA_OBJETOS_UTILIZADOS_B TABLES IT_ZGLT049C IT_ZGLT049L IT_ZGLT049M
                                             USING IT_DRE_VBUND1
                                                   IT_TOTAIS_VBUND
                                          CHANGING CK_CONTINUA.
      IF CK_CONTINUA EQ ABAP_TRUE.
        IT_TOTAIS_VBUND-VBUND    = IT_DRE_VBUND1-VBUND.
        PERFORM TOTALIZAR USING IT_DRE_VBUND1 CHANGING IT_TOTAIS_VBUND.
        COLLECT IT_TOTAIS_VBUND.
      ENDIF.
    ENDLOOP.

  ENDLOOP.

ENDFORM.                    " TOTALIZA_DRE_CONTA_RAZAO_B

*&---------------------------------------------------------------------*
*&      Form  VERIFICA_OBJETOS_UTILIZADOS_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_ZGLT049C  text
*      -->P_IT_ZGLT049L  text
*      -->P_IT_ZGLT049M  text
*      -->P_IT_DRE_VBUND1  text
*      -->P_IT_TOTAIS_VBUND  text
*      <--P_CK_CONTINUA  text
*----------------------------------------------------------------------*
FORM VERIFICA_OBJETOS_UTILIZADOS_B  TABLES IT_ZGLT049C    STRUCTURE ZGLT049CN
                                           IT_ZGLT049L    STRUCTURE ZGLT049LN
                                           IT_ZGLT049M    STRUCTURE ZGLT049MN
                                     USING IT_DRE_VBUND1  TYPE TY_ZGL029_DRE_DADOS
                                           P_TOTAIS       TYPE TY_1103_TOTAIS_VBUND
                                  CHANGING CK_CONTINUA.

  DATA: WA_ZGLT041 TYPE ZGLT041.

  CK_CONTINUA = ABAP_TRUE.

*KOSAR - Tipo de centro de custo
*PRCTR - Centro de lucro
*MATKL - Grupo de mercadorias

  IF NOT ( IT_DRE_VBUND1-KOSAR IS INITIAL AND
           IT_DRE_VBUND1-PRCTR IS INITIAL AND
           IT_DRE_VBUND1-MATKL IS INITIAL ).

    IF IT_DRE_VBUND1-KOSAR IS NOT INITIAL.
      LOOP AT IT_ZGLT041 INTO WA_ZGLT041
                         WHERE SAKNR         EQ IT_DRE_VBUND1-SAKNR
                           AND COD_CLAS_BAL  NE P_TOTAIS-COD_CLAS_BAL
                           AND COD_CLAS_NOT2 NE P_TOTAIS-COD_CLAS_NOT.
        READ TABLE IT_ZGLT049C WITH KEY COD_CLAS_BAL = WA_ZGLT041-COD_CLAS_BAL
                                        COD_CLAS_NOT = WA_ZGLT041-COD_CLAS_NOT2
                                        KOSAR        = IT_DRE_VBUND1-KOSAR.
        IF SY-SUBRC IS INITIAL.
          CK_CONTINUA = ABAP_FALSE.
        ENDIF.
      ENDLOOP.
    ENDIF.

    IF IT_DRE_VBUND1-PRCTR IS NOT INITIAL AND CK_CONTINUA = ABAP_TRUE.
      LOOP AT IT_ZGLT041 INTO WA_ZGLT041
                         WHERE SAKNR         EQ IT_DRE_VBUND1-SAKNR
                           AND COD_CLAS_BAL  NE P_TOTAIS-COD_CLAS_BAL
                           AND COD_CLAS_NOT2 NE P_TOTAIS-COD_CLAS_NOT.
        READ TABLE IT_ZGLT049L WITH KEY COD_CLAS_BAL = WA_ZGLT041-COD_CLAS_BAL
                                        COD_CLAS_NOT = WA_ZGLT041-COD_CLAS_NOT2
                                        PRCTR        = IT_DRE_VBUND1-PRCTR.
        IF SY-SUBRC IS INITIAL.
          CK_CONTINUA = ABAP_FALSE.
        ENDIF.
      ENDLOOP.
    ENDIF.

    IF IT_DRE_VBUND1-MATKL IS NOT INITIAL AND CK_CONTINUA = ABAP_TRUE.
      LOOP AT IT_ZGLT041 INTO WA_ZGLT041
                         WHERE SAKNR         EQ IT_DRE_VBUND1-SAKNR
                           AND COD_CLAS_BAL  NE P_TOTAIS-COD_CLAS_BAL
                           AND COD_CLAS_NOT2 NE P_TOTAIS-COD_CLAS_NOT.
        READ TABLE IT_ZGLT049M WITH KEY COD_CLAS_BAL = WA_ZGLT041-COD_CLAS_BAL
                                        COD_CLAS_NOT = WA_ZGLT041-COD_CLAS_NOT2
                                        MATKL        = IT_DRE_VBUND1-MATKL.
        IF SY-SUBRC IS INITIAL.
          CK_CONTINUA = ABAP_FALSE.
        ENDIF.
      ENDLOOP.
    ENDIF.

  ENDIF.

ENDFORM.                    " VERIFICA_OBJETOS_UTILIZADOS_B

*&---------------------------------------------------------------------*
*&      Form  BUSCA_NOTAS_FILHAS_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_ZGLT047_LC  text
*      -->P_P_NODE_KEY  text
*----------------------------------------------------------------------*
FORM BUSCA_NOTAS_FILHAS_B  USING P_ZGLT047   TYPE ZGLT047
                                 P_RELAT_KEY TYPE LVC_NKEY
                        CHANGING CK_EXPANDIR.

  DATA: LT_ITEM_LAYOUT TYPE LVC_T_LAYI,
        LS_ITEM_LAYOUT TYPE LVC_S_LAYI,
        LS_NODE        TYPE LVC_S_LAYN,
        P_NODE_KEY     TYPE LVC_NKEY,
        P_NODE_KEY2    TYPE LVC_NKEY,
        L_NODE_TEXT    TYPE LVC_VALUE,
        WA_ZGLT049_LC  TYPE ZGLT049,
        IT_TOTAIS      TYPE SORTED TABLE OF TY_1103_TOTAIS_VBUND WITH UNIQUE KEY NIVEL COD_CLAS_BAL COD_CLAS_NOT SAKNR VBUND WITH HEADER LINE.

  READ TABLE IT_TOTAIS_VBUND WITH KEY NIVEL = P_ZGLT047-NIVEL.
  CHECK SY-SUBRC IS INITIAL.

  "BUSCAR TECEIROS
  "*****************************************************************************************************************
  "*****************************************************************************************************************
  CLEAR: IT_ZGLT047_TREE_B.
  MOVE-CORRESPONDING P_ZGLT047 TO IT_ZGLT047_TREE_B.

  LOOP AT IT_ZGLT049 INTO WA_ZGLT049_LC WHERE NIVEL EQ P_ZGLT047-NIVEL.
    LOOP AT IT_ZGLT041 WHERE COD_CLAS_BAL  EQ WA_ZGLT049_LC-COD_CLAS_BAL
                         AND COD_CLAS_NOT2 EQ WA_ZGLT049_LC-COD_CLAS_NOT.
      LOOP AT IT_TOTAIS_VBUND WHERE NIVEL        EQ WA_ZGLT049_LC-NIVEL
                                AND COD_CLAS_BAL EQ WA_ZGLT049_LC-COD_CLAS_BAL
                                AND COD_CLAS_NOT EQ WA_ZGLT049_LC-COD_CLAS_NOT
                                AND SAKNR        EQ IT_ZGLT041-SAKNR
                                AND VBUND        EQ IT_ZGLT047_TREE_B-VBUND.

        "Valores
        IT_ZGLT047_TREE_B-VALOR_01 = IT_ZGLT047_TREE_B-VALOR_01 + IT_TOTAIS_VBUND-VALOR_01.
        IT_ZGLT047_TREE_B-VALOR_02 = IT_ZGLT047_TREE_B-VALOR_02 + IT_TOTAIS_VBUND-VALOR_02.
        IT_ZGLT047_TREE_B-VALOR_03 = IT_ZGLT047_TREE_B-VALOR_03 + IT_TOTAIS_VBUND-VALOR_03.
        IT_ZGLT047_TREE_B-VALOR_04 = IT_ZGLT047_TREE_B-VALOR_04 + IT_TOTAIS_VBUND-VALOR_04.
        IT_ZGLT047_TREE_B-VALOR_05 = IT_ZGLT047_TREE_B-VALOR_05 + IT_TOTAIS_VBUND-VALOR_05.
        IT_ZGLT047_TREE_B-VALOR_06 = IT_ZGLT047_TREE_B-VALOR_06 + IT_TOTAIS_VBUND-VALOR_06.
        IT_ZGLT047_TREE_B-VALOR_07 = IT_ZGLT047_TREE_B-VALOR_07 + IT_TOTAIS_VBUND-VALOR_07.
        IT_ZGLT047_TREE_B-VALOR_08 = IT_ZGLT047_TREE_B-VALOR_08 + IT_TOTAIS_VBUND-VALOR_08.
        IT_ZGLT047_TREE_B-VALOR_09 = IT_ZGLT047_TREE_B-VALOR_09 + IT_TOTAIS_VBUND-VALOR_09.
        IT_ZGLT047_TREE_B-VALOR_10 = IT_ZGLT047_TREE_B-VALOR_10 + IT_TOTAIS_VBUND-VALOR_10.
        IT_ZGLT047_TREE_B-VALOR_11 = IT_ZGLT047_TREE_B-VALOR_11 + IT_TOTAIS_VBUND-VALOR_11.
        IT_ZGLT047_TREE_B-VALOR_12 = IT_ZGLT047_TREE_B-VALOR_12 + IT_TOTAIS_VBUND-VALOR_12.
        IT_ZGLT047_TREE_B-VALOR_AC = IT_ZGLT047_TREE_B-VALOR_AC + IT_TOTAIS_VBUND-VALOR_AC.

        "Volumes
        IT_ZGLT047_TREE_B-QUANT_01 = IT_ZGLT047_TREE_B-QUANT_01 + IT_TOTAIS_VBUND-QUANT_01.
        IT_ZGLT047_TREE_B-QUANT_02 = IT_ZGLT047_TREE_B-QUANT_02 + IT_TOTAIS_VBUND-QUANT_02.
        IT_ZGLT047_TREE_B-QUANT_03 = IT_ZGLT047_TREE_B-QUANT_03 + IT_TOTAIS_VBUND-QUANT_03.
        IT_ZGLT047_TREE_B-QUANT_04 = IT_ZGLT047_TREE_B-QUANT_04 + IT_TOTAIS_VBUND-QUANT_04.
        IT_ZGLT047_TREE_B-QUANT_05 = IT_ZGLT047_TREE_B-QUANT_05 + IT_TOTAIS_VBUND-QUANT_05.
        IT_ZGLT047_TREE_B-QUANT_06 = IT_ZGLT047_TREE_B-QUANT_06 + IT_TOTAIS_VBUND-QUANT_06.
        IT_ZGLT047_TREE_B-QUANT_07 = IT_ZGLT047_TREE_B-QUANT_07 + IT_TOTAIS_VBUND-QUANT_07.
        IT_ZGLT047_TREE_B-QUANT_08 = IT_ZGLT047_TREE_B-QUANT_08 + IT_TOTAIS_VBUND-QUANT_08.
        IT_ZGLT047_TREE_B-QUANT_09 = IT_ZGLT047_TREE_B-QUANT_09 + IT_TOTAIS_VBUND-QUANT_09.
        IT_ZGLT047_TREE_B-QUANT_10 = IT_ZGLT047_TREE_B-QUANT_10 + IT_TOTAIS_VBUND-QUANT_10.
        IT_ZGLT047_TREE_B-QUANT_11 = IT_ZGLT047_TREE_B-QUANT_11 + IT_TOTAIS_VBUND-QUANT_11.
        IT_ZGLT047_TREE_B-QUANT_12 = IT_ZGLT047_TREE_B-QUANT_12 + IT_TOTAIS_VBUND-QUANT_12.
        IT_ZGLT047_TREE_B-QUANT_AC = IT_ZGLT047_TREE_B-QUANT_AC + IT_TOTAIS_VBUND-QUANT_AC.
      ENDLOOP.
    ENDLOOP.
  ENDLOOP.

  IF IT_ZGLT047_TREE_B-VALOR_01 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_02 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_03 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_04 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_05 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_06 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_07 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_08 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_09 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_10 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_11 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_12 NE 0 OR

     IT_ZGLT047_TREE_B-QUANT_01 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_02 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_03 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_04 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_05 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_06 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_07 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_08 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_09 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_10 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_11 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_12 NE 0.

    IT_ZGLT047_TREE_B-VBUND = '<TERC>'.
    CK_EXPANDIR = ABAP_TRUE.

    " Inclui TERCEIROS Raises da ALV TREE VIEW """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    "*****************************************************************************************************************
    LS_ITEM_LAYOUT-FIELDNAME = G_TREE4->C_HIERARCHY_COLUMN_NAME.
    LS_ITEM_LAYOUT-STYLE     = CL_GUI_COLUMN_TREE=>STYLE_DEFAULT.
    APPEND LS_ITEM_LAYOUT TO LT_ITEM_LAYOUT.
    L_NODE_TEXT              = 'Terceiros'.

    CALL METHOD G_TREE4->ADD_NODE
      EXPORTING
        I_RELAT_NODE_KEY = P_RELAT_KEY
        I_RELATIONSHIP   = CL_GUI_COLUMN_TREE=>RELAT_LAST_CHILD
        I_NODE_TEXT      = L_NODE_TEXT
        IS_OUTTAB_LINE   = IT_ZGLT047_TREE_B
        IS_NODE_LAYOUT   = LS_NODE
        IT_ITEM_LAYOUT   = LT_ITEM_LAYOUT
      IMPORTING
        E_NEW_NODE_KEY   = P_NODE_KEY.
    "*****************************************************************************************************************

    " Inclui nodos Raises da ALV TREE VIEW """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    "*****************************************************************************************************************
    LS_ITEM_LAYOUT-FIELDNAME = G_TREE4->C_HIERARCHY_COLUMN_NAME.
    LS_ITEM_LAYOUT-STYLE     = CL_GUI_COLUMN_TREE=>STYLE_DEFAULT.
    IT_ZGLT047_TREE_B-VNOME  = 'Terceiros'.
    APPEND LS_ITEM_LAYOUT TO LT_ITEM_LAYOUT.
    L_NODE_TEXT       = 'Terceiros'.
    CLEAR: LS_NODE-N_IMAGE,
           LS_NODE-EXP_IMAGE.

    CALL METHOD G_TREE4->ADD_NODE
      EXPORTING
        I_RELAT_NODE_KEY = P_NODE_KEY
        I_RELATIONSHIP   = CL_GUI_COLUMN_TREE=>RELAT_LAST_CHILD
        I_NODE_TEXT      = L_NODE_TEXT
        IS_OUTTAB_LINE   = IT_ZGLT047_TREE_B
        IS_NODE_LAYOUT   = LS_NODE
        IT_ITEM_LAYOUT   = LT_ITEM_LAYOUT
      IMPORTING
        E_NEW_NODE_KEY   = P_NODE_KEY.
    "*****************************************************************************************************************

  ENDIF.

  "BUSCAR SOCIEDADES PARCEIRAS
  "*****************************************************************************************************************
  "*****************************************************************************************************************
  CLEAR: IT_ZGLT047_TREE_B, IT_TOTAIS[].

  LOOP AT IT_ZGLT049 INTO WA_ZGLT049_LC WHERE NIVEL EQ P_ZGLT047-NIVEL.
    LOOP AT IT_ZGLT041 WHERE COD_CLAS_BAL  EQ WA_ZGLT049_LC-COD_CLAS_BAL
                         AND COD_CLAS_NOT2 EQ WA_ZGLT049_LC-COD_CLAS_NOT.
      LOOP AT IT_TOTAIS_VBUND WHERE NIVEL        EQ WA_ZGLT049_LC-NIVEL
                                AND COD_CLAS_BAL EQ WA_ZGLT049_LC-COD_CLAS_BAL
                                AND COD_CLAS_NOT EQ WA_ZGLT049_LC-COD_CLAS_NOT
                                AND SAKNR        EQ IT_ZGLT041-SAKNR
                                AND VBUND        NE IT_ZGLT047_TREE_B-VBUND.
        CLEAR: IT_TOTAIS.
        IT_TOTAIS-VBUND    = IT_TOTAIS_VBUND-VBUND.

        "Valores
        IT_TOTAIS-VALOR_01 = IT_TOTAIS_VBUND-VALOR_01.
        IT_TOTAIS-VALOR_02 = IT_TOTAIS_VBUND-VALOR_02.
        IT_TOTAIS-VALOR_03 = IT_TOTAIS_VBUND-VALOR_03.
        IT_TOTAIS-VALOR_04 = IT_TOTAIS_VBUND-VALOR_04.
        IT_TOTAIS-VALOR_05 = IT_TOTAIS_VBUND-VALOR_05.
        IT_TOTAIS-VALOR_06 = IT_TOTAIS_VBUND-VALOR_06.
        IT_TOTAIS-VALOR_07 = IT_TOTAIS_VBUND-VALOR_07.
        IT_TOTAIS-VALOR_08 = IT_TOTAIS_VBUND-VALOR_08.
        IT_TOTAIS-VALOR_09 = IT_TOTAIS_VBUND-VALOR_09.
        IT_TOTAIS-VALOR_10 = IT_TOTAIS_VBUND-VALOR_10.
        IT_TOTAIS-VALOR_11 = IT_TOTAIS_VBUND-VALOR_11.
        IT_TOTAIS-VALOR_12 = IT_TOTAIS_VBUND-VALOR_12.
        IT_TOTAIS-VALOR_AC = IT_TOTAIS_VBUND-VALOR_AC.

        "Volumes
        IT_TOTAIS-QUANT_01 = IT_TOTAIS_VBUND-QUANT_01.
        IT_TOTAIS-QUANT_02 = IT_TOTAIS_VBUND-QUANT_02.
        IT_TOTAIS-QUANT_03 = IT_TOTAIS_VBUND-QUANT_03.
        IT_TOTAIS-QUANT_04 = IT_TOTAIS_VBUND-QUANT_04.
        IT_TOTAIS-QUANT_05 = IT_TOTAIS_VBUND-QUANT_05.
        IT_TOTAIS-QUANT_06 = IT_TOTAIS_VBUND-QUANT_06.
        IT_TOTAIS-QUANT_07 = IT_TOTAIS_VBUND-QUANT_07.
        IT_TOTAIS-QUANT_08 = IT_TOTAIS_VBUND-QUANT_08.
        IT_TOTAIS-QUANT_09 = IT_TOTAIS_VBUND-QUANT_09.
        IT_TOTAIS-QUANT_10 = IT_TOTAIS_VBUND-QUANT_10.
        IT_TOTAIS-QUANT_11 = IT_TOTAIS_VBUND-QUANT_11.
        IT_TOTAIS-QUANT_12 = IT_TOTAIS_VBUND-QUANT_12.
        IT_TOTAIS-QUANT_AC = IT_TOTAIS_VBUND-QUANT_AC.

        COLLECT IT_TOTAIS.
      ENDLOOP.
    ENDLOOP.
  ENDLOOP.

  MOVE-CORRESPONDING P_ZGLT047 TO IT_ZGLT047_TREE_B.
  IT_ZGLT047_TREE_B-VBUND  = '<PARC>'.

  LOOP AT IT_TOTAIS.
    IT_ZGLT047_TREE_B-VALOR_01 = IT_ZGLT047_TREE_B-VALOR_01 + IT_TOTAIS-VALOR_01.
    IT_ZGLT047_TREE_B-VALOR_02 = IT_ZGLT047_TREE_B-VALOR_02 + IT_TOTAIS-VALOR_02.
    IT_ZGLT047_TREE_B-VALOR_03 = IT_ZGLT047_TREE_B-VALOR_03 + IT_TOTAIS-VALOR_03.
    IT_ZGLT047_TREE_B-VALOR_04 = IT_ZGLT047_TREE_B-VALOR_04 + IT_TOTAIS-VALOR_04.
    IT_ZGLT047_TREE_B-VALOR_05 = IT_ZGLT047_TREE_B-VALOR_05 + IT_TOTAIS-VALOR_05.
    IT_ZGLT047_TREE_B-VALOR_06 = IT_ZGLT047_TREE_B-VALOR_06 + IT_TOTAIS-VALOR_06.
    IT_ZGLT047_TREE_B-VALOR_07 = IT_ZGLT047_TREE_B-VALOR_07 + IT_TOTAIS-VALOR_07.
    IT_ZGLT047_TREE_B-VALOR_08 = IT_ZGLT047_TREE_B-VALOR_08 + IT_TOTAIS-VALOR_08.
    IT_ZGLT047_TREE_B-VALOR_09 = IT_ZGLT047_TREE_B-VALOR_09 + IT_TOTAIS-VALOR_09.
    IT_ZGLT047_TREE_B-VALOR_10 = IT_ZGLT047_TREE_B-VALOR_10 + IT_TOTAIS-VALOR_10.
    IT_ZGLT047_TREE_B-VALOR_11 = IT_ZGLT047_TREE_B-VALOR_11 + IT_TOTAIS-VALOR_11.
    IT_ZGLT047_TREE_B-VALOR_12 = IT_ZGLT047_TREE_B-VALOR_12 + IT_TOTAIS-VALOR_12.
    IT_ZGLT047_TREE_B-VALOR_AC = IT_ZGLT047_TREE_B-VALOR_AC + IT_TOTAIS-VALOR_AC.

    IT_ZGLT047_TREE_B-QUANT_01 = IT_ZGLT047_TREE_B-QUANT_01 + IT_TOTAIS-QUANT_01.
    IT_ZGLT047_TREE_B-QUANT_02 = IT_ZGLT047_TREE_B-QUANT_02 + IT_TOTAIS-QUANT_02.
    IT_ZGLT047_TREE_B-QUANT_03 = IT_ZGLT047_TREE_B-QUANT_03 + IT_TOTAIS-QUANT_03.
    IT_ZGLT047_TREE_B-QUANT_04 = IT_ZGLT047_TREE_B-QUANT_04 + IT_TOTAIS-QUANT_04.
    IT_ZGLT047_TREE_B-QUANT_05 = IT_ZGLT047_TREE_B-QUANT_05 + IT_TOTAIS-QUANT_05.
    IT_ZGLT047_TREE_B-QUANT_06 = IT_ZGLT047_TREE_B-QUANT_06 + IT_TOTAIS-QUANT_06.
    IT_ZGLT047_TREE_B-QUANT_07 = IT_ZGLT047_TREE_B-QUANT_07 + IT_TOTAIS-QUANT_07.
    IT_ZGLT047_TREE_B-QUANT_08 = IT_ZGLT047_TREE_B-QUANT_08 + IT_TOTAIS-QUANT_08.
    IT_ZGLT047_TREE_B-QUANT_09 = IT_ZGLT047_TREE_B-QUANT_09 + IT_TOTAIS-QUANT_09.
    IT_ZGLT047_TREE_B-QUANT_10 = IT_ZGLT047_TREE_B-QUANT_10 + IT_TOTAIS-QUANT_10.
    IT_ZGLT047_TREE_B-QUANT_11 = IT_ZGLT047_TREE_B-QUANT_11 + IT_TOTAIS-QUANT_11.
    IT_ZGLT047_TREE_B-QUANT_12 = IT_ZGLT047_TREE_B-QUANT_12 + IT_TOTAIS-QUANT_12.
    IT_ZGLT047_TREE_B-QUANT_AC = IT_ZGLT047_TREE_B-QUANT_AC + IT_TOTAIS-QUANT_AC.
  ENDLOOP.

  IF IT_ZGLT047_TREE_B-VALOR_01 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_02 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_03 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_04 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_05 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_06 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_07 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_08 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_09 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_10 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_11 NE 0 OR
     IT_ZGLT047_TREE_B-VALOR_12 NE 0 OR

     IT_ZGLT047_TREE_B-QUANT_01 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_02 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_03 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_04 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_05 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_06 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_07 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_08 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_09 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_10 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_11 NE 0 OR
     IT_ZGLT047_TREE_B-QUANT_12 NE 0.

    CK_EXPANDIR = ABAP_TRUE.

    " Inclui TERCEIROS Raises da ALV TREE VIEW """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    "*****************************************************************************************************************
    LS_ITEM_LAYOUT-FIELDNAME = G_TREE4->C_HIERARCHY_COLUMN_NAME.
    LS_ITEM_LAYOUT-STYLE     = CL_GUI_COLUMN_TREE=>STYLE_DEFAULT.
    APPEND LS_ITEM_LAYOUT TO LT_ITEM_LAYOUT.
    L_NODE_TEXT              = 'Partes relacionadas'.
    CLEAR: LS_NODE-N_IMAGE,
           LS_NODE-EXP_IMAGE.

    CALL METHOD G_TREE4->ADD_NODE
      EXPORTING
        I_RELAT_NODE_KEY = P_RELAT_KEY
        I_RELATIONSHIP   = CL_GUI_COLUMN_TREE=>RELAT_LAST_CHILD
        I_NODE_TEXT      = L_NODE_TEXT
        IS_OUTTAB_LINE   = IT_ZGLT047_TREE_B
        IS_NODE_LAYOUT   = LS_NODE
        IT_ITEM_LAYOUT   = LT_ITEM_LAYOUT
      IMPORTING
        E_NEW_NODE_KEY   = P_NODE_KEY.
    "*****************************************************************************************************************

    LOOP AT IT_TOTAIS.
      CLEAR IT_ZGLT047_TREE_B.
      MOVE-CORRESPONDING P_ZGLT047 TO IT_ZGLT047_TREE_B.

      READ TABLE IT_T880 WITH KEY RCOMP = IT_TOTAIS-VBUND BINARY SEARCH.

      IT_ZGLT047_TREE_B-VBUND    = IT_TOTAIS-VBUND.
      IT_ZGLT047_TREE_B-VNOME    = IT_T880-NAME1.

      IT_ZGLT047_TREE_B-VALOR_01 = IT_TOTAIS-VALOR_01.
      IT_ZGLT047_TREE_B-VALOR_02 = IT_TOTAIS-VALOR_02.
      IT_ZGLT047_TREE_B-VALOR_03 = IT_TOTAIS-VALOR_03.
      IT_ZGLT047_TREE_B-VALOR_04 = IT_TOTAIS-VALOR_04.
      IT_ZGLT047_TREE_B-VALOR_05 = IT_TOTAIS-VALOR_05.
      IT_ZGLT047_TREE_B-VALOR_06 = IT_TOTAIS-VALOR_06.
      IT_ZGLT047_TREE_B-VALOR_07 = IT_TOTAIS-VALOR_07.
      IT_ZGLT047_TREE_B-VALOR_08 = IT_TOTAIS-VALOR_08.
      IT_ZGLT047_TREE_B-VALOR_09 = IT_TOTAIS-VALOR_09.
      IT_ZGLT047_TREE_B-VALOR_10 = IT_TOTAIS-VALOR_10.
      IT_ZGLT047_TREE_B-VALOR_11 = IT_TOTAIS-VALOR_11.
      IT_ZGLT047_TREE_B-VALOR_12 = IT_TOTAIS-VALOR_12.
      IT_ZGLT047_TREE_B-VALOR_AC = IT_TOTAIS-VALOR_AC.

      IT_ZGLT047_TREE_B-QUANT_01 = IT_TOTAIS-QUANT_01.
      IT_ZGLT047_TREE_B-QUANT_02 = IT_TOTAIS-QUANT_02.
      IT_ZGLT047_TREE_B-QUANT_03 = IT_TOTAIS-QUANT_03.
      IT_ZGLT047_TREE_B-QUANT_04 = IT_TOTAIS-QUANT_04.
      IT_ZGLT047_TREE_B-QUANT_05 = IT_TOTAIS-QUANT_05.
      IT_ZGLT047_TREE_B-QUANT_06 = IT_TOTAIS-QUANT_06.
      IT_ZGLT047_TREE_B-QUANT_07 = IT_TOTAIS-QUANT_07.
      IT_ZGLT047_TREE_B-QUANT_08 = IT_TOTAIS-QUANT_08.
      IT_ZGLT047_TREE_B-QUANT_09 = IT_TOTAIS-QUANT_09.
      IT_ZGLT047_TREE_B-QUANT_10 = IT_TOTAIS-QUANT_10.
      IT_ZGLT047_TREE_B-QUANT_11 = IT_TOTAIS-QUANT_11.
      IT_ZGLT047_TREE_B-QUANT_12 = IT_TOTAIS-QUANT_12.
      IT_ZGLT047_TREE_B-QUANT_AC = IT_TOTAIS-QUANT_AC.

      " Inclui TERCEIROS Raises da ALV TREE VIEW """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
      "*****************************************************************************************************************
      LS_ITEM_LAYOUT-FIELDNAME = G_TREE4->C_HIERARCHY_COLUMN_NAME.
      LS_ITEM_LAYOUT-STYLE     = CL_GUI_COLUMN_TREE=>STYLE_DEFAULT.
      APPEND LS_ITEM_LAYOUT TO LT_ITEM_LAYOUT.
      CONCATENATE IT_TOTAIS-VBUND '-' IT_T880-NAME1 INTO L_NODE_TEXT SEPARATED BY SPACE.

      CALL METHOD G_TREE4->ADD_NODE
        EXPORTING
          I_RELAT_NODE_KEY = P_NODE_KEY
          I_RELATIONSHIP   = CL_GUI_COLUMN_TREE=>RELAT_LAST_CHILD
          I_NODE_TEXT      = L_NODE_TEXT
          IS_OUTTAB_LINE   = IT_ZGLT047_TREE_B
          IS_NODE_LAYOUT   = LS_NODE
          IT_ITEM_LAYOUT   = LT_ITEM_LAYOUT
        IMPORTING
          E_NEW_NODE_KEY   = P_NODE_KEY2.
      "*****************************************************************************************************************
    ENDLOOP.

  ENDIF.
  "*****************************************************************************************************************

ENDFORM.                    " BUSCA_NOTAS_FILHAS_B

*&---------------------------------------------------------------------*
*&      Form  BUSCA_FILHOS_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_ZGLT047_LC  text
*      -->P_P_NODE_KEY  text
*----------------------------------------------------------------------*
FORM BUSCA_FILHOS_B  USING P_ZGLT047   TYPE ZGLT047
                           P_RELAT_KEY TYPE LVC_NKEY
                  CHANGING CK_EXPANDIR.

  DATA: LT_ITEM_LAYOUT TYPE LVC_T_LAYI,
        LS_ITEM_LAYOUT TYPE LVC_S_LAYI,
        LS_NODE        TYPE LVC_S_LAYN,
        P_NODE_KEY     TYPE LVC_NKEY,
        L_NODE_TEXT    TYPE LVC_VALUE,
        WA_ZGLT047_LC  TYPE ZGLT047.

  LOOP AT IT_ZGLT047 INTO WA_ZGLT047_LC WHERE NIVELPAI EQ P_ZGLT047-NIVEL.

    CK_EXPANDIR = ABAP_TRUE.

    CLEAR: IT_ZGLT047_TREE_B.
    MOVE-CORRESPONDING WA_ZGLT047_LC TO IT_ZGLT047_TREE_B.
    IF WA_ZGLT047_LC-NIVELSUM EQ ABAP_TRUE.
      PERFORM BUSCA_TOTAIS_NIVEL_SOMA_B USING WA_ZGLT047_LC CHANGING IT_ZGLT047_TREE_B.
    ELSE.
      PERFORM BUSCA_SALDO_NIVEL_B USING WA_ZGLT047_LC CHANGING IT_ZGLT047_TREE_B.
    ENDIF.
    "APPEND IT_ZGLT047_TREE_B.

    " Inclui nodos Raises da ALV TREE VIEW """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    "*****************************************************************************************************************
    IF WA_ZGLT047_LC-NIVELSUM EQ ABAP_TRUE.
      LS_ITEM_LAYOUT-T_IMAGE = '@3Z@'.
      LS_NODE-N_IMAGE        = LS_ITEM_LAYOUT-T_IMAGE.
      LS_NODE-EXP_IMAGE      = LS_ITEM_LAYOUT-T_IMAGE.
    ELSE.
      CLEAR: LS_ITEM_LAYOUT-T_IMAGE.
      LS_NODE-N_IMAGE   = SPACE.
      LS_NODE-EXP_IMAGE = SPACE.
    ENDIF.
    LS_ITEM_LAYOUT-FIELDNAME = G_TREE4->C_HIERARCHY_COLUMN_NAME.
    LS_ITEM_LAYOUT-STYLE     = CL_GUI_COLUMN_TREE=>STYLE_DEFAULT.
    APPEND LS_ITEM_LAYOUT TO LT_ITEM_LAYOUT.
    CONCATENATE WA_ZGLT047_LC-NIVEL '-' WA_ZGLT047_LC-DESNVL INTO L_NODE_TEXT.

    CALL METHOD G_TREE4->ADD_NODE
      EXPORTING
        I_RELAT_NODE_KEY = P_RELAT_KEY
        I_RELATIONSHIP   = CL_GUI_COLUMN_TREE=>RELAT_LAST_CHILD
        I_NODE_TEXT      = L_NODE_TEXT
        IS_OUTTAB_LINE   = IT_ZGLT047_TREE_B
        IS_NODE_LAYOUT   = LS_NODE
        IT_ITEM_LAYOUT   = LT_ITEM_LAYOUT
      IMPORTING
        E_NEW_NODE_KEY   = P_NODE_KEY.
    "*****************************************************************************************************************

    PERFORM BUSCA_NOTAS_FILHAS_B USING WA_ZGLT047_LC P_NODE_KEY CHANGING CK_EXPANDIR.

    PERFORM BUSCA_FILHOS_B USING WA_ZGLT047_LC P_NODE_KEY CHANGING CK_EXPANDIR.

  ENDLOOP.

ENDFORM.                    " BUSCA_FILHOS_B

*&---------------------------------------------------------------------*
*&      Form  BUSCA_SALDO_NIVEL_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_ZGLT047_LC  text
*      <--P_IT_ZGLT047_TREE_B_VALOR_01  text
*      <--P_IT_ZGLT047_TREE_B_VALOR_02  text
*      <--P_IT_ZGLT047_TREE_B_VALOR_03  text
*----------------------------------------------------------------------*
FORM BUSCA_SALDO_NIVEL_B   USING P_ZGLT047  TYPE ZGLT047
                        CHANGING REGISTRO   TYPE TY_ZGLT047_TREE_B.
  "Busca Saldo no Nível
  LOOP AT IT_ZGLT049 WHERE NIVEL EQ P_ZGLT047-NIVEL.
    LOOP AT IT_ZGLT041 WHERE COD_CLAS_BAL  EQ IT_ZGLT049-COD_CLAS_BAL
                         AND COD_CLAS_NOT2 EQ IT_ZGLT049-COD_CLAS_NOT.
      LOOP AT IT_TOTAIS_VBUND WHERE NIVEL        = IT_ZGLT049-NIVEL
                                AND COD_CLAS_BAL = IT_ZGLT049-COD_CLAS_BAL
                                AND COD_CLAS_NOT = IT_ZGLT049-COD_CLAS_NOT
                                AND SAKNR        = IT_ZGLT041-SAKNR.
        "Valores
        REGISTRO-VALOR_01 = REGISTRO-VALOR_01 + IT_TOTAIS_VBUND-VALOR_01.
        REGISTRO-VALOR_02 = REGISTRO-VALOR_02 + IT_TOTAIS_VBUND-VALOR_02.
        REGISTRO-VALOR_03 = REGISTRO-VALOR_03 + IT_TOTAIS_VBUND-VALOR_03.
        REGISTRO-VALOR_04 = REGISTRO-VALOR_04 + IT_TOTAIS_VBUND-VALOR_04.
        REGISTRO-VALOR_05 = REGISTRO-VALOR_05 + IT_TOTAIS_VBUND-VALOR_05.
        REGISTRO-VALOR_06 = REGISTRO-VALOR_06 + IT_TOTAIS_VBUND-VALOR_06.
        REGISTRO-VALOR_07 = REGISTRO-VALOR_07 + IT_TOTAIS_VBUND-VALOR_07.
        REGISTRO-VALOR_08 = REGISTRO-VALOR_08 + IT_TOTAIS_VBUND-VALOR_08.
        REGISTRO-VALOR_09 = REGISTRO-VALOR_09 + IT_TOTAIS_VBUND-VALOR_09.
        REGISTRO-VALOR_10 = REGISTRO-VALOR_10 + IT_TOTAIS_VBUND-VALOR_10.
        REGISTRO-VALOR_11 = REGISTRO-VALOR_11 + IT_TOTAIS_VBUND-VALOR_11.
        REGISTRO-VALOR_12 = REGISTRO-VALOR_12 + IT_TOTAIS_VBUND-VALOR_12.
        REGISTRO-VALOR_AC = REGISTRO-VALOR_AC + IT_TOTAIS_VBUND-VALOR_AC.

        "Volumes
        REGISTRO-QUANT_01 = REGISTRO-QUANT_01 + IT_TOTAIS_VBUND-QUANT_01.
        REGISTRO-QUANT_02 = REGISTRO-QUANT_02 + IT_TOTAIS_VBUND-QUANT_02.
        REGISTRO-QUANT_03 = REGISTRO-QUANT_03 + IT_TOTAIS_VBUND-QUANT_03.
        REGISTRO-QUANT_04 = REGISTRO-QUANT_04 + IT_TOTAIS_VBUND-QUANT_04.
        REGISTRO-QUANT_05 = REGISTRO-QUANT_05 + IT_TOTAIS_VBUND-QUANT_05.
        REGISTRO-QUANT_06 = REGISTRO-QUANT_06 + IT_TOTAIS_VBUND-QUANT_06.
        REGISTRO-QUANT_07 = REGISTRO-QUANT_07 + IT_TOTAIS_VBUND-QUANT_07.
        REGISTRO-QUANT_08 = REGISTRO-QUANT_08 + IT_TOTAIS_VBUND-QUANT_08.
        REGISTRO-QUANT_09 = REGISTRO-QUANT_09 + IT_TOTAIS_VBUND-QUANT_09.
        REGISTRO-QUANT_10 = REGISTRO-QUANT_10 + IT_TOTAIS_VBUND-QUANT_10.
        REGISTRO-QUANT_11 = REGISTRO-QUANT_11 + IT_TOTAIS_VBUND-QUANT_11.
        REGISTRO-QUANT_12 = REGISTRO-QUANT_12 + IT_TOTAIS_VBUND-QUANT_12.
        REGISTRO-QUANT_AC = REGISTRO-QUANT_AC + IT_TOTAIS_VBUND-QUANT_AC.
      ENDLOOP.
    ENDLOOP.
  ENDLOOP.

  LOOP AT IT_ZGLT047 WHERE NIVELPAI EQ P_ZGLT047-NIVEL.
    PERFORM BUSCA_SALDO_NIVEL_B USING IT_ZGLT047 CHANGING REGISTRO.
  ENDLOOP.

ENDFORM.                    " BUSCA_SALDO_NIVEL_B

*&---------------------------------------------------------------------*
*&      Form  CATALOGO_TREE_ALV_DRE_B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_FIELDCATALOG  text
*----------------------------------------------------------------------*
FORM CATALOGO_TREE_ALV_DRE_B  TABLES  IT_FIELDCATALOG STRUCTURE LVC_S_FCAT.

  DATA: FIELD          TYPE LVC_S_FCAT,
        VG_GJAHR       TYPE GJAHR,
        VG_POSIC       TYPE I,
        VG_MONAT       TYPE MONAT,
        IT_MONTH_NAMES TYPE TABLE OF T247 WITH HEADER LINE,
        VT_GJAHR(4),
        VT_MONAT(2).

  CALL FUNCTION 'MONTH_NAMES_GET'
    EXPORTING
      LANGUAGE              = SY-LANGU
    TABLES
      MONTH_NAMES           = IT_MONTH_NAMES
    EXCEPTIONS
      MONTH_NAMES_NOT_FOUND = 1
      OTHERS                = 2.

  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  SORT IT_MONTH_NAMES BY MNR.

  VG_MONAT = 1.
  VG_POSIC = 1.

  WHILE VG_MONAT LE R_MONAT2.

    IF C_VOLUME = 'X'.
      CLEAR: FIELD.
      READ TABLE IT_MONTH_NAMES WITH KEY MNR = VG_MONAT BINARY SEARCH.
      CONCATENATE IT_MONTH_NAMES-LTX '(Qtd)' INTO FIELD-SCRTEXT_L SEPARATED BY SPACE.
      FIELD-COL_POS   = VG_POSIC.
      CONCATENATE 'QUANT_' IT_MONTH_NAMES-MNR INTO FIELD-FIELDNAME.
      FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
      FIELD-EMPHASIZE = 'K41'.
      FIELD-OUTPUTLEN = 30.
      CONCATENATE IT_MONTH_NAMES-KTX '(Qtd)' INTO FIELD-SCRTEXT_M SEPARATED BY SPACE.
      CONCATENATE IT_MONTH_NAMES-KTX '(Qtd)' INTO FIELD-SCRTEXT_S SEPARATED BY SPACE.
      FIELD-DO_SUM    = ABAP_TRUE.
      FIELD-DATATYPE  = 'NUMC'.
      FIELD-JUST      = 'R'.
      APPEND FIELD TO IT_FIELDCATALOG.
      ADD 1 TO VG_POSIC.
    ENDIF.

    CLEAR: FIELD.
    READ TABLE IT_MONTH_NAMES WITH KEY MNR = VG_MONAT BINARY SEARCH.
    CONCATENATE IT_MONTH_NAMES-LTX '-' R_WAERS  INTO FIELD-SCRTEXT_L SEPARATED BY SPACE.
    FIELD-COL_POS   = VG_POSIC.
    CONCATENATE 'VALOR_' IT_MONTH_NAMES-MNR INTO FIELD-FIELDNAME.
    FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
    FIELD-EMPHASIZE = 'K41'.
    FIELD-OUTPUTLEN = 30.
    CONCATENATE IT_MONTH_NAMES-KTX '-' R_WAERS  INTO FIELD-SCRTEXT_M SEPARATED BY SPACE.
    CONCATENATE IT_MONTH_NAMES-KTX '-' R_WAERS  INTO FIELD-SCRTEXT_S SEPARATED BY SPACE.
    FIELD-DO_SUM    = ABAP_TRUE.
    FIELD-DATATYPE  = 'NUMC'.
    FIELD-JUST      = 'R'.
    APPEND FIELD TO IT_FIELDCATALOG.

    ADD 1 TO VG_POSIC.
    ADD 1 TO VG_MONAT.

  ENDWHILE.

  IF C_VOLUME = 'X'.
    CLEAR: FIELD.
    CONCATENATE 'Saldo Acumulado' '(Qtd)' INTO FIELD-SCRTEXT_L SEPARATED BY SPACE.
    FIELD-COL_POS   = VG_POSIC.
    CONCATENATE 'QUANT_' 'AC' INTO FIELD-FIELDNAME.
    FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
    FIELD-EMPHASIZE = 'K41'.
    FIELD-OUTPUTLEN = 30.
    CONCATENATE 'Saldo' '-' 'Qtd' INTO FIELD-SCRTEXT_M.
    CONCATENATE 'Saldo' '-' 'Qtd' INTO FIELD-SCRTEXT_S.
    FIELD-DO_SUM    = ABAP_TRUE.
    FIELD-DATATYPE  = 'NUMC'.
    FIELD-JUST      = 'R'.
    APPEND FIELD TO IT_FIELDCATALOG.
    ADD 1 TO VG_POSIC.
  ENDIF.

  CLEAR: FIELD.
  CONCATENATE 'Saldo Acumulado' R_WAERS INTO FIELD-SCRTEXT_L SEPARATED BY SPACE.
  FIELD-COL_POS   = VG_POSIC.
  CONCATENATE 'VALOR_' 'AC' INTO FIELD-FIELDNAME.
  FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
  FIELD-EMPHASIZE = 'K41'.
  FIELD-OUTPUTLEN = 30.
  CONCATENATE 'Saldo' '-' R_WAERS INTO FIELD-SCRTEXT_M.
  CONCATENATE 'Saldo' '-' R_WAERS INTO FIELD-SCRTEXT_S.
  FIELD-DO_SUM    = ABAP_TRUE.
  FIELD-DATATYPE  = 'NUMC'.
  FIELD-JUST      = 'R'.
  APPEND FIELD TO IT_FIELDCATALOG.
  ADD 1 TO VG_POSIC.

  CLEAR: FIELD.
  FIELD-COL_POS   = VG_POSIC.
  FIELD-FIELDNAME = 'NIVEL'.
  FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
  FIELD-EMPHASIZE = 'K41'.
  FIELD-OUTPUTLEN = 10.
  FIELD-SCRTEXT_L = 'Nível da Estrutura de Balanço Patrimonial'.
  FIELD-SCRTEXT_M = 'Nível Estrutura'.
  FIELD-SCRTEXT_S = 'Nível Estrutura'.
  APPEND FIELD TO IT_FIELDCATALOG.
  ADD 1 TO VG_POSIC.

  CLEAR: FIELD.
  FIELD-COL_POS   = VG_POSIC.
  FIELD-FIELDNAME = 'DESNVL'.
  FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
  FIELD-EMPHASIZE = 'K41'.
  FIELD-OUTPUTLEN = 35.
  FIELD-SCRTEXT_L = 'Descrição da Estrutura de Balanço Patrimonial'.
  FIELD-SCRTEXT_M = 'Descrição Estrutura'.
  FIELD-SCRTEXT_S = 'Descrição Estrutura'.
  APPEND FIELD TO IT_FIELDCATALOG.
  ADD 1 TO VG_POSIC.

  CLEAR: FIELD.
  FIELD-COL_POS   = VG_POSIC.
  FIELD-FIELDNAME = 'VBUND'.
  FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
  FIELD-EMPHASIZE = 'K41'.
  FIELD-OUTPUTLEN = 35.
  FIELD-SCRTEXT_L = 'S.Parceira'.
  FIELD-SCRTEXT_M = 'S.Parceira'.
  FIELD-SCRTEXT_S = 'S.Parceira'.
  APPEND FIELD TO IT_FIELDCATALOG.
  ADD 1 TO VG_POSIC.

  CLEAR: FIELD.
  FIELD-COL_POS   = VG_POSIC.
  FIELD-FIELDNAME = 'VNOME'.
  FIELD-TABNAME   = 'IT_ZGLT047_TREE_B'.
  FIELD-EMPHASIZE = 'K41'.
  FIELD-OUTPUTLEN = 35.
  FIELD-SCRTEXT_L = 'Nome Sociedade Parceira'.
  FIELD-SCRTEXT_M = 'Nome Sociedade Parceira'.
  FIELD-SCRTEXT_S = 'Nome Sociedade Parceira'.
  APPEND FIELD TO IT_FIELDCATALOG.
  ADD 1 TO VG_POSIC.

ENDFORM.                    " CATALOGO_TREE_ALV_DRE_B

*&---------------------------------------------------------------------*
*&      Form  BUSCA_TOTAIS_NIVEL_SOMA_B
*&---------------------------------------------------------------------*
*       Totaliza Nível Somatório que não possui Filhos, mais dependências
*----------------------------------------------------------------------*
FORM BUSCA_TOTAIS_NIVEL_SOMA_B  USING    P_ZGLT047 TYPE ZGLT047
                                CHANGING REGISTRO  TYPE TY_ZGLT047_TREE_B.

  DATA: WA_ZGLT047_LC TYPE ZGLT047.

  LOOP AT IT_ZGLT048 WHERE NIVEL EQ P_ZGLT047-NIVEL.
    READ TABLE IT_ZGLT047 INTO WA_ZGLT047_LC WITH KEY NIVEL = IT_ZGLT048-NIVELSUM.
    "Nivel Existe??
    IF SY-SUBRC IS INITIAL.
      PERFORM BUSCA_SALDO_NIVEL_B USING WA_ZGLT047_LC CHANGING REGISTRO.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " BUSCA_TOTAIS_NIVEL_SOMA_B

*&---------------------------------------------------------------------*
*&      Form  TOTALIZAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_DRE_VBUND1  text
*      <--P_IT_TOTAIS_VBUND  text
*----------------------------------------------------------------------*
FORM TOTALIZAR  USING    P_VBUND1 TYPE TY_ZGL029_DRE_DADOS
                CHANGING P_VBUND  TYPE TY_1103_TOTAIS_VBUND.

  DATA: CAMPO  TYPE C LENGTH 512,
        MES    TYPE C LENGTH 2,
        VG_MES TYPE I.

  FIELD-SYMBOLS: <VALOR>  TYPE HSLXX12,
                 <VLRDRE> TYPE ZWRBTR_DRE. " WRBTR.

  CASE R_WAERS.
    WHEN IT_T001-WAERS.
      CAMPO = 'VLR_REA'.
    WHEN LS_X001-HWAE2.
      CAMPO = 'VLR_DOLAR'.
    WHEN LS_X001-HWAE3.
      CAMPO = 'VLR_GRUPO'.
  ENDCASE.

  ASSIGN COMPONENT CAMPO OF STRUCTURE P_VBUND1 TO <VLRDRE>.

  VG_MES = 1.

  DO 12 TIMES.

    WRITE VG_MES TO MES.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = MES
      IMPORTING
        OUTPUT = MES.

    CONCATENATE 'VALOR_' MES INTO CAMPO.
    ASSIGN COMPONENT CAMPO OF STRUCTURE P_VBUND TO <VALOR>.
    <VALOR> = 0.

    CONCATENATE 'QUANT_' MES INTO CAMPO.
    ASSIGN COMPONENT CAMPO OF STRUCTURE P_VBUND TO <VALOR>.
    <VALOR> = 0.

    ADD 1 TO VG_MES.

  ENDDO.

  IT_TOTAIS_VBUND-VALOR_AC = 0.
  IT_TOTAIS_VBUND-QUANT_AC = 0.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      INPUT  = P_VBUND1-MONAT
    IMPORTING
      OUTPUT = MES.

  CONCATENATE 'VALOR_' MES INTO CAMPO.
  ASSIGN COMPONENT CAMPO OF STRUCTURE P_VBUND TO <VALOR>.
  <VALOR> = <VLRDRE>.

  CONCATENATE 'QUANT_' MES INTO CAMPO.
  ASSIGN COMPONENT CAMPO OF STRUCTURE P_VBUND TO <VALOR>.
  <VALOR> = IT_DRE_VBUND1-QTD_TON.

  P_VBUND-VALOR_AC = <VLRDRE>.
  P_VBUND-QUANT_AC = P_VBUND1-QTD_TON.

  UNASSIGN: <VALOR>.

ENDFORM.                    " TOTALIZAR

*&---------------------------------------------------------------------*
*&      Form  AJUSTA_VALOR_SAIDA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_ZGLT047_TREE_B_VALOR_04  text
*      <--P_WA_SAIDA_VALOR_04  text
*----------------------------------------------------------------------*
FORM AJUSTA_VALOR_SAIDA  USING    P_VALOR   TYPE HSLXX12
                         CHANGING P_VALOR_S TYPE CHAR30.

  IF P_VALOR LT 0.
    MULTIPLY P_VALOR BY -1.
    MOVE P_VALOR TO P_VALOR_S.
    SHIFT P_VALOR_S LEFT DELETING LEADING ' '.
    CONCATENATE '-' P_VALOR_S INTO P_VALOR_S.
    REPLACE ALL OCCURRENCES OF '.' IN P_VALOR_S WITH ','.
  ELSE.
    WRITE P_VALOR TO P_VALOR_S.
  ENDIF.

ENDFORM.                    " AJUSTA_VALOR_SAIDA
