*----------------------------------------------------------------------*
***INCLUDE LZLES_REPORTF02 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SELECIONAR_DADOS_ADT_LQ
*&---------------------------------------------------------------------*
FORM SELECIONAR_DADOS_ADT_LQ .


  CONSTANTS SET_DEPARTAMENTOS TYPE C LENGTH 17 VALUE 'MAGGI_ZLES0079_DP'.

  TYPES: BEGIN OF TY_SETLEAF,
           SETNAME      TYPE SETLEAF-SETNAME,
           VALFROM      TYPE SETLEAF-VALFROM,
           VALFROM_AUX  TYPE ZFIT0045-DEP_RESP,
           END OF TY_SETLEAF.

  DATA: LT_SETLEAF TYPE TABLE OF TY_SETLEAF,
        LW_SETLEAF TYPE TY_SETLEAF.

  DATA: LT_ZFIT0045 TYPE TABLE OF ZFIT0045,
        LW_ZFIT0045 TYPE ZFIT0045.

  DATA: LT_EKKO TYPE TABLE OF EKKO,
        LW_EKKO TYPE EKKO.

  DATA: LT_LFA1 TYPE TABLE OF LFA1,
        LW_LFA1 TYPE LFA1.

  DATA: VAR_TABIX TYPE SY-TABIX.

  FIELD-SYMBOLS: <FS_SETLEAF> TYPE TY_SETLEAF.


  REFRESH: LT_SETLEAF[], LT_ZFIT0045[], LT_EKKO[], GT_BSAK[], GT_BSAK_ADT_LIQ[],  GT_BSAK_AUX[].
  CLEAR: LW_SETLEAF, LW_ZFIT0045, LW_EKKO.


  "Selecionar todos os departamentos cadastrados no SET.
  SELECT SETNAME VALFROM FROM SETLEAF
    INTO TABLE LT_SETLEAF
 WHERE SETNAME EQ SET_DEPARTAMENTOS.


  IF ( SY-SUBRC EQ 0 ).

    LOOP AT LT_SETLEAF ASSIGNING <FS_SETLEAF>.
      <FS_SETLEAF>-VALFROM_AUX = <FS_SETLEAF>-VALFROM.
    ENDLOOP.
    UNASSIGN <FS_SETLEAF>.

    SELECT * FROM ZFIT0045
      INTO TABLE LT_ZFIT0045
      FOR ALL ENTRIES IN LT_SETLEAF
    WHERE DEP_RESP EQ LT_SETLEAF-VALFROM_AUX.

    SELECT * FROM EKKO
      INTO TABLE LT_EKKO
      FOR ALL ENTRIES IN LT_ZFIT0045
    WHERE EBELN EQ LT_ZFIT0045-EBELN
      AND BSART EQ 'NB'.

    "Selecionar frete terceiro/proprio.
    SELECT  BUKRS AUGDT BLART SHKZG AUGBL BELNR GJAHR DMBTR DMBE2 MONAT XBLNR LIFNR ZFBDT ZBD1T SGTXT BUDAT UMSKS EBELN GSBER
      FROM BSAK
      INTO TABLE GT_BSAK
      FOR ALL ENTRIES IN LT_ZFIT0045
    WHERE BUKRS EQ LT_ZFIT0045-BUKRS
      AND BELNR EQ LT_ZFIT0045-BELNR
      AND AUGDT IN IT_AUGDT.

    SELECT  BUKRS AUGDT BLART SHKZG AUGBL BELNR GJAHR DMBTR DMBE2 MONAT XBLNR LIFNR ZFBDT ZBD1T SGTXT BUDAT UMSKS EBELN GSBER
      FROM BSAK
      INTO TABLE GT_BSAK_AUX
      FOR ALL ENTRIES IN GT_BSAK
    WHERE BUKRS EQ GT_BSAK-BUKRS
      AND BELNR EQ GT_BSAK-AUGBL.

    SELECT  BUKRS AUGDT BLART SHKZG AUGBL BELNR GJAHR DMBTR DMBE2 MONAT XBLNR LIFNR ZFBDT ZBD1T SGTXT BUDAT UMSKS EBELN GSBER
      FROM BSAK
      INTO TABLE  GT_BSAK_ADT_LIQ
      FOR ALL ENTRIES IN GT_BSAK_AUX
    WHERE BUKRS EQ GT_BSAK_AUX-BUKRS
      AND AUGBL EQ GT_BSAK_AUX-AUGBL
      AND UMSKS EQ SPACE.

    LOOP AT GT_BSAK_ADT_LIQ INTO GW_BSAK_ADT_LIQ.
      CLEAR: VAR_TABIX.
      VAR_TABIX = SY-TABIX.
      IF ( GW_BSAK_ADT_LIQ-AUGBL EQ GW_BSAK_ADT_LIQ-BELNR ).
        DELETE GT_BSAK_ADT_LIQ INDEX VAR_TABIX.
        CLEAR: GW_BSAK_ADT_LIQ.
        CONTINUE.
      ENDIF.
      CLEAR: GW_BSAK_ADT_LIQ.
    ENDLOOP.

    SELECT * FROM LFA1
      INTO TABLE LT_LFA1
      FOR ALL ENTRIES IN GT_BSAK_ADT_LIQ
     WHERE LIFNR EQ GT_BSAK_ADT_LIQ-LIFNR.

    LOOP AT GT_BSAK_ADT_LIQ INTO GW_BSAK_ADT_LIQ.

      GW_SAIDA-BELNR_FAT  = GW_BSAK_ADT_LIQ-BELNR.
      GW_SAIDA-AUGBL_FAT  = GW_BSAK_ADT_LIQ-AUGBL.
      GW_SAIDA-BUDAT_FAT  = GW_BSAK_ADT_LIQ-BUDAT.
      GW_SAIDA-DMBTR_FAT  = GW_BSAK_ADT_LIQ-DMBTR.
      GW_SAIDA-DMBE2_FAT  =  GW_BSAK_ADT_LIQ-DMBE2.
      GW_SAIDA-BUKRS      = GW_BSAK_ADT_LIQ-BUKRS.

      READ TABLE GT_BSAK_AUX INTO GW_BSAK_AUX WITH KEY BUKRS = GW_BSAK_ADT_LIQ-BUKRS
                                                       AUGBL = GW_BSAK_ADT_LIQ-AUGBL.

      READ TABLE GT_BSAK INTO GW_BSAK WITH KEY BUKRS = GW_BSAK_AUX-BUKRS
                                               AUGBL = GW_BSAK_AUX-BELNR.

      GW_SAIDA-AUGBL = GW_BSAK-AUGBL.

      READ TABLE LT_ZFIT0045 INTO LW_ZFIT0045 WITH KEY BUKRS = GW_BSAK-BUKRS
                                                       BELNR = GW_BSAK-BELNR.

      GW_SAIDA-EBELN = LW_ZFIT0045-EBELN.
      GW_SAIDA-BELNR = LW_ZFIT0045-BELNR.


      READ TABLE LT_LFA1 INTO LW_LFA1 WITH KEY LIFNR = GW_BSAK_ADT_LIQ-LIFNR.
      GW_SAIDA-LIFNR = LW_LFA1-LIFNR.
      GW_SAIDA-NAME1 = LW_LFA1-NAME1.


      GW_SAIDA-AUGDT = GW_BSAK_AUX-AUGDT.
      GW_SAIDA-BUDAT = GW_BSAK_AUX-BUDAT.
      GW_SAIDA-ZFBDT = GW_BSAK_AUX-ZFBDT + GW_BSAK_AUX-ZBD1T.
      GW_SAIDA-DMBTR = GW_BSAK_AUX-DMBTR.
      GW_SAIDA-DMBE2 = GW_BSAK_AUX-DMBE2.

      APPEND GW_SAIDA TO GT_SAIDA.
      CLEAR: GW_SAIDA, GW_BSAK, LW_LFA1.

    ENDLOOP.

    REFRESH: GT_BSAK[], GT_BSAK_AUX[].

    SELECT  BUKRS AUGDT BLART SHKZG AUGBL BELNR GJAHR DMBTR DMBE2 MONAT XBLNR LIFNR ZFBDT ZBD1T SGTXT BUDAT UMSKS EBELN GSBER
      FROM BSAK
      INTO TABLE GT_BSAK
      FOR ALL ENTRIES IN GT_BSAK_ADT_LIQ
    WHERE BUKRS EQ GT_BSAK_ADT_LIQ-BUKRS
      AND BELNR EQ GT_BSAK_ADT_LIQ-AUGBL
      AND UMSKS NE SPACE.

    LOOP AT GT_BSAK INTO GW_BSAK.
      CLEAR: VAR_TABIX.
      VAR_TABIX = SY-TABIX.
      IF ( GW_BSAK-AUGBL EQ GW_BSAK-BELNR ).
        DELETE GT_BSAK INDEX VAR_TABIX.
        CLEAR: GW_BSAK.
        CONTINUE.
      ENDIF.
      CLEAR: GW_BSAK.
    ENDLOOP.

    REFRESH: GT_BSAK_ADT_LIQ[], LT_LFA1[].

    SELECT  BUKRS AUGDT BLART SHKZG AUGBL BELNR GJAHR DMBTR DMBE2 MONAT XBLNR LIFNR ZFBDT ZBD1T SGTXT BUDAT UMSKS EBELN GSBER
      FROM BSAK
      INTO TABLE  GT_BSAK_ADT_LIQ
      FOR ALL ENTRIES IN GT_BSAK
    WHERE BUKRS EQ GT_BSAK-BUKRS
      AND AUGBL EQ GT_BSAK-AUGBL
      AND UMSKS EQ SPACE.

    LOOP AT GT_BSAK_ADT_LIQ INTO GW_BSAK_ADT_LIQ.
      CLEAR: VAR_TABIX.
      VAR_TABIX = SY-TABIX.
      IF ( GW_BSAK_ADT_LIQ-AUGBL EQ GW_BSAK_ADT_LIQ-BELNR ).
        DELETE GT_BSAK_ADT_LIQ INDEX VAR_TABIX.
        CLEAR: GW_BSAK_ADT_LIQ.
        CONTINUE.
      ENDIF.
      CLEAR: GW_BSAK.
    ENDLOOP.

    SELECT * FROM LFA1
      INTO TABLE LT_LFA1
      FOR ALL ENTRIES IN GT_BSAK_ADT_LIQ
     WHERE LIFNR EQ GT_BSAK_ADT_LIQ-LIFNR.

    LOOP AT GT_BSAK_ADT_LIQ INTO GW_BSAK_ADT_LIQ.

      GW_SAIDA-BELNR_FAT  = GW_BSAK_ADT_LIQ-BELNR.
      GW_SAIDA-AUGBL_FAT  = GW_BSAK_ADT_LIQ-AUGBL.
      GW_SAIDA-BUDAT_FAT  = GW_BSAK_ADT_LIQ-BUDAT.
      GW_SAIDA-DMBTR_FAT  = GW_BSAK_ADT_LIQ-DMBTR.
      GW_SAIDA-DMBE2_FAT =  GW_BSAK_ADT_LIQ-DMBE2.
      GW_SAIDA-BUKRS     = GW_BSAK_ADT_LIQ-BUKRS.

      READ TABLE GT_BSAK_AUX INTO GW_BSAK_AUX WITH KEY BUKRS = GW_BSAK_ADT_LIQ-BUKRS
                                                       AUGBL = GW_BSAK_ADT_LIQ-AUGBL.

      READ TABLE GT_BSAK INTO GW_BSAK WITH KEY BUKRS = GW_BSAK_ADT_LIQ-BUKRS
                                               BELNR = GW_BSAK_ADT_LIQ-AUGBL.

      GW_SAIDA-AUGBL = GW_BSAK-AUGBL.

      READ TABLE LT_ZFIT0045 INTO LW_ZFIT0045 WITH KEY BUKRS = GW_BSAK-BUKRS
                                                       BELNR = GW_BSAK-BELNR.

      GW_SAIDA-EBELN = LW_ZFIT0045-EBELN.
      GW_SAIDA-BELNR = LW_ZFIT0045-BELNR.


      READ TABLE LT_LFA1 INTO LW_LFA1 WITH KEY LIFNR = GW_BSAK_ADT_LIQ-LIFNR.
      GW_SAIDA-LIFNR = LW_LFA1-LIFNR.
      GW_SAIDA-NAME1 = LW_LFA1-NAME1.


      GW_SAIDA-AUGDT = GW_BSAK_AUX-AUGDT.
      GW_SAIDA-BUDAT = GW_BSAK_AUX-BUDAT.
      GW_SAIDA-ZFBDT = GW_BSAK_AUX-ZFBDT + GW_BSAK_AUX-ZBD1T.


      IF ( GW_BSAK-DMBE2 > GW_BSAK-DMBTR ). "Gambeta, e n√£o me pergunte porque.
        IF ( GW_SAIDA-AUGDT EQ '20150915') OR ( GW_SAIDA-AUGDT EQ '20150916').
          GW_SAIDA-DMBTR = GW_BSAK-DMBTR.
          GW_SAIDA-DMBE2 = GW_BSAK-DMBTR / CS_TAX_FIX.
        ENDIF.

      ELSE.
        GW_SAIDA-DMBTR = GW_BSAK-DMBTR.
        GW_SAIDA-DMBE2 = GW_BSAK-DMBE2.
      ENDIF.



      APPEND GW_SAIDA TO GT_SAIDA.
      CLEAR: GW_SAIDA, GW_BSAK, LW_LFA1.

    ENDLOOP.

  ENDIF.

ENDFORM.                    " SELECIONAR_DADOS_ADT_LQ
