TYPES:
       BEGIN OF INDICE,
        SEQ  TYPE I,
        AUA  TYPE CHAR3,
        NUM  TYPE CHAR3,
       END OF INDICE.

DATA: TROCA TYPE C LENGTH 1,
      P_STRING TYPE STRING,
      SOMA_SEM TYPE DMBTR,
      SOMA_DEF TYPE DMBTR,
      SOMA_FTE TYPE DMBTR,
      P_INTEIRO TYPE P LENGTH 16 DECIMALS 2,
      W_INDICE TYPE TABLE OF INDICE WITH HEADER LINE,
      abc TYPE c LENGTH 3 VALUE 'abc',
      TEXTO TYPE C,
      CONT TYPE N,
      CONT_0 TYPE N,
      CONT_1 TYPE N.
*********************************************
CLEAR: P_STRING, P_INTEIRO, TROCA,
       SOMA_SEM, SOMA_DEF, SOMA_FTE, CONT.
**********************************************
CASE WA_IMPORT-TPSIM.
  WHEN  'TS' OR 'TV'. TROCA = 'X'.
ENDCASE.
*********************************************
P_STRING = WA_IMPORT-REAIS.
PERFORM F_FORMAT_VALUE(ZSDR016) CHANGING P_STRING.
CONCATENATE 'R$' P_STRING INTO P_STRING.
CONCATENA_MOEDA_R = P_STRING.
*********************************************
P_STRING = WA_IMPORT-DOLAR.
PERFORM F_FORMAT_VALUE(ZSDR016) CHANGING P_STRING.
CONCATENATE 'US$' P_STRING INTO P_STRING.
CONCATENA_MOEDA_D = P_STRING.
**********************************************
LOOP AT IT_ITENS_IM INTO WA_ITENS_IM.

     CALL FUNCTION 'HRCM_STRING_TO_AMOUNT_CONVERT'
      EXPORTING
        STRING                    = WA_ITENS_IM-VTO
       DECIMAL_SEPARATOR         = ','
       THOUSANDS_SEPARATOR       = '.'
     IMPORTING
       BETRG                     = P_INTEIRO.

CASE WA_ITENS_IM-SA.
  WHEN '03'.
    READ TABLE IT_ITENS_IM INTO WA_ITENS_1 WITH KEY SA = WA_ITENS_IM-SA.
     ADD P_INTEIRO TO SOMA_DEF.
     ADD SOMA_DEF TO WA_ITENS_1-TOTAL.
     W_INDICE-SEQ = 3.
     W_INDICE-AUA = 'DEF'.
     APPEND W_INDICE.

  WHEN '02'.
    READ TABLE IT_ITENS_IM INTO WA_ITENS_2 WITH KEY SA = WA_ITENS_IM-SA.
     ADD P_INTEIRO TO SOMA_FTE.
     ADD SOMA_FTE TO WA_ITENS_2-TOTAL.
     W_INDICE-SEQ = 2.
     W_INDICE-AUA = 'FTE'.
     APPEND W_INDICE.

  WHEN '04'.
    READ TABLE IT_ITENS_IM INTO WA_ITENS_3 WITH KEY SA = WA_ITENS_IM-SA.
     ADD P_INTEIRO TO SOMA_SEM.
     ADD SOMA_SEM TO WA_ITENS_3-TOTAL.
     W_INDICE-SEQ = 1.
     W_INDICE-AUA = 'SEM'.
     APPEND W_INDICE.

ENDCASE.

CASE WA_ITENS_IM-INCO1.
  WHEN 'CIF'.
     W_INDICE-SEQ = 4.
     W_INDICE-AUA = 'CIF'.
     APPEND W_INDICE.
  WHEN 'FOB'.
     W_INDICE-SEQ = 5.
     W_INDICE-AUA = 'FOB'.
     APPEND W_INDICE.
  WHEN 'CPT'.
     W_INDICE-SEQ = 6.
     W_INDICE-AUA = 'CPT'.
     APPEND W_INDICE.
ENDCASE.
ENDLOOP.
PERFORM F_FORMAT_VALUE(ZSDR016) CHANGING WA_ITENS_1-TOTAL.
PERFORM F_FORMAT_VALUE(ZSDR016) CHANGING WA_ITENS_2-TOTAL.
PERFORM F_FORMAT_VALUE(ZSDR016) CHANGING WA_ITENS_3-TOTAL.
***********************************************************
SORT W_INDICE BY SEQ.
DELETE ADJACENT DUPLICATES FROM W_INDICE COMPARING SEQ.
LOOP AT W_INDICE.
CONT = CONT + 1.
CONT_0 = CONT_0 + 1.
CASE W_INDICE-AUA.
  WHEN 'SEM'.
    WA_ITENS_3-INDICE = CONT.
    CONT_0 = CONT. CONT_0 = CONT_0 - 1.
    WA_ITENS_3-SUB_INDICE = ABC+CONT_0.
    WA_ITENS_3-INDICE = CONT.
  WHEN 'FTE'.
    WA_ITENS_2-INDICE = CONT.
    CONT_0 = CONT. CONT_0 = CONT_0 - 1.
    WA_ITENS_2-SUB_INDICE = ABC+CONT_0.
    WA_ITENS_2-INDICE = CONT.
  WHEN 'DEF'.
    WA_ITENS_1-INDICE = CONT.
    CONT_0 = CONT. CONT_0 = CONT_0 - 1.
    WA_ITENS_1-SUB_INDICE = ABC+CONT_0.
    WA_ITENS_1-INDICE = CONT.
  WHEN 'CIF'.
    CONT_1 = CONT_1 + 1.
    CIF = CONT_1.
  WHEN 'FOB'.
    CONT_1 = CONT_1 + 1.
    FOB = CONT_1.
  WHEN 'CPT'.
    CONT_1 = CONT_1 + 1.
    CPT = CONT_1.
ENDCASE.
ENDLOOP.
