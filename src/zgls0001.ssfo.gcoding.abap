DATA: LC_VALUE TYPE P DECIMALS 4.

DATA: TL_044 TYPE TABLE OF ZGLT044 WITH HEADER LINE,
      TL_045 TYPE TABLE OF ZGLT045 WITH HEADER LINE,
      TL_044_AUX TYPE TABLE OF ZGLT044 WITH HEADER LINE,
      TL_045_AUX TYPE TABLE OF ZGLT045 WITH HEADER LINE,
      TL_LFA1 TYPE TABLE OF LFA1 WITH HEADER LINE,
      TL_KNA1 TYPE TABLE OF KNA1 WITH HEADER LINE,
      WL_SKB1 TYPE SKB1,
      WL_DMBTR TYPE ZGLT044-DMBTR,
      WL_DMBE2 TYPE ZGLT044-DMBE2,
      WL_DMBE3 TYPE ZGLT044-DMBE3.

SELECT SINGLE *
  INTO WG_T001
  FROM T001
 WHERE BUKRS EQ I_BUKRS.

CALL FUNCTION 'FI_CURRENCY_INFORMATION'
  EXPORTING
    I_BUKRS = I_BUKRS
  IMPORTING
    E_X001  = WA_MOEDAS_EMPRESA.

VG_AUXILIAR_VAZIO = 'X'.
VG_ACOES_VAZIO    = 'X'.

IF I_ZGLT043 IS INITIAL.

  SELECT SINGLE *
    FROM ZGLT043
    INTO WG_043
   WHERE BUKRS EQ I_BUKRS
     AND SAKNR EQ I_SAKNR
     AND MONAT EQ I_MONAT
     AND GJAHR EQ I_GJAHR.
ELSE.
  MOVE-CORRESPONDING I_ZGLT043 TO WG_043.
ENDIF.

IF SY-SUBRC IS INITIAL.
  SELECT SINGLE SAKNR TXT50
    FROM SKAT
    INTO WG_SKAT
     WHERE SAKNR EQ WG_043-SAKNR
       AND KTOPL EQ '0050'
       AND SPRAS EQ SY-LANGU.

  SELECT SINGLE *
    FROM SKB1
    INTO WL_SKB1
    WHERE SAKNR EQ WG_043-SAKNR
      AND BUKRS EQ WG_043-BUKRS.

  SELECT SINGLE *
    FROM  ZGLT041
    INTO  WL_041
     WHERE BUKRS EQ WG_043-BUKRS
       AND SAKNR EQ WG_043-SAKNR.

  IF SY-SUBRC IS INITIAL.

    SELECT SINGLE CODIGO COD_NOTA DESCR DESCR_NOTA
      FROM ZGLT039
      INTO WG_039
       WHERE CODIGO   EQ WL_041-COD_CLAS_BAL
         AND COD_NOTA EQ WL_041-COD_CLAS_NOT2.

  ENDIF.

  VG_DIF1 = WG_043-SDO_MI  - WG_043-SDO_REL_AUX_MI.
  VG_DIF2 = WG_043-SDO_MI2 - WG_043-SDO_REL_AUX_MI2.
  VG_DIF3 = WG_043-SDO_MI3 - WG_043-SDO_REL_AUX_MI3.

  TRY .
      LC_VALUE = WG_043-SDO_MI / WG_043-SDO_MI2.
      IF LC_VALUE GT 99999.
        VG_TAXA_HIST1 = 99999.
      ELSE.
        VG_TAXA_HIST1 = WG_043-SDO_MI / WG_043-SDO_MI2.
      ENDIF.
    CATCH CX_SY_ZERODIVIDE.
  ENDTRY.

  TRY .
      LC_VALUE = WG_043-SDO_MI / WG_043-SDO_MI3.
      IF LC_VALUE GT 99999.
        VG_TAXA_HIST2 = 99999.
      ELSE.
        VG_TAXA_HIST2 = WG_043-SDO_MI / WG_043-SDO_MI3.
      ENDIF.
    CATCH CX_SY_ZERODIVIDE.
  ENDTRY.

  "Conciliação Relatório Auxiliar""""""""""""""""""""""""
  """""""""""""""""""""""""""""""""""""""""""""""""""""""
  IF I_ZGLT044[] IS INITIAL.

    SELECT *
      FROM ZGLT044
      INTO TABLE TL_044
      WHERE BUKRS EQ WG_043-BUKRS
        AND SAKNR EQ WG_043-SAKNR
        AND MONAT EQ WG_043-MONAT
        AND GJAHR EQ WG_043-GJAHR.

  ELSE.
    MOVE I_ZGLT044[] TO TL_044[].
  ENDIF.

  TL_044_AUX[] = TL_044[].
  DELETE TL_044_AUX WHERE LIFNR IS INITIAL.

  IF TL_044_AUX[] IS NOT INITIAL.
    SELECT *
      FROM LFA1
      INTO TABLE TL_LFA1
       FOR ALL ENTRIES IN TL_044_AUX
       WHERE LIFNR EQ TL_044_AUX-LIFNR.

  ENDIF.

  TL_044_AUX[] = TL_044[].
  DELETE TL_044_AUX WHERE KUNNR IS INITIAL.

  IF TL_044_AUX[] IS NOT INITIAL.
    SELECT *
      FROM KNA1
      INTO TABLE TL_KNA1
       FOR ALL ENTRIES IN TL_044_AUX
       WHERE KUNNR EQ TL_044_AUX-KUNNR.

  ENDIF.

  TL_044_AUX[] = TL_044[].
  DELETE TL_044_AUX WHERE LIFNR IS INITIAL
                      AND KUNNR IS INITIAL
                      AND COD   IS INITIAL.


  SORT: TL_KNA1 BY KUNNR,
        TL_LFA1 BY LIFNR.

  " Montando Primeira Tabela de Relatório Auxiliar"""""""
  """""""""""""""""""""""""""""""""""""""""""""""""""""""
  LOOP AT TL_044_AUX.
    CLEAR: WG_TABELA.

    ADD TL_044_AUX-DMBTR TO WL_DMBTR.
    ADD TL_044_AUX-DMBE2 TO WL_DMBE2.
    ADD TL_044_AUX-DMBE3 TO WL_DMBE3.

    IF TL_044_AUX-LIFNR IS NOT INITIAL.
      READ TABLE TL_LFA1
        WITH KEY LIFNR = TL_044_AUX-LIFNR
                 BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        WG_TABELA-CODIGO = TL_LFA1-LIFNR.
        WG_TABELA-DESCR  = TL_LFA1-NAME1.
      ENDIF.
    ELSEIF TL_044_AUX-KUNNR IS NOT INITIAL.
      READ TABLE TL_KNA1
             WITH KEY KUNNR = TL_044_AUX-KUNNR
                      BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        WG_TABELA-CODIGO = TL_KNA1-KUNNR.
        WG_TABELA-DESCR  = TL_KNA1-NAME1.
      ENDIF.
    ELSEIF TL_044_AUX-COD IS NOT INITIAL.
      WG_TABELA-CODIGO = TL_044_AUX-COD.
      WG_TABELA-DESCR  = TL_044_AUX-DESCR.
    ENDIF.

    SHIFT WG_TABELA-CODIGO LEFT DELETING LEADING '0'.
    WG_TABELA-TIPO_TAB = '0'.
    WG_TABELA-DATA     = TL_044_AUX-BLDAT.
    WG_TABELA-DMBTR    = TL_044_AUX-DMBTR.
    WG_TABELA-DMBE2    = TL_044_AUX-DMBE2.
    WG_TABELA-DMBE3    = TL_044_AUX-DMBE3.
    WG_TABELA-CONTRA   = TL_044_AUX-CTA_CONTRA_PART.

    APPEND WG_TABELA TO TG_TABELA_AUX.

    AT LAST.
      WG_TABELA-TIPO_TAB = '1'.
      WG_TABELA-DMBTR    = WL_DMBTR.
      WG_TABELA-DMBE2    = WL_DMBE2.
      WG_TABELA-DMBE3    = WL_DMBE3.
      APPEND WG_TABELA TO TG_TABELA_AUX.
      CLEAR: WG_TABELA, WL_DMBTR, WL_DMBE2, WL_DMBE3.
    ENDAT.
  ENDLOOP.
  """""""""""""""""""""""""""""""""""""""""""""""""""""""
  "WL_DMBTR = WL_DMBTR + ( TL_044_AUX-DMBTR * -1 ).
  "WL_DMBE2 = WL_DMBE2 + ( TL_044_AUX-DMBE2 * -1 ).

  TL_044_AUX[] = TL_044[].
  DELETE TL_044_AUX WHERE LIFNR IS NOT INITIAL
                       OR KUNNR IS NOT INITIAL
                       OR COD   IS NOT INITIAL.

  " Montando Primeira Tabela de Relatório Auxiliar"""""""
  """""""""""""""""""""""""""""""""""""""""""""""""""""""
  LOOP AT TL_044_AUX.
    CLEAR: WG_TABELA.

    ADD TL_044_AUX-DMBTR TO WL_DMBTR.
    ADD TL_044_AUX-DMBE2 TO WL_DMBE2.

    WG_TABELA-CODIGO   = WG_SKAT-SAKNR.
    SHIFT WG_TABELA-CODIGO LEFT DELETING LEADING '0'.
    WG_TABELA-DESCR    = WG_SKAT-TXT50.
    WG_TABELA-TIPO_TAB = '2'.
    WG_TABELA-DATA     = TL_044_AUX-BLDAT.
    WG_TABELA-DMBTR    = TL_044_AUX-DMBTR.
    WG_TABELA-DMBE2    = TL_044_AUX-DMBE2.
    WG_TABELA-DMBE3    = TL_044_AUX-DMBE3.
    WG_TABELA-CONTRA   = TL_044_AUX-CTA_CONTRA_PART.

    APPEND WG_TABELA TO TG_TABELA_AUX.

    AT LAST.
      WG_TABELA-TIPO_TAB = '3'.
      WG_TABELA-DMBTR    = WL_DMBTR.
      WG_TABELA-DMBE2    = WL_DMBE2.
      WG_TABELA-DMBE3    = WL_DMBE3.

      APPEND WG_TABELA TO TG_TABELA_AUX.
      CLEAR: WG_TABELA, WL_DMBTR, WL_DMBE2, WL_DMBE3.
    ENDAT.
  ENDLOOP.
  """""""""""""""""""""""""""""""""""""""""""""""""""""""

  "Totaliza regsitros de :
  "01 - Saldo Final Relatório Auxiliar
  "03 - Saldo Contábil Final
  " = 04 - Diferença Conciliação
  LOOP AT TG_TABELA_AUX INTO WG_TABELA
     WHERE TIPO_TAB EQ '1'
        OR TIPO_TAB EQ '3'.

    IF WG_TABELA-TIPO_TAB EQ '1'.
      IF WL_SKB1-MITKZ EQ 'K'
      OR WL_SKB1-MITKZ EQ 'D'.
        WL_DMBTR = WL_DMBTR - ( WG_TABELA-DMBTR * -1 ).
        WL_DMBE2 = WL_DMBE2 - ( WG_TABELA-DMBE2 * -1 ).
        WL_DMBE3 = WL_DMBE3 - ( WG_TABELA-DMBE3 * -1 ).
      ELSE.
        WL_DMBTR = WL_DMBTR + ( WG_TABELA-DMBTR * -1 ).
        WL_DMBE2 = WL_DMBE2 + ( WG_TABELA-DMBE2 * -1 ).
        WL_DMBE3 = WL_DMBE3 + ( WG_TABELA-DMBE3 * -1 ).
      ENDIF.
    ELSE.
      IF WL_SKB1-MITKZ EQ 'K'
      OR WL_SKB1-MITKZ EQ 'D'.
        WL_DMBTR = WL_DMBTR - WG_TABELA-DMBTR.
        WL_DMBE2 = WL_DMBE2 - WG_TABELA-DMBE2.
        WL_DMBE3 = WL_DMBE3 - WG_TABELA-DMBE3.
      ELSE.
        WL_DMBTR = WL_DMBTR + WG_TABELA-DMBTR.
        WL_DMBE2 = WL_DMBE2 + WG_TABELA-DMBE2.
        WL_DMBE3 = WL_DMBE3 + WG_TABELA-DMBE3.
      ENDIF.
    ENDIF.
  ENDLOOP.

  IF TG_TABELA_AUX[] IS NOT INITIAL.
    CLEAR: VG_AUXILIAR_VAZIO.

    CLEAR:WG_TABELA.
    WG_TABELA-TIPO_TAB = '4'.
    WG_TABELA-DMBTR    = WL_DMBTR.
    WG_TABELA-DMBE2    = WL_DMBE2.
    WG_TABELA-DMBE3    = WL_DMBE3.
    APPEND WG_TABELA TO TG_TABELA_AUX.

    CLEAR:WG_TABELA.
    WG_TABELA-TIPO_TAB = '-'.
    APPEND WG_TABELA TO TG_TABELA_AUX.

    CLEAR:WG_TABELA.
    WG_TABELA-TIPO_TAB = '-'.
    APPEND WG_TABELA TO TG_TABELA_AUX.

  ENDIF.

  IF I_ZGLT045[] IS INITIAL.
    SELECT *
     FROM ZGLT045
     INTO TABLE TL_045
     WHERE BUKRS EQ WG_043-BUKRS
       AND SAKNR EQ WG_043-SAKNR
       AND MONAT EQ WG_043-MONAT
       AND GJAHR EQ WG_043-GJAHR.
  ELSE.
    MOVE I_ZGLT045[] TO TL_045[].
  ENDIF.

  TL_045_AUX[] = TL_045[].
  DELETE TL_045_AUX WHERE LIFNR IS INITIAL.

  IF TL_045_AUX[] IS NOT INITIAL.
    SELECT *
      FROM LFA1
      INTO TABLE TL_LFA1
       FOR ALL ENTRIES IN TL_045_AUX
       WHERE LIFNR EQ TL_045_AUX-LIFNR.

  ENDIF.

  TL_045_AUX[] = TL_045[].
  DELETE TL_045_AUX WHERE KUNNR IS INITIAL.

  IF TL_045_AUX[] IS NOT INITIAL.
    SELECT *
      FROM KNA1
      INTO TABLE TL_KNA1
       FOR ALL ENTRIES IN TL_045_AUX
       WHERE KUNNR EQ TL_045_AUX-KUNNR.

  ENDIF.

  SORT: TL_KNA1 BY KUNNR,
        TL_LFA1 BY LIFNR.

  LOOP AT TL_045.
    CLEAR: WG_TABELA.

    IF TL_045-LIFNR IS NOT INITIAL.
      READ TABLE TL_LFA1
        WITH KEY LIFNR = TL_045-LIFNR
                 BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        WG_TABELA-CODIGO = TL_LFA1-LIFNR.
        WG_TABELA-DESCR  = TL_LFA1-NAME1.
      ENDIF.
    ELSEIF TL_045-KUNNR IS NOT INITIAL.
      READ TABLE TL_KNA1
             WITH KEY KUNNR = TL_045-KUNNR
                      BINARY SEARCH.
      IF SY-SUBRC IS INITIAL.
        WG_TABELA-CODIGO = TL_KNA1-KUNNR.
        WG_TABELA-DESCR  = TL_KNA1-NAME1.
      ENDIF.
    ELSEIF TL_045-COD IS NOT INITIAL.
      WG_TABELA-CODIGO = TL_045-COD.
      WG_TABELA-DESCR  = TL_045-DESCR.
    ENDIF.

    WG_TABELA-TIPO_TAB        = '6'.
    WG_TABELA-DATA            = TL_045-BLDAT.
    WG_TABELA-BELNR           = TL_045-BELNR.
    WG_TABELA-DMBTR           = TL_045-DMBTR.
    WG_TABELA-DMBE2           = TL_045-DMBE2.
    WG_TABELA-DMBE3           = TL_045-DMBE3.
    WG_TABELA-DT_VCTO         = TL_045-DT_VCTO.
    WG_TABELA-DT_AJUSTE       = TL_045-DT_AJUSTE.
    WG_TABELA-NRO_DOC_AJ      = TL_045-NRO_DOC_AJ.
    WG_TABELA-OBSERV          = TL_045-OBSERV.
    WG_TABELA-CTA_CONTRA_PART = TL_045-CTA_CONTRA_PART.
    APPEND WG_TABELA TO TG_TABELA.

    IF WG_TABELA-OBSERV IS NOT INITIAL.
      CLEAR: WG_TABELA.
      WG_TABELA-TIPO_TAB = 'O'.
      WG_TABELA-OBSERV   = TL_045-OBSERV.
      APPEND WG_TABELA TO TG_TABELA.
    ENDIF.

    CLEAR: WG_TABELA.
  ENDLOOP.

  WL_DMBTR = 0.
  WL_DMBE2 = 0.
  WL_DMBE3 = 0.

  LOOP AT TG_TABELA INTO WG_TABELA.
    IF WL_SKB1-MITKZ EQ 'K'
    OR WL_SKB1-MITKZ EQ 'D'.
      WL_DMBTR = WL_DMBTR - WG_TABELA-DMBTR.
      WL_DMBE2 = WL_DMBE2 - WG_TABELA-DMBE2.
      WL_DMBE3 = WL_DMBE3 - WG_TABELA-DMBE3.
    ELSE.
      WL_DMBTR = WL_DMBTR + WG_TABELA-DMBTR.
      WL_DMBE2 = WL_DMBE2 + WG_TABELA-DMBE2.
      WL_DMBE3 = WL_DMBE3 + WG_TABELA-DMBE3.
    ENDIF.
  ENDLOOP.

  IF TG_TABELA[] IS NOT INITIAL.
    CLEAR: VG_ACOES_VAZIO.

    CLEAR:WG_TABELA.
    WG_TABELA-TIPO_TAB = '7'.
    WG_TABELA-DMBTR    = WL_DMBTR.
    WG_TABELA-DMBE2    = WL_DMBE2.
    WG_TABELA-DMBE3    = WL_DMBE3.
    APPEND WG_TABELA TO TG_TABELA.
  ENDIF.

  IF I_TLINES[] IS INITIAL.

    DATA: WL_NAME  LIKE THEAD-TDNAME,
          WA_LINE  LIKE TLINE.

    CONCATENATE WG_043-BUKRS WG_043-GJAHR WG_043-MONAT WG_043-SAKNR INTO WL_NAME.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        ID                      = 'ZREC'
        LANGUAGE                = SY-LANGU
        NAME                    = WL_NAME
        OBJECT                  = 'ZRECONCILI'
      TABLES
        LINES                   = I_TLINES
      EXCEPTIONS
        ID                      = 1
        LANGUAGE                = 2
        NAME                    = 3
        NOT_FOUND               = 4
        OBJECT                  = 5
        REFERENCE_CHECK         = 6
        WRONG_ACCESS_TO_ARCHIVE = 7
        OTHERS                  = 8.

  ENDIF.

  DATA: LINHA TYPE TY_LINHA,
        AUX   TYPE I.

  CLEAR: TG_LINHAS.

  AUX = 1.
  LOOP AT I_TLINES INTO WA_LINE.
    CONCATENATE LINHA WA_LINE-TDLINE INTO LINHA SEPARATED BY SPACE.
    IF AUX EQ 1.
      APPEND LINHA TO TG_LINHAS.
      CLEAR: LINHA.
      AUX = 1.
    ELSE.
      ADD 1 TO AUX.
    ENDIF.
  ENDLOOP.

  IF LINHA IS NOT INITIAL.
    APPEND LINHA TO TG_LINHAS.
    CLEAR: LINHA.
  ENDIF.

  INSERT LINHA INTO TG_LINHAS INDEX 1.

ENDIF.
