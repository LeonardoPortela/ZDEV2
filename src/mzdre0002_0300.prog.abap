*----------------------------------------------------------------------*
***INCLUDE MZDRE0002_0300 .
*----------------------------------------------------------------------*

DATA: IT_0300 TYPE TABLE OF ZDE_DRE_DIF_ALV WITH HEADER LINE.

DATA: CTL_ALV_0300       TYPE REF TO CL_GUI_ALV_GRID,
      CTL_CON_0300       TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      GS_LAY_0300        TYPE LVC_S_LAYO,
      GS_VAR_0300        TYPE DISVARIANT,
      GS_SCROLL_COL_0300 TYPE LVC_S_COL,
      GS_SCROLL_ROW_0300 TYPE LVC_S_ROID,
      IT_CATALOG_0300    TYPE LVC_T_FCAT.

DATA: IT_SELECTED_0300 TYPE LVC_T_ROW,
      WA_SELECTED_0300 TYPE LVC_S_ROW.

DATA: IT_EXCLUDE_0300 TYPE UI_FUNCTIONS,
      WA_EXCLUDE_0300 LIKE LINE OF IT_EXCLUDE_0300.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0300  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0300 OUTPUT.

  SET PF-STATUS 'PF0300'.
  SET TITLEBAR 'TL0300'.

  IF CTL_CON_0300 IS INITIAL.

    CREATE OBJECT CTL_CON_0300
      EXPORTING
        CONTAINER_NAME = 'ALV_0300'.

    CREATE OBJECT CTL_ALV_0300
      EXPORTING
        I_PARENT = CTL_CON_0300.

    PERFORM FILL_IT_FIELDCATALOG_0300.
*   Fill info for layout variant

    PERFORM FILL_GS_VARIANT_0300.
*   Set layout parameters for ALV grid

    "GS_LAY_N55-GRID_TITLE = TEXT-101.
    GS_LAY_0300-SEL_MODE   = 'A'.
    GS_LAY_0300-ZEBRA      = ABAP_TRUE.
    "GS_LAY_N55-NO_TOOLBAR = ABAP_TRUE.

    CALL METHOD CTL_ALV_0300->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAY_0300
        IS_VARIANT           = GS_VAR_0300
        I_DEFAULT            = SPACE
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_0300
      CHANGING
        IT_FIELDCATALOG      = IT_CATALOG_0300
        IT_OUTTAB            = IT_0300[].

    CALL METHOD CTL_ALV_0300->REFRESH_TABLE_DISPLAY.

    "CREATE OBJECT EVENT_HANDLER_0300.
    "SET HANDLER EVENT_HANDLER_0300->HANDLE_HOTSPOT_CLICK
    "        FOR CTL_ALV_0300.

  ELSE.
    CALL METHOD CTL_ALV_0300->REFRESH_TABLE_DISPLAY.
  ENDIF.

  CALL METHOD CTL_ALV_0300->GET_SCROLL_INFO_VIA_ID
    IMPORTING
      ES_COL_INFO = GS_SCROLL_COL_0300
      ES_ROW_NO   = GS_SCROLL_ROW_0300.

ENDMODULE.                 " STATUS_0300  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0300  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0300 INPUT.
  CASE OK-CODE.
    WHEN 'BACK' OR 'EXIT' OR 'CANCEL'.
      LEAVE TO SCREEN 0100.
  ENDCASE.
ENDMODULE.                 " USER_COMMAND_0300  INPUT

*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG_0300 .

  DATA: LC_COL_POS TYPE LVC_COLPOS,
        WA_T001    TYPE T001,
        WA_MOEDAS  TYPE X001.

  FIELD-SYMBOLS: <FS_CAT_0300> TYPE LVC_S_FCAT.

  SELECT SINGLE * INTO WA_T001
    FROM T001
   WHERE BUKRS EQ P_BUKRS.

  CALL FUNCTION 'FI_CURRENCY_INFORMATION'
    EXPORTING
      I_BUKRS = P_BUKRS
    IMPORTING
      E_X001  = WA_MOEDAS.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZDE_DRE_DIF_ALV'
    CHANGING
      CT_FIELDCAT      = IT_CATALOG_0300.

  LC_COL_POS = 1.

  LOOP AT IT_CATALOG_0300 ASSIGNING <FS_CAT_0300>.
    <FS_CAT_0300>-COL_POS = LC_COL_POS.
    <FS_CAT_0300>-TABNAME = 'IT_0300'.
    ADD 1 TO LC_COL_POS.
    CASE <FS_CAT_0300>-FIELDNAME.
      WHEN 'VLHSL'.
        CONCATENATE TEXT-020 WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'SAP' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'SAP' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLKSL'.
        CONCATENATE TEXT-020 WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'SAP' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'SAP' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLOSL'.
        CONCATENATE TEXT-020 WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'SAP' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'SAP' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
        ""111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
      WHEN 'VLHSLZG'.
        CONCATENATE TEXT-021 WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Prc.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Prc.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLKSLZG'.
        CONCATENATE TEXT-021 WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Prc.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Prc.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLOSLZG'.
        CONCATENATE TEXT-021 WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Prc.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Prc.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLHSLZGD'.
        CONCATENATE 'Dif. SAPxPrc.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLKSLZGD'.
        CONCATENATE 'Dif. SAPxPrc.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLOSLZGD'.
        CONCATENATE 'Dif. SAPxPrc.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
        "" 22222222222222222222222222222222222222222222222222222222222222222222222222222222222222
      WHEN 'VLHSLZG2'.
        CONCATENATE TEXT-022 WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'DRE.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'DRE.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLKSLZG2'.
        CONCATENATE TEXT-022 WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'DRE.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'DRE.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLOSLZG2'.
        CONCATENATE TEXT-022 WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'DRE.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'DRE.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLHSLZGD2'.
        CONCATENATE 'Dif. SAPxDRE.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_T001-WAERS INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLKSLZGD2'.
        CONCATENATE 'Dif. SAPxDRE.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE2 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
      WHEN 'VLOSLZGD2'.
        CONCATENATE 'Dif. SAPxDRE.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_L SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_M SEPARATED BY SPACE.
        CONCATENATE 'Dif.' WA_MOEDAS-HWAE3 INTO <FS_CAT_0300>-SCRTEXT_S SEPARATED BY SPACE.
        <FS_CAT_0300>-COLTEXT = <FS_CAT_0300>-SCRTEXT_L.
        <FS_CAT_0300>-OUTPUTLEN = 15.
    ENDCASE.
  ENDLOOP.

ENDFORM.                    " FILL_IT_FIELDCATALOG_0300

*&---------------------------------------------------------------------*
*&      Form  FILL_GS_VARIANT_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_GS_VARIANT_0300 .
  GS_VAR_0300-REPORT      = SY-REPID.
  GS_VAR_0300-HANDLE      = '0300'.
  GS_VAR_0300-LOG_GROUP   = ABAP_FALSE.
  GS_VAR_0300-USERNAME    = ABAP_FALSE.
  GS_VAR_0300-VARIANT     = ABAP_FALSE.
  GS_VAR_0300-TEXT        = ABAP_FALSE.
  GS_VAR_0300-DEPENDVARS  = ABAP_FALSE.
ENDFORM.                    " FILL_GS_VARIANT_0300

*&---------------------------------------------------------------------*
*&      Form  PESQUISAR_DIFERENCAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PESQUISAR_DIFERENCAS .

  DATA: PMANDT     TYPE SY-MANDT,
        PBUKRS     TYPE BUKRS,
        PGJAHR     TYPE GJAHR,
        PPOPER     TYPE POPER,
        PKTOPL     TYPE KTOPL,
        PKOKRS     TYPE KOKRS,
        PVERSN     TYPE VERSN_011,
        EXC_REF    TYPE REF TO CX_SY_NATIVE_SQL_ERROR,
        ERROR_TEXT TYPE STRING.

  DATA: WA_T001      TYPE T001,
        IT_SKA1      TYPE TABLE OF SKA1 WITH HEADER LINE,
        IT_CONTAS    TYPE ZCT_EMP_CONTAS,
        WA_CONTAS    TYPE ZLC_EMP_CONTAS,
        IT_REGISTRO  TYPE TABLE OF ZDE_DRE_DIF_ALV WITH HEADER LINE,
        IT_REGISTRO2 TYPE HASHED TABLE OF ZDE_DRE_DIF_ALV WITH UNIQUE KEY BUKRS GJAHR POPER SAKNR WITH HEADER LINE,
        IT_REGISTRO3 TYPE TABLE OF ZDRE_SQL_PROC WITH HEADER LINE,
        WA_REGISTRO  TYPE ZDE_DRE_DIF_ALV,
        IT_SALDO     TYPE TABLE OF ZDE_FI_GL_SALDO_FAGLFLEXT WITH HEADER LINE,
        IT_SALDO2    TYPE TABLE OF ZDE_FI_GL_SALDO_FAGLFLEXT WITH HEADER LINE,
        IT_SALDO3    TYPE TABLE OF ZDE_FI_GL_SALDO_FAGLFLEXT WITH HEADER LINE.

  RANGES: RKTOKS FOR SKA1-KTOKS.

  FIELD-SYMBOLS: <FS0300> TYPE ZDE_DRE_DIF_ALV.

  CLEAR: IT_0300[].

  RKTOKS-SIGN   = 'I'.
  RKTOKS-OPTION = 'EQ'.
  RKTOKS-LOW    = 'YB01'.
  RKTOKS-HIGH   = 'YB01'.
  APPEND RKTOKS.

  RKTOKS-LOW    = 'YB02'.
  RKTOKS-HIGH   = 'YB02'.
  APPEND RKTOKS.

  RKTOKS-LOW    = 'YB03'.
  RKTOKS-HIGH   = 'YB03'.
  APPEND RKTOKS.

  RKTOKS-LOW    = 'YB04'.
  RKTOKS-HIGH   = 'YB04'.
  APPEND RKTOKS.

  SELECT SINGLE * INTO WA_T001
    FROM T001
   WHERE BUKRS EQ P_BUKRS.

  IF SY-SUBRC IS INITIAL.

    PMANDT = SY-MANDT.
    PBUKRS = P_BUKRS.
    PGJAHR = P_GJAHR.
    PPOPER = P_MONAT-LOW.
    PKTOPL = WA_T001-KTOPL.
    PKOKRS = WA_T001-FIKRS.
    PVERSN = P_VERSN.

    SELECT * INTO TABLE IT_SKA1 "#EC CI_DB_OPERATION_OK[2389136]
      FROM SKA1 AS A "#EC CI_DB_OPERATION_OK[2431747]
     WHERE KTOPL EQ WA_T001-KTOPL
       AND KTOKS NOT IN RKTOKS
       AND EXISTS ( SELECT * FROM SKB1 AS B "#EC CI_DB_OPERATION_OK[2431747]
                     WHERE B~BUKRS EQ WA_T001-BUKRS
                       AND B~SAKNR EQ A~SAKNR ).

    LOOP AT IT_SKA1.
      WA_CONTAS-BUKRS = WA_T001-BUKRS.
      WA_CONTAS-SAKNR = IT_SKA1-SAKNR.
      APPEND WA_CONTAS TO IT_CONTAS.
    ENDLOOP.

    CALL FUNCTION 'Z_FI_GL_SALDO_FAGLFLEXT'
      EXPORTING
        RYEAR         = P_GJAHR
        CONTAS        = IT_CONTAS
        P_GERAR_TODAS = ABAP_TRUE
      TABLES
        IT_SALDOS     = IT_SALDO
        IT_SALDOS_2   = IT_SALDO2
        IT_SALDOS_3   = IT_SALDO3
      EXCEPTIONS
        MOEDA_NAO_ADM = 1
        ERRO_LEDGER   = 2
        OTHERS        = 3.

    SORT IT_SALDO  BY RACCT.
    SORT IT_SALDO2 BY RACCT.
    SORT IT_SALDO3 BY RACCT.

    IF SY-SUBRC IS NOT INITIAL.
      MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      STOP.
    ELSE.
      LOOP AT IT_SALDO.
        CLEAR: IT_0300.
        IT_0300-BUKRS	= IT_SALDO-RBUKRS.
        IT_0300-GJAHR = IT_SALDO-RYEAR.
        IT_0300-POPER = P_MONAT-LOW.
        IT_0300-SAKNR = IT_SALDO-RACCT.
        PERFORM BUSCA_VALOR_MES USING IT_SALDO P_MONAT-LOW CHANGING IT_0300-VLHSL.
        READ TABLE IT_SALDO2 WITH KEY RACCT = IT_SALDO-RACCT BINARY SEARCH.
        PERFORM BUSCA_VALOR_MES USING IT_SALDO2 P_MONAT-LOW CHANGING IT_0300-VLKSL.
        READ TABLE IT_SALDO3 WITH KEY RACCT = IT_SALDO-RACCT BINARY SEARCH.
        PERFORM BUSCA_VALOR_MES USING IT_SALDO3 P_MONAT-LOW CHANGING IT_0300-VLOSL.
        APPEND IT_0300.
      ENDLOOP.
    ENDIF.

    TRY.
        EXEC SQL.
          OPEN REGISTROS FOR
            SELECT DR2.SAKNR,
                   SUM( DR2.VLHSL ) AS VLHSL,
                   SUM( DR2.VLKSL ) AS VLKSL,
                   SUM( DR2.VLOSL ) AS VLOSL
*---> S4 Migration - 21/07/2023 - MG-5604 - JS
              FROM SAPHANADB.ZGLT_DRE_02 DR2
*              FROM SAPSR3.ZGLT_DRE_02 DR2
*<--- S4 Migration - 21/07/2023 - MG-5604 - JS
             WHERE MANDT  = :PMANDT
               AND BUKRS  = :PBUKRS
               AND GJAHR  = :PGJAHR
               AND POPER  = :PPOPER
               AND KTOPL  = :PKTOPL
               AND KOKRS  = :PKOKRS
            GROUP BY DR2.SAKNR
        ENDEXEC.
      CATCH CX_SY_NATIVE_SQL_ERROR INTO EXC_REF.
        ERROR_TEXT = EXC_REF->GET_TEXT( ).
        MESSAGE ERROR_TEXT TYPE 'E' RAISING ERRO_SQL.
    ENDTRY.

    DO.
      EXEC SQL.
        FETCH NEXT REGISTROS INTO
        :WA_REGISTRO-SAKNR,
        :WA_REGISTRO-VLHSL,
        :WA_REGISTRO-VLKSL,
        :WA_REGISTRO-VLOSL.
      ENDEXEC.
      IF SY-SUBRC <> 0.
        EXIT.
      ELSE.
        APPEND WA_REGISTRO TO IT_REGISTRO.
      ENDIF.
    ENDDO.

    EXEC SQL.
      CLOSE REGISTROS
    ENDEXEC.

    LOOP AT IT_REGISTRO.
      READ TABLE IT_0300 ASSIGNING <FS0300> WITH KEY SAKNR = IT_REGISTRO-SAKNR.
      IF SY-SUBRC IS INITIAL.
        <FS0300>-VLHSLZG = IT_REGISTRO-VLHSL.
        <FS0300>-VLKSLZG = IT_REGISTRO-VLKSL.
        <FS0300>-VLOSLZG = IT_REGISTRO-VLOSL.
      ELSE.
        IT_0300-BUKRS	  = PBUKRS.
        IT_0300-GJAHR   = PGJAHR.
        IT_0300-POPER   = PPOPER.
        IT_0300-SAKNR   = IT_REGISTRO-SAKNR.
        IT_0300-VLHSL   = 0.
        IT_0300-VLKSL   = 0.
        IT_0300-VLOSL   = 0.
        IT_0300-VLHSLZG = IT_REGISTRO-VLHSL.
        IT_0300-VLKSLZG = IT_REGISTRO-VLKSL.
        IT_0300-VLOSLZG = IT_REGISTRO-VLOSL.
        APPEND IT_0300.
      ENDIF.
    ENDLOOP.

    LOOP AT IT_0300 ASSIGNING <FS0300>.
      <FS0300>-VLHSLZGD = <FS0300>-VLHSLZG - <FS0300>-VLHSL.
      <FS0300>-VLKSLZGD = <FS0300>-VLKSLZG - <FS0300>-VLKSL.
      <FS0300>-VLOSLZGD = <FS0300>-VLOSLZG - <FS0300>-VLOSL.
    ENDLOOP.

    CALL FUNCTION 'Z_01_DRE_SQL_PROC'
      EXPORTING
        PBUKRS      = PBUKRS
        PGJAHR      = PGJAHR
        PPOPER      = PPOPER
        PVERSN      = PVERSN
      TABLES
        IT_REGISTRO = IT_REGISTRO3
      EXCEPTIONS
        ERRO_SQL    = 1
        ERRO_DRE    = 2
        OTHERS      = 3.

    LOOP AT IT_REGISTRO3.
      CLEAR: IT_REGISTRO2.
      IT_REGISTRO2-BUKRS = IT_REGISTRO3-BUKRS.
      IT_REGISTRO2-GJAHR = IT_REGISTRO3-GJAHR.
      IT_REGISTRO2-POPER = IT_REGISTRO3-POPER.
      IT_REGISTRO2-SAKNR = IT_REGISTRO3-SAKNR.
      IT_REGISTRO2-VLHSL = IT_REGISTRO3-VLHSL.
      IT_REGISTRO2-VLKSL = IT_REGISTRO3-VLKSL.
      IT_REGISTRO2-VLOSL = IT_REGISTRO3-VLOSL.
      COLLECT IT_REGISTRO2.
    ENDLOOP.

    LOOP AT IT_REGISTRO2.
      READ TABLE IT_0300 ASSIGNING <FS0300> WITH KEY SAKNR = IT_REGISTRO2-SAKNR.
      IF SY-SUBRC IS INITIAL.
        <FS0300>-VLHSLZG2 = IT_REGISTRO2-VLHSL.
        <FS0300>-VLKSLZG2 = IT_REGISTRO2-VLKSL.
        <FS0300>-VLOSLZG2 = IT_REGISTRO2-VLOSL.
      ELSE.
        IT_0300-BUKRS	  = PBUKRS.
        IT_0300-GJAHR   = PGJAHR.
        IT_0300-POPER   = PPOPER.
        IT_0300-SAKNR   = IT_REGISTRO-SAKNR.
        IT_0300-VLHSL   = 0.
        IT_0300-VLKSL   = 0.
        IT_0300-VLOSL   = 0.
        IT_0300-VLHSLZG2 = IT_REGISTRO-VLHSL.
        IT_0300-VLKSLZG2 = IT_REGISTRO-VLKSL.
        IT_0300-VLOSLZG2 = IT_REGISTRO-VLOSL.
        APPEND IT_0300.
      ENDIF.
    ENDLOOP.

    LOOP AT IT_0300 ASSIGNING <FS0300>.
      <FS0300>-VLHSLZGD2 = <FS0300>-VLHSLZG2 - <FS0300>-VLHSL.
      <FS0300>-VLKSLZGD2 = <FS0300>-VLKSLZG2 - <FS0300>-VLKSL.
      <FS0300>-VLOSLZGD2 = <FS0300>-VLOSLZG2 - <FS0300>-VLOSL.
    ENDLOOP.

  ELSE.
    MESSAGE 'Empresa não localizada!' TYPE 'S'.
    STOP.
  ENDIF.

ENDFORM.                    " PESQUISAR_DIFERENCAS

*&---------------------------------------------------------------------*
*&      Form  BUSCA_VALOR_MES
*&---------------------------------------------------------------------*
FORM BUSCA_VALOR_MES  USING    P_SALDO TYPE ZDE_FI_GL_SALDO_FAGLFLEXT
                               P_MONAT TYPE MONAT
                      CHANGING P_VALOR TYPE VLCUR12.

  CASE P_MONAT.
    WHEN 01.
      P_VALOR = P_SALDO-SL01.
    WHEN 02.
      P_VALOR = P_SALDO-SL02.
    WHEN 03.
      P_VALOR = P_SALDO-SL03.
    WHEN 04.
      P_VALOR = P_SALDO-SL04.
    WHEN 05.
      P_VALOR = P_SALDO-SL05.
    WHEN 06.
      P_VALOR = P_SALDO-SL06.
    WHEN 07.
      P_VALOR = P_SALDO-SL07.
    WHEN 08.
      P_VALOR = P_SALDO-SL08.
    WHEN 09.
      P_VALOR = P_SALDO-SL09.
    WHEN 10.
      P_VALOR = P_SALDO-SL10.
    WHEN 11.
      P_VALOR = P_SALDO-SL11.
    WHEN 12.
      P_VALOR = P_SALDO-SL12 + P_SALDO-SL13 + P_SALDO-SL14 + P_SALDO-SL15.
  ENDCASE.

ENDFORM.                    " BUSCA_VALOR_MES
