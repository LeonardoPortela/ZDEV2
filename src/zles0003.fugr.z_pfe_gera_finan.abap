FUNCTION Z_PFE_GERA_FINAN.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_NM_LOTE) TYPE  ZPFE_NUMERO_LOTE
*"  EXPORTING
*"     VALUE(WA_LOTE) TYPE  ZPFE_LOTE
*"     VALUE(WA_LOTE_ALV) TYPE  ZPFE_LOTE_ALV
*"  EXCEPTIONS
*"      SEM_LOTE
*"      GERANDO_FINAM
*"      CONCLUIDO_FINAN
*"      ZDIASVENCIMENTO
*"      DATA_VENCIMENTO
*"      GERADO_FINAM
*"----------------------------------------------------------------------

  DATA: L_MONAT    TYPE MONAT,
        L_GJAHR    TYPE GJAHR,
        P_DATA_ENT TYPE DATUM,
        P_DATA_VAL TYPE DATUM.

  DATA: P_VALOR            TYPE NETWR_FP,
        P_FORMA_PAGAMENTO  TYPE DZLSCH,
        P_PRINC_BNC_EMP    TYPE HBKID,
        P_BANCO_FORNECEDOR LIKE LFBK,
        P_CD_LOTE_FINAN    TYPE CHAR10,
        IT_LOTES           TYPE TABLE OF ZPFE_LOTE,
        IT_LOTES_ALV       TYPE TABLE OF ZPFE_LOTE_ALV,
        PNRLOTE            TYPE LXHME_RANGE_C10_T WITH HEADER LINE,
        IT_ZIB_CONTABIL    TYPE TABLE OF ZIB_CONTABIL WITH HEADER LINE,
        WL_ZIB_PERFORMS    TYPE ZIB_CONTABIL_EXT.

  DATA: WA_SETLEAF TYPE SETLEAF,
        IT_SETLEAF LIKE TABLE OF WA_SETLEAF INITIAL SIZE 0 WITH HEADER LINE,
        VG_DIAS    TYPE C LENGTH 2,
        LC_FABKL   TYPE FABKL,
        LP_FKDAY   TYPE FKDAY.

  CLEAR: WL_ZIB_PERFORMS.

  PNRLOTE-SIGN    = 'I'.
  PNRLOTE-OPTION  = 'EQ'.
  PNRLOTE-LOW     = P_NM_LOTE.
  PNRLOTE-HIGH    = P_NM_LOTE.
  APPEND PNRLOTE.

  CHECK WA_LOTE-TP_PLANO_ADMINISTRADORA NE ZCL_CIOT=>ST_TP_PLANO_PRE_PAGO.

  SELECT SINGLE * INTO WA_LOTE FROM ZPFE_LOTE WHERE NM_LOTE EQ P_NM_LOTE.

  IF NOT SY-SUBRC IS INITIAL.
    MESSAGE E013 WITH P_NM_LOTE RAISING SEM_LOTE.
  ENDIF.

  CALL FUNCTION 'Z_PFE_TIPO_CONTAB'
    EXPORTING
      P_DT_POSICAO  = WA_LOTE-DT_POSICAO
    IMPORTING
      P_TIPCONTABIL = TIP_CONTABIL.

  CASE WA_LOTE-STATUS.
    WHEN C_G.
      "G  Gerando Financeiro
      MESSAGE E014 WITH P_NM_LOTE RAISING GERANDO_FINAM.
    WHEN C_F.
      "G  Gerando Financeiro
      MESSAGE E016 WITH P_NM_LOTE RAISING GERADO_FINAM.
    WHEN C_C.
      "C  Confirmado
      MESSAGE E015 WITH P_NM_LOTE RAISING CONCLUIDO_FINAN.
  ENDCASE.

  CASE WA_LOTE-TP_PLANO_ADMINISTRADORA.
    WHEN ZCL_CIOT=>ST_TP_PLANO_PRE_PAGO.

      WA_LOTE-DT_VENCIMENTO = WA_LOTE-DT_POSICAO.
      WA_LOTE-STATUS        = C_F.
      MODIFY ZPFE_LOTE FROM WA_LOTE.

    WHEN ZCL_CIOT=>ST_TP_PLANO_POS_PAGO.

      IF WA_LOTE-DT_VENCIMENTO IS INITIAL.

        "Opter Área de contabilidade de custos
        SELECT * INTO TABLE IT_SETLEAF
          FROM SETLEAF
         WHERE SETNAME EQ 'ZDIASVENCIMENTO_POSTOS'.

        IF NOT SY-SUBRC IS INITIAL.
          MESSAGE E063(ZLES) RAISING ZDIASVENCIMENTO.
        ENDIF.

        LOOP AT IT_SETLEAF INTO WA_SETLEAF.
          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              INPUT  = WA_SETLEAF-VALFROM
            IMPORTING
              OUTPUT = VG_DIAS.
        ENDLOOP.

        LP_FKDAY = VG_DIAS.
        LC_FABKL = 'ZF'.  "Calendário default

* Obtem o dia útil com o acrescimo informado

        CALL FUNCTION 'WDKAL_DATE_ADD_FKDAYS'
          EXPORTING
            I_DATE  = WA_LOTE-DT_POSICAO
            I_FKDAY = LP_FKDAY
            I_FABKL = LC_FABKL
          IMPORTING
            E_DATE  = WA_LOTE-DT_VENCIMENTO
          EXCEPTIONS
            ERROR   = 1
            OTHERS  = 2.

        IF SY-SUBRC <> 0.
          MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
             WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 RAISING DATA_VENCIMENTO.
        ENDIF.

      ENDIF.

      CALL FUNCTION 'NUMBER_GET_NEXT'
        EXPORTING
          NR_RANGE_NR = '01'
          OBJECT      = 'ZPFEFINAN'
        IMPORTING
          NUMBER      = P_CD_LOTE_FINAN.

      CONCATENATE P_NM_LOTE P_CD_LOTE_FINAN INTO IT_ZIB_CONTABIL-OBJ_KEY.
      IT_ZIB_CONTABIL-SEQITEM = 1.
      CASE TIP_CONTABIL.
        WHEN 'FC'.
          IT_ZIB_CONTABIL-BSCHL    = '29'.
          IT_ZIB_CONTABIL-BLART    = 'ME'.
          IT_ZIB_CONTABIL-UMSKZ    = 'J'.
        WHEN 'FS' OR 'FP'.
          IT_ZIB_CONTABIL-BSCHL    = '21'.
          IT_ZIB_CONTABIL-BLART    = 'ME'.
          IT_ZIB_CONTABIL-UMSKZ    = SPACE.
          WL_ZIB_PERFORMS-OBJ_KEY  = IT_ZIB_CONTABIL-OBJ_KEY.
          WL_ZIB_PERFORMS-REPID    = 'ZLESR0065'.
          WL_ZIB_PERFORMS-FORMNAME = 'X_GERAR_FECHAMENTO'.
      ENDCASE.

      IT_ZIB_CONTABIL-GSBER = WA_LOTE-BRANCH.
      IT_ZIB_CONTABIL-BUPLA = WA_LOTE-BRANCH.
      IT_ZIB_CONTABIL-BUKRS = WA_LOTE-BUKRS.

      P_DATA_ENT = WA_LOTE-DT_POSICAO.

      CALL FUNCTION 'Z_RET_DT_AJUSTADA_FI_MM'
        EXPORTING
          P_DATA_ENT     = WA_LOTE-DT_POSICAO
          P_BUKRS        = WA_LOTE-BUKRS
          P_VAL_FI       = 'X'
          P_VAL_MM       = 'X'
        IMPORTING
          P_DATA_VAL     = P_DATA_VAL
        EXCEPTIONS
          DATA_FI_MM_NAO = 1
          OTHERS         = 2.

      IF SY-SUBRC <> 0.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.

      IT_ZIB_CONTABIL-INTERFACE = '98'.
      IT_ZIB_CONTABIL-BKTXT     = 'PF-e'.

      CALL FUNCTION 'CONVERSION_EXIT_PDATE_OUTPUT'
        EXPORTING
          INPUT  = P_DATA_VAL
        IMPORTING
          OUTPUT = IT_ZIB_CONTABIL-BLDAT.

      IT_ZIB_CONTABIL-BUDAT     = IT_ZIB_CONTABIL-BLDAT.
      IT_ZIB_CONTABIL-GJAHR     = P_DATA_VAL(4).
      IT_ZIB_CONTABIL-MONAT     = P_DATA_VAL+4(2).
      IT_ZIB_CONTABIL-XBLNR     = P_NM_LOTE.
      IT_ZIB_CONTABIL-HKONT     = WA_LOTE-CD_ADIMINISTRA.
      IT_ZIB_CONTABIL-WRBTR     = ABS( WA_LOTE-VL_CONFI_LOTE ).
      IT_ZIB_CONTABIL-WAERS     = WA_LOTE-MOEDA.

      P_DATA_VAL = P_DATA_VAL + 1.

      CALL FUNCTION 'CONVERSION_EXIT_PDATE_OUTPUT'
        EXPORTING
          INPUT  = WA_LOTE-DT_VENCIMENTO
        IMPORTING
          OUTPUT = IT_ZIB_CONTABIL-ZFBDT.

      P_VALOR = ABS( WA_LOTE-VL_TOTAL_LOTE ).

      CALL FUNCTION 'Z_RET_FORMA_PAGAMENTO'
        EXPORTING
          P_BUKRS            = WA_LOTE-BUKRS
          P_LIFNR            = WA_LOTE-CD_ADIMINISTRA
          P_VALOR            = P_VALOR
        IMPORTING
          P_FORMA_PAGAMENTO  = P_FORMA_PAGAMENTO
          P_PRINC_BNC_EMP    = P_PRINC_BNC_EMP
          P_BANCO_FORNECEDOR = P_BANCO_FORNECEDOR
        EXCEPTIONS
          NAO_FORNECEDOR     = 1
          FORNECEDOR_CONTA   = 2
          FORNECEDOR_BANCO   = 3
          FAIXA_VALOR        = 4
          BANCO_EMPRESA      = 5
          OTHERS             = 6.

      IF SY-SUBRC IS NOT INITIAL.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ELSE.
        IT_ZIB_CONTABIL-ZLSCH = P_FORMA_PAGAMENTO.
        IT_ZIB_CONTABIL-HBKID = P_PRINC_BNC_EMP.
        IT_ZIB_CONTABIL-BVTYP = P_BANCO_FORNECEDOR-BVTYP.
      ENDIF.

      CONCATENATE 'Pag Administradora Lt.:' P_NM_LOTE INTO IT_ZIB_CONTABIL-SGTXT SEPARATED BY SPACE.
      IT_ZIB_CONTABIL-XREF3     = '2.08.03'.
      CONCATENATE 'FR-' P_NM_LOTE INTO IT_ZIB_CONTABIL-ZUONR.
      IT_ZIB_CONTABIL-WAERS_I   = WA_LOTE-MOEDA.
      IT_ZIB_CONTABIL-DMBTR     = ABS( WA_LOTE-VL_CONFI_LOTE ).
      IT_ZIB_CONTABIL-RG_ATUALIZADO = C_N.
      APPEND IT_ZIB_CONTABIL.

      IT_ZIB_CONTABIL-SEQITEM = 2.
      CASE TIP_CONTABIL.
        WHEN 'FC'.
          IT_ZIB_CONTABIL-BSCHL   = '39'.
        WHEN 'FS'.
          IT_ZIB_CONTABIL-BSCHL   = '31'.
      ENDCASE.

      CLEAR: IT_ZIB_CONTABIL-ZUONR.
      IT_ZIB_CONTABIL-HKONT   = WA_LOTE-CD_ADIMINISTRA.
* Caso seja uma conta razao e tiver conhecimento entao contabiliza no centro tomador do servico..
      IT_ZIB_CONTABIL-GSBER   = WA_LOTE-BRANCH.
      IT_ZIB_CONTABIL-BUPLA   = WA_LOTE-BRANCH.

      APPEND IT_ZIB_CONTABIL.

      WA_LOTE-STATUS  = C_G.
      WA_LOTE-OBJ_KEY = IT_ZIB_CONTABIL-OBJ_KEY.

      MODIFY ZPFE_LOTE FROM WA_LOTE.
      MODIFY ZIB_CONTABIL FROM TABLE IT_ZIB_CONTABIL.

      IF TIP_CONTABIL EQ 'FS'.
        MODIFY ZIB_CONTABIL_EXT FROM WL_ZIB_PERFORMS.
      ENDIF.

      COMMIT WORK.

  ENDCASE.

  CALL FUNCTION 'Z_PFE_PSQ_LOTE'
    EXPORTING
      PNRLOTE      = PNRLOTE[]
    TABLES
      IT_LOTES     = IT_LOTES
      IT_LOTES_ALV = IT_LOTES_ALV.

  READ TABLE IT_LOTES     INTO WA_LOTE INDEX 1.
  READ TABLE IT_LOTES_ALV INTO WA_LOTE_ALV INDEX 1.

ENDFUNCTION.
