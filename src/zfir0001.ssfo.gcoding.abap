DATA: IT_ZFIT0045 TYPE TABLE OF TY_ZFIT0045,
      IT_ZFIT0046 TYPE TABLE OF TY_ZFIT0046,
      IT_BSAK     TYPE TABLE OF TY_BSAK,
      IT_LFA1     TYPE TABLE OF TY_LFA1,
      IT_T001     TYPE TABLE OF TY_T001,

      WA_ZFIT0045 TYPE TY_ZFIT0045,
      WA_ZFIT0046 TYPE TY_ZFIT0046,
      WA_BSAK     TYPE TY_BSAK,
      WA_BSAK_CP  TYPE TY_BSAK,
      WA_LFA1     TYPE TY_LFA1,
      WA_T001     TYPE TY_T001,
      WA_BSIK     TYPE BSIK,
      TABIX       TYPE SY-TABIX.


SELECT  BUKRS NRO_SOL EBELN LIFNR BELNR DT_PGTO DT_PREV_LIQ MOEDA_PGTO MOTIVO DEP_RESP RESP_NEG USNAM
    FROM ZFIT0045
    INTO TABLE IT_ZFIT0045
    WHERE BELNR NE ''
    AND STATUS  EQ 'A'
    AND BUKRS   EQ I_BUKRS
    AND RESP_NEG EQ I_RESP
    AND DT_PGTO  BETWEEN I_DATA_I AND I_DATA_F.

LOOP AT IT_ZFIT0045 INTO WA_ZFIT0045.
  TABIX = SY-TABIX.
  WA_ZFIT0045-GJAHR = WA_ZFIT0045-DT_PGTO+0(4).
  MODIFY IT_ZFIT0045 FROM WA_ZFIT0045 INDEX TABIX TRANSPORTING GJAHR.
  SELECT SINGLE *
    FROM BSIK
    INTO WA_BSIK
    WHERE BUKRS  = WA_ZFIT0045-BUKRS
    AND   BELNR = WA_ZFIT0045-BELNR
    AND   GJAHR = WA_ZFIT0045-GJAHR.
  IF SY-SUBRC = 0.
    WA_ZFIT0045-DELE = 'X'.
    MODIFY IT_ZFIT0045 FROM WA_ZFIT0045 INDEX TABIX TRANSPORTING DELE.
  ENDIF.
ENDLOOP.
DELETE IT_ZFIT0045 WHERE DELE = 'X'.

IF IT_ZFIT0045[] IS INITIAL.
  EXIT.
ENDIF.


SELECT  NRO_SOL EBELN  EBELP ANLN1 ANLN2 VLR_ADIANTAMENTO
  FROM ZFIT0046
  INTO TABLE IT_ZFIT0046
  FOR ALL ENTRIES IN IT_ZFIT0045
  WHERE NRO_SOL EQ IT_ZFIT0045-NRO_SOL.

SELECT BUKRS BELNR GJAHR AUGBL AUGDT HKONT DMBTR DMBE2
  FROM BSAK
  INTO TABLE IT_BSAK
  FOR ALL ENTRIES IN IT_ZFIT0045
  WHERE BUKRS  = IT_ZFIT0045-BUKRS
  AND   BELNR  = IT_ZFIT0045-BELNR
  AND   GJAHR  = IT_ZFIT0045-GJAHR.

SELECT LIFNR NAME1
  FROM LFA1
  INTO TABLE IT_LFA1
  FOR ALL ENTRIES IN IT_ZFIT0045
  WHERE LIFNR EQ IT_ZFIT0045-LIFNR.

SELECT BUKRS BUTXT
  FROM T001
  INTO TABLE IT_T001
  FOR ALL ENTRIES IN IT_ZFIT0045
  WHERE BUKRS EQ IT_ZFIT0045-BUKRS.

"SAIDA
SORT : IT_ZFIT0045 BY BUKRS NRO_SOL EBELN,
       IT_ZFIT0046 BY NRO_SOL EBELN EBELP,
       IT_BSAK     BY BUKRS BELNR GJAHR,
       IT_LFA1     BY LIFNR,
       IT_T001     BY BUKRS.

DATA:  XCP_ADTO_R  TYPE BSAK-DMBTR,
       XCP_ADTO_U  TYPE BSAK-DMBE2,
       XVL_ADTO_R  TYPE BSAK-DMBTR,
       XVL_ADTO_U  TYPE BSAK-DMBE2,
       V_AUGBL     TYPE BSAK-AUGBL,
       V_AUGDT     TYPE BSAK-AUGDT.


LOOP AT IT_ZFIT0045 INTO WA_ZFIT0045.
  WA_SAIDA-CHECKBOX           = ''.
*  IF SY-DATUM GT WA_ZFIT0045-DT_PREV_LIQ .
*    WA_SAIDA-ICON1   = ICON_ALERT.
*  ENDIF.
  READ TABLE IT_T001 INTO WA_T001 WITH KEY BUKRS = WA_ZFIT0045-BUKRS BINARY SEARCH.
  CONCATENATE WA_T001-BUKRS '-' WA_T001-BUTXT INTO  WA_SAIDA-BUTXT.

  WA_SAIDA-NRO_SOL            = WA_ZFIT0045-NRO_SOL.


  READ TABLE IT_LFA1 INTO WA_LFA1 WITH KEY LIFNR = WA_ZFIT0045-LIFNR BINARY SEARCH.
  CONCATENATE WA_LFA1-LIFNR '-' WA_LFA1-NAME1 INTO WA_SAIDA-NAME1_F.

  WA_SAIDA-BELNR              = WA_ZFIT0045-BELNR.
  WA_SAIDA-DT_PGTO            = WA_ZFIT0045-DT_PGTO.
  WA_SAIDA-MOEDA_PGTO         = WA_ZFIT0045-MOEDA_PGTO.
  WA_SAIDA-DEP_RESP           = WA_ZFIT0045-DEP_RESP.
  WA_SAIDA-RESP_NEG           = WA_ZFIT0045-RESP_NEG.
  WA_SAIDA-USNAM              = WA_ZFIT0045-USNAM.
  WA_SAIDA-MOTIVO             = WA_ZFIT0045-MOTIVO.
  WA_SAIDA-DT_PREV_LIQ        = WA_ZFIT0045-DT_PREV_LIQ.

  WA_SAIDA-EBELN              = WA_ZFIT0045-EBELN.
  XCP_ADTO_R = 0.
  XCP_ADTO_U = 0.
  XVL_ADTO_R = 0.
  XVL_ADTO_U = 0.
  LOOP AT IT_BSAK INTO WA_BSAK WHERE BUKRS = WA_ZFIT0045-BUKRS
                               AND   BELNR = WA_ZFIT0045-BELNR
                               AND   GJAHR = WA_ZFIT0045-GJAHR.
    XVL_ADTO_R = WA_BSAK-DMBTR.
    XVL_ADTO_U = WA_BSAK-DMBE2.
    IF WA_BSAK-AUGBL IS NOT INITIAL.
      V_AUGBL = WA_BSAK-AUGBL. " Primeira compensação
      V_AUGDT = WA_BSAK-AUGDT. " Primeira compensação
      XCP_ADTO_R = 0.
      XCP_ADTO_U = 0.
      WHILE V_AUGBL IS NOT INITIAL.
        SELECT SINGLE BUKRS BELNR GJAHR AUGBL AUGDT HKONT DMBTR DMBE2
         FROM BSAK
         INTO WA_BSAK_CP
         WHERE BUKRS  = WA_ZFIT0045-BUKRS
         AND   BELNR  = V_AUGBL
         AND   GJAHR  = V_AUGDT+0(4).
        IF SY-SUBRC = 0.
          ADD WA_BSAK_CP-DMBTR TO XCP_ADTO_R.
          ADD WA_BSAK_CP-DMBE2 TO XCP_ADTO_U.
        ENDIF.
        V_AUGBL = WA_BSAK_CP-AUGBL. " compensação seguinte
        V_AUGDT = WA_BSAK_CP-AUGDT. " compensação seguinte
      ENDWHILE.
    ENDIF.
    WA_SAIDA-VLR_ADTO_R = XVL_ADTO_R.
    WA_SAIDA-VLR_ADTO_U = XVL_ADTO_U.
    WA_SAIDA-VLR_COMP_R = XCP_ADTO_R.
    WA_SAIDA-VLR_COMP_U = XCP_ADTO_U.
    WA_SAIDA-VLR_SALD_R = XVL_ADTO_R - XCP_ADTO_R.
    WA_SAIDA-VLR_SALD_U = XVL_ADTO_U - XCP_ADTO_U.
    WA_SAIDA-AUGBL      = WA_BSAK-AUGBL.
    APPEND WA_SAIDA TO IT_SAIDA.
  ENDLOOP.
  CLEAR WA_SAIDA.
ENDLOOP.





