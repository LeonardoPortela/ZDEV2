*&---------------------------------------------------------------------*
*& Report  ZHCMR_PA0041
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZHCMR_PA0041.

TABLES: ZHCMT_PA_0013.

DATA: LC_CK_ALTEROU TYPE CHAR01.

CLASS LCL_EVENT_RECEIVER_ITENS_PEDI DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_DATA_CHANGED FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID IMPORTING ER_DATA_CHANGED.
ENDCLASS.

CLASS LCL_EVENT_RECEIVER_ITENS_INF DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_DATA_CHANGED FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID IMPORTING ER_DATA_CHANGED.
ENDCLASS.

DATA: NFE_CONTAINER_0204        TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      NFE_CONTAINER_0205        TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      CT_ALV_ITENS_PEDI         TYPE REF TO CL_GUI_ALV_GRID,
      CT_ALV_ITENS_INFORME      TYPE REF TO CL_GUI_ALV_GRID,
      IT_PA0014                 TYPE TABLE OF ZHCMT_PA_0014,
      WA_PA0014                 TYPE ZHCMT_PA_0014,
      IT_PA0020                 TYPE TABLE OF ZHCMT_PA_0020,
      WA_PA0020                 TYPE ZHCMT_PA_0020,
      EVENT_RECEIVER_ITENS_PEDI TYPE REF TO LCL_EVENT_RECEIVER_ITENS_PEDI,
      EVENT_RECEIVER_ITENS_INF  TYPE REF TO LCL_EVENT_RECEIVER_ITENS_INF,
      OK_CODE                   TYPE SY-UCOMM.

DATA: IS_STABLE  	   TYPE LVC_S_STBL,
      I_SOFT_REFRESH TYPE CHAR01.

CLASS LCL_EVENT_RECEIVER_ITENS_PEDI IMPLEMENTATION.

  METHOD HANDLE_DATA_CHANGED.

    PERFORM DATA_CHANGED USING ER_DATA_CHANGED.

    LC_CK_ALTEROU = ABAP_TRUE.

    IS_STABLE-COL = ABAP_TRUE.
    IS_STABLE-ROW = ABAP_TRUE.
    I_SOFT_REFRESH = ABAP_TRUE.

    CT_ALV_ITENS_PEDI->REFRESH_TABLE_DISPLAY(
      EXPORTING
        IS_STABLE      = IS_STABLE
        I_SOFT_REFRESH = I_SOFT_REFRESH
    ).

    CALL METHOD CL_GUI_CFW=>FLUSH.

    LEAVE TO SCREEN 0100.

  ENDMETHOD.

ENDCLASS.

CLASS LCL_EVENT_RECEIVER_ITENS_INF IMPLEMENTATION.

  METHOD HANDLE_DATA_CHANGED.

    PERFORM DATA_CHANGED_INF USING ER_DATA_CHANGED.

    LC_CK_ALTEROU  = ABAP_TRUE.
    IS_STABLE-COL  = ABAP_TRUE.
    IS_STABLE-ROW  = ABAP_TRUE.
    I_SOFT_REFRESH = ABAP_TRUE.

    CT_ALV_ITENS_INFORME->REFRESH_TABLE_DISPLAY(
      EXPORTING
        IS_STABLE      = IS_STABLE
        I_SOFT_REFRESH = I_SOFT_REFRESH
    ).

    CALL METHOD CL_GUI_CFW=>FLUSH.

    LEAVE TO SCREEN 0100.

  ENDMETHOD.

ENDCLASS.


START-OF-SELECTION.

  "Configuração de Perídos Disponiveis p/ Ponto e Folha Mobile

  SELECT SINGLE * INTO ZHCMT_PA_0013
    FROM ZHCMT_PA_0013.

  SELECT * INTO TABLE IT_PA0014
    FROM ZHCMT_PA_0014.

  SELECT * INTO TABLE IT_PA0020
    FROM ZHCMT_PA_0020.

  SELECT * INTO TABLE @DATA(IT_ZHCMT0004)
    FROM ZHCMT0004 AS R
    WHERE NOT EXISTS ( SELECT * FROM ZHCMT_PA_0014 AS T WHERE T~ANOPR EQ R~ANOPR AND T~MESPR EQ R~MESPR ).

  LOOP AT IT_ZHCMT0004 INTO DATA(WA_ZHCMT0004).
    CLEAR: WA_PA0014.
    WA_PA0014-ANOPR = WA_ZHCMT0004-ANOPR.
    WA_PA0014-MESPR = WA_ZHCMT0004-MESPR.
    APPEND WA_PA0014 TO IT_PA0014.
  ENDLOOP.

  SORT IT_PA0014 DESCENDING BY ANOPR MESPR.

  CALL SCREEN 0100.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.

  DATA: WA_ALV_PEDI      TYPE DISVARIANT,
        WA_LAYOUT_PEDI   TYPE LVC_S_LAYO,
        WA_ALV_INF       TYPE DISVARIANT,
        WA_LAYOUT_INF    TYPE LVC_S_LAYO,
        WA_STBL_PEDI     TYPE LVC_S_STBL,
        IT_FIELDCAT_PEDI TYPE LVC_T_FCAT,
        IT_FIELDCAT_INF  TYPE LVC_T_FCAT,
        IT_FUNCTION_PEDI TYPE UI_FUNCTIONS,
        IT_FUNCTION_INF  TYPE UI_FUNCTIONS,
        IT_UCOMM         TYPE TABLE OF SY-UCOMM.

  CLEAR: IT_UCOMM.

  IF LC_CK_ALTEROU EQ ABAP_FALSE.
    APPEND 'SAVE' TO IT_UCOMM.
  ENDIF.

  SET PF-STATUS 'PF0100' EXCLUDING IT_UCOMM.
  SET TITLEBAR 'TL0100'.

  IF NFE_CONTAINER_0205 IS INITIAL.

    CREATE OBJECT NFE_CONTAINER_0205
      EXPORTING
        CONTAINER_NAME = 'ALV_INF_REND'.

    CREATE OBJECT CT_ALV_ITENS_INFORME
      EXPORTING
        I_PARENT = NFE_CONTAINER_0205.

    "Variante
    WA_ALV_INF-REPORT      = SY-REPID.
    WA_ALV_INF-HANDLE      = '0101'.
    WA_ALV_INF-LOG_GROUP   = ABAP_FALSE.
    WA_ALV_INF-USERNAME    = ABAP_FALSE.
    WA_ALV_INF-VARIANT     = ABAP_FALSE.
    WA_ALV_INF-TEXT        = ABAP_FALSE.
    WA_ALV_INF-DEPENDVARS  = ABAP_FALSE.

    "LayOut
    WA_LAYOUT_INF-ZEBRA      = ABAP_TRUE.
    WA_LAYOUT_INF-SEL_MODE   = 'A'.
    WA_LAYOUT_INF-EDIT       = ABAP_TRUE.
    WA_LAYOUT_INF-GRID_TITLE = 'Informe de Rendimentos'.

    "Catálogo de Itens de Nota Fiscal
    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME = 'ZHCMT_PA_0020'
      CHANGING
        CT_FIELDCAT      = IT_FIELDCAT_INF.

    CT_ALV_ITENS_INFORME->REGISTER_EDIT_EVENT( EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).
    CT_ALV_ITENS_INFORME->REGISTER_EDIT_EVENT( EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED ).

    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW      TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE         TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO          TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW    TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_COPY          TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW      TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_CUT           TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_CUT           TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CHECK             TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_REFRESH           TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_AUF               TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_AVERAGE           TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_BACK_CLASSIC      TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_ABC          TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_CHAIN        TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_CRBATCH      TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_CRWEB        TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_LINEITEMS    TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_MASTER_DATA  TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_MORE         TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_REPORT       TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_XINT         TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_XML_EXPORT   TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CALL_XXL          TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_COL_OPTIMIZE      TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CURRENT_VARIANT   TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_DATA_SAVE         TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_DELETE_FILTER     TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_DESELECT_ALL      TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_DETAIL            TO IT_FUNCTION_INF.
    "APPEND CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL          TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_EXPCRDATA         TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_EXPCRDESIG        TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_EXPCRTEMPL        TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_EXPMDB            TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_EXTEND            TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_F4                TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_FILTER            TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_FIND              TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_FIND_MORE         TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_FIX_COLUMNS       TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_GRAPH             TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_HELP              TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_HTML              TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_INFO              TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOAD_VARIANT      TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_MAXIMUM           TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_MINIMUM           TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_AVERAGE           TO IT_FUNCTION_INF.
    APPEND CL_GUI_ALV_GRID=>MC_FC_SUM               TO IT_FUNCTION_INF.

    CALL METHOD CT_ALV_ITENS_INFORME->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_VARIANT                    = WA_ALV_INF
        I_SAVE                        = 'A'
        IS_LAYOUT                     = WA_LAYOUT_INF
        IT_TOOLBAR_EXCLUDING          = IT_FUNCTION_INF
      CHANGING
        IT_OUTTAB                     = IT_PA0020[]
        IT_FIELDCATALOG               = IT_FIELDCAT_INF
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.

    IF SY-SUBRC IS NOT INITIAL.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CREATE OBJECT EVENT_RECEIVER_ITENS_INF.
    SET HANDLER EVENT_RECEIVER_ITENS_INF->HANDLE_DATA_CHANGED FOR CT_ALV_ITENS_INFORME.

  ENDIF.

  IF NFE_CONTAINER_0204 IS INITIAL.

    CREATE OBJECT NFE_CONTAINER_0204
      EXPORTING
        CONTAINER_NAME = 'ALV_FOLHA'.

    CREATE OBJECT CT_ALV_ITENS_PEDI
      EXPORTING
        I_PARENT = NFE_CONTAINER_0204.

    "Variante
    WA_ALV_PEDI-REPORT      = SY-REPID.
    WA_ALV_PEDI-HANDLE      = '0100'.
    WA_ALV_PEDI-LOG_GROUP   = ABAP_FALSE.
    WA_ALV_PEDI-USERNAME    = ABAP_FALSE.
    WA_ALV_PEDI-VARIANT     = ABAP_FALSE.
    WA_ALV_PEDI-TEXT        = ABAP_FALSE.
    WA_ALV_PEDI-DEPENDVARS  = ABAP_FALSE.

    "LayOut
    WA_LAYOUT_PEDI-ZEBRA      = ABAP_TRUE.
    WA_LAYOUT_PEDI-SEL_MODE   = 'A'.
    WA_LAYOUT_PEDI-EDIT       = ABAP_FALSE.
    WA_LAYOUT_PEDI-GRID_TITLE = 'Holerites e Espelhos de Ponto'.

    "Controle VLA: estabilidade refresh
    WA_STBL_PEDI-ROW = ABAP_TRUE.
    WA_STBL_PEDI-COL = ABAP_TRUE.

    "Catálogo de Itens de Nota Fiscal
    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME = 'ZHCMT_PA_0014'
      CHANGING
        CT_FIELDCAT      = IT_FIELDCAT_PEDI.

    LOOP AT IT_FIELDCAT_PEDI ASSIGNING FIELD-SYMBOL(<FS_CATALAGO_PEDI>).
      <FS_CATALAGO_PEDI>-EDIT = ABAP_FALSE.
      CASE <FS_CATALAGO_PEDI>-FIELDNAME.
        WHEN 'CK_ESPELHO_PONTO' OR 'CK_FOLHA_PAGAMENTO'.
          <FS_CATALAGO_PEDI>-EDIT      = ABAP_TRUE.
          <FS_CATALAGO_PEDI>-JUST      = 'C'.
          <FS_CATALAGO_PEDI>-CHECKBOX  = ABAP_TRUE.
          <FS_CATALAGO_PEDI>-OUTPUTLEN = 30.
        WHEN OTHERS.
          <FS_CATALAGO_PEDI>-OUTPUTLEN = 5.
      ENDCASE.
    ENDLOOP.

    CT_ALV_ITENS_PEDI->REGISTER_EDIT_EVENT( EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).
    CT_ALV_ITENS_PEDI->REGISTER_EDIT_EVENT( EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED ).

    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW    TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW    TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW      TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE         TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO          TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW    TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_COPY          TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW      TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_CUT           TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_CUT           TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_CHECK             TO IT_FUNCTION_PEDI.
    APPEND CL_GUI_ALV_GRID=>MC_FC_REFRESH           TO IT_FUNCTION_PEDI.

    CALL METHOD CT_ALV_ITENS_PEDI->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_VARIANT                    = WA_ALV_PEDI
        I_SAVE                        = 'A'
        IS_LAYOUT                     = WA_LAYOUT_PEDI
        IT_TOOLBAR_EXCLUDING          = IT_FUNCTION_PEDI
      CHANGING
        IT_OUTTAB                     = IT_PA0014[]
        IT_FIELDCATALOG               = IT_FIELDCAT_PEDI
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.

    IF SY-SUBRC IS NOT INITIAL.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CREATE OBJECT EVENT_RECEIVER_ITENS_PEDI.
    SET HANDLER EVENT_RECEIVER_ITENS_PEDI->HANDLE_DATA_CHANGED FOR CT_ALV_ITENS_PEDI.

  ENDIF.

  IS_STABLE-COL = ABAP_TRUE.
  IS_STABLE-ROW = ABAP_TRUE.
  I_SOFT_REFRESH = ABAP_TRUE.

  CT_ALV_ITENS_PEDI->REFRESH_TABLE_DISPLAY(
    EXPORTING
      IS_STABLE      = IS_STABLE
      I_SOFT_REFRESH = I_SOFT_REFRESH
  ).

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100_EXIT INPUT.

  DATA: LC_ANSWER TYPE CHAR01.

  IF LC_CK_ALTEROU EQ ABAP_TRUE.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        TITLEBAR              = TEXT-001
        TEXT_QUESTION         = TEXT-002
        TEXT_BUTTON_1         = TEXT-003
        ICON_BUTTON_1         = 'ICON_CHECKED'
        TEXT_BUTTON_2         = TEXT-004
        ICON_BUTTON_2         = 'ICON_INCOMPLETE'
        DEFAULT_BUTTON        = '2'
        DISPLAY_CANCEL_BUTTON = ' '
      IMPORTING
        ANSWER                = LC_ANSWER
      EXCEPTIONS
        TEXT_NOT_FOUND        = 1
        OTHERS                = 2.

    "1 - SIM
    "2 - NÃO
    "A - CANCEL

    CHECK LC_ANSWER NE 'A'.

    IF LC_ANSWER EQ '1'.
      PERFORM SALVAR.
    ENDIF.

  ENDIF.

  LEAVE PROGRAM.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  SALVAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SALVAR .

  MODIFY ZHCMT_PA_0013 FROM ZHCMT_PA_0013.

  DELETE FROM ZHCMT_PA_0014.
  MODIFY ZHCMT_PA_0014 FROM TABLE IT_PA0014[].

  DELETE FROM ZHCMT_PA_0020.
  DELETE IT_PA0020 WHERE ANOPR IS INITIAL.
  DELETE IT_PA0020 WHERE ANOPR LE '2016'.
  MODIFY ZHCMT_PA_0020 FROM TABLE IT_PA0020[].
  COMMIT WORK.

  CT_ALV_ITENS_INFORME->REFRESH_TABLE_DISPLAY(
    EXPORTING
      IS_STABLE      = IS_STABLE
      I_SOFT_REFRESH = I_SOFT_REFRESH
  ).

  LC_CK_ALTEROU = ABAP_FALSE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Module  ALTEROU_DIAS  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ALTEROU_DIAS INPUT.
  LC_CK_ALTEROU = ABAP_TRUE.
ENDMODULE.

FORM DATA_CHANGED USING  RR_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL.

  DATA: CK_ESPELHO_PONTO   TYPE ZDE_CK_ESPELHO_PONTO,
        CK_FOLHA_PAGAMENTO TYPE ZDE_CK_FOLHA_PAGAMENTO.

  LOOP AT RR_DATA_CHANGED->MT_GOOD_CELLS INTO DATA(LS_MOD_CELLS).

    READ TABLE IT_PA0014 ASSIGNING FIELD-SYMBOL(<FS_0014>) INDEX LS_MOD_CELLS-ROW_ID.

    CASE LS_MOD_CELLS-FIELDNAME.
      WHEN 'CK_FOLHA_PAGAMENTO'.

        CALL METHOD RR_DATA_CHANGED->GET_CELL_VALUE
          EXPORTING
            I_ROW_ID    = LS_MOD_CELLS-ROW_ID
            I_FIELDNAME = LS_MOD_CELLS-FIELDNAME
          IMPORTING
            E_VALUE     = CK_FOLHA_PAGAMENTO.

        <FS_0014>-CK_FOLHA_PAGAMENTO = CK_FOLHA_PAGAMENTO.

      WHEN 'CK_ESPELHO_PONTO'.

        CALL METHOD RR_DATA_CHANGED->GET_CELL_VALUE
          EXPORTING
            I_ROW_ID    = LS_MOD_CELLS-ROW_ID
            I_FIELDNAME = LS_MOD_CELLS-FIELDNAME
          IMPORTING
            E_VALUE     = CK_ESPELHO_PONTO.

        <FS_0014>-CK_ESPELHO_PONTO = CK_ESPELHO_PONTO.

    ENDCASE.
  ENDLOOP.

ENDFORM.

FORM DATA_CHANGED_INF USING  RR_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL.

  DATA: LC_ZED_ANOPR TYPE ZED_ANOPR.

  DATA(IT_PA0020_AUX) = IT_PA0020[].

  LOOP AT RR_DATA_CHANGED->MT_DELETED_ROWS INTO DATA(LS_DELETED_ROWS).
    READ TABLE IT_PA0020_AUX INDEX LS_DELETED_ROWS-ROW_ID INTO DATA(WA_PA0020_AUX).
    IF SY-SUBRC IS INITIAL.
      DELETE IT_PA0020 WHERE ANOPR EQ WA_PA0020_AUX-ANOPR.
    ENDIF.
  ENDLOOP.

  LOOP AT RR_DATA_CHANGED->MT_GOOD_CELLS INTO DATA(LS_MOD_CELLS).

    IF LS_MOD_CELLS-FIELDNAME EQ 'ANOPR'.

      CALL METHOD RR_DATA_CHANGED->GET_CELL_VALUE
        EXPORTING
          I_ROW_ID    = LS_MOD_CELLS-ROW_ID
          I_FIELDNAME = LS_MOD_CELLS-FIELDNAME
        IMPORTING
          E_VALUE     = LC_ZED_ANOPR.

      READ TABLE IT_PA0020 WITH KEY ANOPR = LC_ZED_ANOPR TRANSPORTING NO FIELDS.
      IF SY-SUBRC IS NOT INITIAL.
        WA_PA0020-ANOPR = LC_ZED_ANOPR.
        APPEND WA_PA0020 TO IT_PA0020.
      ENDIF.
    ENDIF.

  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.

  CASE OK_CODE.
    WHEN 'SAVE'.
      CLEAR: OK_CODE.
      PERFORM SALVAR.
  ENDCASE.

ENDMODULE.
