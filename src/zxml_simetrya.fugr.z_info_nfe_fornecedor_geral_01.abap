FUNCTION Z_INFO_NFE_FORNECEDOR_GERAL_01.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_DOCNUM) TYPE  J_1BDOCNUM OPTIONAL
*"     REFERENCE(I_CHAVE_NFE) TYPE  CHAR44 OPTIONAL
*"----------------------------------------------------------------------
  TYPES: BEGIN OF TY_DOC,
           NU_CHAVE_CNPJ   TYPE ZIB_NFE_FORN-NU_CHAVE_CNPJ,
           NU_CHAVE_MODELO TYPE ZIB_NFE_FORN-NU_CHAVE_MODELO,
           NU_CHAVE_SERIE  TYPE ZIB_NFE_FORN-NU_CHAVE_SERIE,
           NU_CHAVE_NUMERO TYPE ZIB_NFE_FORN-NU_CHAVE_NUMERO.
          INCLUDE STRUCTURE J_1BNFDOC.
  TYPES: END OF TY_DOC.

  DATA: T_DOC          TYPE TABLE OF TY_DOC       INITIAL SIZE 0 WITH HEADER LINE,
        T_DOC_AUX      TYPE TABLE OF TY_DOC       INITIAL SIZE 0 WITH HEADER LINE,
        T_LFA1         TYPE TABLE OF LFA1         INITIAL SIZE 0 WITH HEADER LINE,
        T_KNA1         TYPE TABLE OF KNA1         INITIAL SIZE 0 WITH HEADER LINE,
        T_ZIB_NFE_FORN_AUX TYPE TABLE OF ZIB_NFE_FORN INITIAL SIZE 0 WITH HEADER LINE,
        T_ZIB_NFE_FORN     TYPE TABLE OF ZIB_NFE_FORN INITIAL SIZE 0 WITH HEADER LINE.

  DATA: TG_ACTIVE TYPE TABLE OF J_1BNFE_ACTIVE WITH HEADER LINE INITIAL SIZE 0.

  DATA: VL_DAT  TYPE J_1BNFDOC-CHADAT,
        VL_CNPJ TYPE KNA1-STCD1.

  IF I_CHAVE_NFE IS NOT INITIAL.
    SELECT *
      FROM ZIB_NFE_FORN INTO TABLE T_ZIB_NFE_FORN
     WHERE NU_CHAVE = I_CHAVE_NFE.

    IF T_ZIB_NFE_FORN[] IS NOT INITIAL.
      CALL FUNCTION 'Z_INFO_NFE_FORNECEDOR'
        TABLES
          IT_INFO_NOTAS = T_ZIB_NFE_FORN.
    ENDIF.
    EXIT.
  ENDIF.

  VL_DAT = SY-DATUM - 2.

  DATA: RGDOCNUM TYPE RANGE OF J_1BDOCNUM.

  IF I_DOCNUM IS NOT INITIAL.
    RGDOCNUM = VALUE #( SIGN = 'I' OPTION = 'EQ' ( LOW = I_DOCNUM HIGH = I_DOCNUM ) ).
  ENDIF.

  CLEAR: T_DOC[].

  SELECT *
    FROM J_1BNFDOC APPENDING CORRESPONDING FIELDS OF TABLE T_DOC
   WHERE CHADAT  >= VL_DAT
     AND DIRECT  EQ '1'
     AND NFE     EQ 'X'
     AND DOCTYP  IN ('1','2','4','6')
     AND DOCNUM  IN RGDOCNUM
     AND FORM    EQ SPACE.

  SELECT *
    FROM J_1BNFDOC APPENDING CORRESPONDING FIELDS OF TABLE T_DOC
   WHERE CREDAT  >= VL_DAT
     AND DIRECT  EQ '1'
     AND NFE     EQ 'X'
     AND DOCTYP  IN ('1','2','4','6')
     AND DOCNUM  IN RGDOCNUM
     AND FORM    EQ SPACE.

  IF I_DOCNUM IS NOT INITIAL.
    SELECT *
      FROM J_1BNFDOC APPENDING CORRESPONDING FIELDS OF TABLE T_DOC
     WHERE DIRECT  EQ '1'
       AND NFE     EQ 'X'
       AND DOCTYP  IN ('1','2','4','6')
       AND DOCNUM  IN RGDOCNUM
       AND FORM    EQ SPACE.
  ENDIF.

  SORT T_DOC BY DOCNUM.
  DELETE ADJACENT DUPLICATES FROM T_DOC COMPARING DOCNUM.

  CHECK T_DOC[] IS NOT INITIAL .

  "Vericar Lan√ßamentos estornados
  T_DOC_AUX[] = T_DOC[].
  DELETE T_DOC_AUX WHERE DOCNUM IS INITIAL.

  CLEAR: T_ZIB_NFE_FORN[].
  IF T_DOC_AUX[] IS NOT INITIAL.
    SELECT *
      FROM ZIB_NFE_FORN INTO TABLE T_ZIB_NFE_FORN
       FOR ALL ENTRIES IN T_DOC_AUX
     WHERE DOCNUM EQ T_DOC_AUX-DOCNUM.
  ENDIF.

  LOOP AT T_ZIB_NFE_FORN.
    READ TABLE T_DOC WITH KEY DOCNUM = T_ZIB_NFE_FORN-DOCNUM BINARY SEARCH.

    CHECK SY-SUBRC = 0.

    IF ( T_DOC-CANCEL EQ 'X' ) OR ( T_DOC-DOCTYP EQ '5' ) OR ( T_DOC-CANDAT IS NOT INITIAL ).
      CLEAR: T_ZIB_NFE_FORN-DOCNUM, T_ZIB_NFE_FORN-ATUALIZADO.
      MODIFY ZIB_NFE_FORN FROM T_ZIB_NFE_FORN.
    ENDIF.
  ENDLOOP.

  LOOP AT T_DOC.
    CHECK STRLEN( T_DOC-PARID ) NE 10.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = T_DOC-PARID
      IMPORTING
        OUTPUT = T_DOC-PARID.

    MODIFY T_DOC.
  ENDLOOP.

  T_DOC_AUX[] = T_DOC[].
  SORT T_DOC_AUX BY PARID.
  DELETE ADJACENT DUPLICATES FROM T_DOC_AUX COMPARING PARID.

  IF T_DOC_AUX[] IS NOT INITIAL.
    SELECT *
      FROM LFA1 INTO TABLE T_LFA1
       FOR ALL ENTRIES IN T_DOC_AUX
     WHERE LIFNR = T_DOC_AUX-PARID.

    SELECT *
      FROM KNA1 INTO TABLE T_KNA1
       FOR ALL ENTRIES IN T_DOC_AUX
     WHERE KUNNR = T_DOC_AUX-PARID.

    SORT T_LFA1 BY LIFNR.
    SORT T_KNA1 BY KUNNR.
  ENDIF.

  LOOP AT T_DOC.

    DATA(_OK) = ''.

    CLEAR: VL_CNPJ.

    CASE T_DOC-PARTYP.
      WHEN 'C'.
        READ TABLE T_KNA1 WITH KEY KUNNR = T_DOC-PARID BINARY SEARCH.
        IF ( SY-SUBRC = 0 ) AND ( T_KNA1-STCD1 IS NOT INITIAL ).
          _OK = 'X'.
          VL_CNPJ = T_KNA1-STCD1.
        ENDIF.
      WHEN 'V'.
        READ TABLE T_LFA1 WITH KEY LIFNR = T_DOC-PARID BINARY SEARCH.
         IF ( SY-SUBRC = 0 ) AND ( T_LFA1-STCD1 IS NOT INITIAL ).
           _OK = 'X'.
           VL_CNPJ = T_LFA1-STCD1.
         ENDIF.
      WHEN 'B'.
        READ TABLE T_LFA1 WITH KEY LIFNR = T_DOC-PARID BINARY SEARCH.
        IF ( SY-SUBRC = 0 ) AND ( T_LFA1-STCD1 IS NOT INITIAL ).
          _OK = 'X'.
          VL_CNPJ = T_LFA1-STCD1.
        ENDIF.
    ENDCASE.

    IF ( _OK IS NOT INITIAL ) OR
       ( ( T_DOC-SERIES  GE '890' ) AND ( T_DOC-SERIES  LE '899' ) ) OR
       ( ( T_DOC-SERIES  GE '900' ) AND ( T_DOC-SERIES  LE '999' ) ).

      T_DOC-NU_CHAVE_CNPJ    = VL_CNPJ.
      T_DOC-NU_CHAVE_MODELO  = T_DOC-MODEL.
      T_DOC-NU_CHAVE_NUMERO  = T_DOC-NFENUM.
      T_DOC-NU_CHAVE_SERIE   = T_DOC-SERIES.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = T_DOC-NU_CHAVE_CNPJ
        IMPORTING
          OUTPUT = T_DOC-NU_CHAVE_CNPJ.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = T_DOC-NU_CHAVE_NUMERO
        IMPORTING
          OUTPUT = T_DOC-NU_CHAVE_NUMERO.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = T_DOC-NU_CHAVE_SERIE
        IMPORTING
          OUTPUT = T_DOC-NU_CHAVE_SERIE.

      MODIFY T_DOC.
    ELSE.
      DELETE T_DOC.
    ENDIF.
  ENDLOOP.

  CLEAR: T_ZIB_NFE_FORN[].

  CHECK T_DOC[] IS NOT INITIAL.

  SELECT *
    FROM ZIB_NFE_FORN INTO TABLE T_ZIB_NFE_FORN
     FOR ALL ENTRIES IN T_DOC
   WHERE NU_CHAVE_CNPJ    EQ T_DOC-NU_CHAVE_CNPJ
     AND NU_CHAVE_MODELO  EQ T_DOC-NU_CHAVE_MODELO
     AND NU_CHAVE_SERIE   EQ T_DOC-NU_CHAVE_SERIE
     AND NU_CHAVE_NUMERO  EQ T_DOC-NU_CHAVE_NUMERO
     AND ATUALIZADO       NE 'X'.

  "16.01.2017 - Ini
  T_DOC_AUX[] = T_DOC[].
  SORT T_DOC_AUX BY DOCNUM.
  DELETE T_DOC_AUX WHERE DOCNUM IS INITIAL.

  IF T_DOC_AUX[] IS NOT INITIAL.
    CLEAR: TG_ACTIVE[], T_ZIB_NFE_FORN_AUX[].
    SELECT *
      FROM J_1BNFE_ACTIVE INTO TABLE TG_ACTIVE
       FOR ALL ENTRIES IN T_DOC_AUX
     WHERE DOCNUM EQ T_DOC_AUX-DOCNUM.

    LOOP AT TG_ACTIVE.
      CONCATENATE TG_ACTIVE-REGIO
                  TG_ACTIVE-NFYEAR
                  TG_ACTIVE-NFMONTH
                  TG_ACTIVE-STCD1
                  TG_ACTIVE-MODEL
                  TG_ACTIVE-SERIE
                  TG_ACTIVE-NFNUM9
                  TG_ACTIVE-DOCNUM9
                  TG_ACTIVE-CDV INTO DATA(_CHAVE_NFE_TMP).

      CONDENSE _CHAVE_NFE_TMP NO-GAPS.

      IF STRLEN( _CHAVE_NFE_TMP ) = 44.
        DELETE T_DOC_AUX WHERE DOCNUM = TG_ACTIVE-DOCNUM.
        DELETE TG_ACTIVE.
      ENDIF.
    ENDLOOP.

    IF T_DOC_AUX[] IS NOT INITIAL.
      SELECT *
        FROM ZIB_NFE_FORN APPENDING TABLE T_ZIB_NFE_FORN_AUX
         FOR ALL ENTRIES IN T_DOC_AUX
       WHERE NU_CHAVE_CNPJ    EQ T_DOC_AUX-NU_CHAVE_CNPJ
         AND NU_CHAVE_MODELO  EQ T_DOC_AUX-NU_CHAVE_MODELO
         AND NU_CHAVE_SERIE   EQ T_DOC_AUX-NU_CHAVE_SERIE
         AND NU_CHAVE_NUMERO  EQ T_DOC_AUX-NU_CHAVE_NUMERO.

      SELECT *
        FROM ZIB_NFE_FORN APPENDING TABLE T_ZIB_NFE_FORN_AUX
         FOR ALL ENTRIES IN T_DOC_AUX
       WHERE NU_CHAVE_MODELO  EQ T_DOC_AUX-NU_CHAVE_MODELO
         AND NU_CHAVE_SERIE   EQ T_DOC_AUX-NU_CHAVE_SERIE
         AND NU_CHAVE_NUMERO  EQ T_DOC_AUX-NU_CHAVE_NUMERO
         AND DT_EMISSAO       EQ T_DOC_AUX-DOCDAT
         AND NU_CHAVE_SERIE   GE '890'
         AND NU_CHAVE_SERIE   LE '899'
         AND ATUALIZADO       NE 'X'.

      SELECT *
        FROM ZIB_NFE_FORN APPENDING TABLE T_ZIB_NFE_FORN_AUX
         FOR ALL ENTRIES IN T_DOC_AUX
       WHERE NU_CHAVE_MODELO  EQ T_DOC_AUX-NU_CHAVE_MODELO
         AND NU_CHAVE_SERIE   EQ T_DOC_AUX-NU_CHAVE_SERIE
         AND NU_CHAVE_NUMERO  EQ T_DOC_AUX-NU_CHAVE_NUMERO
         AND DT_EMISSAO       EQ T_DOC_AUX-DOCDAT
         AND NU_CHAVE_SERIE   GE '900'
         AND NU_CHAVE_SERIE   LE '999'
         AND ATUALIZADO       NE 'X'.

      LOOP AT T_ZIB_NFE_FORN_AUX.
        CLEAR T_ZIB_NFE_FORN_AUX-DOCNUM.
        APPEND T_ZIB_NFE_FORN_AUX TO T_ZIB_NFE_FORN.
      ENDLOOP.
    ENDIF.
  ENDIF.
  "16.01.2017 - Fim

  SORT T_ZIB_NFE_FORN BY                                   NU_CHAVE_CNPJ NU_CHAVE_MODELO NU_CHAVE_SERIE NU_CHAVE_NUMERO ST_NOTA.
  DELETE ADJACENT DUPLICATES FROM T_ZIB_NFE_FORN COMPARING NU_CHAVE_CNPJ NU_CHAVE_MODELO NU_CHAVE_SERIE NU_CHAVE_NUMERO ST_NOTA.

  IF T_ZIB_NFE_FORN[] IS NOT INITIAL.
    CALL FUNCTION 'Z_INFO_NFE_FORNECEDOR'
      TABLES
        IT_INFO_NOTAS = T_ZIB_NFE_FORN.
  ENDIF.


ENDFUNCTION.
