FUNCTION Z_MEMO_ADD_NFE.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(VG_DOCNUM) TYPE  J_1BDOCNUM
*"     REFERENCE(P_GRAVAR) TYPE  CHAR1 DEFAULT 'N'
*"  TABLES
*"      IT_MEMORANDO STRUCTURE  ZDOC_MEMORANDO OPTIONAL
*"      IT_CONHEC STRUCTURE  ZDOC_MEMO_NOMEAC OPTIONAL
*"      IT_NOTAS_MEMORANDO STRUCTURE  ZDOC_MEMO_NOTA OPTIONAL
*"  CHANGING
*"     VALUE(WA_MEMO_NF_EXP) TYPE  ZDOC_MEMO_NF_EXP OPTIONAL
*"  EXCEPTIONS
*"      DOCN_LOCALIZADO
*"      DOCN_MEMORANDO
*"      DOCN_CANCELADO
*"      DOCN_CANCELADO_AUT
*"      DOCN_NELETRONICO
*"      DOCN_RESPRES_LEGAL
*"      DOCN_RE_NAO_ENCONTRADA
*"      DOCN_DDE_NAO_ENCONTRADA
*"      PAIS_NAO_ENCONTRADO
*"      DOCN_DDE_NAO_ENCONTRADA2
*"      SEM_SALDO_COMPROVAR
*"----------------------------------------------------------------------

  DATA: WA_MEMORANDO_E     TYPE ZDOC_MEMO_NF_EXP,
        WA_CONHEC          TYPE ZDOC_MEMO_NOMEAC,
        WA_J_1BNFDOC       TYPE J_1BNFDOC,
        WA_J_1BNFLIN       TYPE J_1BNFLIN,
        WA_ACTIVE          TYPE J_1BNFE_ACTIVE,
        WA_J_CABE          TYPE J_1BINDOC,
        WA_VBRP            TYPE VBRP,
        VG_VBELN           TYPE VBELN_VF,
        VG_POSNR           TYPE POSNR_VF,
        WA_MEMORANDO       TYPE ZDOC_MEMORANDO,
        WA_NOTAS_MEMORANDO TYPE ZDOC_MEMO_NOTA,
        VG_NR_MEMORANDO    TYPE Z_MEMORANDO,
        VG_TABIX_ME        TYPE SY-TABIX,
        VG_TABIX_NF        TYPE SY-TABIX,
        VG_GERA_MEMORANDO  TYPE C,
        WA_ZDOC_MEMO_RESP  TYPE ZDOC_MEMO_RESP,
        WA_LFA1            TYPE LFA1,
        P_PAIS             TYPE LAND1,
        P_NOMEACAO         TYPE ZNOM_TRANSPORTE.


  SELECT SINGLE * INTO WA_MEMORANDO_E
    FROM ZDOC_MEMO_NF_EXP
   WHERE DOCNUM EQ VG_DOCNUM.


  IF ( NOT SY-SUBRC IS INITIAL ).
    "  check not sy-subrc is initial.

    SELECT SINGLE * INTO WA_J_1BNFDOC
      FROM J_1BNFDOC
     WHERE DOCNUM EQ VG_DOCNUM.

    IF SY-SUBRC EQ 0.

      CHECK WA_J_1BNFDOC-DIRECT EQ C_2.

      SELECT SINGLE * INTO WA_ZDOC_MEMO_RESP
        FROM ZDOC_MEMO_RESP
       WHERE BUKRS  EQ WA_J_1BNFDOC-BUKRS
         AND BRANCH EQ WA_J_1BNFDOC-BRANCH.

      IF NOT SY-SUBRC IS INITIAL.
        MESSAGE E077 WITH WA_J_1BNFDOC-BUKRS WA_J_1BNFDOC-BRANCH RAISING DOCN_RESPRES_LEGAL.
      ELSE.
        SELECT SINGLE * INTO WA_LFA1
          FROM LFA1
         WHERE LIFNR EQ WA_ZDOC_MEMO_RESP-LIFNR.
        CHECK SY-SUBRC IS INITIAL.
      ENDIF.

      SELECT SINGLE * INTO WA_J_1BNFLIN
        FROM J_1BNFLIN
       WHERE DOCNUM EQ VG_DOCNUM.

      IF SY-SUBRC EQ 0.

        CALL FUNCTION 'Z_MEMO_CFOP_CHECK'
          EXPORTING
            CFOP        = WA_J_1BNFLIN-CFOP
            DIRECT      = WA_J_1BNFDOC-DIRECT
            EXP_PROPRIA = C_X
          IMPORTING
            VALIDO      = VG_GERA_MEMORANDO.

        CHECK NOT VG_GERA_MEMORANDO IS INITIAL.

        IF WA_J_1BNFDOC-NFE EQ C_X.

          SELECT SINGLE * INTO WA_ACTIVE
            FROM J_1BNFE_ACTIVE
           WHERE DOCNUM EQ VG_DOCNUM.

          IF SY-SUBRC EQ 0.
            IF WA_ACTIVE-CANCEL EQ C_X.
              MESSAGE E048 WITH VG_DOCNUM RAISING DOCN_CANCELADO.
            ENDIF.
            IF NOT ( ( WA_ACTIVE-DOCSTA EQ C_1 ) AND ( WA_ACTIVE-CANCEL IS INITIAL ) ).
              MESSAGE E049 WITH VG_DOCNUM RAISING DOCN_CANCELADO_AUT.
            ENDIF.
          ELSE.
            MESSAGE E047 WITH VG_DOCNUM RAISING DOCN_NELETRONICO.
          ENDIF.

        ENDIF.

        WA_MEMO_NF_EXP-PROPRIO          = C_X.
        WA_MEMO_NF_EXP-SERIE            = WA_J_1BNFDOC-SERIES.
        WA_MEMO_NF_EXP-NFE              = WA_J_1BNFDOC-NFE.
        WA_MEMO_NF_EXP-DOCNUM           = WA_J_1BNFDOC-DOCNUM.
        WA_MEMO_NF_EXP-DT_EMISSAO_NOTA  = WA_J_1BNFDOC-DOCDAT.
        WA_MEMO_NF_EXP-MOEDA            = WA_J_1BNFDOC-WAERK.

        IF WA_J_1BNFDOC-NFE IS INITIAL.
          WA_MEMO_NF_EXP-NUMERO_NOTA    = WA_J_1BNFDOC-NFNUM.
        ELSE.
          WA_MEMO_NF_EXP-NUMERO_NOTA    = WA_J_1BNFDOC-NFENUM.
        ENDIF.

        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            INPUT  = WA_J_1BNFDOC-BRANCH
          IMPORTING
            OUTPUT = WA_MEMO_NF_EXP-EMISSOR.

        WA_MEMO_NF_EXP-MATERIAL         = WA_J_1BNFLIN-MATNR.
        WA_MEMO_NF_EXP-QUANTIDADE       = WA_J_1BNFLIN-MENGE.
        WA_MEMO_NF_EXP-UNIDADE          = WA_J_1BNFLIN-MEINS.

        CALL FUNCTION 'Z_1B_NF_VALUE_DETERMINATION'
          EXPORTING
            P_DOCNUM   = WA_J_1BNFDOC-DOCNUM
          IMPORTING
            EXT_HEADER = WA_J_CABE.

        WA_MEMO_NF_EXP-VALOR_TOTAL      = WA_J_CABE-NFTOT.

        IF WA_J_1BNFLIN-MENGE GT 0.
          WA_MEMO_NF_EXP-VALOR_UNITARIO   = WA_J_CABE-NFTOT / WA_J_1BNFLIN-MENGE.
        ELSE.
          WA_MEMO_NF_EXP-VALOR_UNITARIO   = 0.
        ENDIF.

        "Informações de notas vinculadas
        VG_VBELN = WA_J_1BNFLIN-REFKEY(10).
        VG_POSNR = WA_J_1BNFLIN-REFITM.

        SELECT SINGLE * INTO WA_VBRP
          FROM VBRP
         WHERE VBELN EQ VG_VBELN
           AND POSNR EQ VG_POSNR.

        CALL FUNCTION 'Z_MEMO_ADD_BLS'
          EXPORTING
            P_VGBEL             = WA_VBRP-VGBEL
          IMPORTING
            P_PAIS              = P_PAIS
            P_NOMEACAO          = P_NOMEACAO
          TABLES
            IT_CONHEC           = IT_CONHEC
          EXCEPTIONS
            PAIS_NAO_ENCONTRADO = 1
            OTHERS              = 2.

        IF SY-SUBRC <> 0.
          MESSAGE E082 WITH SY-MSGV1 RAISING PAIS_NAO_ENCONTRADO.
        ENDIF.

        CALL FUNCTION 'Z_MEMO_ADD_REMETENTES'
          EXPORTING
            P_VGBEL                  = WA_VBRP-VGBEL
            P_PAIS                   = P_PAIS
            P_NOMEACAO               = P_NOMEACAO
          TABLES
            IT_MEMORANDO             = IT_MEMORANDO
            IT_NOTAS_MEMORANDO       = IT_NOTAS_MEMORANDO
          EXCEPTIONS
            DOCN_RE_NAO_ENCONTRADA   = 1
            DOCN_DDE_NAO_ENCONTRADA  = 2
            DOCN_DDE_NAO_ENCONTRADA2 = 3
            SEM_SALDO_COMPROVAR      = 4
            OTHERS                   = 5.

        IF SY-SUBRC <> 0.
          CASE SY-SUBRC.
            WHEN 1.
              MESSAGE E079 WITH SY-MSGV1 SY-MSGV2 RAISING DOCN_RE_NAO_ENCONTRADA.
            WHEN 2.
              MESSAGE E080 WITH SY-MSGV1 SY-MSGV2 RAISING DOCN_DDE_NAO_ENCONTRADA.
            WHEN 3.
              MESSAGE E083 WITH SY-MSGV1 SY-MSGV2 RAISING DOCN_DDE_NAO_ENCONTRADA2.
            WHEN 4.
              MESSAGE E084 RAISING SEM_SALDO_COMPROVAR.
            WHEN OTHERS.
              MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ENDCASE.
        ENDIF.

        IF ( P_GRAVAR EQ 'S' ) AND ( IT_MEMORANDO[] IS NOT INITIAL ).

          "Nota de Exportação
          SELECT MAX( NR_NOTA_EXP )
            INTO WA_MEMO_NF_EXP-NR_NOTA_EXP
            FROM ZDOC_MEMO_NF_EXP.
          IF WA_MEMO_NF_EXP-NR_NOTA_EXP IS INITIAL.
            WA_MEMO_NF_EXP-NR_NOTA_EXP = 1.
          ELSE.
            WA_MEMO_NF_EXP-NR_NOTA_EXP = WA_MEMO_NF_EXP-NR_NOTA_EXP + 1.
          ENDIF.
          MODIFY ZDOC_MEMO_NF_EXP FROM WA_MEMO_NF_EXP.

          LOOP AT IT_CONHEC INTO WA_CONHEC.
            WA_CONHEC-NR_NOTA_EXP = WA_MEMO_NF_EXP-NR_NOTA_EXP.
            MODIFY ZDOC_MEMO_NOMEAC FROM WA_CONHEC.
          ENDLOOP.

          "Memorandos
          SORT IT_MEMORANDO BY NR_MEMORANDO.
          SORT IT_NOTAS_MEMORANDO BY NR_MEMORANDO.

          LOOP AT IT_MEMORANDO INTO WA_MEMORANDO.

            VG_TABIX_ME = SY-TABIX.
            WA_MEMORANDO-REPRESENTANTE = WA_MEMO_NF_EXP-EMISSOR.

            VG_NR_MEMORANDO = WA_MEMORANDO-NR_MEMORANDO.
            CLEAR: WA_MEMORANDO-NUMERO_MEMO.

            CALL FUNCTION 'Z_MEMO_PROX_NUMERO'
              EXPORTING
                DIRECAO       = WA_MEMORANDO-DIRECAO
                REMETENTE     = WA_MEMORANDO-REMETENTE
                REPRESENTANTE = WA_MEMORANDO-REPRESENTANTE
              IMPORTING
                NUMERO        = WA_MEMORANDO-NUMERO_MEMO
              EXCEPTIONS
                LOCAL_NEGOCIO = 1
                NUMERO_MEMO   = 2
                OTHERS        = 3.

            CALL FUNCTION 'Z_MEMO_PROX_FORMULARIO'
              EXPORTING
                REPRESENTANTE   = WA_MEMORANDO-REPRESENTANTE
              IMPORTING
                FORMULARIO      = WA_MEMORANDO-FORMULARIO
              EXCEPTIONS
                LOCAL_NEGOCIO   = 1
                FORM_MEMO       = 2
                FORM_INTERVALO  = 3
                FORM_INTER_INUT = 4
                OTHERS          = 5.

            WA_MEMORANDO-NR_NOTA_EXP   = WA_MEMO_NF_EXP-NR_NOTA_EXP.

            CLEAR: WA_MEMORANDO-NR_MEMORANDO.

            SELECT MAX( NR_MEMORANDO ) INTO WA_MEMORANDO-NR_MEMORANDO
              FROM ZDOC_MEMORANDO.

            IF WA_MEMORANDO-NR_MEMORANDO IS INITIAL.
              WA_MEMORANDO-NR_MEMORANDO = 1.
            ELSE.
              WA_MEMORANDO-NR_MEMORANDO = WA_MEMORANDO-NR_MEMORANDO + 1.
            ENDIF.

            WA_MEMORANDO-RESPONSAVEL = WA_LFA1-NAME1.

            INSERT INTO ZDOC_MEMORANDO VALUES WA_MEMORANDO.

            "modify zdoc_memorando from wa_memorando.

            LOOP AT IT_NOTAS_MEMORANDO INTO WA_NOTAS_MEMORANDO WHERE NR_MEMORANDO EQ VG_NR_MEMORANDO.
              VG_TABIX_NF = SY-TABIX.
              WA_NOTAS_MEMORANDO-NR_MEMORANDO = WA_MEMORANDO-NR_MEMORANDO.
              MODIFY ZDOC_MEMO_NOTA FROM WA_NOTAS_MEMORANDO.
              MODIFY IT_NOTAS_MEMORANDO INDEX VG_TABIX_NF FROM WA_NOTAS_MEMORANDO TRANSPORTING NR_MEMORANDO.
            ENDLOOP.

            MODIFY IT_MEMORANDO INDEX VG_TABIX_ME FROM WA_MEMORANDO TRANSPORTING NR_MEMORANDO.

            IF ( SY-SUBRC EQ 0 ).
              COMMIT WORK.
            ENDIF.

            CLEAR: WA_MEMORANDO.
          ENDLOOP.

          "commit work.

        ELSEIF ( P_GRAVAR EQ 'S' ) AND ( IT_MEMORANDO[] IS INITIAL ).
          MESSAGE E015 WITH VG_DOCNUM RAISING DOCN_MEMORANDO.
        ENDIF.

      ELSE.
        MESSAGE E011 WITH VG_DOCNUM RAISING DOCN_LOCALIZADO.
      ENDIF.

    ELSE.
      MESSAGE E010 WITH VG_DOCNUM RAISING DOCN_LOCALIZADO.
    ENDIF.

  ELSE.
    MESSAGE E085 WITH WA_MEMORANDO_E-NR_NOTA_EXP.
  ENDIF.

ENDFUNCTION.
