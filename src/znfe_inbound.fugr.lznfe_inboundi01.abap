*----------------------------------------------------------------------*
***INCLUDE LZNFE_INBOUNDI01.
*----------------------------------------------------------------------*
CLASS LCL_EVENT_HANDLER_9004A DEFINITION DEFERRED.
CLASS LCL_EVENT_HANDLER_9004B DEFINITION DEFERRED.
CLASS LCL_EVENT_HANDLER_9004C DEFINITION DEFERRED.
CLASS LCL_ALV_TOOLBAR_9004B   DEFINITION DEFERRED.
CLASS LCL_ALV_TOOLBAR_9004C   DEFINITION DEFERRED.

CONSTANTS: CS_LINE_COLOR_A TYPE C LENGTH 4 VALUE 'C710', "Fonte Preta Fundo Laranja
           CS_LINE_COLOR_L TYPE C LENGTH 4 VALUE 'C500', "Fonte Preta Fundo verde Claro
           CS_LINE_COLOR_D TYPE C LENGTH 4 VALUE 'C601', "Fonte Vermelho Fundo Cinza
           CS_LINE_COLOR_R TYPE C LENGTH 4 VALUE 'C600'. "Fonte Preta Fundo Vermelho Claro

DATA: SPLITTER_9004            TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
      CONTAINER_9004A          TYPE REF TO CL_GUI_CONTAINER,
      CONTAINER_9004B          TYPE REF TO CL_GUI_CONTAINER,
      CONTAINER_9004C          TYPE REF TO CL_GUI_CONTAINER,
      ALV_9004A                TYPE REF TO CL_GUI_ALV_GRID,
      ALV_9004B                TYPE REF TO CL_GUI_ALV_GRID,
      ALV_9004C                TYPE REF TO CL_GUI_ALV_GRID,
      OBG_TOOLBAR_9004B        TYPE REF TO LCL_ALV_TOOLBAR_9004B,
      OBG_TOOLBAR_9004C        TYPE REF TO LCL_ALV_TOOLBAR_9004C,
      OBJ_TOOLBARMANAGER_9004B TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      OBJ_TOOLBARMANAGER_9004C TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      IT_FIELDCAT_9004A        TYPE LVC_T_FCAT,
      IT_FIELDCAT_9004B        TYPE LVC_T_FCAT,
      IT_FIELDCAT_9004C        TYPE LVC_T_FCAT,
      GS_VARIANT_9004A         TYPE DISVARIANT,
      GS_VARIANT_9004B         TYPE DISVARIANT,
      GS_VARIANT_9004C         TYPE DISVARIANT,
      GS_LAYOUT_9004A          TYPE LVC_S_LAYO,
      GS_LAYOUT_9004B          TYPE LVC_S_LAYO,
      GS_LAYOUT_9004C          TYPE LVC_S_LAYO.

DATA: EVENT_HANDLER_9004A TYPE REF TO LCL_EVENT_HANDLER_9004A,
      EVENT_HANDLER_9004B TYPE REF TO LCL_EVENT_HANDLER_9004B,
      EVENT_HANDLER_9004C TYPE REF TO LCL_EVENT_HANDLER_9004C.

DATA: IT_MATERIAL_RETORNO    TYPE TABLE OF ZDE_NFE_DIST_RET.
DATA: IT_MATERIAL_DISPONIVEL TYPE TABLE OF ZDE_NFE_DIST_DISP.
DATA: IT_MATERIAL_VINCULADO  TYPE TABLE OF ZDE_NFE_DIST_VINC.

DATA: WA_MATERIAL_RETORNO_SEL TYPE ZDE_NFE_DIST_RET.
DATA: WA_MATERIAL_DISPONI_SEL TYPE ZDE_NFE_DIST_DISP.

CLASS LCL_ALV_TOOLBAR_9004B DEFINITION.
  PUBLIC SECTION.
    METHODS:
      CONSTRUCTOR           IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,
      ON_TOOLBAR            FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID IMPORTING E_OBJECT,
      HANDLE_USER_COMMAND   FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID IMPORTING E_UCOMM.
ENDCLASS.

CLASS LCL_ALV_TOOLBAR_9004C DEFINITION.
  PUBLIC SECTION.
    METHODS: CONSTRUCTOR         IMPORTING IO_ALV_GRID TYPE REF TO CL_GUI_ALV_GRID,
      ON_TOOLBAR          FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID IMPORTING E_OBJECT,
      HANDLE_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID IMPORTING E_UCOMM.
ENDCLASS.

CLASS LCL_EVENT_HANDLER_9004A DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_DOUBLE_CLICK FOR EVENT DOUBLE_CLICK  OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO.
ENDCLASS.

CLASS LCL_EVENT_HANDLER_9004A IMPLEMENTATION.
  METHOD HANDLE_DOUBLE_CLICK.
    PERFORM DOUBLE_CLICK_9004A USING E_ROW.
  ENDMETHOD.                    "HANDLE_DOUBLE_CLICK
ENDCLASS.

CLASS LCL_EVENT_HANDLER_9004B DEFINITION.

  PUBLIC SECTION.

    METHODS HANDLE_DOUBLE_CLICK FOR EVENT DOUBLE_CLICK  OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO.
    METHODS HOTSPOT_CLICK_COMMAND FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID IMPORTING E_ROW_ID E_COLUMN_ID ES_ROW_NO.

    METHODS DATA_CHANGED_FINISHED FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID IMPORTING E_MODIFIED ET_GOOD_CELLS.
    METHODS DATA_CHANGED FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID IMPORTING ER_DATA_CHANGED.

    METHODS SET_ERROR_IN_DATA IMPORTING !I_ERROR TYPE CHAR01.
    METHODS GET_ERROR_IN_DATA RETURNING VALUE(R_ERROR) TYPE CHAR01.

  PRIVATE SECTION.

    TYPES: DDSHRETVAL_TABLE TYPE TABLE OF DDSHRETVAL.

    DATA:  ERROR_IN_DATA  TYPE CHAR01.

    METHODS: PERFORM_SEMANTIC_CHECKS
      IMPORTING
        PR_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL.

ENDCLASS.

CLASS LCL_EVENT_HANDLER_9004B IMPLEMENTATION.
  METHOD HANDLE_DOUBLE_CLICK.
    PERFORM DOUBLE_CLICK_9004B USING E_ROW.
  ENDMETHOD.                    "HANDLE_DOUBLE_CLICK

  METHOD HOTSPOT_CLICK_COMMAND.

    CHECK E_ROW_ID-ROWTYPE IS INITIAL.

    CASE E_COLUMN_ID-FIELDNAME.
      WHEN 'ICONE'.
        PERFORM ADD_MATERIAL_LIVRE USING E_ROW_ID-INDEX.
    ENDCASE.

  ENDMETHOD.

  METHOD DATA_CHANGED_FINISHED.
    IF E_MODIFIED IS NOT INITIAL.
      CALL METHOD ALV_9004B->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE ).
    ENDIF.
  ENDMETHOD.                    "ON_DATA_CHANGED_FINISHED_

  METHOD SET_ERROR_IN_DATA.
    ME->ERROR_IN_DATA = I_ERROR.
  ENDMETHOD.

  METHOD GET_ERROR_IN_DATA.
    R_ERROR = ME->ERROR_IN_DATA.
  ENDMETHOD.


  METHOD DATA_CHANGED.
    ME->SET_ERROR_IN_DATA( I_ERROR = ABAP_FALSE ).
    CALL METHOD PERFORM_SEMANTIC_CHECKS( ER_DATA_CHANGED ).
    IF ME->GET_ERROR_IN_DATA( ) = ABAP_TRUE.
      CALL METHOD ER_DATA_CHANGED->DISPLAY_PROTOCOL.
    ENDIF.
  ENDMETHOD.

  METHOD PERFORM_SEMANTIC_CHECKS.

    DATA: LC_VOLUME TYPE ZDE_VOLUME_VINCULAR,
          LV_VALUE  TYPE LVC_VALUE.

    LOOP AT PR_DATA_CHANGED->MT_GOOD_CELLS INTO DATA(LS_GOOD)
      WHERE FIELDNAME EQ 'VINCU'.

      LV_VALUE = LS_GOOD-VALUE.
      CONDENSE LV_VALUE NO-GAPS.

      READ TABLE IT_MATERIAL_DISPONIVEL ASSIGNING FIELD-SYMBOL(<FS_DISPONIVEL>) INDEX LS_GOOD-ROW_ID.

      IF LS_GOOD-VALUE IS INITIAL.
        CONTINUE.
      ENDIF.
      MOVE LV_VALUE TO LC_VOLUME.

      IF <FS_DISPONIVEL>-SALDO LT LC_VOLUME.

        ERROR_IN_DATA = ABAP_TRUE.

        CALL METHOD PR_DATA_CHANGED->ADD_PROTOCOL_ENTRY
          EXPORTING
            I_MSGID     = ZCX_MATERIAL_DESTINACAO=>ZCX_DOC_MATERIAL_SEM_SALDO-MSGID
            I_MSGNO     = ZCX_MATERIAL_DESTINACAO=>ZCX_DOC_MATERIAL_SEM_SALDO-MSGNO
            I_MSGTY     = 'E'
            I_MSGV1     = <FS_DISPONIVEL>-MBLNR
            I_MSGV2     = <FS_DISPONIVEL>-MJAHR
            I_MSGV3     = <FS_DISPONIVEL>-ZEILE
            I_FIELDNAME = LS_GOOD-FIELDNAME
            I_ROW_ID    = LS_GOOD-ROW_ID.

      ENDIF.

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.

CLASS LCL_EVENT_HANDLER_9004C DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_DOUBLE_CLICK FOR EVENT DOUBLE_CLICK  OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO.
    METHODS HOTSPOT_CLICK_COMMAND FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID IMPORTING E_ROW_ID E_COLUMN_ID ES_ROW_NO.
ENDCLASS.

CLASS LCL_EVENT_HANDLER_9004C IMPLEMENTATION.
  METHOD HANDLE_DOUBLE_CLICK.
    PERFORM DOUBLE_CLICK_9004C USING E_ROW.
  ENDMETHOD.                    "HANDLE_DOUBLE_CLICK

  METHOD HOTSPOT_CLICK_COMMAND.

    CHECK E_ROW_ID-ROWTYPE IS INITIAL.

    CASE E_COLUMN_ID-FIELDNAME.
      WHEN 'ICONE'.
        PERFORM DEL_MATERIAL_LIVRE USING E_ROW_ID-INDEX.
    ENDCASE.

  ENDMETHOD.

ENDCLASS.

CLASS LCL_ALV_TOOLBAR_9004B IMPLEMENTATION.

  METHOD CONSTRUCTOR.
*   Create ALV toolbar manager instance
    CREATE OBJECT OBJ_TOOLBARMANAGER_9004B
      EXPORTING
        IO_ALV_GRID = IO_ALV_GRID.

  ENDMETHOD.                    "constructor

  METHOD ON_TOOLBAR.

    DATA: TY_TOOLBAR   TYPE STB_BUTTON.
*    "Separador
    TY_TOOLBAR-BUTN_TYPE = 3.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.

    CALL METHOD OBJ_TOOLBARMANAGER_9004B->REORGANIZE
      EXPORTING
        IO_ALV_TOOLBAR = E_OBJECT.

  ENDMETHOD.                    "on_toolbar

  METHOD HANDLE_USER_COMMAND.

    DATA: ET_INDEX_ROWS	TYPE LVC_T_ROW.

    CALL METHOD ALV_9004B->GET_SELECTED_ROWS
      IMPORTING
        ET_INDEX_ROWS = ET_INDEX_ROWS.

  ENDMETHOD. "zm_handle_user_command

ENDCLASS.

CLASS LCL_ALV_TOOLBAR_9004C IMPLEMENTATION.

  METHOD CONSTRUCTOR.
*   Create ALV toolbar manager instance
    CREATE OBJECT OBJ_TOOLBARMANAGER_9004C
      EXPORTING
        IO_ALV_GRID = IO_ALV_GRID.

  ENDMETHOD.                    "constructor

  METHOD ON_TOOLBAR.

    DATA: TY_TOOLBAR   TYPE STB_BUTTON.
*    "Separador
    TY_TOOLBAR-BUTN_TYPE = 3.
    APPEND TY_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR TY_TOOLBAR.

    CALL METHOD OBJ_TOOLBARMANAGER_9004C->REORGANIZE
      EXPORTING
        IO_ALV_TOOLBAR = E_OBJECT.

  ENDMETHOD.                    "on_toolbar

  METHOD HANDLE_USER_COMMAND.

    DATA: ET_INDEX_ROWS	TYPE LVC_T_ROW.

    CALL METHOD ALV_9004C->GET_SELECTED_ROWS
      IMPORTING
        ET_INDEX_ROWS = ET_INDEX_ROWS.

  ENDMETHOD. "zm_handle_user_command

ENDCLASS.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9004  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_9004 INPUT.

  CASE OK_CODE.
    WHEN 'GERAR'.
      CLEAR: OK_CODE.
      CK_INFORMADO_VINC_RETORNO = ABAP_TRUE.
      PERFORM SALVAR_RETORNO_VINCULO.
      LEAVE TO SCREEN 0.
    WHEN 'SAVE'.
      CLEAR: OK_CODE.
      PERFORM SALVAR_RETORNO_VINCULO.
      LEAVE TO SCREEN 0.
  ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9004_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_9004_EXIT INPUT.
  CLEAR: CK_INFORMADO_VINC_RETORNO, WA_MATERIAL_RETORNO_SEL.
  PERFORM LIMPAR_TELA_9004.
  LEAVE TO SCREEN 0.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  STATUS_9004  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_9004 OUTPUT.

  DATA: IT_TCODE TYPE TABLE OF SY-UCOMM.

  DATA(R_NOTA) = OBJ_NFE_INBOUND->GET_CABECALHO_NOTA( ).

  IF R_NOTA-MBLNR IS NOT INITIAL.
    APPEND 'GERAR' TO IT_TCODE.
    APPEND 'SAVE' TO IT_TCODE.
  ENDIF.

  SET PF-STATUS 'PF9004' EXCLUDING IT_TCODE.
  SET TITLEBAR 'TL9004'.

  CLEAR: IT_TCODE[], IT_TCODE.

  PERFORM CRIAR_OBJETOS_9004.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  CRIAR_OBJETOS_9004
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CRIAR_OBJETOS_9004 .

  DATA: IT_FUNCTION_9004A TYPE UI_FUNCTIONS.

  IF SPLITTER_9004 IS INITIAL.
    CREATE OBJECT SPLITTER_9004
      EXPORTING
        PARENT  = CL_GUI_CONTAINER=>SCREEN0 "CTL_CCCONTAINER
        ROWS    = 3
        COLUMNS = 1.
  ENDIF.

  IF CONTAINER_9004A IS INITIAL.

    CONTAINER_9004A = SPLITTER_9004->GET_CONTAINER( EXPORTING ROW = 1 COLUMN = 1  ).

    PERFORM SELECIONA_REGISTROS.

    CREATE OBJECT ALV_9004A
      EXPORTING
        I_PARENT = CONTAINER_9004A.

    PERFORM FILL_IT_FIELDCATALOG_9004A.

    PERFORM FILL_GS_VARIANT_9004A.

    CLEAR: IT_FUNCTION_9004A[].
    APPEND CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL TO IT_FUNCTION_9004A[].

    CALL METHOD ALV_9004A->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT_9004A
        IS_VARIANT           = GS_VARIANT_9004A
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_FUNCTION_9004A
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCAT_9004A
        IT_OUTTAB            = IT_MATERIAL_RETORNO[].

    CREATE OBJECT EVENT_HANDLER_9004A.
    SET HANDLER EVENT_HANDLER_9004A->HANDLE_DOUBLE_CLICK FOR ALV_9004A.

  ENDIF.

  IF CONTAINER_9004B IS INITIAL.

    CONTAINER_9004B = SPLITTER_9004->GET_CONTAINER( EXPORTING ROW = 2 COLUMN = 1  ).

    CREATE OBJECT ALV_9004B
      EXPORTING
        I_PARENT = CONTAINER_9004B.

    PERFORM FILL_IT_FIELDCATALOG_9004B.

    PERFORM FILL_GS_VARIANT_9004B.

    CALL METHOD ALV_9004B->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT       = GS_LAYOUT_9004B
        IS_VARIANT      = GS_VARIANT_9004B
        I_SAVE          = 'A'
      CHANGING
        IT_FIELDCATALOG = IT_FIELDCAT_9004B
        IT_OUTTAB       = IT_MATERIAL_DISPONIVEL[].

    ALV_9004B->REGISTER_EDIT_EVENT( EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED ).
    ALV_9004B->REGISTER_EDIT_EVENT( EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER ).

    CREATE OBJECT EVENT_HANDLER_9004B.
    SET HANDLER EVENT_HANDLER_9004B->HANDLE_DOUBLE_CLICK FOR ALV_9004B.
    SET HANDLER EVENT_HANDLER_9004B->HOTSPOT_CLICK_COMMAND FOR ALV_9004B.
    SET HANDLER EVENT_HANDLER_9004B->DATA_CHANGED FOR ALV_9004B.
    SET HANDLER EVENT_HANDLER_9004B->DATA_CHANGED_FINISHED FOR ALV_9004B.

  ENDIF.

  IF CONTAINER_9004C IS INITIAL.

    CONTAINER_9004C = SPLITTER_9004->GET_CONTAINER( EXPORTING ROW = 3 COLUMN = 1  ).

    CREATE OBJECT ALV_9004C
      EXPORTING
        I_PARENT = CONTAINER_9004C.

    PERFORM FILL_IT_FIELDCATALOG_9004C.

    PERFORM FILL_GS_VARIANT_9004C.

    CALL METHOD ALV_9004C->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT       = GS_LAYOUT_9004C
        IS_VARIANT      = GS_VARIANT_9004C
        I_SAVE          = 'A'
      CHANGING
        IT_FIELDCATALOG = IT_FIELDCAT_9004C
        IT_OUTTAB       = IT_MATERIAL_VINCULADO[].

    CREATE OBJECT EVENT_HANDLER_9004C.
    SET HANDLER EVENT_HANDLER_9004C->HANDLE_DOUBLE_CLICK FOR ALV_9004C.
    SET HANDLER EVENT_HANDLER_9004C->HOTSPOT_CLICK_COMMAND FOR ALV_9004C.

  ENDIF.

  CALL METHOD ALV_9004A->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE )
      I_SOFT_REFRESH = ABAP_FALSE.

  CALL METHOD ALV_9004B->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE )
      I_SOFT_REFRESH = ABAP_FALSE.

  CALL METHOD ALV_9004C->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE )
      I_SOFT_REFRESH = ABAP_FALSE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_GS_VARIANT_9004A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_GS_VARIANT_9004A .

  GS_VARIANT_9004A-REPORT      = SY-REPID.
  "GS_VARIANT_9004A-HANDLE      = '904A'.
  GS_VARIANT_9004A-LOG_GROUP   = ABAP_FALSE.
  GS_VARIANT_9004A-USERNAME    = ABAP_FALSE.
  GS_VARIANT_9004A-VARIANT     = ABAP_FALSE.
  GS_VARIANT_9004A-TEXT        = ABAP_FALSE.
  GS_VARIANT_9004A-DEPENDVARS  = ABAP_FALSE.

  GS_LAYOUT_9004A-SEL_MODE     = 'A'.
  GS_LAYOUT_9004A-EDIT_MODE    = 'X'.
  GS_LAYOUT_9004A-ZEBRA        = ABAP_FALSE.
  GS_LAYOUT_9004A-CWIDTH_OPT   = ABAP_TRUE.
  GS_LAYOUT_9004A-NO_TOOLBAR   = ABAP_TRUE.
  GS_LAYOUT_9004A-INFO_FNAME   = 'LINE_COLOR'.
  GS_LAYOUT_9004A-STYLEFNAME   = 'STYLE'.
  GS_LAYOUT_9004A-CTAB_FNAME   = 'COLOR_CELL'.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_GS_VARIANT_9004B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_GS_VARIANT_9004B .

  GS_VARIANT_9004B-REPORT      = SY-REPID.
  "GS_VARIANT_9004B-HANDLE      = '904B'.
  GS_VARIANT_9004B-LOG_GROUP   = ABAP_FALSE.
  GS_VARIANT_9004B-USERNAME    = ABAP_FALSE.
  GS_VARIANT_9004B-VARIANT     = ABAP_FALSE.
  GS_VARIANT_9004B-TEXT        = ABAP_FALSE.
  GS_VARIANT_9004B-DEPENDVARS  = ABAP_FALSE.

  GS_LAYOUT_9004B-SEL_MODE     = 'A'.
  GS_LAYOUT_9004B-EDIT_MODE    = 'X'.
  GS_LAYOUT_9004B-ZEBRA        = ABAP_FALSE.
  GS_LAYOUT_9004B-CWIDTH_OPT   = ABAP_TRUE.
  GS_LAYOUT_9004B-NO_TOOLBAR   = ABAP_TRUE.
  GS_LAYOUT_9004B-INFO_FNAME   = 'LINE_COLOR'.
  GS_LAYOUT_9004B-STYLEFNAME   = 'STYLE'.
  GS_LAYOUT_9004B-CTAB_FNAME   = 'COLOR_CELL'.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_GS_VARIANT_9004C
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_GS_VARIANT_9004C .

  GS_VARIANT_9004C-REPORT      = SY-REPID.
  "GS_VARIANT_9004C-HANDLE      = '904C'.
  GS_VARIANT_9004C-LOG_GROUP   = ABAP_FALSE.
  GS_VARIANT_9004C-USERNAME    = ABAP_FALSE.
  GS_VARIANT_9004C-VARIANT     = ABAP_FALSE.
  GS_VARIANT_9004C-TEXT        = ABAP_FALSE.
  GS_VARIANT_9004C-DEPENDVARS  = ABAP_FALSE.

  GS_LAYOUT_9004C-SEL_MODE   = 'A'.
  GS_LAYOUT_9004C-EDIT_MODE  = 'X'.
  GS_LAYOUT_9004C-ZEBRA      = ABAP_FALSE.
  GS_LAYOUT_9004C-CWIDTH_OPT = ABAP_TRUE.
  GS_LAYOUT_9004C-NO_TOOLBAR = ABAP_TRUE.
  GS_LAYOUT_9004C-INFO_FNAME = 'LINE_COLOR'.
  GS_LAYOUT_9004C-STYLEFNAME = 'STYLE'.
  GS_LAYOUT_9004C-CTAB_FNAME = 'COLOR_CELL'.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG_9004A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG_9004A .

  DATA: LC_COL_POS  TYPE LVC_COLPOS.

  FIELD-SYMBOLS: <FS_CAT> TYPE LVC_S_FCAT.

  CLEAR: IT_FIELDCAT_9004A[].

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZDE_NFE_DIST_RET'
    CHANGING
      CT_FIELDCAT      = IT_FIELDCAT_9004A.

  LOOP AT IT_FIELDCAT_9004A ASSIGNING <FS_CAT>.
    <FS_CAT>-TABNAME = 'ZDE_NFE_DIST_RET'.
    CASE <FS_CAT>-FIELDNAME.
      WHEN 'CD_LOTE_ITEM'.
        <FS_CAT>-NO_OUT = ABAP_TRUE.
      WHEN 'MENGE'.
        <FS_CAT>-OUTPUTLEN = 15.
        <FS_CAT>-DO_SUM  = ABAP_TRUE.
    ENDCASE.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG_9004B
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG_9004B .

  DATA: LC_COL_POS  TYPE LVC_COLPOS.

  FIELD-SYMBOLS: <FS_CAT> TYPE LVC_S_FCAT.

  CLEAR: IT_FIELDCAT_9004B[].

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZDE_NFE_DIST_DISP'
    CHANGING
      CT_FIELDCAT      = IT_FIELDCAT_9004B.

  LOOP AT IT_FIELDCAT_9004B ASSIGNING <FS_CAT>.
    <FS_CAT>-TABNAME = 'ZDE_NFE_DIST_DISP'.
    CASE <FS_CAT>-FIELDNAME.
      WHEN 'ICONE'.
        <FS_CAT>-HOTSPOT   = ABAP_TRUE.
        <FS_CAT>-ICON      = ABAP_TRUE.
        <FS_CAT>-OUTPUTLEN = 04.
        <FS_CAT>-SCRTEXT_L = ''.
        <FS_CAT>-SCRTEXT_M = ''.
        <FS_CAT>-SCRTEXT_S = ''.
      WHEN 'VINCU'.
        <FS_CAT>-OUTPUTLEN = 15.
        <FS_CAT>-DO_SUM    = ABAP_TRUE.
        <FS_CAT>-EDIT      = ABAP_TRUE.
      WHEN 'MENGE'.
        <FS_CAT>-OUTPUTLEN = 15.
        <FS_CAT>-DO_SUM    = ABAP_TRUE.
    ENDCASE.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FILL_IT_FIELDCATALOG_9004B
*&---------------------------------------------------------------------*
FORM FILL_IT_FIELDCATALOG_9004C .

  DATA: LC_COL_POS  TYPE LVC_COLPOS.

  FIELD-SYMBOLS: <FS_CAT> TYPE LVC_S_FCAT.

  CLEAR: IT_FIELDCAT_9004C[].

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME = 'ZDE_NFE_DIST_VINC'
    CHANGING
      CT_FIELDCAT      = IT_FIELDCAT_9004C.

  LOOP AT IT_FIELDCAT_9004C ASSIGNING <FS_CAT>.
    <FS_CAT>-TABNAME = 'ZDE_NFE_DIST_VINC'.
    CASE <FS_CAT>-FIELDNAME.
      WHEN 'ICONE'.
        <FS_CAT>-HOTSPOT   = ABAP_TRUE.
        <FS_CAT>-ICON      = ABAP_TRUE.
        <FS_CAT>-OUTPUTLEN = 04.
        <FS_CAT>-SCRTEXT_L = ''.
        <FS_CAT>-SCRTEXT_M = ''.
        <FS_CAT>-SCRTEXT_S = ''.
      WHEN 'CD_LOTE_ITEM'.
        <FS_CAT>-NO_OUT = ABAP_TRUE.
      WHEN 'MENGE'.
        <FS_CAT>-OUTPUTLEN = 15.
        <FS_CAT>-DO_SUM  = ABAP_TRUE.
    ENDCASE.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  HANDLE_DOUBLE_CLICK
*&---------------------------------------------------------------------*
FORM DOUBLE_CLICK_9004A USING P_ROW TYPE LVC_S_ROW.

  DATA: LC_ROW TYPE LVC_T_ROW.

  CHECK P_ROW-INDEX IS NOT INITIAL.

  IF P_ROW-ROWTYPE IS INITIAL.

    APPEND P_ROW TO LC_ROW.

    CALL METHOD ALV_9004A->SET_SELECTED_ROWS
      EXPORTING
        IT_INDEX_ROWS = LC_ROW.

    LOOP AT IT_MATERIAL_RETORNO ASSIGNING FIELD-SYMBOL(<FS_MATERIAL>).
      CLEAR: <FS_MATERIAL>-LINE_COLOR.
    ENDLOOP.

    READ TABLE IT_MATERIAL_RETORNO ASSIGNING <FS_MATERIAL> INDEX P_ROW-INDEX.
    WA_MATERIAL_RETORNO_SEL  = <FS_MATERIAL>.
    <FS_MATERIAL>-LINE_COLOR = CS_LINE_COLOR_A.

    LBL_ITEM_SEL = |{ WA_MATERIAL_RETORNO_SEL-PROD_ITEM } - { WA_MATERIAL_RETORNO_SEL-PROD_CFOP } - { WA_MATERIAL_RETORNO_SEL-MAKTX(10) } - { WA_MATERIAL_RETORNO_SEL-CHARG }|.

    PERFORM SELECIONA_VINCULAR.

    LEAVE TO SCREEN 9004.

  ENDIF.

ENDFORM.                    " HANDLE_DOUBLE_CLICK

*&---------------------------------------------------------------------*
*&      Form  HANDLE_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM DOUBLE_CLICK_9004B USING P_ROW TYPE LVC_S_ROW.

  DATA: LC_ROW TYPE LVC_T_ROW.

  CHECK P_ROW-INDEX IS NOT INITIAL.

  IF P_ROW-ROWTYPE IS INITIAL.

    APPEND P_ROW TO LC_ROW.

    CALL METHOD ALV_9004B->SET_SELECTED_ROWS
      EXPORTING
        IT_INDEX_ROWS = LC_ROW.

    LOOP AT IT_MATERIAL_DISPONIVEL ASSIGNING FIELD-SYMBOL(<FS_DISPONIVEL>).
      CLEAR: <FS_DISPONIVEL>-LINE_COLOR.
      <FS_DISPONIVEL>-COLOR_CELL = VALUE #( ( FNAME = 'VINCU' COLOR = VALUE #( COL = 2 INT = 1 INV = 1 ) ) ).
    ENDLOOP.

    READ TABLE IT_MATERIAL_DISPONIVEL ASSIGNING <FS_DISPONIVEL> INDEX P_ROW-INDEX.
    WA_MATERIAL_DISPONI_SEL  = <FS_DISPONIVEL>.
    <FS_DISPONIVEL>-LINE_COLOR = CS_LINE_COLOR_A.

    ALV_9004B->REFRESH_TABLE_DISPLAY(
      EXPORTING
        IS_STABLE = VALUE #( ROW = ABAP_TRUE )
        I_SOFT_REFRESH = ABAP_TRUE
    ).

  ENDIF.

ENDFORM.                    " HANDLE_DOUBLE_CLICK

*&---------------------------------------------------------------------*
*&      Form  HANDLE_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM DOUBLE_CLICK_9004C USING P_ROW TYPE LVC_S_ROW.

  DATA: LC_ROW TYPE LVC_T_ROW.

  CHECK P_ROW-INDEX IS NOT INITIAL.

  IF P_ROW-ROWTYPE IS INITIAL.

    APPEND P_ROW TO LC_ROW.

    CALL METHOD ALV_9004C->SET_SELECTED_ROWS
      EXPORTING
        IT_INDEX_ROWS = LC_ROW.

  ENDIF.

ENDFORM.                    " HANDLE_DOUBLE_CLICK

*&---------------------------------------------------------------------*
*&      Form  LIMPAR_TELA_9004
*&---------------------------------------------------------------------*
FORM LIMPAR_TELA_9004 .

  CLEAR: CK_INFORMADO_VINC_RETORNO,
         LBL_ITEM_SEL,
         WA_MATERIAL_RETORNO_SEL.

  CLEAR: IT_FIELDCAT_9004A, EVENT_HANDLER_9004A.

  IF ALV_9004A IS NOT INITIAL.
    ALV_9004A->FREE( ).
  ENDIF.
  CLEAR: ALV_9004A.

  IF CONTAINER_9004A IS NOT INITIAL.
    CONTAINER_9004A->FREE( ).
  ENDIF.
  CLEAR: CONTAINER_9004A.

  CLEAR: IT_FIELDCAT_9004B, EVENT_HANDLER_9004B.

  IF ALV_9004B IS NOT INITIAL.
    ALV_9004B->FREE( ).
  ENDIF.
  CLEAR: ALV_9004B.

  IF CONTAINER_9004B IS NOT INITIAL.
    CONTAINER_9004B->FREE( ).
  ENDIF.
  CLEAR: CONTAINER_9004B.

  CLEAR: IT_FIELDCAT_9004C, EVENT_HANDLER_9004C.

  IF ALV_9004C IS NOT INITIAL.
    ALV_9004C->FREE( ).
  ENDIF.
  CLEAR: ALV_9004C.

  IF CONTAINER_9004C IS NOT INITIAL.
    CONTAINER_9004C->FREE( ).
  ENDIF.
  CLEAR: CONTAINER_9004C.

  IF SPLITTER_9004 IS NOT INITIAL.
    SPLITTER_9004->FREE( ).
  ENDIF.
  CLEAR: SPLITTER_9004.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SELECIONA_REGISTROS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECIONA_REGISTROS .

  DATA: WA_NOTA_RETORNO TYPE ZDE_NFE_DIST_RET,
        WA_VINCULAR     TYPE ZDE_NFE_DIST_VINC.

  CLEAR: IT_MATERIAL_RETORNO[], IT_MATERIAL_VINCULADO[].

  DATA(WA_REGISTRO) = OBJ_NFE_INBOUND->GET_INFO_NOTA( ).

  IF WA_REGISTRO-NFE_BASE-ITENS[] IS NOT INITIAL.
    SELECT * INTO TABLE @DATA(IT_MAKT)
      FROM MAKT
       FOR ALL ENTRIES IN @WA_REGISTRO-NFE_BASE-ITENS
     WHERE SPRAS EQ @SY-LANGU
       AND MATNR EQ @WA_REGISTRO-NFE_BASE-ITENS-MATNR.

    SORT IT_MAKT BY MATNR.
  ENDIF.

  LOOP AT WA_REGISTRO-NFE_BASE-ITENS INTO DATA(WA_ITEM).

    CLEAR: WA_NOTA_RETORNO.
    WA_NOTA_RETORNO-PROD_ITEM = WA_ITEM-PROD_ITEM.
    WA_NOTA_RETORNO-PROD_CFOP = WA_ITEM-PROD_CFOP.
    WA_NOTA_RETORNO-MATNR     = WA_ITEM-MATNR.

    READ TABLE IT_MAKT INTO DATA(WA_MAKT) WITH KEY MATNR = WA_ITEM-MATNR.
    IF SY-SUBRC IS INITIAL.
      WA_NOTA_RETORNO-MAKTX = WA_MAKT-MAKTX.
    ENDIF.

    "Verificar se item Tem Lote?
    READ TABLE WA_REGISTRO-NFE_BASE-LOTES WITH KEY CHAVE_NFE = WA_ITEM-CHAVE_NFE  PROD_ITEM = WA_ITEM-PROD_ITEM TRANSPORTING NO FIELDS.

    IF SY-SUBRC IS INITIAL.
      LOOP AT WA_REGISTRO-NFE_BASE-LOTES INTO DATA(WA_LOTES)
         WHERE CHAVE_NFE EQ WA_ITEM-CHAVE_NFE
           AND PROD_ITEM EQ WA_ITEM-PROD_ITEM.
        WA_NOTA_RETORNO-CD_LOTE_ITEM = WA_LOTES-CD_LOTE_ITEM.
        WA_NOTA_RETORNO-CHARG = WA_LOTES-CHARG.
        WA_NOTA_RETORNO-MEINS = WA_ITEM-MEINS.
        WA_NOTA_RETORNO-MENGE = WA_LOTES-MENGE.
        WA_NOTA_RETORNO-VFDAT = WA_LOTES-VFDAT.
        WA_NOTA_RETORNO-LICHA = WA_LOTES-LICHA.
        APPEND WA_NOTA_RETORNO TO IT_MATERIAL_RETORNO.
      ENDLOOP.
    ELSE.
      WA_NOTA_RETORNO-MEINS = WA_ITEM-MEINS.
      WA_NOTA_RETORNO-MENGE = WA_ITEM-MENGE.
      APPEND WA_NOTA_RETORNO TO IT_MATERIAL_RETORNO.
    ENDIF.

    LOOP AT WA_REGISTRO-NFE_BASE-RETORNOS INTO DATA(WA_RETORNO) WHERE PROD_ITEM EQ WA_ITEM-PROD_ITEM.
      CLEAR: WA_VINCULAR.
      WA_VINCULAR-ICONE        = ICON_UNASSIGN.
      WA_VINCULAR-CD_LOTE_ITEM = WA_RETORNO-CD_LOTE_ITEM.
      WA_VINCULAR-PROD_ITEM    = WA_RETORNO-PROD_ITEM.
      WA_VINCULAR-PROD_CFOP    = WA_ITEM-PROD_CFOP.
      WA_VINCULAR-MBLNR        = WA_RETORNO-MBLNR.
      WA_VINCULAR-MJAHR        = WA_RETORNO-MJAHR.
      WA_VINCULAR-XBLNR        = WA_RETORNO-XBLNR.
      WA_VINCULAR-ZEILE        = WA_RETORNO-ZEILE.
      WA_VINCULAR-MATNR        = WA_RETORNO-MATNR.
      WA_VINCULAR-MAKTX        = WA_RETORNO-MAKTX.
      WA_VINCULAR-LGORT        = WA_RETORNO-LGORT.
      WA_VINCULAR-CHARG        = WA_RETORNO-CHARG.
      WA_VINCULAR-MEINS        = WA_RETORNO-MEINS.
      WA_VINCULAR-MENGE        = WA_RETORNO-MENGE.
      WA_VINCULAR-VFDAT        = WA_RETORNO-VFDAT.
      WA_VINCULAR-LICHA        = WA_RETORNO-LICHA.
      APPEND WA_VINCULAR TO IT_MATERIAL_VINCULADO.
    ENDLOOP.

  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SELECIONA_VINCULAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECIONA_VINCULAR .

  TYPES BEGIN OF TY_MD.
  TYPES : MBLNR TYPE MBLNR.
  TYPES : MJAHR TYPE MJAHR.
  TYPES END OF TY_MD.

  DATA: IT_J_1BNFE_ACTIVE TYPE TABLE OF J_1BNFE_ACTIVE,
        WA_MOV_MATERIAL   TYPE TY_MD,
        IT_MOV_MATERIAL   TYPE TABLE OF TY_MD,
        WA_DISPONIVEL     TYPE ZDE_NFE_DIST_DISP.

  CLEAR: IT_MATERIAL_DISPONIVEL[], IT_J_1BNFE_ACTIVE[].

  DATA(WA_REGISTRO) = OBJ_NFE_INBOUND->GET_CABECALHO_NOTA( ).

  "Verificar se tem Nota Referênciada
  SELECT * INTO TABLE @DATA(IT_NFREF)
    FROM ZIB_NFE_DIST_REF
   WHERE CHAVE_NFE EQ @WA_REGISTRO-CHAVE_NFE.

  "Quando Existe Nota fiscal
  IF SY-SUBRC IS INITIAL.

    LOOP AT IT_NFREF INTO DATA(WA_NFREF).
      SELECT * APPENDING TABLE @IT_J_1BNFE_ACTIVE
        FROM J_1BNFE_ACTIVE
       WHERE REGIO    EQ @WA_NFREF-CHAVE_NFE_REF(2)
         AND NFYEAR   EQ @WA_NFREF-CHAVE_NFE_REF+2(2)
         AND NFMONTH  EQ @WA_NFREF-CHAVE_NFE_REF+4(2)
         AND STCD1    EQ @WA_NFREF-CHAVE_NFE_REF+6(14)
         AND MODEL    EQ @WA_NFREF-CHAVE_NFE_REF+20(2)
         AND SERIE    EQ @WA_NFREF-CHAVE_NFE_REF+22(3)
         AND NFNUM9   EQ @WA_NFREF-CHAVE_NFE_REF+25(9)
         AND DOCNUM9  EQ @WA_NFREF-CHAVE_NFE_REF+34(9)
         AND CDV      EQ @WA_NFREF-CHAVE_NFE_REF+43(1)
         AND DIRECT   EQ '2'
         AND PARID    EQ @WA_REGISTRO-P_EMISSOR.
    ENDLOOP.

    "Buscar Itens da Nota Fiscal de Envio para Armazenagem
    IF IT_J_1BNFE_ACTIVE[] IS NOT INITIAL.
      SELECT * INTO TABLE @DATA(IT_J_1BNFLIN)
        FROM J_1BNFLIN
         FOR ALL ENTRIES IN @IT_J_1BNFE_ACTIVE
       WHERE DOCNUM EQ @IT_J_1BNFE_ACTIVE-DOCNUM.
    ENDIF.

    "Preparar para busca de movimento de mercadoria da saída para Armazenagem
    LOOP AT IT_J_1BNFLIN INTO DATA(WA_J_1BNFLIN) WHERE REFTYP EQ 'MD'.
      CLEAR: WA_MOV_MATERIAL.
      WA_MOV_MATERIAL-MBLNR = WA_J_1BNFLIN-REFKEY(10).
      WA_MOV_MATERIAL-MJAHR = WA_J_1BNFLIN-REFKEY+10(4).
      APPEND WA_MOV_MATERIAL TO IT_MOV_MATERIAL.
    ENDLOOP.

    "Busca de Movmento de Mercadoria da Saída para Armazenagem
    IF IT_MOV_MATERIAL[] IS NOT INITIAL.
      SELECT * INTO TABLE @DATA(IT_MSEG)
        FROM MSEG
         FOR ALL ENTRIES IN @IT_MOV_MATERIAL
       WHERE MBLNR EQ @IT_MOV_MATERIAL-MBLNR
         AND MJAHR EQ @IT_MOV_MATERIAL-MJAHR
         AND XAUTO EQ @SPACE
         AND SHKZG EQ 'H'.

      IF SY-SUBRC IS INITIAL.
        SELECT * INTO TABLE @DATA(IT_MKPF)
          FROM MKPF
           FOR ALL ENTRIES IN @IT_MSEG
         WHERE MBLNR EQ @IT_MSEG-MBLNR
           AND MJAHR EQ @IT_MSEG-MJAHR.
        SORT IT_MKPF BY MBLNR MJAHR.

        SELECT * INTO TABLE @DATA(IT_MAKT)
          FROM MAKT
           FOR ALL ENTRIES IN @IT_MSEG
         WHERE SPRAS EQ @SY-LANGU
           AND MATNR EQ @IT_MSEG-MATNR.
        SORT IT_MAKT BY MATNR.
      ENDIF.

    ENDIF.

  ELSE.



  ENDIF.

  CHECK IT_MSEG[] IS NOT INITIAL.

  "Busca Saldo já vinculado """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  SELECT * INTO TABLE @DATA(IT_ITEM_DESTINACAO)
    FROM ZMMT0116
     FOR ALL ENTRIES IN @IT_MSEG
   WHERE ORIG_MBLNR     EQ @IT_MSEG-MBLNR
     AND ORIG_MJAHR     EQ @IT_MSEG-MJAHR
     AND ORIG_ZEILE     EQ @IT_MSEG-ZEILE.
  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

  IF IT_ITEM_DESTINACAO[] IS NOT INITIAL.
    SELECT * INTO TABLE @DATA(IT_ORIG_DESTINACAO)
      FROM ZMMT0115
       FOR ALL ENTRIES IN @IT_ITEM_DESTINACAO
     WHERE ID_DESTINACAO EQ @IT_ITEM_DESTINACAO-ID_DESTINACAO
       AND ORIG_MBLNR    EQ @IT_ITEM_DESTINACAO-ORIG_MBLNR
       AND ORIG_MJAHR    EQ @IT_ITEM_DESTINACAO-ORIG_MJAHR
       AND ORIG_NFE      NE @WA_REGISTRO-CHAVE_NFE.

    SORT IT_ORIG_DESTINACAO BY ID_DESTINACAO ORIG_MBLNR ORIG_MJAHR.
  ENDIF.

  IF IT_ORIG_DESTINACAO[] IS NOT INITIAL.
    SELECT * INTO TABLE @DATA(IT_DESTINACAO)
      FROM ZMMT0114
       FOR ALL ENTRIES   IN @IT_ORIG_DESTINACAO
     WHERE ID_DESTINACAO EQ @IT_ORIG_DESTINACAO-ID_DESTINACAO
       AND MBLNR         NE @SPACE
       AND MBLNR_ESTORNO EQ @SPACE.

    SORT IT_DESTINACAO BY ID_DESTINACAO.
  ENDIF.

  "Procurar Documentos Estornados """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  IF IT_DESTINACAO[] IS NOT INITIAL.

    SELECT * INTO TABLE @DATA(IT_MSEG_ESTORNO)
      FROM MSEG
       FOR ALL ENTRIES IN @IT_DESTINACAO
     WHERE SJAHR EQ @IT_DESTINACAO-MJAHR
       AND SMBLN EQ @IT_DESTINACAO-MBLNR.

    SORT IT_MSEG_ESTORNO BY SJAHR SMBLN SMBLP.
  ENDIF.

  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

  LOOP AT IT_MSEG INTO DATA(WA_MSEG).
    CLEAR: WA_DISPONIVEL.
    WA_DISPONIVEL-ICONE = ICON_ASSIGN.
    WA_DISPONIVEL-MBLNR = WA_MSEG-MBLNR.
    WA_DISPONIVEL-MJAHR = WA_MSEG-MJAHR.
    WA_DISPONIVEL-ZEILE = WA_MSEG-ZEILE.
    WA_DISPONIVEL-MATNR = WA_MSEG-MATNR.
    WA_DISPONIVEL-LGORT = WA_MSEG-LGORT.
    WA_DISPONIVEL-CHARG = WA_MSEG-CHARG.
    WA_DISPONIVEL-MEINS = WA_MSEG-MEINS.
    WA_DISPONIVEL-MENGE = WA_MSEG-MENGE.
    WA_DISPONIVEL-SALDO = WA_MSEG-MENGE.

    "Se não é controlado por lote os dois vão estar vazio
    CHECK WA_MATERIAL_RETORNO_SEL-CHARG EQ WA_MSEG-CHARG.

    "Reduzir Saldo
    LOOP AT IT_MATERIAL_VINCULADO INTO DATA(WA_VINCULADO)
      WHERE MBLNR EQ WA_MSEG-MBLNR
        AND MJAHR EQ WA_MSEG-MJAHR
        AND ZEILE EQ WA_MSEG-ZEILE.
      WA_DISPONIVEL-SALDO = WA_DISPONIVEL-SALDO - WA_VINCULADO-MENGE.
    ENDLOOP.

    "Reduzir Saldo Anterior
    LOOP AT IT_ITEM_DESTINACAO INTO DATA(WA_ITEM_DESTINACAO)
       WHERE ORIG_MBLNR EQ WA_MSEG-MBLNR
         AND ORIG_MJAHR EQ WA_MSEG-MJAHR
         AND ORIG_ZEILE EQ WA_MSEG-ZEILE
         AND CHARG      EQ WA_MSEG-CHARG
         AND LGORT      EQ WA_MSEG-LGORT
         AND WERKS      EQ WA_MSEG-WERKS
         AND FORNE      EQ WA_MSEG-LIFNR.

      "Procura Destinção
      READ TABLE IT_DESTINACAO
       WITH KEY ID_DESTINACAO = WA_ITEM_DESTINACAO-ID_DESTINACAO
       INTO DATA(WA_DESTINACAO)
       BINARY SEARCH.

      "Não foi Estornado
      IF WA_DESTINACAO-MBLNR_ESTORNO IS NOT INITIAL OR SY-SUBRC IS NOT INITIAL.
        CONTINUE.
      ELSE.

        "Documento Foi Estornado
        READ TABLE IT_MSEG_ESTORNO
        WITH KEY SJAHR = WA_MSEG-MJAHR SMBLN = WA_MSEG-MBLNR SMBLP = WA_MSEG-ZEILE
        BINARY SEARCH
        TRANSPORTING NO FIELDS.

        IF SY-SUBRC IS INITIAL.
          CONTINUE.
        ENDIF.

      ENDIF.

      WA_DISPONIVEL-SALDO = WA_DISPONIVEL-SALDO - WA_ITEM_DESTINACAO-MENGE.
    ENDLOOP.

    WA_DISPONIVEL-VINCU = WA_DISPONIVEL-SALDO.
    WA_DISPONIVEL-VFDAT = WA_MSEG-VFDAT.

    READ TABLE IT_MAKT WITH KEY MATNR = WA_MSEG-MATNR INTO DATA(WA_MAKT).
    IF SY-SUBRC IS INITIAL.
      WA_DISPONIVEL-MAKTX = WA_MAKT-MAKTX.
    ENDIF.

    READ TABLE IT_MKPF WITH KEY MBLNR = WA_MSEG-MBLNR MJAHR = WA_MSEG-MJAHR INTO DATA(WA_MKPF).
    IF SY-SUBRC IS INITIAL.
      WA_DISPONIVEL-XBLNR = WA_MKPF-XBLNR.
    ENDIF.
    APPEND WA_DISPONIVEL TO IT_MATERIAL_DISPONIVEL.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form DEL_MATERIAL_LIVRE
*&---------------------------------------------------------------------*
FORM DEL_MATERIAL_LIVRE  USING P_ID_INDEX TYPE LVC_INDEX.

  "Tira cor de todas as linhas
  LOOP AT IT_MATERIAL_VINCULADO ASSIGNING FIELD-SYMBOL(<FS_VINCULADO>).
    CLEAR: <FS_VINCULADO>-LINE_COLOR.
  ENDLOOP.

  READ TABLE IT_MATERIAL_VINCULADO INDEX P_ID_INDEX INTO DATA(WA_VINCULADO).

  IF SY-SUBRC IS INITIAL.
    READ TABLE IT_MATERIAL_DISPONIVEL
    WITH KEY MBLNR = WA_VINCULADO-MBLNR MJAHR = WA_VINCULADO-MJAHR ZEILE = WA_VINCULADO-ZEILE
    ASSIGNING FIELD-SYMBOL(<FS_DISPONIVEL>).

    IF SY-SUBRC IS INITIAL.
      <FS_DISPONIVEL>-SALDO = <FS_DISPONIVEL>-SALDO + WA_VINCULADO-MENGE.
      <FS_DISPONIVEL>-VINCU = <FS_DISPONIVEL>-VINCU + WA_VINCULADO-MENGE.
    ENDIF.
  ENDIF.

  DELETE IT_MATERIAL_VINCULADO INDEX P_ID_INDEX.

  ALV_9004B->REFRESH_TABLE_DISPLAY( EXPORTING IS_STABLE = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE ) I_SOFT_REFRESH = ABAP_TRUE ).
  ALV_9004C->REFRESH_TABLE_DISPLAY( EXPORTING IS_STABLE = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE ) I_SOFT_REFRESH = ABAP_TRUE ).
  "LEAVE TO SCREEN 9004.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  ADD_MATERIAL_LIVRE
*&---------------------------------------------------------------------*
FORM ADD_MATERIAL_LIVRE  USING P_ID_INDEX TYPE LVC_INDEX.

  DATA: LC_ROW      TYPE LVC_T_ROW,
        WA_VINCULAR TYPE ZDE_NFE_DIST_VINC.

  CLEAR: LC_ROW[].

  APPEND VALUE #( INDEX = P_ID_INDEX ) TO LC_ROW.

  CALL METHOD ALV_9004B->SET_SELECTED_ROWS
    EXPORTING
      IT_INDEX_ROWS = LC_ROW.

  "Tira cor de todas as linhas
  LOOP AT IT_MATERIAL_DISPONIVEL ASSIGNING FIELD-SYMBOL(<FS_DISPONIVEL>).
    CLEAR: <FS_DISPONIVEL>-LINE_COLOR.
  ENDLOOP.

  "Coloca a cor em uma linha específica
  READ TABLE IT_MATERIAL_DISPONIVEL ASSIGNING <FS_DISPONIVEL> INDEX P_ID_INDEX.

  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

  READ TABLE IT_MATERIAL_VINCULADO ASSIGNING FIELD-SYMBOL(<DS_VINCULADO>)
  WITH KEY CD_LOTE_ITEM = WA_MATERIAL_RETORNO_SEL-CD_LOTE_ITEM
           PROD_ITEM = WA_MATERIAL_RETORNO_SEL-PROD_ITEM
           MBLNR = <FS_DISPONIVEL>-MBLNR
           MJAHR = <FS_DISPONIVEL>-MJAHR
           ZEILE = <FS_DISPONIVEL>-ZEILE.

  IF SY-SUBRC IS INITIAL.
    DATA(LC_MENGE) = <DS_VINCULADO>-MENGE.
    <DS_VINCULADO>-MENGE = <DS_VINCULADO>-MENGE + <FS_DISPONIVEL>-VINCU.
    IF <DS_VINCULADO>-MENGE GE WA_MATERIAL_RETORNO_SEL-MENGE.
      <DS_VINCULADO>-MENGE  = WA_MATERIAL_RETORNO_SEL-MENGE.
      <FS_DISPONIVEL>-VINCU = WA_MATERIAL_RETORNO_SEL-MENGE - LC_MENGE.
    ENDIF.
    WA_VINCULAR = <DS_VINCULADO>.
  ELSE.
    CLEAR: WA_VINCULAR.
    WA_VINCULAR-ICONE        = ICON_UNASSIGN.
    WA_VINCULAR-CD_LOTE_ITEM = WA_MATERIAL_RETORNO_SEL-CD_LOTE_ITEM.
    WA_VINCULAR-PROD_ITEM    = WA_MATERIAL_RETORNO_SEL-PROD_ITEM.
    WA_VINCULAR-PROD_CFOP    = WA_MATERIAL_RETORNO_SEL-PROD_CFOP.
    WA_VINCULAR-MBLNR        = <FS_DISPONIVEL>-MBLNR.
    WA_VINCULAR-MJAHR        = <FS_DISPONIVEL>-MJAHR.
    WA_VINCULAR-XBLNR        = <FS_DISPONIVEL>-XBLNR.
    WA_VINCULAR-ZEILE        = <FS_DISPONIVEL>-ZEILE.
    WA_VINCULAR-MATNR        = <FS_DISPONIVEL>-MATNR.
    WA_VINCULAR-MAKTX        = <FS_DISPONIVEL>-MAKTX.
    WA_VINCULAR-LGORT        = <FS_DISPONIVEL>-LGORT.
    WA_VINCULAR-CHARG        = <FS_DISPONIVEL>-CHARG.
    WA_VINCULAR-MEINS        = <FS_DISPONIVEL>-MEINS.
    WA_VINCULAR-MENGE        = <FS_DISPONIVEL>-VINCU.

    IF WA_VINCULAR-MENGE GE WA_MATERIAL_RETORNO_SEL-MENGE.
      <FS_DISPONIVEL>-VINCU = WA_MATERIAL_RETORNO_SEL-MENGE.
      WA_VINCULAR-MENGE = WA_MATERIAL_RETORNO_SEL-MENGE.
    ENDIF.

    WA_VINCULAR-VFDAT        = <FS_DISPONIVEL>-VFDAT.
    WA_VINCULAR-LICHA        = <FS_DISPONIVEL>-LICHA.
    APPEND WA_VINCULAR TO IT_MATERIAL_VINCULADO.
  ENDIF.
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

  <FS_DISPONIVEL>-VINCU      = <FS_DISPONIVEL>-SALDO - <FS_DISPONIVEL>-VINCU.
  <FS_DISPONIVEL>-SALDO      = <FS_DISPONIVEL>-VINCU.
  <FS_DISPONIVEL>-LINE_COLOR = CS_LINE_COLOR_A.
  WA_MATERIAL_DISPONI_SEL    = <FS_DISPONIVEL>.

  "Atualizar ALV
  ALV_9004B->REFRESH_TABLE_DISPLAY( EXPORTING IS_STABLE = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE ) I_SOFT_REFRESH = ABAP_FALSE ).
  ALV_9004C->REFRESH_TABLE_DISPLAY( EXPORTING IS_STABLE = VALUE #( ROW = ABAP_TRUE COL = ABAP_TRUE ) I_SOFT_REFRESH = ABAP_FALSE ).
  "LEAVE TO SCREEN 9004.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SALVAR_RETORNO_VINCULO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SALVAR_RETORNO_VINCULO .

  DATA: IT_RETORNO TYPE ZIB_NFE_DIST_RET_T.

  PERFORM POPULAR_RETORNO_VINCULADO CHANGING IT_RETORNO.

  CHECK IT_RETORNO[] IS NOT INITIAL.

  TRY .
      OBJ_NFE_INBOUND->SET_DADOS_RETORNO( I_RETORNO = IT_RETORNO ).
      OBJ_NFE_INBOUND->ZIF_CADASTRO~GRAVAR_REGISTRO( ).
    CATCH ZCX_CADASTRO INTO DATA(EX_CADASTRO) .    "
      EX_CADASTRO->PUBLISHED_ERRO( EXPORTING I_MSGTY = 'S' I_MSGTY_DISPLAY = 'E' ).
  ENDTRY.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  POPULAR_RETORNO_VINCULADO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_IT_RETORNO  text
*----------------------------------------------------------------------*
FORM POPULAR_RETORNO_VINCULADO  CHANGING P_IT_RETORNO TYPE ZIB_NFE_DIST_RET_T.

  DATA: WA_RETORNO TYPE ZIB_NFE_DIST_RET.

  DATA(WA_REGISTRO) = OBJ_NFE_INBOUND->GET_CABECALHO_NOTA( ).

  CLEAR: P_IT_RETORNO[].

  LOOP AT IT_MATERIAL_VINCULADO INTO DATA(WA_VINCULADO).
    CLEAR: WA_RETORNO.
    WA_RETORNO-CHAVE_NFE = WA_REGISTRO-CHAVE_NFE.
    WA_RETORNO-PROD_ITEM = WA_VINCULADO-PROD_ITEM.
    WA_RETORNO-CD_LOTE_ITEM = WA_VINCULADO-CD_LOTE_ITEM.
    WA_RETORNO-MBLNR = WA_VINCULADO-MBLNR.
    WA_RETORNO-MJAHR = WA_VINCULADO-MJAHR.
    WA_RETORNO-ZEILE = WA_VINCULADO-ZEILE.
    WA_RETORNO-MEINS = WA_VINCULADO-MEINS.
    WA_RETORNO-MENGE = WA_VINCULADO-MENGE.
    WA_RETORNO-XBLNR = WA_VINCULADO-XBLNR.
    WA_RETORNO-MATNR = WA_VINCULADO-MATNR.
    WA_RETORNO-MAKTX = WA_VINCULADO-MAKTX.
    WA_RETORNO-LGORT = WA_VINCULADO-LGORT.
    WA_RETORNO-CHARG = WA_VINCULADO-CHARG.
    WA_RETORNO-VFDAT = WA_VINCULADO-VFDAT.
    WA_RETORNO-LICHA = WA_VINCULADO-LICHA.
    APPEND WA_RETORNO TO P_IT_RETORNO.
  ENDLOOP.

ENDFORM.
