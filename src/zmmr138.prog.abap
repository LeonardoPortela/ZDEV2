*&---------------------------------------------------------------------*
*& Report  ZMMR138
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZMMR138 MESSAGE-ID ZNFE_DISTRI.

DATA: V_FORMNAME TYPE TDSFNAME VALUE 'ZMMS004',
      V_NAME     TYPE RS38L_FNAM.

PARAMETERS: PDOCNUM LIKE J_1BNFDOC-DOCNUM OBLIGATORY.

PARAMETERS: PXSTRING TYPE CHAR01 NO-DISPLAY.

START-OF-SELECTION.

  DATA: LC_CONTROL_PARAMETERS TYPE SSFCTRLOP,
        WA_OUTPUT_OPTIONS     TYPE SSFCOMPOP,
        ST_JOB_OUTPUT_INFO    TYPE SSFCRESCL,
        BIN_FILESIZE          TYPE I,
        LS_PDF_STRING_X       TYPE XSTRING,
        PDF_TAB               LIKE TLINE OCCURS 0 WITH HEADER LINE,
        ROOT                  TYPE REF TO ZCL_MEMORY_VARIAVEIS,
        OREF                  TYPE REF TO ZCL_MEMORY_VARIAVEIS,
        WA_ITEM               TYPE ZDE_NOTA_FISCAL_ITENS,
        WA_IMPOSTO            TYPE ZDE_NOTA_FISCAL_IMPOSTOS,
        LC_VERSION            LIKE  J_1BCFOPVER-VERSION.

  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""  Seleção dos Dados

  DATA: FISCAL TYPE ZDE_NOTA_FISCAL.

  SELECT SINGLE * INTO @DATA(WA_J_1BNFDOC)
    FROM J_1BNFDOC
   WHERE DOCNUM EQ @PDOCNUM.

  IF SY-SUBRC IS NOT INITIAL.
    MESSAGE S126 WITH PDOCNUM DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  CLEAR FISCAL.
  MOVE-CORRESPONDING WA_J_1BNFDOC TO FISCAL.

  SELECT SINGLE NFTTXT INTO FISCAL-NFTYPE_TX
    FROM J_1BAAT
   WHERE SPRAS  EQ SY-LANGU
     AND NFTYPE EQ FISCAL-NFTYPE.

  SELECT SINGLE TEXT INTO FISCAL-DOCTYP_TX
    FROM J_1BDOCTYPEST
   WHERE SPRAS  EQ SY-LANGU
     AND DOCTYP EQ FISCAL-DOCTYP.

  FISCAL-DIRECT_TX = ZCL_DOMAIN=>GET_TEXT_VALUE_DOMAIN( I_DOMNAME = 'J_1BDIRECT' I_VALUE   = CONV #( FISCAL-DIRECT ) ).
  FISCAL-ENTRAD_TX = ZCL_DOMAIN=>GET_TEXT_VALUE_DOMAIN( I_DOMNAME = 'J_1BENTRAD' I_VALUE   = CONV #( FISCAL-ENTRAD ) ).

  SELECT SINGLE BUTXT INTO FISCAL-BUKRS_TX
    FROM T001
   WHERE BUKRS EQ FISCAL-BUKRS.

  SELECT SINGLE NAME INTO FISCAL-BRANCH_TX
    FROM J_1BBRANCH
   WHERE BUKRS  EQ FISCAL-BUKRS
     AND BRANCH EQ FISCAL-BRANCH.

  SELECT SINGLE PARTXT INTO FISCAL-PARVW_TX
    FROM J_1BADT
   WHERE SPRAS EQ SY-LANGU
     AND PARVW EQ FISCAL-PARVW.

  FISCAL-PARTYP_TX = ZCL_DOMAIN=>GET_TEXT_VALUE_DOMAIN( I_DOMNAME = 'J_1BPARTYP' I_VALUE   = CONV #( FISCAL-PARTYP ) ).

  SELECT SINGLE * INTO @DATA(WA_J_1BNFE_ACTIVE)
    FROM J_1BNFE_ACTIVE
   WHERE DOCNUM EQ @FISCAL-DOCNUM.

  IF SY-SUBRC IS INITIAL.
    FISCAL-NFE_REGIO   = WA_J_1BNFE_ACTIVE-REGIO.
    FISCAL-NFE_NFYEAR  = WA_J_1BNFE_ACTIVE-NFYEAR.
    FISCAL-NFE_NFMONTH = WA_J_1BNFE_ACTIVE-NFMONTH.
    FISCAL-NFE_STCD1   = WA_J_1BNFE_ACTIVE-STCD1.
    FISCAL-NFE_MODEL   = WA_J_1BNFE_ACTIVE-MODEL.
    FISCAL-NFE_SERIE   = WA_J_1BNFE_ACTIVE-SERIE.
    FISCAL-NFE_NFNUM9  = WA_J_1BNFE_ACTIVE-NFNUM9.
    FISCAL-NFE_DOCNUM9 = WA_J_1BNFE_ACTIVE-DOCNUM9.
    FISCAL-NFE_CDV     = WA_J_1BNFE_ACTIVE-CDV.
    FISCAL-NFE_AUTHCOD = WA_J_1BNFE_ACTIVE-AUTHCOD.
  ENDIF.

  SELECT * INTO TABLE @DATA(IT_ITENS)
    FROM J_1BNFLIN
   WHERE DOCNUM EQ @PDOCNUM.

  CALL FUNCTION 'J_1B_CFOP_GET_VERSION'
    EXPORTING
      LAND1        = FISCAL-LAND1
      REGION       = FISCAL-REGIO
      DATE         = SY-DATUM
    IMPORTING
      VERSION      = LC_VERSION
    EXCEPTIONS
      DATE_MISSING = 1
      OTHERS       = 2.

  SELECT * INTO TABLE @DATA(IT_J_1BNFSTX)
    FROM J_1BNFSTX
   WHERE DOCNUM EQ @PDOCNUM.

  LOOP AT IT_ITENS INTO DATA(WA_ITENS).

    CLEAR: WA_ITEM.
    MOVE-CORRESPONDING WA_ITENS TO WA_ITEM.

    SELECT SINGLE CFOTXT INTO WA_ITEM-CFOP_TX
      FROM J_1BAGNT
     WHERE SPRAS   EQ SY-LANGU
       AND VERSION EQ LC_VERSION
       AND CFOP    EQ WA_ITEM-CFOP.

    WA_ITEM-MATORG_TX = ZCL_DOMAIN=>GET_TEXT_VALUE_DOMAIN( I_DOMNAME = 'J_1BMATORG' I_VALUE   = CONV #( WA_ITEM-MATORG ) ).
    WA_ITEM-TAXSIT_TX = ZCL_DOMAIN=>GET_TEXT_VALUE_DOMAIN( I_DOMNAME = 'J_1BTAXSIT' I_VALUE   = CONV #( WA_ITEM-TAXSIT ) ).

    SELECT SINGLE TXT INTO WA_ITEM-TAXSI2_TX
      FROM J_1BAST
     WHERE LANGU  EQ SY-LANGU
       AND TAXSIT EQ WA_ITEM-TAXSI2.

    SELECT SINGLE TXT INTO WA_ITEM-TAXSI3_TX
      FROM J_1BTAXSITISST
     WHERE LANGU  EQ SY-LANGU
       AND TAXSIT EQ WA_ITEM-TAXSI3.

    SELECT SINGLE TXT INTO WA_ITEM-TAXSI4_TX
      FROM J_1BTAXSITCOFT
     WHERE LANGU  EQ SY-LANGU
       AND TAXSIT EQ WA_ITEM-TAXSI4.

    SELECT SINGLE TXT INTO WA_ITEM-TAXSI5_TX
      FROM J_1BTAXSITPIST
     WHERE LANGU  EQ SY-LANGU
       AND TAXSIT EQ WA_ITEM-TAXSI5.

    SELECT SINGLE DESCRIP INTO WA_ITEM-TAXLW1_TX
      FROM J_1BATL1T
     WHERE LANGU  EQ SY-LANGU
       AND TAXLAW EQ WA_ITEM-TAXLW1.

    SELECT SINGLE DESCRIP INTO WA_ITEM-TAXLW2_TX
      FROM J_1BATL2T
     WHERE LANGU  EQ SY-LANGU
       AND TAXLAW EQ WA_ITEM-TAXLW2.

    SELECT SINGLE DESCRIP INTO WA_ITEM-TAXLW3_TX
      FROM J_1BATL3T
     WHERE LANGU  EQ SY-LANGU
       AND TAXLAW EQ WA_ITEM-TAXLW3.

    SELECT SINGLE DESCRIP INTO WA_ITEM-TAXLW4_TX
      FROM J_1BATL4T
     WHERE LANGU  EQ SY-LANGU
       AND TAXLAW EQ WA_ITEM-TAXLW4.

    SELECT SINGLE DESCRIP INTO WA_ITEM-TAXLW5_TX
      FROM J_1BATL5T
     WHERE LANGU  EQ SY-LANGU
       AND TAXLAW EQ WA_ITEM-TAXLW5.


    LOOP AT IT_J_1BNFSTX INTO DATA(WA_J_1BNFSTX)
        WHERE DOCNUM EQ WA_ITEM-DOCNUM
          AND ITMNUM EQ WA_ITEM-ITMNUM.

      CLEAR: WA_IMPOSTO.

      WA_IMPOSTO-BASE       = WA_J_1BNFSTX-BASE.
      WA_IMPOSTO-DOCNUM     = WA_J_1BNFSTX-DOCNUM.
      WA_IMPOSTO-EXCBAS     = WA_J_1BNFSTX-EXCBAS.
      WA_IMPOSTO-ITMNUM     = WA_J_1BNFSTX-ITMNUM.
      WA_IMPOSTO-OTHBAS     = WA_J_1BNFSTX-OTHBAS.
      WA_IMPOSTO-RATE       = WA_J_1BNFSTX-RATE.
      WA_IMPOSTO-TAXTYP     = WA_J_1BNFSTX-TAXTYP.
      WA_IMPOSTO-TAXVAL     = WA_J_1BNFSTX-TAXVAL.

      APPEND WA_IMPOSTO TO WA_ITEM-IMPOSTOS.

      CLEAR: WA_J_1BNFSTX.
    ENDLOOP.

    APPEND WA_ITEM TO FISCAL-ITENS.

  ENDLOOP.

  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""  Seleção dos Dados

  IF PXSTRING EQ ABAP_TRUE.
    CONCATENATE 'PDF_DocFiscal' PDOCNUM INTO DATA(NM_INSTANCE).
    TRY.
        DATA(HANDLE) = ZCL_MEMORY_VARIAVEIS_AREA=>ATTACH_FOR_READ( INST_NAME = CONV #( NM_INSTANCE ) ).
        DATA(CK_INSTANCE) = ABAP_TRUE.
        HANDLE->DETACH( ).
      CATCH CX_SHM_ATTACH_ERROR.
        CK_INSTANCE = ABAP_FALSE.
    ENDTRY.

    IF CK_INSTANCE EQ ABAP_TRUE.
      LC_CONTROL_PARAMETERS-GETOTF  = 'X'.
      LC_CONTROL_PARAMETERS-NO_DIALOG = 'X'.
      LC_CONTROL_PARAMETERS-PREVIEW = SPACE.
      LC_CONTROL_PARAMETERS-DEVICE  = 'PRINTER'.
    ENDIF.
  ENDIF.

  CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
    EXPORTING
      FORMNAME           = V_FORMNAME
    IMPORTING
      FM_NAME            = V_NAME
    EXCEPTIONS
      NO_FORM            = 1
      NO_FUNCTION_MODULE = 2
      OTHERS             = 3.

  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  IF PXSTRING EQ ABAP_TRUE.

    CALL FUNCTION V_NAME
      EXPORTING
        CONTROL_PARAMETERS = LC_CONTROL_PARAMETERS
        WA_FISCAL          = FISCAL
      IMPORTING
        JOB_OUTPUT_INFO    = ST_JOB_OUTPUT_INFO
      EXCEPTIONS
        FORMATTING_ERROR   = 1
        INTERNAL_ERROR     = 2
        SEND_ERROR         = 3
        USER_CANCELED      = 4
        OTHERS             = 5.

    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

    CALL FUNCTION 'CONVERT_OTF'
      EXPORTING
        FORMAT        = 'PDF'
        MAX_LINEWIDTH = 132
      IMPORTING
        BIN_FILESIZE  = BIN_FILESIZE
        BIN_FILE      = LS_PDF_STRING_X
      TABLES
        OTF           = ST_JOB_OUTPUT_INFO-OTFDATA[]
        LINES         = PDF_TAB.

    HANDLE = ZCL_MEMORY_VARIAVEIS_AREA=>ATTACH_FOR_WRITE( INST_NAME = CONV #( NM_INSTANCE ) ).
    CREATE OBJECT ROOT AREA HANDLE HANDLE.
    HANDLE->SET_ROOT( ROOT ).
    CREATE OBJECT ROOT AREA HANDLE HANDLE TYPE ZCL_MEMORY_VARIAVEIS.
    OREF ?= ROOT.
    OREF->SET_TEXTO_XSTRING( I_XSTRING = LS_PDF_STRING_X
       )->SET_TEXTO_OTF( I_OTF = ST_JOB_OUTPUT_INFO-OTFDATA
       ).
    CLEAR OREF.
    HANDLE->SET_ROOT( ROOT ).
    HANDLE->DETACH_COMMIT( ).
    LEAVE PROGRAM.

  ELSE.

*    LC_CONTROL_PARAMETERS-GETOTF  = 'X'.
*    LC_CONTROL_PARAMETERS-NO_DIALOG = 'X'.
*    LC_CONTROL_PARAMETERS-PREVIEW = SPACE.
*    LC_CONTROL_PARAMETERS-DEVICE  = 'PRINTER'.

    CALL FUNCTION V_NAME
      EXPORTING
        CONTROL_PARAMETERS = LC_CONTROL_PARAMETERS
        WA_FISCAL          = FISCAL
      IMPORTING
        JOB_OUTPUT_INFO    = ST_JOB_OUTPUT_INFO
        WA_FISCAL          = FISCAL
      EXCEPTIONS
        FORMATTING_ERROR   = 1
        INTERNAL_ERROR     = 2
        SEND_ERROR         = 3
        USER_CANCELED      = 4
        OTHERS             = 5.

    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 DISPLAY LIKE 'E'.
      EXIT.
    ENDIF.

  ENDIF.
