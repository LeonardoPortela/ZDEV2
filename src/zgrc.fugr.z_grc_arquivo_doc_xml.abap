FUNCTION Z_GRC_ARQUIVO_DOC_XML.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_DOCNUM) TYPE  J_1BDOCNUM OPTIONAL
*"     REFERENCE(I_CHAVE) TYPE  STRING OPTIONAL
*"     REFERENCE(I_TIPO) TYPE  STRING DEFAULT 'XML'
*"  EXPORTING
*"     REFERENCE(OUT) TYPE  XSTRING
*"     REFERENCE(E_NAME) TYPE  STRING
*"  RAISING
*"      ZCX_DOC_ELETRONICO
*"----------------------------------------------------------------------

  DATA: WA_ACTIVE TYPE J_1BNFE_ACTIVE.

  IF I_DOCNUM IS NOT INITIAL.
    SELECT SINGLE * INTO @DATA(WA_J_1BNFE_ACTIVE)
      FROM J_1BNFE_ACTIVE
     WHERE DOCNUM EQ @I_DOCNUM.

    IF SY-SUBRC IS NOT INITIAL.
      RAISE EXCEPTION TYPE ZCX_DOC_ELETRONICO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGID MSGNO = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGNO ATTR1 = CONV #( I_DOCNUM ) )
          MSGID  = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGID
          MSGNO  = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGNO
          MSGV1  = CONV #( I_DOCNUM )
          MSGTY  = 'E'.
    ENDIF.

  ELSEIF I_CHAVE IS NOT INITIAL.

    DATA: P_CHAVE TYPE ZDE_CHAVE_NFE.
    P_CHAVE = I_CHAVE.
    WA_ACTIVE-REGIO     = P_CHAVE(2).
    WA_ACTIVE-NFYEAR    = P_CHAVE+2(2).
    WA_ACTIVE-NFMONTH   = P_CHAVE+4(2).
    WA_ACTIVE-STCD1     = P_CHAVE+6(14).
    WA_ACTIVE-MODEL     = P_CHAVE+20(2).
    WA_ACTIVE-SERIE     = P_CHAVE+22(3).
    WA_ACTIVE-NFNUM9    = P_CHAVE+25(9).
    WA_ACTIVE-DOCNUM9   = P_CHAVE+34(9).
    WA_ACTIVE-CDV       = P_CHAVE+43(1).

    SELECT SINGLE * INTO @WA_J_1BNFE_ACTIVE
      FROM J_1BNFE_ACTIVE AS A
     WHERE REGIO    EQ @WA_ACTIVE-REGIO
       AND NFYEAR   EQ @WA_ACTIVE-NFYEAR
       AND NFMONTH  EQ @WA_ACTIVE-NFMONTH
       AND STCD1    EQ @WA_ACTIVE-STCD1
       AND MODEL    EQ @WA_ACTIVE-MODEL
       AND SERIE    EQ @WA_ACTIVE-SERIE
       AND NFNUM9   EQ @WA_ACTIVE-NFNUM9
       AND DOCNUM9  EQ @WA_ACTIVE-DOCNUM9
       AND CDV      EQ @WA_ACTIVE-CDV
       AND CANCEL   NE @ABAP_TRUE
       AND FORM     NE @SPACE
       AND NOT EXISTS ( SELECT * FROM J_1BNFDOC AS D WHERE D~DOCNUM EQ A~DOCNUM AND D~CANCEL EQ @ABAP_TRUE ).

    IF SY-SUBRC IS NOT INITIAL.
      RAISE EXCEPTION TYPE ZCX_DOC_ELETRONICO
        EXPORTING
          TEXTID = VALUE #( MSGID = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGID MSGNO = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGNO ATTR1 = CONV #( P_CHAVE ) )
          MSGID  = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGID
          MSGNO  = ZCX_DOC_ELETRONICO=>ZCX_DOC_CABE_NAO_ENC-MSGNO
          MSGV1  = CONV #( P_CHAVE )
          MSGTY  = 'E'.
    ENDIF.

  ENDIF.

  DATA: T_XML      TYPE  DCXMLLINES,
        OUT_BINPDF TYPE  XSTRING,
        OUT_BINXML TYPE  XSTRING.

  CALL FUNCTION 'ZFSD_BUSCA_DANFE'
    EXPORTING
      I_DOCNUM   = WA_J_1BNFE_ACTIVE-DOCNUM
      I_TIPO     = I_TIPO
    IMPORTING
      T_XML      = T_XML
      OUT_BINPDF = OUT_BINPDF
      OUT_BINXML = OUT_BINXML.

  DATA(LC_CHAVE) = WA_J_1BNFE_ACTIVE-REGIO  &&
                   WA_J_1BNFE_ACTIVE-NFYEAR &&
                   WA_J_1BNFE_ACTIVE-NFMONTH &&
                   WA_J_1BNFE_ACTIVE-STCD1  &&
                   WA_J_1BNFE_ACTIVE-MODEL  &&
                   WA_J_1BNFE_ACTIVE-SERIE  &&
                   WA_J_1BNFE_ACTIVE-NFNUM9 &&
                   WA_J_1BNFE_ACTIVE-DOCNUM9 &&
                   WA_J_1BNFE_ACTIVE-CDV.

  CASE I_TIPO.
    WHEN 'PDF'.
      OUT = OUT_BINPDF.
      E_NAME = ZCL_STRING=>CONCAT( EXPORTING S1 = 'Danfe' S2 = lc_chave SP = '-' ).
      E_NAME = ZCL_STRING=>CONCAT( EXPORTING S1 = E_NAME S2 = 'pdf' SP = '.' ).
    WHEN 'XML'.
      OUT = OUT_BINXML.
      E_NAME = ZCL_STRING=>CONCAT( EXPORTING S1 = 'NFeXML' S2 = lc_chave SP = '-' ).
      E_NAME = ZCL_STRING=>CONCAT( EXPORTING S1 = E_NAME S2 = 'xml' SP = '.' ).
  ENDCASE.

ENDFUNCTION.
