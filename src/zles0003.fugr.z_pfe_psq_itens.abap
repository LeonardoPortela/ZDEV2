FUNCTION Z_PFE_PSQ_ITENS.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(P_LOTE_ALV) TYPE  ZPFE_LOTE_ALV OPTIONAL
*"     REFERENCE(P_PESQUISAR) TYPE  CHAR01 DEFAULT 'X'
*"     REFERENCE(PLOTE) TYPE  LXHME_RANGE_C10_T OPTIONAL
*"     REFERENCE(PCONTRA) TYPE  LXHME_RANGE_C12_T OPTIONAL
*"     REFERENCE(PTRANS) TYPE  LXHME_RANGE_C10_T OPTIONAL
*"     REFERENCE(PDACTE) TYPE  ZRANGE_C9_TT OPTIONAL
*"     REFERENCE(PBAIXA) TYPE  LXHME_RANGE_DATE_T OPTIONAL
*"     REFERENCE(PDTPOS) TYPE  LXHME_RANGE_DATE_T OPTIONAL
*"  TABLES
*"      P_ITENS STRUCTURE  ZPFE_LOTE_ITEM OPTIONAL
*"      P_ITENS_ALV STRUCTURE  ZPFE_LOTE_ITEM_ALV OPTIONAL
*"  EXCEPTIONS
*"      SEM_ITENS
*"----------------------------------------------------------------------

  DATA: WA_ITENS         TYPE ZPFE_LOTE_ITEM,
        WA_ITENS_ALV     TYPE ZPFE_LOTE_ITEM_ALV,
        WA_ITENS_ALV_AUX TYPE ZPFE_LOTE_ITEM_ALV,
        IT_ZLEST0025     TYPE TABLE OF ZLEST0025 WITH HEADER LINE,
        IT_ZPFE_CHVID_AG TYPE TABLE OF ZPFE_CHVID_AG WITH HEADER LINE,
        WA_ZLEST0025     TYPE ZLEST0025,
        IT_VTPA          TYPE TABLE OF VTPA WITH HEADER LINE,
        WA_VTPA          TYPE VTPA.

  IF NOT P_PESQUISAR IS INITIAL.


    IF NOT ( PCONTRA[] IS INITIAL ) OR ( NOT PDACTE[] IS INITIAL ) OR ( NOT PBAIXA[] IS INITIAL )
       OR  ( PLOTE[] IS NOT INITIAL ).

      SELECT * INTO TABLE P_ITENS
        FROM ZPFE_LOTE_ITEM
      WHERE NUCONTRATO IN PCONTRA
        AND NM_LOTE    IN PLOTE
        AND TKNUM      IN PTRANS
        AND CTENUM     IN PDACTE
        AND DT_BAIXA   IN PBAIXA.

    ELSEIF NOT ( PTRANS[] IS INITIAL ).

      " Parceiro de transporte
      SELECT * INTO TABLE IT_VTPA
        FROM VTPA
      WHERE LIFNR IN PTRANS
        AND PARVW EQ 'PV'.

      CHECK NOT IT_VTPA[] IS INITIAL.

      SELECT * INTO TABLE P_ITENS
        FROM ZPFE_LOTE_ITEM
        FOR ALL ENTRIES IN IT_VTPA
      WHERE TKNUM       EQ IT_VTPA-VBELN
        AND NUCONTRATO IN PCONTRA
        AND CTENUM     IN PDACTE
        AND DT_BAIXA   IN PBAIXA.

    ELSE.

      SELECT * INTO TABLE P_ITENS
        FROM ZPFE_LOTE_ITEM
       WHERE NM_LOTE EQ P_LOTE_ALV-NM_LOTE.

      IF NOT SY-SUBRC IS INITIAL.
        MESSAGE E012 WITH P_LOTE_ALV-NM_LOTE RAISING SEM_ITENS.
      ENDIF.

    ENDIF.

  ENDIF.

  SELECT * INTO TABLE IT_ZLEST0025
    FROM ZLEST0025
     FOR ALL ENTRIES IN P_ITENS
   WHERE CHVID EQ P_ITENS-CHVID.

  SELECT * INTO TABLE IT_ZPFE_CHVID_AG
    FROM ZPFE_CHVID_AG
     FOR ALL ENTRIES IN IT_ZLEST0025
    WHERE CHVID_CH_VINC EQ IT_ZLEST0025-CHVID.

  SORT IT_ZLEST0025 BY CHVID.
  DELETE ADJACENT DUPLICATES FROM IT_ZLEST0025 COMPARING CHVID.

  LOOP AT P_ITENS INTO WA_ITENS.
    IF  WA_ITENS-VL_AJUS_ADM IS INITIAL.

      CLEAR: WA_ITENS_ALV.
      MOVE-CORRESPONDING WA_ITENS TO WA_ITENS_ALV.

      READ TABLE IT_ZLEST0025 INTO WA_ZLEST0025 WITH KEY CHVID = WA_ITENS_ALV-CHVID.
      IF SY-SUBRC IS INITIAL.
        WA_ITENS_ALV-DESCHVID = WA_ZLEST0025-DESCHVID.
      ENDIF.

      CASE WA_ITENS_ALV-STATUS.
        WHEN 'I'.
          WA_ITENS_ALV-ICOSTATUS = ICON_WARNING.
        WHEN 'G'.
          WA_ITENS_ALV-ICOSTATUS = ICON_ACTIVITY.
          WA_ITENS_ALV-ROWCOLOR = 'C110'.
        WHEN 'E'.
          WA_ITENS_ALV-ICOSTATUS = ICON_DEFECT.
          WA_ITENS_ALV-ROWCOLOR = 'C610'.
        WHEN 'C'.
          WA_ITENS_ALV-ICOSTATUS = ICON_COMPLETE.
          WA_ITENS_ALV-ROWCOLOR = 'C510'.
      ENDCASE.

      READ TABLE IT_ZPFE_CHVID_AG WITH KEY CHVID_CH_VINC = WA_ITENS_ALV-CHVID.
      IF SY-SUBRC IS INITIAL.
        IF WA_ITENS_ALV-STATUS EQ 'E'.
          WA_ITENS_ALV-ROWCOLOR = 'C601'.
        ELSEIF WA_ITENS_ALV-STATUS EQ 'C'.
          WA_ITENS_ALV-ROWCOLOR = 'C501'.
        ELSEIF WA_ITENS_ALV-STATUS EQ 'G'.
          WA_ITENS_ALV-ROWCOLOR = 'C101'.
        ELSE.
          WA_ITENS_ALV-ROWCOLOR = 'C000'.
        ENDIF.
      ENDIF.

      IF WA_ITENS_ALV-NM_LOTE_OR IS NOT INITIAL.
        WA_ITENS_ALV-ROWCOLOR = 'C511'.
      ENDIF.

      WA_ITENS_ALV-ROWCOLOR_ATUAL = WA_ITENS_ALV-ROWCOLOR.

      IF NOT P_PESQUISAR IS INITIAL.
        APPEND WA_ITENS_ALV TO P_ITENS_ALV.
      ELSE.
        READ TABLE P_ITENS_ALV INTO WA_ITENS_ALV_AUX WITH KEY NM_LOTE      = WA_ITENS-NM_LOTE
                                                              NM_LOTE_ITEM = WA_ITENS-NM_LOTE_ITEM.
        IF SY-SUBRC IS INITIAL.
          IF P_PESQUISAR IS INITIAL.
            WA_ITENS_ALV-CK_CONFERIDO = WA_ITENS_ALV_AUX-CK_CONFERIDO.
          ENDIF.
          MOVE-CORRESPONDING WA_ITENS_ALV TO WA_ITENS_ALV_AUX.
          MODIFY P_ITENS_ALV INDEX SY-TABIX FROM WA_ITENS_ALV_AUX.
        ELSE.
          APPEND WA_ITENS_ALV TO P_ITENS_ALV.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFUNCTION.
