*&---------------------------------------------------------------------*
*& Report  ZJOB0003
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZJOB0003.

TYPES: BEGIN OF TY_INDEX,
        SAIDA_ID    TYPE I,
        SAIDA_INDEX TYPE I,
       END OF TY_INDEX.

DATA:  G_CUSTOM_CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       DG_SPLITTER_1      TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
       DG_PARENT_1        TYPE REF TO CL_GUI_CONTAINER,
       DG_SPLITTER_2      TYPE REF TO CL_GUI_SPLITTER_CONTAINER,
       DG_PARENT_2        TYPE REF TO CL_GUI_CONTAINER,
       DG_PARENT_2A       TYPE REF TO CL_GUI_CONTAINER,
       DG_PARENT_ALV      TYPE REF TO CL_GUI_CONTAINER,
       PICTURE            TYPE REF TO CL_GUI_PICTURE,
       CTL_ALV            TYPE REF TO CL_GUI_ALV_GRID,
       DG_DYNDOC_ID       TYPE REF TO CL_DD_DOCUMENT,
       TABLE_ELEMENT      TYPE REF TO CL_DD_TABLE_ELEMENT,
       COLUMN             TYPE REF TO CL_DD_AREA,
       TABLE_ELEMENT2     TYPE REF TO CL_DD_TABLE_ELEMENT,
       COLUMN_1           TYPE REF TO CL_DD_AREA,
       COLUMN_2           TYPE REF TO CL_DD_AREA,
       DG_HTML_CNTRL      TYPE REF TO CL_GUI_HTML_VIEWER,
       GS_LAYOUT          TYPE LVC_S_LAYO,
       GS_VARIANT         TYPE DISVARIANT,
       IT_FIELDCATALOG    TYPE LVC_T_FCAT,
       CK_CONFIRMADO      TYPE CHAR01,
       VG_ACAO            TYPE CHAR20,
       TL_TLINES          LIKE TLINE OCCURS 0 WITH HEADER LINE,

       IT_SAIDA_INDEX TYPE TABLE OF TY_INDEX,
       WA_SAIDA_INDEX LIKE LINE OF IT_SAIDA_INDEX,

       TG_SELECTED_ROWS TYPE LVC_T_ROW,                                  "Tabela de linhas selecionadas na alv de saída
       WG_SELECTED_ROWS TYPE LVC_S_ROW.

CONSTANTS: OK_CONFIRMAR TYPE SY-UCOMM VALUE 'CONFIRMAR'.

*---------- Definition -----------------------------------------------*
CLASS LCL_EVENT_HANDLER DEFINITION.
  PUBLIC SECTION.
    METHODS HANDLE_HOTSPOT_CLICK FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID IMPORTING E_COLUMN_ID ES_ROW_NO.
    METHODS HANDLE_DOUBLE_CLICK  FOR EVENT DOUBLE_CLICK  OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO.
ENDCLASS.                    "lcl_event_handler DEFINITION

DATA: EVENT_HANDLER      TYPE REF TO LCL_EVENT_HANDLER.
TABLES: ZDE_ZJOB0002_ALV, TBTCO, ZJOB0001, TBTCP.

DATA: IT_SAIDA      TYPE TABLE OF ZDE_ZJOB0002_ALV WITH HEADER LINE.
DATA: IT_JUSTIFICA  TYPE TABLE OF ZDE_ZJOB0002_ALV.
DATA: WA_SAIDA      LIKE LINE OF IT_SAIDA.
DATA: WA_JUSTIFICA  LIKE LINE OF IT_JUSTIFICA.
DATA: OK_CODE       TYPE SYST_UCOMM.

*/===========================================================================\*
*| Tela de Seleção                                                           |*
*/===========================================================================\*
SELECTION-SCREEN BEGIN OF BLOCK FILTROS WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS: PDTCANC  FOR TBTCO-ENDDATE      OBLIGATORY NO-EXTENSION,
                PNOMEJO  FOR TBTCO-JOBNAME      NO-EXTENSION,
                PPROGRA  FOR TBTCP-PROGNAME     NO-EXTENSION,
                PANALIS  FOR ZJOB0001-ANAL_RESP NO-EXTENSION,
                PMODULO  FOR ZJOB0001-MOD_SAP   NO-EXTENSION,
                PAREARE  FOR ZJOB0001-AREA_RESP NO-EXTENSION.
SELECTION-SCREEN END OF BLOCK FILTROS.

*---------- Implementation -------------------------------------------*
CLASS LCL_EVENT_HANDLER IMPLEMENTATION.
  METHOD HANDLE_HOTSPOT_CLICK.
    PERFORM HANDLE_HOTSPOT_CLICK USING ES_ROW_NO-ROW_ID E_COLUMN_ID-FIELDNAME.
  ENDMETHOD.                    "handle_hotspot_click

  METHOD HANDLE_DOUBLE_CLICK.
    PERFORM HANDLE_DOUBLE_CLICK USING E_ROW.
  ENDMETHOD.                    "HANDLE_DOUBLE_CLICK

ENDCLASS.                    "lcl_event_handler IMPLEMENTATION

START-OF-SELECTION.

  SELECT * INTO TABLE @DATA(IT_TBTCO)
    FROM TBTCO AS T
   WHERE ENDDATE IN @PDTCANC
     AND JOBNAME IN @PNOMEJO
     AND STATUS  EQ 'A'
     AND EXISTS ( SELECT *
                    FROM TBTCP AS P
                   WHERE P~JOBNAME  EQ T~JOBNAME
                     AND P~JOBCOUNT EQ T~JOBCOUNT
                     AND P~PROGNAME IN @PPROGRA )
     AND EXISTS ( SELECT *
                    FROM ZJOB0001 AS J
                   WHERE J~JOBNAME   EQ T~JOBNAME
                     AND J~MOD_SAP   IN @PMODULO
                     AND J~AREA_RESP IN @PAREARE
                     AND J~ANAL_RESP IN @PANALIS ).

 CHECK ( IT_TBTCO[] IS NOT INITIAL ) .

  SELECT * INTO TABLE @DATA(IT_ZJOB0001)
    FROM ZJOB0001
     FOR ALL ENTRIES IN @IT_TBTCO
   WHERE JOBNAME  EQ @IT_TBTCO-JOBNAME.

  SELECT * INTO TABLE @DATA(IT_ZJOB0002)
    FROM ZJOB0002
     FOR ALL ENTRIES IN @IT_TBTCO
   WHERE JOBNAME  EQ @IT_TBTCO-JOBNAME
     AND JOBCOUNT EQ @IT_TBTCO-JOBCOUNT.

  SORT IT_ZJOB0001 BY JOBNAME.
  SORT IT_ZJOB0002 BY JOBNAME JOBCOUNT.


  LOOP AT IT_TBTCO INTO DATA(WA_TBTCO).

    CLEAR: ZDE_ZJOB0002_ALV.
    MOVE-CORRESPONDING WA_TBTCO TO ZDE_ZJOB0002_ALV.

    READ TABLE IT_ZJOB0001 INTO DATA(WA_ZJOB0001) WITH KEY JOBNAME = WA_TBTCO-JOBNAME BINARY SEARCH.
    IF SY-SUBRC IS INITIAL.
      MOVE-CORRESPONDING WA_ZJOB0001 TO ZDE_ZJOB0002_ALV.
    ENDIF.

    READ TABLE IT_ZJOB0002 INTO DATA(WA_ZJOB0002) WITH KEY JOBNAME = WA_TBTCO-JOBNAME JOBCOUNT = WA_TBTCO-JOBCOUNT BINARY SEARCH.
    IF SY-SUBRC IS INITIAL.
      MOVE-CORRESPONDING WA_ZJOB0002 TO ZDE_ZJOB0002_ALV.
    ENDIF.

    CASE ZDE_ZJOB0002_ALV-CK_JUSTIFICADO.
      WHEN ABAP_TRUE.
        ZDE_ZJOB0002_ALV-ICO_JUSTIFICADO = ICON_RELEASE.
      WHEN ABAP_FALSE.
        ZDE_ZJOB0002_ALV-ICO_JUSTIFICADO = ICON_DEFECT.
    ENDCASE.

    APPEND ZDE_ZJOB0002_ALV TO IT_SAIDA.

    CLEAR: WA_ZJOB0001, WA_ZJOB0002.

  ENDLOOP.

  CALL SCREEN 0100.

  INCLUDE ZJOB0003_0100.

  INCLUDE ZJOB0003_0200.

*&---------------------------------------------------------------------*
*&      Form  HANDLE_HOTSPOT_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM HANDLE_HOTSPOT_CLICK
         USING VALUE(ROW_ID)    LIKE LVC_S_ROID-ROW_ID
               VALUE(FIELDNAME) LIKE LVC_S_COL-FIELDNAME.

  READ TABLE IT_SAIDA INDEX ROW_ID ASSIGNING FIELD-SYMBOL(<FS_SAIDA>).

  CASE FIELDNAME.
    WHEN 'ICO_JUSTIFICADO'.
      PERFORM JUSTIFICAR_CANCELAMENTO CHANGING <FS_SAIDA>.
      PERFORM ATUALIZA_TELA.
  ENDCASE.

ENDFORM.                    " HANDLE_HOTSPOT_CLICK*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM HANDLE_DOUBLE_CLICK  USING P_ROW TYPE LVC_S_ROW.
  DATA: LC_ROW TYPE LVC_T_ROW.

  IF P_ROW-ROWTYPE IS INITIAL.

    APPEND P_ROW TO LC_ROW.

    CALL METHOD CTL_ALV->SET_SELECTED_ROWS
      EXPORTING
        IT_INDEX_ROWS = LC_ROW.

    READ TABLE IT_SAIDA INDEX P_ROW-INDEX ASSIGNING FIELD-SYMBOL(<FS_SAIDA>).

    PERFORM JUSTIFICAR_CANCELAMENTO CHANGING <FS_SAIDA>.
    PERFORM ATUALIZA_TELA.
  ENDIF.
ENDFORM.                    " HANDLE_DOUBLE_CLICK

*&---------------------------------------------------------------------*
*&      Form  JUSTIFICAR_CANCELAMENTO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_SAIDA  text
*----------------------------------------------------------------------*
FORM JUSTIFICAR_CANCELAMENTO  CHANGING P_SAIDA TYPE ZDE_ZJOB0002_ALV.

  CK_CONFIRMADO = ABAP_FALSE.
  MOVE-CORRESPONDING P_SAIDA TO ZDE_ZJOB0002_ALV.
  CALL SCREEN 0200 STARTING AT 5 5.

  IF CK_CONFIRMADO EQ ABAP_TRUE.
    SELECT SINGLE * INTO @DATA(WA_ZJOB0002)
      FROM ZJOB0002
     WHERE JOBNAME  EQ @P_SAIDA-JOBNAME
       AND JOBCOUNT EQ @P_SAIDA-JOBCOUNT.

    IF SY-SUBRC IS NOT INITIAL.
      MOVE-CORRESPONDING P_SAIDA TO WA_ZJOB0002.
      WA_ZJOB0002-CK_JUSTIFICADO = ABAP_TRUE.
    ELSE.
      WA_ZJOB0002-CK_JUSTIFICADO = ABAP_TRUE.
    ENDIF.

    MODIFY ZJOB0002 FROM WA_ZJOB0002.
    COMMIT WORK.
    P_SAIDA-ICO_JUSTIFICADO = ICON_RELEASE.
    P_SAIDA-CK_JUSTIFICADO  = 'X'.

  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  JUSTIFICAR_CANCELAMENTO_BTN
*&---------------------------------------------------------------------*
FORM JUSTIFICAR_CANCELAMENTO_BTN .

  CK_CONFIRMADO = ABAP_FALSE.
  CLEAR WL_HEADER.
*  READ TABLE IT_JUSTIFICA INTO WA_JUSTIFICA INDEX 1.
*  MOVE-CORRESPONDING WA_JUSTIFICA TO ZDE_ZJOB0002_ALV.
  CALL SCREEN 0200 STARTING AT 5 5.

  IF CK_CONFIRMADO EQ ABAP_TRUE.
    CLEAR WA_JUSTIFICA.

    LOOP AT IT_JUSTIFICA INTO WA_JUSTIFICA.

      READ TABLE IT_SAIDA_INDEX INTO WA_SAIDA_INDEX INDEX SY-TABIX.

    SELECT SINGLE * INTO @DATA(WA_ZJOB0002)
      FROM ZJOB0002
     WHERE JOBNAME  EQ @WA_JUSTIFICA-JOBNAME
       AND JOBCOUNT EQ @WA_JUSTIFICA-JOBCOUNT.

    IF SY-SUBRC IS NOT INITIAL.
      MOVE-CORRESPONDING WA_JUSTIFICA TO WA_ZJOB0002.
      WA_ZJOB0002-CK_JUSTIFICADO = ABAP_TRUE.
    ELSE.
      WA_ZJOB0002-CK_JUSTIFICADO = ABAP_TRUE.
    ENDIF.

    WA_SAIDA-ICO_JUSTIFICADO = ICON_RELEASE.
    WA_SAIDA-CK_JUSTIFICADO  = ABAP_TRUE.

    MODIFY ZJOB0002 FROM WA_ZJOB0002.
    COMMIT WORK.

    MODIFY IT_SAIDA FROM WA_SAIDA INDEX WA_SAIDA_INDEX-SAIDA_INDEX TRANSPORTING CK_JUSTIFICADO ICO_JUSTIFICADO.

    ENDLOOP.

  ENDIF.

ENDFORM.
