FUNCTION ZSDMF007_ESTORNA_ADIANTAMENTO.
*"----------------------------------------------------------------------
*"*"Interface local:
*"  IMPORTING
*"     REFERENCE(I_TIPO) TYPE  CHAR1 DEFAULT '1'
*"  TABLES
*"      TI_NRO_SOL_OV STRUCTURE  ZSDS007
*"      TE_SAIDA_EXEC STRUCTURE  ZSDS010 OPTIONAL
*"----------------------------------------------------------------------
  DEFINE F_PREENCHER_DYNPRO.
    CLEAR: TL_BDC.
    MOVE &1 TO TL_BDC-DYNBEGIN.
    IF &1 = 'X'.
      MOVE:
       &2  TO TL_BDC-PROGRAM,
       &3  TO TL_BDC-DYNPRO.
    ELSE.
      MOVE:
        &2 TO TL_BDC-FNAM,
        &3 TO TL_BDC-FVAL.
    ENDIF.
    APPEND TL_BDC.
  END-OF-DEFINITION.
  DATA:   TL_BDC        TYPE TABLE OF BDCDATA WITH HEADER LINE,
          TL_MSG        TYPE TABLE OF BDCMSGCOLL WITH HEADER LINE,
          WL_PAR        TYPE CTU_PARAMS,
          WL_SHDBNR     TYPE ZSHDBT0001-SHDBNR,
          TL_0051       TYPE TABLE OF ZSDT0051 WITH HEADER LINE,
          TL_0053       TYPE TABLE OF ZSDT0053 WITH HEADER LINE,
          TL_0054       TYPE TABLE OF ZSDT0054 WITH HEADER LINE.

  DATA:  BEGIN OF TL_BSAD OCCURS 0,
         BUKRS TYPE BSAD-BUKRS,
         BELNR TYPE BSAD-BELNR,
         AUDGT TYPE BSAD-AUGDT,
         AUGBL TYPE BSAD-AUGBL,
        END OF TL_BSAD,

        BEGIN OF TL_0054_AUX OCCURS 0.
          INCLUDE TYPE ZSDT0054.
  DATA:    BUKRS TYPE BSAD-BUKRS,
          END OF TL_0054_AUX.


  REFRESH: TL_0054_AUX, TL_BSAD.
  DATA OPT TYPE CTU_PARAMS.

  REFRESH: TL_BDC.

  IF TI_NRO_SOL_OV[] IS NOT INITIAL.
    SELECT *
      FROM ZSDT0051
      INTO TABLE TL_0051
       FOR ALL ENTRIES IN TI_NRO_SOL_OV
        WHERE NRO_SOL_OV EQ TI_NRO_SOL_OV-NRO_SOL_OV.

    SELECT *
      FROM ZSDT0053
      INTO TABLE TL_0053
       FOR ALL ENTRIES IN TI_NRO_SOL_OV
        WHERE NRO_SOL_OV EQ TI_NRO_SOL_OV-NRO_SOL_OV
          AND POSNR      EQ TI_NRO_SOL_OV-POSNR.

    SELECT *
      FROM ZSDT0054
      INTO TABLE TL_0054
       FOR ALL ENTRIES IN TI_NRO_SOL_OV
        WHERE NRO_SOL_OV EQ TI_NRO_SOL_OV-NRO_SOL_OV
         AND POSNR       EQ TI_NRO_SOL_OV-POSNR.

    IF SY-SUBRC IS INITIAL.
      REFRESH: TL_0054_AUX.
      LOOP AT TL_0054.
        READ TABLE TL_0051
          WITH KEY NRO_SOL_OV = TL_0054-NRO_SOL_OV.

        MOVE-CORRESPONDING: TL_0054 TO TL_0054_AUX.
        MOVE: TL_0051-VKORG TO TL_0054_AUX-BUKRS.

        APPEND TL_0054_AUX.
        CLEAR:TL_0054_AUX.
      ENDLOOP.

      SELECT BUKRS BELNR AUGDT AUGBL
        FROM BSAD
        INTO TABLE TL_BSAD
         FOR ALL ENTRIES IN TL_0054_AUX
         WHERE BUKRS EQ TL_0054_AUX-BUKRS
           AND BELNR EQ TL_0054_AUX-ADIANT.

    ENDIF.
  ENDIF.

  WL_PAR-DISMODE = 'N'.
  WL_PAR-UPDMODE = 'A'.
  WL_PAR-DEFSIZE = 'X'.
  WL_PAR-RACOMMIT = 'X'.
  WL_PAR-NOBINPT = 'X'.

  LOOP AT TI_NRO_SOL_OV.

    READ TABLE TL_0051
      WITH KEY NRO_SOL_OV = TI_NRO_SOL_OV-NRO_SOL_OV.

    LOOP AT TL_0054_AUX
       WHERE NRO_SOL_OV EQ TI_NRO_SOL_OV-NRO_SOL_OV
         AND POSNR      EQ TI_NRO_SOL_OV-POSNR.

      READ TABLE TL_0053
        WITH KEY NRO_SOL_OV = TI_NRO_SOL_OV-NRO_SOL_OV
                 POSNR      = TI_NRO_SOL_OV-POSNR.

      READ TABLE TL_BSAD
        WITH KEY BUKRS = TL_0051-VKORG
                 BELNR = TL_0054_AUX-ADIANT.
      IF TL_BSAD-AUGBL IS INITIAL.
        REFRESH: TL_BDC.
*          WRITE SY-DATUM TO WL_DATA.

        F_PREENCHER_DYNPRO:
         'X' 'SAPMF05A'             '0105',
         ' ' 'RF05A-BELNS'          TL_0054_AUX-ADIANT,
         ' ' 'BKPF-BUKRS'           TL_0051-VKORG,
         ' ' 'RF05A-GJAHS'          TL_0054_AUX-DATA_ATUAL(4),
         ' ' 'UF05A-STGRD'          '01',
*         ' ' 'BSIS-BUDAT'           WL_DATA,
         ' ' 'BDC_OKCODE'           '=BU'.


        CALL FUNCTION 'ZSHDB_CRIA_EXECUTA'
          EXPORTING
            TCODE               = 'FB08'
            PARAMS              = WL_PAR
            I_CALLBACK_PROGRAM  = 'ZSDR0026'
            I_CALLBACK_FORMNAME = 'X_ESTORNA_ADIANT'
          IMPORTING
            SHDBNR              = WL_SHDBNR
          TABLES
            T_BDC               = TL_BDC.
        WAIT UP TO 1 SECONDS.
      ELSE.
        MOVE: TI_NRO_SOL_OV-NRO_SOL_OV  TO TE_SAIDA_EXEC-NRO_SOL_OV,
              TI_NRO_SOL_OV-POSNR       TO TE_SAIDA_EXEC-POSNR,
              TL_0053-ZMENG             TO TE_SAIDA_EXEC-ZMENG,
              TL_0053-VALDT             TO TE_SAIDA_EXEC-VALDT,
              TL_0053-VLRTOT            TO TE_SAIDA_EXEC-VLRTOT,
              TL_0053-VBELN             TO TE_SAIDA_EXEC-VBELN.
*              TL_0053-MSG               TO TE_SAIDA_EXEC-MSG.

        CONCATENATE 'Doc.' TL_0054-ADIANT 'já foi compensado e não pode ser estornado.' INTO TE_SAIDA_EXEC-MSG
                 SEPARATED BY SPACE.

        APPEND TE_SAIDA_EXEC.
        CLEAR TE_SAIDA_EXEC.
      ENDIF.
      CLEAR: TL_BSAD.
    ENDLOOP.
  ENDLOOP.


ENDFUNCTION.
