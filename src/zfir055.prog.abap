************************************************************************
* Responsável ...: Amaggi Exportação & Importação Ltda                 *
* Data desenv ...: 03.05.2016                                          *
* Objetivo    ...: Controle Loteamento - CIDEZAL                       *
* Transação   ...: ZFI0091                                             *
************************************************************************
* Data Modif    Autor         Descriçao      Hora           Request    *
************************************************************************
* 03.05.2016  Welgem Barbosa   Criação      09:23                      *
************************************************************************

REPORT  ZFIR055.

TABLES: ZFIT0104.

TYPES:
BEGIN OF TY_TOPO,
     LOTEAMENTO      TYPE ZFIT0099-LOTEAMENTO,
     EMPRESA         TYPE ZFIT0099-EMPRESA,
     DES_EMPRESA     TYPE BUTXT,
     NOME_LOTEAMENTO TYPE ZFIT0098-NOME_LOTEAMENTO,
     NRO_TERRENO     TYPE ZFIT0099-NRO_TERRENO,
     NRO_QUADRA      TYPE ZFIT0099-NRO_QUADRA,
END OF TY_TOPO,

BEGIN OF TY_CONTAS_RECEBER,
     EMPRESA         TYPE ZFIT0101-EMPRESA,
     TIPO            TYPE ZFIT0101-TIPO,
     COD_EV          TYPE ZFIT0101-COD_EV,
     TP_LCTO         TYPE ZFIT0101-TP_LCTO,
     NRO_PARCELA     TYPE N LENGTH 3,
     DT_VENCIMENTO   TYPE SY-DATUM,
     VALOR           TYPE DMBTR,
     DOC_CONTABIL    TYPE NUM10,
     DOC_COMPENSACAO TYPE NUM10,
     DT_LIQUIDACAO   TYPE SY-DATUM,
     LOTE            TYPE ZLOTE_NUM,
     STATUS          TYPE CHAR04,
     DOC_LCTO        TYPE NUM10,
     DT_LCTO_CTB     TYPE ZFIT0101-DT_LCTO_CTB,
     NUM_PARC_SEQ    TYPE ZFIT0101-NUM_PARC_SEQ,
     FIELD_STYLE     TYPE LVC_T_STYL,
END OF TY_CONTAS_RECEBER,

BEGIN OF TY_EVENTOS_VENDA,
     COD_EV          TYPE ZFIT0104-COD_EV,
     NOME_EVENTO     TYPE ZFIT0102-NOME_EVENTO,
     TIPO            TYPE ZFIT0102-TIPO,
     TP_LCTO         TYPE ZFIT0102-TP_LCTO,
     VALOR           TYPE ZFIT0104-VALOR,
     COND_PGTO       TYPE ZFIT0104-COND_PGTO,
     FORMA_PGTO      TYPE ZFIT0104-FORMA_PGTO,
     QTD_PARCELAS    TYPE ZFIT0104-QTD_PARCELAS,
     DATA_VENC       TYPE ZFIT0104-DATA_VENC,
     FIELD_STYLE     TYPE LVC_T_STYL,
END OF TY_EVENTOS_VENDA,

BEGIN OF TY_EDITOR,
     LINE(250),
END OF TY_EDITOR,

BEGIN OF TY_BKPF,
  BUKRS      TYPE BKPF-BUKRS,
  GJAHR      TYPE BKPF-GJAHR,
  AWKEY      TYPE BKPF-AWKEY,
  BELNR      TYPE BKPF-BELNR,
END OF TY_BKPF,

BEGIN OF TY_BSID,
  BUKRS       TYPE BSID-BUKRS,
  BELNR       TYPE BSID-BELNR,
  GJAHR       TYPE BSID-GJAHR,
  DMBTR       TYPE BSID-DMBTR,
  ZBD1T       TYPE BSID-ZBD1T,
  ZFBDT       TYPE BSID-ZFBDT,
  GSBER       TYPE BSID-GSBER,
  HBKID       TYPE BSID-HBKID,
  KUNNR       TYPE BSID-KUNNR,
  LIFNR_E     TYPE LFA1-LIFNR,
  LIFNR_F     TYPE LFA1-LIFNR,
END OF TY_BSID,

BEGIN OF TY_ZFIT0048,
  BUKRS         TYPE ZFIT0048-BUKRS,
  WERKS         TYPE ZFIT0048-WERKS,
  KUNNR         TYPE ZFIT0048-KUNNR,
  TXT_INSTRUCAO TYPE ZFIT0048-TXT_INSTRUCAO,
END OF TY_ZFIT0048,

BEGIN OF TY_T045T,
  BUKRS        TYPE T045T-BUKRS,
  HBKID        TYPE T045T-HBKID,
  DTAID        TYPE T045T-DTAID,
END OF TY_T045T,

BEGIN OF TY_T012K,
  BUKRS       TYPE T012K-BUKRS,
  HBKID       TYPE T012K-HBKID,
  BANKN       TYPE T012K-BANKN,
  BKONT       TYPE T012K-BKONT,
END OF TY_T012K,

BEGIN OF TY_T012,
  BUKRS       TYPE T012-BUKRS,
  HBKID       TYPE T012-HBKID,
  BANKL       TYPE T012-BANKL,
END OF TY_T012,

BEGIN OF TY_LFA1,
  LIFNR      TYPE LFA1-LIFNR,
  NAME1      TYPE LFA1-NAME1,
  STRAS      TYPE LFA1-STRAS,
  ORT02      TYPE LFA1-ORT02,
  PSTLZ      TYPE LFA1-PSTLZ,
  ORT01      TYPE LFA1-ORT01,
  REGIO      TYPE LFA1-REGIO,
  STCD1      TYPE LFA1-STCD1,
END OF TY_LFA1,

BEGIN OF TY_KNA1,
  KUNNR      TYPE KNA1-KUNNR,
  NAME1      TYPE KNA1-NAME1,
  STRAS      TYPE KNA1-STRAS,
  ORT02      TYPE KNA1-ORT02,
  PSTLZ      TYPE KNA1-PSTLZ,
  ORT01      TYPE KNA1-ORT01,
  REGIO      TYPE KNA1-REGIO,
  STCD1      TYPE KNA1-STCD1,
END OF TY_KNA1,

BEGIN OF TY_SAIDA,
  XENAME1       TYPE LFA1-NAME1,
  DTAID         TYPE T045T-DTAID,
  XESTRAS       TYPE LFA1-STRAS,
  XEORT02       TYPE LFA1-ORT02,
  XEORT01       TYPE LFA1-ORT01,
  XEREGIO       TYPE LFA1-REGIO,
  XEPSTLZ       TYPE LFA1-PSTLZ,
  NFENUM        TYPE J_1BNFDOC-NFENUM,
  REFKEY        TYPE J_1BNFLIN-REFKEY,
  XESTCD1       TYPE LFA1-STCD1,
  ZBD1T         TYPE BSID-ZFBDT,
  DMBTR         TYPE BSID-DMBTR,
  NAME1         TYPE KNA1-NAME1,
  STCD1         TYPE KNA1-STCD1,
  TXT_INSTRUCAO TYPE ZFIT0048-TXT_INSTRUCAO,
  DATA_SIST     TYPE SY-DATUM,
  BANKL         TYPE T012-BANKL,
  BANKN         TYPE T012K-BANKN,
  BKONT         TYPE T012K-BKONT,
  STRAS         TYPE KNA1-STRAS,
  ORT01         TYPE KNA1-ORT01,
  REGIO         TYPE KNA1-REGIO ,
  PSTLZ         TYPE KNA1-PSTLZ,
  XFNAME1       TYPE LFA1-NAME1,
  XFSTCD1       TYPE LFA1-STCD1,
  VAR_COD_BARRAS_FIM(44),
  VAR_LINHA_DIG(54),
END OF TY_SAIDA,

BEGIN OF TY_TERRENO.
        INCLUDE TYPE ZFIT0099.
TYPES END OF TY_TERRENO.

CONSTANTS:
BEGIN OF C_TAB_STRIP,
     TAB0 LIKE SY-UCOMM VALUE 'TAB_T',
     TAB1 LIKE SY-UCOMM VALUE 'TAB_V',
     TAB2 LIKE SY-UCOMM VALUE 'TAB_CR',
END OF C_TAB_STRIP.

CONTROLS: TAB_LOTEAMENTO TYPE TABSTRIP.

DATA: BEGIN OF G_TAB_STRIP,
        SUBSCREEN   LIKE SY-DYNNR,
        PROG        LIKE SY-REPID VALUE 'ZFIR055',
        PRESSED_TAB LIKE SY-UCOMM VALUE C_TAB_STRIP-TAB0,
      END OF G_TAB_STRIP.

DATA: IT_TERRENO  TYPE TABLE OF TY_TERRENO,
      WA_TERRENO  TYPE TY_TERRENO,
      WA_VENDA    TYPE ZFIT0100,
      WA_VENDA1    TYPE ZFIT0100,
      WA_KNA1     TYPE KNA1,
      VG_DESC_CLIENTE TYPE KNA1-NAME1,
      WA_TOPO     TYPE TY_TOPO,
      WA_ZFIT0099 TYPE ZFIT0099,
      IT_ZFIT0101 TYPE TABLE OF ZFIT0101,
      WA_ZFIT0101 TYPE ZFIT0101,
      WA_ZFIT0101_AUX TYPE ZFIT0101,
      WA_BSAD     TYPE BSAD,
      IT_ZFIT0102 TYPE TABLE OF ZFIT0102,
      WA_ZFIT0102 TYPE ZFIT0102,
      IT_ZFIT0103 TYPE TABLE OF ZFIT0103,
      WA_ZFIT0103 TYPE ZFIT0103,
      IT_ZFIT0104 TYPE TABLE OF ZFIT0104,
      WA_ZFIT0104 TYPE ZFIT0104,
      IT_CR       TYPE TABLE OF TY_CONTAS_RECEBER,
      WA_CR       TYPE TY_CONTAS_RECEBER,
      IT_CR_AUX   TYPE TABLE OF TY_CONTAS_RECEBER,
      WA_CR_AUX   TYPE TY_CONTAS_RECEBER,
      IT_EVENTOS_VENDA TYPE TABLE OF TY_EVENTOS_VENDA,
      WA_EVENTOS_VENDA TYPE TY_EVENTOS_VENDA,
      SC_TERRENO  TYPE SY-DYNNR VALUE '0101', "TERRENO
      SC_VENDA    TYPE SY-DYNNR VALUE '0102', "VENDA
      SC_C_R      TYPE SY-DYNNR VALUE '0104', "CONTAS A RECEBER
      GT_EDITOR   TYPE TABLE OF TY_EDITOR,
      GS_EDITOR   TYPE TY_EDITOR.

DATA: ACAO TYPE SY-UCOMM,
      OBJ_CUSTOM_TXT      TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      OBJ_CUSTOM_EDITOR   TYPE REF TO CL_GUI_TEXTEDIT,
      GD_MODE             TYPE I  VALUE CL_GUI_TEXTEDIT=>TRUE,
      WA_CONT             TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      WA_ALV              TYPE REF TO CL_GUI_ALV_GRID,
      OBJ_CONT_EV_VENDA   TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      OBJ_ALV_EV_VENDA    TYPE REF TO CL_GUI_ALV_GRID,
      IT_SEL_ROWS         TYPE LVC_T_ROW,
      WA_SEL_ROWS         TYPE LVC_S_ROW,
      WA_STABLE           TYPE LVC_S_STBL,
      WA_LAYOUT           TYPE LVC_S_LAYO,
      WA_VARIANTE         TYPE DISVARIANT,
      IT_FCAT             TYPE LVC_T_FCAT,
      WA_FCAT             TYPE LVC_S_FCAT,
      IT_DTA              TYPE STANDARD TABLE OF BDCDATA WITH HEADER LINE,
      WA_DTA              TYPE BDCDATA.

"PDF
DATA: I_OTF TYPE ITCOO OCCURS 0 WITH HEADER LINE,
      I_TLINE TYPE TABLE OF TLINE WITH HEADER LINE,
      V_BIN_FILESIZE TYPE I,
      I_RECORD LIKE SOLISTI1 OCCURS 0 WITH HEADER LINE,
      WA_BUFFER TYPE STRING. "To convert from 132 to 255

DATA: WL_BKTXT(30), WL_DATA(10),WL_VALOR(16),
      WG_BDC        TYPE BDCDATA,
      TG_BDC        TYPE TABLE OF BDCDATA,
      TG_MSG        TYPE TABLE OF BDCMSGCOLL WITH HEADER LINE,
      WG_MSG        TYPE BDCMSGCOLL,
      OPT           TYPE CTU_PARAMS.

DATA: IT_EXCLUDE_FCODE TYPE UI_FUNCTIONS,
      WA_EXCLUDE_FCODE LIKE LINE OF IT_EXCLUDE_FCODE.

DATA: GT_F4  TYPE LVC_T_F4 WITH HEADER LINE.

CLASS: LCL_ALV_TOOLBAR         DEFINITION DEFERRED,
       LCL_ALV_TOOLBAR_EVENTOS DEFINITION DEFERRED,
       ZCL_LOTEAMENTO          DEFINITION DEFERRED,
       LCL_EVENT_HANDLER       DEFINITION DEFERRED.


DATA: C_ALV_TOOLBARMANAGER TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      OBJ_TOOLBAR          TYPE REF TO LCL_ALV_TOOLBAR,
      C_ALV_TOOLBARMANAGER_EV TYPE REF TO CL_ALV_GRID_TOOLBAR_MANAGER,
      OBJ_TOOLBAR_EVENTOS     TYPE REF TO LCL_ALV_TOOLBAR_EVENTOS,
      OBJ_LOTEAMENTO       TYPE REF TO ZCL_LOTEAMENTO,
      GR_EVENT_HANDLER     TYPE REF TO LCL_EVENT_HANDLER,
      TY_TOOLBAR           TYPE STB_BUTTON,
      WL_DESACTIVE.

 DATA: VG_MODIFY_PARC TYPE C.

INITIALIZATION.

CALL SCREEN 0100.

INCLUDE ZFIR055_CLASS.
INCLUDE ZFIR055_FORM.


*&      Module  PBO  OUTPUT
MODULE PBO OUTPUT.
  CREATE OBJECT OBJ_LOTEAMENTO.

  OBJ_LOTEAMENTO->LOOP_SCREEN( ).

  SET PF-STATUS 'PF0101'.
  SET TITLEBAR 'T0101'.

ENDMODULE.                 " PBO  OUTPUT

*&      Module  PAI  INPUT
MODULE PAI INPUT.

  CASE SY-UCOMM.
    WHEN 'BACK'.
      LEAVE PROGRAM.
    WHEN 'SEARCH'.
      OBJ_LOTEAMENTO->BUSCA_CAMPOS( ).
    WHEN 'SEA'.
      MOVE SY-UCOMM TO ACAO.
      OBJ_LOTEAMENTO->BUSCA_DADOS( ).
      OBJ_LOTEAMENTO->BUSCA_CAMPOS( ).
      OBJ_LOTEAMENTO->ATUALIZA_VENDA( ).
    WHEN 'NEW'.
      MOVE SY-UCOMM TO ACAO.
      G_TAB_STRIP-PRESSED_TAB = C_TAB_STRIP-TAB0.
      OBJ_LOTEAMENTO->LOOP_SCREEN( ).
      OBJ_LOTEAMENTO->INSERE_DADOS( ).
    WHEN 'VIEW'.
      PERFORM LIMPA_DADOS.
      MOVE SY-UCOMM TO ACAO.
      G_TAB_STRIP-PRESSED_TAB = C_TAB_STRIP-TAB0.
      OBJ_LOTEAMENTO->LOOP_SCREEN( ).
    WHEN 'EDI'.
      CHECK WA_TERRENO IS NOT INITIAL.
      MOVE SY-UCOMM TO ACAO.
      OBJ_LOTEAMENTO->LOOP_SCREEN( ).
      OBJ_LOTEAMENTO->ATUALIZA_DADOS( ).
    WHEN 'DEL'.
      CHECK WA_TERRENO IS NOT INITIAL.
      MOVE SY-UCOMM TO ACAO.
      OBJ_LOTEAMENTO->DELETA_DADOS( ).
    WHEN 'SAVE'.
      OBJ_LOTEAMENTO->SALVAR_DADOS( ).
    WHEN 'GERA_DOC'.
      "OBJ_LOTEAMENTO->GERAR_DOCUMENTOS( ).
    WHEN 'PSQ_QD'.

      CHECK ACAO EQ 'VIEW'.

      PERFORM SEARCH_QUADRA.
    WHEN 'CONFIRM'.

      CASE ACAO.
        WHEN 'VIEW'.

          IF WA_TOPO-NRO_QUADRA IS INITIAL.
            MESSAGE 'Informe o número da Quadra!' TYPE 'S'.
            EXIT.
          ENDIF.

          IF WA_TOPO-NRO_TERRENO IS INITIAL.
            MESSAGE 'Informe o número do Terreno!' TYPE 'S'.
            EXIT.
          ENDIF.

          MOVE SY-UCOMM TO ACAO.
          OBJ_LOTEAMENTO->BUSCA_DADOS( ).
          OBJ_LOTEAMENTO->BUSCA_CAMPOS( ).
          OBJ_LOTEAMENTO->ATUALIZA_VENDA( ).
        WHEN 'NEW' OR 'EDI'.
          OBJ_LOTEAMENTO->BUSCA_CAMPOS( ).

      ENDCASE.

  ENDCASE.

ENDMODULE.                 " PAI  INPUT

*&      Module  TAB_ACTIVE_SET  OUTPUT
MODULE TAB_ACTIVE_SET OUTPUT.

  TAB_LOTEAMENTO-ACTIVETAB = G_TAB_STRIP-PRESSED_TAB.

  CASE G_TAB_STRIP-PRESSED_TAB.
    WHEN C_TAB_STRIP-TAB0. G_TAB_STRIP-SUBSCREEN = SC_TERRENO.
    WHEN C_TAB_STRIP-TAB1. G_TAB_STRIP-SUBSCREEN = SC_VENDA.
    WHEN C_TAB_STRIP-TAB2. G_TAB_STRIP-SUBSCREEN = SC_C_R.
  ENDCASE.

ENDMODULE.                 " TAB_ACTIVE_SET  OUTPUT

*&      Module  TAB_ACTIVE_GET  INPUT
MODULE TAB_ACTIVE_GET INPUT.

  CASE SY-UCOMM.
    WHEN C_TAB_STRIP-TAB0.
       G_TAB_STRIP-PRESSED_TAB = C_TAB_STRIP-TAB0.
    WHEN C_TAB_STRIP-TAB1.
       IF ( WA_TERRENO-EMPRESA IS INITIAL ).
         MESSAGE 'Nenhum Terreno selecionado!' TYPE 'S'.
         RETURN.
       ENDIF.

       G_TAB_STRIP-PRESSED_TAB = C_TAB_STRIP-TAB1.
    WHEN C_TAB_STRIP-TAB2.
      IF ( WA_TERRENO-EMPRESA IS INITIAL ).
         MESSAGE 'Nenhum Terreno selecionado!' TYPE 'S'.
         RETURN.
       ENDIF.

       G_TAB_STRIP-PRESSED_TAB = C_TAB_STRIP-TAB2.
  ENDCASE.

ENDMODULE.                 " TAB_ACTIVE_GET  INPUT

*&      Module  BLOCK_SCREEN  OUTPUT
MODULE BLOCK_SCREEN OUTPUT.

  OBJ_LOTEAMENTO->LOOP_SCREEN( ).
  "OBJ_LOTEAMENTO->BLOCK_CAMPOS( ).
ENDMODULE.                 " BLOCK_SCREEN  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  CX_OBS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE CX_OBS OUTPUT.

  FREE: GT_EDITOR.

  IF NOT OBJ_CUSTOM_TXT IS INITIAL AND NOT OBJ_CUSTOM_EDITOR IS INITIAL.
    CALL METHOD OBJ_CUSTOM_TXT->FREE( ).
    CALL METHOD OBJ_CUSTOM_EDITOR->FREE( ).
  ENDIF.

  CREATE OBJECT: OBJ_CUSTOM_TXT    EXPORTING CONTAINER_NAME = 'C_CAIXA',
                 OBJ_CUSTOM_EDITOR EXPORTING PARENT         = OBJ_CUSTOM_TXT.

  CALL METHOD OBJ_CUSTOM_EDITOR->SET_TOOLBAR_MODE( TOOLBAR_MODE = OBJ_CUSTOM_EDITOR->FALSE ).
  CALL METHOD OBJ_CUSTOM_EDITOR->SET_STATUSBAR_MODE( STATUSBAR_MODE = OBJ_CUSTOM_EDITOR->FALSE ).

  CASE ACAO.
    WHEN 'NEW' OR 'EDI'.

      IF ACAO EQ 'EDI' AND WA_TERRENO IS INITIAL.
        CALL METHOD OBJ_CUSTOM_EDITOR->SET_READONLY_MODE( READONLY_MODE = OBJ_CUSTOM_EDITOR->TRUE ).
      ELSE.
        CALL METHOD OBJ_CUSTOM_EDITOR->SET_READONLY_MODE( READONLY_MODE = OBJ_CUSTOM_EDITOR->FALSE ).
      ENDIF.

    WHEN OTHERS.
      CALL METHOD OBJ_CUSTOM_EDITOR->SET_READONLY_MODE( READONLY_MODE = OBJ_CUSTOM_EDITOR->TRUE ).
  ENDCASE.

  GS_EDITOR-LINE = WA_TERRENO-OBSERVACOES.
  APPEND GS_EDITOR TO GT_EDITOR.

  CALL METHOD OBJ_CUSTOM_EDITOR->SET_TEXT_AS_STREAM
    EXPORTING
      TEXT = GT_EDITOR.

ENDMODULE.                 " CX_OBS  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  PBO_0104  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE PBO_0104 OUTPUT.

  OBJ_LOTEAMENTO->CRIAR_ALV_0104( ).

  IF WA_CONT IS INITIAL.

    CREATE OBJECT WA_CONT
      EXPORTING
        CONTAINER_NAME = 'C_GRID1'.

    CREATE OBJECT WA_ALV
      EXPORTING
        I_PARENT = WA_CONT.

    "Create toolbar for grid.
    CREATE OBJECT OBJ_TOOLBAR
      EXPORTING
        IO_ALV_GRID = WA_ALV.

    CREATE OBJECT GR_EVENT_HANDLER.

    "Register event handler
    SET HANDLER: OBJ_TOOLBAR->ON_TOOLBAR                FOR WA_ALV,
                 OBJ_TOOLBAR->HANDLE_USER_COMMAND       FOR WA_ALV,
                 GR_EVENT_HANDLER->HANDLE_HOTSPOT_CLICK FOR WA_ALV.

    "Excluir Buttons Toolbar
    REFRESH: IT_EXCLUDE_FCODE.

    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.

    CALL METHOD WA_ALV->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = WA_LAYOUT
        IS_VARIANT           = WA_VARIANTE
        I_SAVE               = 'X'
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
      CHANGING
        IT_OUTTAB       = IT_CR
        IT_FIELDCATALOG = IT_FCAT.

    CALL METHOD WA_ALV->SET_READY_FOR_INPUT
      EXPORTING
        I_READY_FOR_INPUT = 1.

    OBJ_LOTEAMENTO->ATUALIZA_VENDA( ).

    "--------------------------------------------------------------
    " Libera campos de valor e data de vencimento para modificação
    " somente para parcelas se movimento
    "--------------------------------------------------------------
    PERFORM CHANGE_ROWS USING ''.

  ELSE.
    CALL METHOD WA_ALV->REFRESH_TABLE_DISPLAY.
  ENDIF.


ENDMODULE.                 " PBO_0104  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  F_PREENCHER_DYNPRO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->L_START    text
*      -->L_NAME     text
*      -->L_VALUE    text
*----------------------------------------------------------------------*
FORM F_PREENCHER_DYNPRO USING L_START TYPE C L_NAME TYPE C L_VALUE.

  MOVE L_START TO WG_BDC-DYNBEGIN.
  IF L_START = 'X'.
    MOVE:
  L_NAME  TO WG_BDC-PROGRAM,
  L_VALUE TO WG_BDC-DYNPRO.
  ELSE.
    MOVE:
      L_NAME  TO WG_BDC-FNAM,
      L_VALUE TO WG_BDC-FVAL.
  ENDIF.
  APPEND WG_BDC TO TG_BDC.
  CLEAR: WG_BDC.

ENDFORM.                    " f_preencher_dynpro
*&---------------------------------------------------------------------*
*&      Form  VERIFICA_PARCELAS
*&---------------------------------------------------------------------*
FORM VERIFICA_PARCELAS .

*  SELECT SINGLE *
*    INTO WA_ZFIT0101
*    FROM ZFIT0101
*   WHERE EMPRESA     = WA_TERRENO-EMPRESA
*     AND LOTEAMENTO  = WA_TERRENO-LOTEAMENTO
*     AND NRO_TERRENO = WA_TERRENO-NRO_TERRENO
*     AND NRO_QUADRA  = WA_TERRENO-NRO_QUADRA.
*
*   IF SY-SUBRC = 0.
*     MESSAGE 'Existem parcelas geradas parcela(s)!' TYPE 'W'.
*     RETURN.
*   ENDIF.

ENDFORM.                    " VERIFICA_PARCELAS
*&---------------------------------------------------------------------*
*&      Module  STATUS_0105  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0105 OUTPUT.
  SET PF-STATUS 'PF0105'.
*  SET TITLEBAR 'xxx'.

ENDMODULE.                 " STATUS_0105  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0105  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0105 INPUT.
  CASE SY-UCOMM.
    WHEN 'GERAR_JROS'.
      IF ( WA_ZFIT0101_AUX-TX_JUROS    EQ 0 ) AND
         ( WA_ZFIT0101_AUX-VALOR_JUROS EQ 0 ).
        MESSAGE 'Informe o valor da Taxa ou Valor de Juros !' TYPE 'W'.
        RETURN.
      ENDIF.

      IF ( WA_ZFIT0101_AUX-TX_JUROS    > 0 ) AND
         ( WA_ZFIT0101_AUX-VALOR_JUROS > 0 ).
        MESSAGE 'Informe o valor da Taxa ou Valor de Juros !' TYPE 'W'.
        RETURN.
      ENDIF.

      IF ( WA_ZFIT0101_AUX-DATA_VENC IS INITIAL ) .
        MESSAGE 'Informe a data de vencimento!' TYPE 'W'.
        RETURN.
      ENDIF.

      OBJ_LOTEAMENTO->GERAR_JUROS( ).
      LEAVE TO SCREEN 0.
    WHEN 'CANCELAR'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.                 " USER_COMMAND_0105  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0105_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0105_EXIT INPUT.
  LEAVE TO SCREEN 0.
ENDMODULE.                 " USER_COMMAND_0105_EXIT  INPUT
*&---------------------------------------------------------------------*
*&      Module  PBO_0102  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE PBO_0102 OUTPUT.


  IF OBJ_CONT_EV_VENDA IS INITIAL.

    OBJ_LOTEAMENTO->CRIAR_ALV_0102( ).

    CREATE OBJECT OBJ_CONT_EV_VENDA
      EXPORTING
        CONTAINER_NAME = 'CC_EVENTOS_VENDA'.

    CREATE OBJECT OBJ_ALV_EV_VENDA
      EXPORTING
        I_PARENT = OBJ_CONT_EV_VENDA.

    "Create toolbar for grid.
    CREATE OBJECT OBJ_TOOLBAR_EVENTOS
      EXPORTING
        IO_ALV_GRID = OBJ_ALV_EV_VENDA.

    "Register event handler
    SET HANDLER: OBJ_TOOLBAR_EVENTOS->ON_TOOLBAR          FOR OBJ_ALV_EV_VENDA,
                 OBJ_TOOLBAR_EVENTOS->HANDLE_USER_COMMAND FOR OBJ_ALV_EV_VENDA.

    "Excluir Buttons Toolbar
    REFRESH: IT_EXCLUDE_FCODE.

    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.
    WA_EXCLUDE_FCODE = CL_GUI_ALV_GRID=>MC_FC_REFRESH.
    APPEND WA_EXCLUDE_FCODE TO IT_EXCLUDE_FCODE.

    CALL METHOD OBJ_ALV_EV_VENDA->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = WA_LAYOUT
        IS_VARIANT           = WA_VARIANTE
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_FCODE
      CHANGING
        IT_OUTTAB       = IT_EVENTOS_VENDA
        IT_FIELDCATALOG = IT_FCAT.

    CALL METHOD OBJ_ALV_EV_VENDA->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.


    REFRESH GT_F4.

    GT_F4-FIELDNAME = 'COD_EV'.
    GT_F4-REGISTER = 'X'.
    GT_F4-GETBEFORE = 'X'.
    GT_F4-CHNGEAFTER ='X'.
    APPEND GT_F4.

    CALL METHOD OBJ_ALV_EV_VENDA->REGISTER_F4_FOR_FIELDS
      EXPORTING
        IT_F4 = GT_F4[].

    SET HANDLER: LCL_EVENT_HANDLER_0102=>ON_F4 FOR OBJ_ALV_EV_VENDA.

    CALL METHOD OBJ_ALV_EV_VENDA->SET_READY_FOR_INPUT
      EXPORTING
        I_READY_FOR_INPUT = 1.

    OBJ_LOTEAMENTO->ATUALIZA_VENDA( ).

  ELSE.
    CALL METHOD OBJ_ALV_EV_VENDA->REFRESH_TABLE_DISPLAY.
  ENDIF.



ENDMODULE.                 " PBO_0102  OUTPUT
