*&---------------------------------------------------------------------*
*&  Include           ZLESR0115_FORM
*&---------------------------------------------------------------------*



FORM F_REFRESH_ALV USING P_ALV.

  CASE P_ALV.
    WHEN '0100'.
      CALL METHOD OBJ_ALV_0100->REFRESH_TABLE_DISPLAY
        EXPORTING
          IS_STABLE = WA_STABLE.
    WHEN '0110'.

  ENDCASE.

ENDFORM.

FORM F_REFRESH_OBJETOS .

  CLEAR: GS_LAYOUT,
         GS_VARIANT.

  REFRESH: IT_EXCLUDE_FCODE.

ENDFORM.

FORM F_CRIAR_CATALOG USING P_SCREEN.

  FREE: WA_FCAT, IT_FCAT.

  CASE P_SCREEN.
    WHEN '0100'.

      DATA: ZLEST0153 TYPE ZLEST0153.

      PERFORM F_ESTRUTURA_ALV USING:

       01  'ZLEST0153'      'LAND1'         'IT_SAIDA_0100'  'LAND1'             'País'            '04'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       02  'ZLEST0153'      'LZONE'         'IT_SAIDA_0100'  'LZONE'             'Zona'            '10'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       03  'TZONT'          'VTEXT'         'IT_SAIDA_0100'  'VTEXT'             'Ds.Zona'         '30'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       04  'ZLEST0153'      'LIFNR'         'IT_SAIDA_0100'  'LIFNR'             'Fornecedor'      '10'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       05  'LFA1'           'NAME1'         'IT_SAIDA_0100'  'DS_FORN'           'Ds.Fornecedor'   '30'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       06  ''               ''              'IT_SAIDA_0100'  'CNPJ_CPF_FORN'     'CNPJ/CPF Forn.'  '14'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       07  'LFA1'           'STCD3'         'IT_SAIDA_0100'  'STCD3_FORN'        'IE Fornecedor'   '14'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       08  'ZLEST0153'      'KUNNR'         'IT_SAIDA_0100'  'KUNNR'             'Cliente'         '10'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       09  'KNA1'           'NAME1'         'IT_SAIDA_0100'  'DS_CLI'            'Ds.Cliente'      '30'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       10  ''               ''              'IT_SAIDA_0100'  'CNPJ_CPF_CLI'      'CNPJ/CPF Cli.'   '14'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       10  'KNA1'           'STCD3'         'IT_SAIDA_0100'  'STCD3_CLI'         'IE Cliente'      '14'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       11  ''               ''              'IT_SAIDA_0100'  'CAD_STANDARD'      'Cad.Standard'    '12'   ' '    ''  ' ' 'C' ' ' ' ' '' ,
       12  'ZLEST0153'      'US_REGISTRO'   'IT_SAIDA_0100'  'US_REGISTRO'       'Usuário'         '10'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       13  'ZLEST0153'      'DT_REGISTRO'   'IT_SAIDA_0100'  'DT_REGISTRO'       'Data'            '10'   ' '    ''  ' ' ' ' ' ' ' ' '' ,
       14  'ZLEST0153'      'HR_REGISTRO'   'IT_SAIDA_0100'  'HR_REGISTRO'       'Hora'            '10'   ' '    ''  ' ' ' ' ' ' ' ' '' .

    WHEN '0110'.




  ENDCASE.

ENDFORM.

FORM F_ESTRUTURA_ALV USING VALUE(P_COL_POS)       TYPE I
                           VALUE(P_REF_TABNAME)   LIKE DD02D-TABNAME
                           VALUE(P_REF_FIELDNAME) LIKE DD03D-FIELDNAME
                           VALUE(P_TABNAME)       LIKE DD02D-TABNAME
                           VALUE(P_FIELD)         LIKE DD03D-FIELDNAME
                           VALUE(P_SCRTEXT_L)     LIKE DD03P-SCRTEXT_L
                           VALUE(P_OUTPUTLEN)
                           VALUE(P_EDIT)
                           VALUE(P_SUM)
                           VALUE(P_EMPHASIZE)
                           VALUE(P_JUST)
                           VALUE(P_HOTSPOT)
                           VALUE(P_F4)
                           VALUE(P_CHECK).

  CLEAR WA_FCAT.

  CASE SY-TCODE.
    WHEN C_TCODE_CONS.
      CHECK  P_FIELD <> 'US_REGISTRO'  AND
             P_FIELD <> 'DT_REGISTRO'  AND
             P_FIELD <> 'HR_REGISTRO'.

    WHEN C_TCODE_CAD.
      CHECK  P_FIELD <> 'DS_FORN'        AND
             P_FIELD <> 'CNPJ_CPF_FORN'  AND
             P_FIELD <> 'DS_CLI'         AND
             P_FIELD <> 'CNPJ_CPF_CLI'.
  ENDCASE.

  WA_FCAT-FIELDNAME   = P_FIELD.
  WA_FCAT-TABNAME     = P_TABNAME.
  WA_FCAT-REF_TABLE   = P_REF_TABNAME.
  WA_FCAT-REF_FIELD   = P_REF_FIELDNAME.
  WA_FCAT-KEY         = ' '.
  WA_FCAT-EDIT        = P_EDIT.
  WA_FCAT-COL_POS     = P_COL_POS.
  WA_FCAT-OUTPUTLEN   = P_OUTPUTLEN.
  WA_FCAT-NO_OUT      = ' '.
  WA_FCAT-DO_SUM      = P_SUM.
  WA_FCAT-REPTEXT     = P_SCRTEXT_L.
  WA_FCAT-SCRTEXT_S   = P_SCRTEXT_L.
  WA_FCAT-SCRTEXT_M   = P_SCRTEXT_L.
  WA_FCAT-SCRTEXT_L   = P_SCRTEXT_L.
  WA_FCAT-EMPHASIZE   = P_EMPHASIZE.
  WA_FCAT-STYLE       =
  WA_FCAT-JUST        = P_JUST.
  WA_FCAT-HOTSPOT     = P_HOTSPOT.
  WA_FCAT-F4AVAILABL  = P_F4.
  WA_FCAT-CHECKBOX    = P_CHECK.

  APPEND WA_FCAT TO IT_FCAT.

ENDFORM.                    " ESTRUTURA_ALV

FORM F_EXCLUDE_FCODE USING P_SCREEN.

  APPEND CL_GUI_ALV_GRID=>MC_FC_REFRESH           TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW    TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW    TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW    TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_COPY          TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW      TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_CUT           TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO          TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE         TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW TO IT_EXCLUDE_FCODE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_CHECK             TO IT_EXCLUDE_FCODE.

ENDFORM.

FORM F_LIMPA_VARIAVEIS .

  CLEAR: WA_SAIDA_0100,
         IT_SAIDA_0100[],
         TG_0153[],
         TG_LFA1[],
         TG_KNA1[],
         TG_LFA1_ST[],
         TG_KNA1_ST[],
         TG_TZONT[].

ENDFORM.

FORM F_SELECIONAR_DADOS .

  PERFORM F_LIMPA_VARIAVEIS.

  IF ( P_LIFNR[] IS NOT INITIAL ) OR
     ( P_ID1_K[] IS NOT INITIAL ) OR
     ( P_ID2_K[] IS NOT INITIAL ) OR
     ( P_ID3_K[] IS NOT INITIAL ).

    SELECT *
      FROM LFA1 APPENDING CORRESPONDING FIELDS OF TABLE TG_LFA1_ST
     WHERE LIFNR IN P_LIFNR
       AND STCD1 IN P_ID1_K
       AND STCD2 IN P_ID2_K
       AND STCD3 IN P_ID3_K.

    IF TG_LFA1_ST[] IS NOT INITIAL.
      SELECT *
        FROM TZONT APPENDING CORRESPONDING FIELDS OF TABLE TG_TZONT
         FOR ALL ENTRIES IN TG_LFA1_ST
       WHERE SPRAS = SY-LANGU
         AND LAND1 = TG_LFA1_ST-LAND1
         AND ZONE1 = TG_LFA1_ST-LZONE.
    ENDIF.
  ENDIF.

  IF ( P_KUNNR[] IS NOT INITIAL ) OR
     ( P_ID1_D[] IS NOT INITIAL ) OR
     ( P_ID2_D[] IS NOT INITIAL ) OR
     ( P_ID3_D[] IS NOT INITIAL ).

    SELECT *
      FROM KNA1 APPENDING CORRESPONDING FIELDS OF TABLE TG_KNA1_ST
     WHERE KUNNR IN P_KUNNR
       AND STCD1 IN P_ID1_D
       AND STCD2 IN P_ID2_D
       AND STCD3 IN P_ID3_D.

    IF TG_KNA1_ST[] IS NOT INITIAL.
      SELECT *
        FROM TZONT APPENDING CORRESPONDING FIELDS OF TABLE TG_TZONT
         FOR ALL ENTRIES IN TG_KNA1_ST
       WHERE SPRAS = SY-LANGU
         AND LAND1 = TG_KNA1_ST-LAND1
         AND ZONE1 = TG_KNA1_ST-LZONE.
    ENDIF.
  ENDIF.

  SELECT *
    FROM ZLEST0153 APPENDING TABLE TG_0153
   WHERE LZONE IN P_ZONE1
     AND KUNNR IN P_KUNNR
     AND LIFNR IN P_LIFNR.

  IF TG_0153[] IS NOT INITIAL.
    SELECT *
      FROM LFA1 APPENDING CORRESPONDING FIELDS OF TABLE TG_LFA1
       FOR ALL ENTRIES IN TG_0153
     WHERE LIFNR = TG_0153-LIFNR.

    SELECT *
      FROM KNA1 APPENDING CORRESPONDING FIELDS OF TABLE TG_KNA1
       FOR ALL ENTRIES IN TG_0153
     WHERE KUNNR = TG_0153-KUNNR.

    SELECT *
      FROM TZONT APPENDING CORRESPONDING FIELDS OF TABLE TG_TZONT
       FOR ALL ENTRIES IN TG_0153
     WHERE SPRAS = SY-LANGU
       AND LAND1 = TG_0153-LAND1
       AND ZONE1 = TG_0153-LZONE.
  ENDIF.

  SORT TG_LFA1 BY LIFNR.
  DELETE ADJACENT DUPLICATES FROM TG_LFA1 COMPARING LIFNR.

  SORT TG_KNA1 BY KUNNR.
  DELETE ADJACENT DUPLICATES FROM TG_KNA1 COMPARING KUNNR.

  SORT TG_TZONT BY SPRAS LAND1 ZONE1.
  DELETE ADJACENT DUPLICATES FROM TG_TZONT COMPARING SPRAS LAND1 ZONE1.

  SORT TG_LFA1_ST BY LIFNR.
  DELETE ADJACENT DUPLICATES FROM TG_LFA1_ST COMPARING LIFNR.

  SORT TG_KNA1_ST BY KUNNR.
  DELETE ADJACENT DUPLICATES FROM TG_KNA1_ST COMPARING KUNNR.


ENDFORM.

FORM F_PROCESSA_DADOS .

  LOOP AT TG_0153.

    CLEAR: WA_SAIDA_0100, TG_TZONT, TG_LFA1, TG_KNA1.

    MOVE-CORRESPONDING TG_0153 TO WA_SAIDA_0100.

    READ TABLE TG_TZONT WITH KEY LAND1 = TG_0153-LAND1
                                 ZONE1 = TG_0153-LZONE.

    IF SY-SUBRC = 0.
      WA_SAIDA_0100-VTEXT = TG_TZONT-VTEXT.
    ENDIF.

    IF TG_0153-LIFNR IS NOT INITIAL.
      READ TABLE TG_LFA1 WITH KEY LIFNR = TG_0153-LIFNR.
      IF SY-SUBRC = 0.
        WA_SAIDA_0100-DS_FORN          = TG_LFA1-NAME1.

        IF TG_LFA1-STCD1 IS NOT INITIAL.
          WA_SAIDA_0100-CNPJ_CPF_FORN  = TG_LFA1-STCD1.
        ELSEIF TG_LFA1-STCD2 IS NOT INITIAL.
          WA_SAIDA_0100-CNPJ_CPF_FORN  = TG_LFA1-STCD2.
        ENDIF.
      ENDIF.
    ELSEIF TG_0153-KUNNR IS NOT INITIAL.
      READ TABLE TG_KNA1 WITH KEY KUNNR = TG_0153-KUNNR.
      IF SY-SUBRC = 0.
        WA_SAIDA_0100-DS_CLI           = TG_KNA1-NAME1.

        IF TG_KNA1-STCD1 IS NOT INITIAL.
          WA_SAIDA_0100-CNPJ_CPF_CLI  = TG_KNA1-STCD1.
        ELSEIF TG_KNA1-STCD2 IS NOT INITIAL.
          WA_SAIDA_0100-CNPJ_CPF_CLI  = TG_KNA1-STCD2.
        ENDIF.
      ENDIF.
    ENDIF.

    APPEND WA_SAIDA_0100 TO IT_SAIDA_0100.

  ENDLOOP.

  LOOP AT TG_LFA1_ST.

    CLEAR: WA_SAIDA_0100.

    READ TABLE TG_TZONT WITH KEY LAND1 = TG_LFA1_ST-LAND1
                                 ZONE1 = TG_LFA1_ST-LZONE BINARY SEARCH.
    CHECK SY-SUBRC = 0.

    WA_SAIDA_0100-LAND1   = TG_TZONT-LAND1.
    WA_SAIDA_0100-LZONE   = TG_TZONT-ZONE1.
    WA_SAIDA_0100-VTEXT   = TG_TZONT-VTEXT.
    WA_SAIDA_0100-LIFNR   = TG_LFA1_ST-LIFNR.
    WA_SAIDA_0100-DS_FORN = TG_LFA1_ST-NAME1.

    IF TG_LFA1_ST-STCD1 IS NOT INITIAL.
      WA_SAIDA_0100-CNPJ_CPF_FORN  = TG_LFA1_ST-STCD1.
    ELSEIF TG_LFA1_ST-STCD2 IS NOT INITIAL.
      WA_SAIDA_0100-CNPJ_CPF_FORN  = TG_LFA1_ST-STCD2.
    ENDIF.

    WA_SAIDA_0100-STCD3_FORN   = TG_LFA1_ST-STCD3.
    WA_SAIDA_0100-CAD_STANDARD = ICON_CHECKED.

    APPEND WA_SAIDA_0100 TO IT_SAIDA_0100.
  ENDLOOP.

  LOOP AT TG_KNA1_ST.

    CLEAR: WA_SAIDA_0100.

    READ TABLE TG_TZONT WITH KEY LAND1 = TG_KNA1_ST-LAND1
                                 ZONE1 = TG_KNA1_ST-LZONE BINARY SEARCH.
    CHECK SY-SUBRC = 0.

    WA_SAIDA_0100-LAND1   = TG_TZONT-LAND1.
    WA_SAIDA_0100-LZONE   = TG_TZONT-ZONE1.
    WA_SAIDA_0100-VTEXT   = TG_TZONT-VTEXT.
    WA_SAIDA_0100-KUNNR   = TG_KNA1_ST-KUNNR.
    WA_SAIDA_0100-DS_CLI  = TG_KNA1_ST-NAME1.

    IF TG_KNA1_ST-STCD1 IS NOT INITIAL.
      WA_SAIDA_0100-CNPJ_CPF_CLI  = TG_KNA1_ST-STCD1.
    ELSEIF TG_KNA1_ST-STCD2 IS NOT INITIAL.
      WA_SAIDA_0100-CNPJ_CPF_CLI  = TG_KNA1_ST-STCD2.
    ENDIF.

    WA_SAIDA_0100-STCD3_CLI    = TG_KNA1_ST-STCD3.
    WA_SAIDA_0100-CAD_STANDARD = ICON_CHECKED.

    APPEND WA_SAIDA_0100 TO IT_SAIDA_0100.

  ENDLOOP.

  SORT IT_SAIDA_0100 BY LZONE LIFNR KUNNR.

ENDFORM.
