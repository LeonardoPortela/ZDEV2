*&---------------------------------------------------------------------*
*&  Include           ZSDR0060_5121
*&---------------------------------------------------------------------*

DATA: G_CUSTOM_CONTAINER_POP_5121 TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      CTL_ALV1_POP_5121           TYPE REF TO CL_GUI_ALV_GRID,
      GS_LAYOUT_POP_5121          TYPE LVC_S_LAYO,
      IT_FIELDCATALOG_POP_5121    TYPE LVC_T_FCAT,
      IT_EXCLUDE_POP_5121         TYPE UI_FUNCTIONS.

TYPES: BEGIN OF TY_CLIENTE_5121,
         NAME1      TYPE KNA1-NAME1,
         OBS        TYPE CHAR6,
         CELLSTYLES TYPE LVC_T_STYL,
         NR_ROT1    TYPE ZSDT0130-NR_ROT,
         NR_ROT2    TYPE ZSDT0130-NR_ROT.
         INCLUDE    STRUCTURE ZSDT0130.
       TYPES: END OF TY_CLIENTE_5121.

DATA: IT_CLIENTE_POP_5121 TYPE STANDARD TABLE OF TY_CLIENTE_5121,
      IT_KNA1_5121        TYPE STANDARD TABLE OF KNA1,
      WA_KNA1_5121        TYPE KNA1.

DATA: WA_DADOS_CARGA-DT_ENTREGA TYPE ZSDT0129-DT_ENTREGA.

*-----------------------------------------------------------------------
* Classe
*-----------------------------------------------------------------------
CLASS LCL_EVENT_HANDLER_5121 DEFINITION.

  PUBLIC SECTION.
    CLASS-METHODS:
      HANDLE_HOTSPOT_CLICK_5121  FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID
        IMPORTING E_ROW_ID E_COLUMN_ID,

      HANDLE_BUTTON_CLICK_5121 FOR EVENT BUTTON_CLICK OF CL_GUI_ALV_GRID
        IMPORTING ES_COL_ID ES_ROW_NO,

      DATA_CHANGED_FINISHED_5121 FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID
        IMPORTING E_MODIFIED ET_GOOD_CELLS.

ENDCLASS.                    "LCL_EVENT_HANDLER DEFINITION

*---------------------------------------------------------------------*
*       CLASS lcl_event_handler IMPLEMENTATION
*---------------------------------------------------------------------*
CLASS LCL_EVENT_HANDLER_5121 IMPLEMENTATION.

  METHOD HANDLE_HOTSPOT_CLICK_5121.

    DATA: WA_CLIENTE_5120 TYPE TY_CLIENTE_5120.

    DATA: WA_BOR TYPE BORIDENT.

    DATA: WL_NAME  TYPE THEAD-TDNAME.

    IF E_COLUMN_ID-FIELDNAME EQ 'NR_ROT2'.

      READ TABLE IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5120 INDEX E_ROW_ID-INDEX.
      IF SY-SUBRC IS INITIAL.
        WA_BOR-OBJKEY = WA_CLIENTE_5120-NR_ROT2.
        WA_BOR-OBJTYPE = 'ZSDR0061'.
        PERFORM CHAMA_ANEXO USING WA_BOR.
      ENDIF.

    ELSEIF E_COLUMN_ID-FIELDNAME EQ 'NR_ROT1'.

      READ TABLE IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5120 INDEX E_ROW_ID-INDEX.
      IF SY-SUBRC IS INITIAL.
        WL_NAME = WA_CLIENTE_5120-NR_ROT1.
        PERFORM CHAMA_TEXTO_ROT USING WL_NAME.
      ENDIF.

    ENDIF.

  ENDMETHOD.                    "HANDEL_HOTSPOT_CLICK

  METHOD HANDLE_BUTTON_CLICK_5121.

    DATA: WA_CLIENTE_5120 TYPE TY_CLIENTE_5120.

    DATA: WL_NAME  TYPE THEAD-TDNAME.

    IF ES_COL_ID-FIELDNAME EQ 'OBS'.

      READ TABLE IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5120 INDEX ES_ROW_NO-ROW_ID.
      IF SY-SUBRC IS INITIAL.
        CONCATENATE WA_CLIENTE_5120-NRO_SOL '001' INTO WL_NAME.
        PERFORM CHAMA_TEXTO_OBS USING WL_NAME.
      ENDIF.
    ENDIF.
  ENDMETHOD.

  METHOD DATA_CHANGED_FINISHED_5121.

    DATA: WA_GOOD_CELLS TYPE LVC_S_MODI.

    READ TABLE ET_GOOD_CELLS INTO WA_GOOD_CELLS INDEX 1.

    IF E_MODIFIED EQ ABAP_TRUE.
      IF WA_GOOD_CELLS-FIELDNAME EQ 'SEQ_ENT_CG'.
        PERFORM ATUALIZA_SEQ_ENTREGA_5121 USING WA_GOOD_CELLS.
        VG_SUBT_LOTE = '5121'.
        LEAVE TO SCREEN 5000.
      ENDIF.
    ENDIF.

  ENDMETHOD.                    "ON_DATA_CHANGED_FINISHED_

ENDCLASS.                    "LCL_EVENT_HANDLER IMPLEMENTATION

*&---------------------------------------------------------------------*
*&      Module  STATUS_5121  OUTPUT
*&---------------------------------------------------------------------*
MODULE STATUS_5121 OUTPUT.

  SET PF-STATUS 'PF5131'.
  SET TITLEBAR  'T5121'.

  PERFORM MOSTRA_POP_5121.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_5121  INPUT
*&---------------------------------------------------------------------*
MODULE USER_COMMAND_5121 INPUT.

  CTL_ALV1_POP_5121->CHECK_CHANGED_DATA( ).

  CASE SY-UCOMM.
    WHEN 'SALVAR'.
      CLEAR: VL_CHECK.
      PERFORM CHECK_PARAMETRO_5121 CHANGING VL_CHECK.
      IF VL_CHECK IS INITIAL.
        PERFORM SALVA_CARGA_5121.
        PERFORM DESBLOQUEIA_MONTAGEM_5121.
        LEAVE TO SCREEN 0.
      ENDIF.
    WHEN 'CANCEL'.
      PERFORM DESBLOQUEIA_MONTAGEM_5121.
      LEAVE TO SCREEN 0.
    WHEN OTHERS.
  ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  MOSTRA_POP
*&---------------------------------------------------------------------*
FORM MOSTRA_POP_5121.

  FIELD-SYMBOLS: <WA_FIELDCATALOG_POP_5121> TYPE LVC_S_FCAT.

  IF G_CUSTOM_CONTAINER_POP_5121 IS INITIAL.

    CREATE OBJECT G_CUSTOM_CONTAINER_POP_5121
      EXPORTING
        CONTAINER_NAME              = 'CONTAINER5121'
      EXCEPTIONS
        CNTL_ERROR                  = 1
        CNTL_SYSTEM_ERROR           = 2
        CREATE_ERROR                = 3
        LIFETIME_ERROR              = 4
        LIFETIME_DYNPRO_DYNPRO_LINK = 5.

    IF SY-SUBRC <> 0.
      MESSAGE A000(TREE_CONTROL_MSG).
    ENDIF.

    PERFORM FILL_IT_FIELDCATALOG TABLES IT_FIELDCATALOG_POP_5121 USING:
          01 'NRO_LOTE'       'ZSDT0129_ALV' ' '  ' ' ' '  ' '   'X'   ' '   ' '   ' '   'Nro Lote',
          02 'NRO_SOL'        'ZSDT0130'     ' '  ' ' ' '  ' '   'X'   ' '   ' '   ' '   'Nro Sol',
          03 'KUNNR'          'ZSDT0130'     ' '  ' ' ' '  ' '   'X'   ' '   ' '   ' '   'Cliente',
          04 'NAME1'          ''             ' '  ' ' ' '  ' '   'X'   ' '   ' '   ' '   'Nome'.

    IF VG_UNICO_LOTE EQ 1.
      PERFORM FILL_IT_FIELDCATALOG TABLES IT_FIELDCATALOG_POP_5121 USING:
        05 'SEQ_ENT_CG'    'ZSDT0130'     ' '  ' ' ' '  ' '   'X'   ' '   ' '   ' '   'Seq. Entrega'.
    ELSE.
      PERFORM FILL_IT_FIELDCATALOG TABLES IT_FIELDCATALOG_POP_5121 USING:
        05 'SEQ_ENT_CG'    'ZSDT0130'     ' '  'X' ' '  ' '   'X'   ' '   ' '   ' '   'Seq. Entrega'.
    ENDIF.

    PERFORM FILL_IT_FIELDCATALOG TABLES IT_FIELDCATALOG_POP_5121 USING:
          06 'NR_ROT1'        'ZSDT0130'     ' '  ' ' ' '  'X'   'X'   ' '   ' '   ' '   'Roteiro',
          07 'OBS'            ''             ' '  ' ' 'X'  ' '   'X'   ' '   ' '   ' '   'Observação',
          08 'NR_ROT2'        'ZSDT0130'     ' '  ' ' ' '  'X'   'X'   ' '   ' '   ' '   'Doc Anexo'.

    GS_LAYOUT_POP_5121-SEL_MODE   = 'A'.
    GS_LAYOUT_POP_5121-STYLEFNAME = 'CELLSTYLES'.
    GS_LAYOUT_POP_5121-CWIDTH_OPT = 'X'.

    PERFORM EXCLUIR_BOTOES CHANGING IT_EXCLUDE_POP_5121.

    CREATE OBJECT CTL_ALV1_POP_5121
      EXPORTING
        I_PARENT = G_CUSTOM_CONTAINER_POP_5121.           "ALV Lote

    SET HANDLER:
      LCL_EVENT_HANDLER_5121=>HANDLE_HOTSPOT_CLICK_5121 FOR CTL_ALV1_POP_5121,
      LCL_EVENT_HANDLER_5121=>HANDLE_BUTTON_CLICK_5121 FOR CTL_ALV1_POP_5121.

    CALL METHOD CTL_ALV1_POP_5121->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT            = GS_LAYOUT_POP_5121
        I_SAVE               = 'A'
        IT_TOOLBAR_EXCLUDING = IT_EXCLUDE_POP_5121
      CHANGING
        IT_FIELDCATALOG      = IT_FIELDCATALOG_POP_5121
        IT_OUTTAB            = IT_CLIENTE_POP_5121.

    CALL METHOD CTL_ALV1_POP_5121->REGISTER_EDIT_EVENT  "PARA REGISTRAR EVENTO NA ALV
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
      EXCEPTIONS
        ERROR      = 1
        OTHERS     = 2.

  ELSE.

    CALL METHOD CTL_ALV1_POP_5121->GET_FRONTEND_FIELDCATALOG
      IMPORTING
        ET_FIELDCATALOG = IT_FIELDCATALOG_POP_5121.

    READ TABLE IT_FIELDCATALOG_POP_5121 ASSIGNING <WA_FIELDCATALOG_POP_5121> WITH KEY FIELDNAME = 'SEQ_ENT_CG'.
    IF SY-SUBRC IS INITIAL.
      IF VG_UNICO_LOTE EQ 1.
        CLEAR: <WA_FIELDCATALOG_POP_5121>-EDIT.
      ELSE.
        <WA_FIELDCATALOG_POP_5121>-EDIT = 'X'.
      ENDIF.
    ENDIF.

    CALL METHOD CTL_ALV1_POP_5121->SET_FRONTEND_FIELDCATALOG
      EXPORTING
        IT_FIELDCATALOG = IT_FIELDCATALOG_POP_5121.

    CALL METHOD CTL_ALV1_POP_5121->REFRESH_TABLE_DISPLAY
      EXPORTING
        IS_STABLE = _STABLE.

  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_5121_EXIT  INPUT
*&---------------------------------------------------------------------*
MODULE USER_COMMAND_5121_EXIT INPUT.

  PERFORM DESBLOQUEIA_MONTAGEM_5121.
  LEAVE TO SCREEN 0.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  PESQUISA_POP_5121
*&---------------------------------------------------------------------*
FORM PESQUISA_POP_5121 .

  SELECT *
    FROM ZSDT0130
    INTO CORRESPONDING FIELDS OF TABLE IT_CLIENTE_POP_5121
    FOR ALL ENTRIES IN IT_LOTE_5120_CHECK
    WHERE NRO_LOTE EQ IT_LOTE_5120_CHECK-NRO_LOTE
      AND STATUS NE 'X'.

  IF IT_CLIENTE_POP_5121 IS NOT INITIAL.

    SELECT *
        FROM KNA1
        INTO TABLE IT_KNA1_5121
        FOR ALL ENTRIES IN IT_CLIENTE_POP_5121
        WHERE KUNNR EQ IT_CLIENTE_POP_5121-KUNNR.

  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CONSTROI_POP_5121
*&---------------------------------------------------------------------*
FORM CONSTROI_POP_5121.

  DATA: LS_STYLE        TYPE LVC_S_STYL,
        WA_LOTE_5120    TYPE TY_LOTE_5120,
        WA_CLIENTE_5120 TYPE TY_CLIENTE_5120,
        WA_KNA1         TYPE KNA1,
        VL_CONT         TYPE I.

  DATA: WL_NAME  TYPE THEAD-TDNAME,
        TG_TEXTO TYPE STANDARD TABLE OF TLINE.

  CLEAR WA_DADOS_CARGA-DT_ENTREGA.

  IF VG_UNICO_LOTE EQ 1.
    WA_DADOS_CARGA-DT_ENTREGA = VG_DT_ENT_UNICO_LOTE.
  ENDIF.

  LOOP AT IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5120.

    VL_CONT = VL_CONT + 1.

    LS_STYLE-FIELDNAME = 'OBS'.
    LS_STYLE-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON.
    APPEND LS_STYLE TO WA_CLIENTE_5120-CELLSTYLES.

    CONCATENATE WA_CLIENTE_5120-NRO_SOL '001' INTO WL_NAME.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        ID                      = 'OBSE'
        LANGUAGE                = SY-LANGU
        NAME                    = WL_NAME
        OBJECT                  = 'ZTEXTO'
      TABLES
        LINES                   = TG_TEXTO
      EXCEPTIONS
        ID                      = 1
        LANGUAGE                = 2
        NAME                    = 3
        NOT_FOUND               = 4
        OBJECT                  = 5
        REFERENCE_CHECK         = 6
        WRONG_ACCESS_TO_ARCHIVE = 7
        OTHERS                  = 8.

    IF TG_TEXTO IS INITIAL.
      WA_CLIENTE_5120-OBS = '@1F@'.
    ELSE.
      WA_CLIENTE_5120-OBS = '@1E@'.
    ENDIF.

    READ TABLE IT_KNA1_5121 INTO WA_KNA1_5121 WITH KEY KUNNR = WA_CLIENTE_5120-KUNNR.
    IF SY-SUBRC IS INITIAL.
      WA_CLIENTE_5120-NAME1 = WA_KNA1_5121-NAME1.
    ENDIF.

    WA_CLIENTE_5120-SEQ_ENT_CG = WA_CLIENTE_5120-SEQ_ENTREGA.
    WA_CLIENTE_5120-NR_ROT1    = WA_CLIENTE_5120-NR_ROT.
    WA_CLIENTE_5120-NR_ROT2    = WA_CLIENTE_5120-NR_ROT.

    MODIFY IT_CLIENTE_POP_5121 FROM WA_CLIENTE_5120 INDEX VL_CONT.

  ENDLOOP.

  CLEAR: VL_CONT.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  ATUALIZA_SEQ_ENTREGA_5121
*&---------------------------------------------------------------------*
FORM ATUALIZA_SEQ_ENTREGA_5121 USING WA_GOOD_CELLS TYPE LVC_S_MODI.

  DATA: VL_ROTEIRO      TYPE ZSDT0130-NR_ROT,
        WA_CLIENTE_5121 TYPE TY_CLIENTE_5121.

  READ TABLE IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5121 INDEX WA_GOOD_CELLS-ROW_ID.

  VL_ROTEIRO = WA_CLIENTE_5121-NR_ROT1.

  LOOP AT IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5121 WHERE NR_ROT1 EQ VL_ROTEIRO.
    WA_CLIENTE_5121-SEQ_ENT_CG = WA_GOOD_CELLS-VALUE.
    MODIFY IT_CLIENTE_POP_5121 FROM WA_CLIENTE_5121 INDEX SY-TABIX.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CHECK_PARAMETRO_5121
*&---------------------------------------------------------------------*
FORM CHECK_PARAMETRO_5121 CHANGING VL_CHECK.

  DATA: WA_CLIENTE_5121       TYPE TY_CLIENTE_5121,
        IT_CLIENTE_5121_CHECK TYPE STANDARD TABLE OF TY_CLIENTE_5121.

  "Check data de entrega em branco
  IF WA_DADOS_CARGA-DT_ENTREGA IS INITIAL.
    MESSAGE TEXT-036 TYPE 'S' DISPLAY LIKE 'E'.
    VL_CHECK = ABAP_TRUE.
  ENDIF.

  SELECT C~*
    FROM ZSDT0129 AS A
    INNER JOIN ZSDT0131 AS B ON B~NRO_LOTE EQ A~NRO_LOTE
    INNER JOIN ZSDT0132 AS C ON C~NR_ROT EQ B~COD_LOC_EMB
      INTO TABLE @DATA(T_0132)
        FOR ALL ENTRIES IN @IT_CLIENTE_POP_5121
        WHERE A~NRO_LOTE EQ @IT_CLIENTE_POP_5121-NRO_LOTE
          AND B~STATUS NE 'X'.

  IF SY-SUBRC IS INITIAL.
    DATA(T_0132_AUX) = T_0132.
    SORT T_0132_AUX BY TRANSP_RESP.
    DELETE ADJACENT DUPLICATES FROM T_0132_AUX COMPARING TRANSP_RESP.
    IF LINES( T_0132_AUX ) > 1.
      MESSAGE TEXT-136 TYPE 'S' DISPLAY LIKE 'E'.
      VL_CHECK = ABAP_TRUE. EXIT.
    ENDIF.

    T_0132_AUX = T_0132.
    SORT T_0132_AUX BY ARMAZEM.
    DELETE ADJACENT DUPLICATES FROM T_0132_AUX COMPARING ARMAZEM.
    IF LINES( T_0132_AUX ) > 1.
      MESSAGE TEXT-137 TYPE 'S' DISPLAY LIKE 'E'.
      VL_CHECK = ABAP_TRUE. EXIT.
    ENDIF.

    T_0132_AUX = T_0132.
    SORT T_0132_AUX BY TRANSPORTADORA.
    DELETE ADJACENT DUPLICATES FROM T_0132_AUX COMPARING TRANSPORTADORA.
    IF LINES( T_0132_AUX ) > 1.
      MESSAGE TEXT-138 TYPE 'S' DISPLAY LIKE 'E'.
      VL_CHECK = ABAP_TRUE. EXIT.
    ENDIF.

  ENDIF.

  LOOP AT IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5121.
    "Check solicitação sem sequência de entrega
    IF WA_CLIENTE_5121-SEQ_ENT_CG IS INITIAL.
      MESSAGE TEXT-037 TYPE 'S' DISPLAY LIKE 'E'.
      VL_CHECK = ABAP_TRUE. EXIT.
    ENDIF.
  ENDLOOP.

  "Check solicitação sem sequência correta
  IT_CLIENTE_5121_CHECK = IT_CLIENTE_POP_5121.
  SORT IT_CLIENTE_5121_CHECK BY SEQ_ENT_CG ASCENDING.
  DELETE ADJACENT DUPLICATES FROM IT_CLIENTE_5121_CHECK COMPARING SEQ_ENT_CG.
  LOOP AT IT_CLIENTE_5121_CHECK INTO WA_CLIENTE_5121.
    IF WA_CLIENTE_5121-SEQ_ENT_CG NE SY-TABIX.
*      "// Removido a Obrigatoriedade conforme alinhado com Key User.
*      MESSAGE TEXT-037 TYPE 'S' DISPLAY LIKE 'E'.
*      VL_CHECK = ABAP_TRUE. EXIT.
    ENDIF.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SALVA_CARGA_5121
*&---------------------------------------------------------------------*
FORM SALVA_CARGA_5121.

  DATA: IT_ZSDT0129     TYPE STANDARD TABLE OF ZSDT0129,
        IT_ZSDT0130     TYPE STANDARD TABLE OF ZSDT0130,
        WA_ZSDT0129     TYPE ZSDT0129,
        WA_ZSDT0130     TYPE ZSDT0130,
        WA_ZSDT0133     TYPE ZSDT0133,
        WA_CLIENTE_5121 TYPE TY_CLIENTE_5121,
        WA_ZSDT0135     TYPE ZSDT0135,
        VL_N_CG         TYPE ZSDT0129-NRO_CG,
        VL_INCO1        TYPE ZSDT0129-INCO1,
        VL_MARCA        TYPE ZSDT0129-MARCA.

  SELECT *
    FROM ZSDT0129
    INTO TABLE IT_ZSDT0129
    FOR ALL ENTRIES IN IT_CLIENTE_POP_5121
    WHERE NRO_LOTE EQ IT_CLIENTE_POP_5121-NRO_LOTE.

  SELECT *
    FROM ZSDT0130
    INTO TABLE IT_ZSDT0130
    FOR ALL ENTRIES IN IT_CLIENTE_POP_5121
    WHERE NRO_LOTE EQ IT_CLIENTE_POP_5121-NRO_LOTE
      AND NRO_SOL  EQ IT_CLIENTE_POP_5121-NRO_SOL
      AND STATUS   NE 'X'.

  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      NR_RANGE_NR             = '01'
      OBJECT                  = 'ZSD_INS_CG'
    IMPORTING
      NUMBER                  = VL_N_CG
    EXCEPTIONS
      INTERVAL_NOT_FOUND      = 1
      NUMBER_RANGE_NOT_INTERN = 2
      OBJECT_NOT_FOUND        = 3
      QUANTITY_IS_0           = 4
      QUANTITY_IS_NOT_1       = 5
      INTERVAL_OVERFLOW       = 6
      BUFFER_OVERFLOW         = 7
      OTHERS                  = 8.

  LOOP AT IT_ZSDT0129 INTO WA_ZSDT0129.
    VL_INCO1 = WA_ZSDT0129-INCO1.
    VL_MARCA = WA_ZSDT0129-MARCA.
    WA_ZSDT0129-NRO_CG = VL_N_CG.
    WA_ZSDT0129-DT_ENTREGA = WA_DADOS_CARGA-DT_ENTREGA.
    WA_ZSDT0129-STATUS = 2.
    MODIFY ZSDT0129 FROM WA_ZSDT0129.
  ENDLOOP.

  LOOP AT IT_ZSDT0130 INTO WA_ZSDT0130.
    READ TABLE IT_CLIENTE_POP_5121 INTO WA_CLIENTE_5121 WITH KEY NRO_LOTE = WA_ZSDT0130-NRO_LOTE
                                                                 NRO_SOL  = WA_ZSDT0130-NRO_SOL.
    IF SY-SUBRC IS INITIAL.
      WA_ZSDT0130-SEQ_ENT_CG = WA_CLIENTE_5121-SEQ_ENT_CG.
    ENDIF.

    MODIFY ZSDT0130 FROM WA_ZSDT0130.
  ENDLOOP.

  WA_ZSDT0133-NRO_CG = VL_N_CG.
  WA_ZSDT0133-QTD_TOTAL_KG = VG_QTD_KG.

  IF WA_ZSDT0133-QTD_TOTAL_KG LE 23000.
    WA_ZSDT0133-CTG_TRANSP = 'A'.
  ELSEIF WA_ZSDT0133-QTD_TOTAL_KG LE 27000.
    WA_ZSDT0133-CTG_TRANSP = 'B'.
  ELSEIF WA_ZSDT0133-QTD_TOTAL_KG LE 32000.
    WA_ZSDT0133-CTG_TRANSP = 'C'.
  ELSEIF WA_ZSDT0133-QTD_TOTAL_KG LE 37000.
    WA_ZSDT0133-CTG_TRANSP = 'D'.
  ELSEIF WA_ZSDT0133-QTD_TOTAL_KG LE 50000.
    WA_ZSDT0133-CTG_TRANSP = 'E'.
  ENDIF.

*Removido para que começe a enchergar a tabela zsdt0131
*  SELECT SINGLE *
*    FROM ZSDT0135
*    INTO WA_ZSDT0135
*    WHERE WRKST EQ VL_MARCA.

  "Passa para status - frete contratado (4) direto
  "se é FOB ou se é marca de responsabilidade da transp.
  IF VL_INCO1 EQ 'FOB'.
    WA_ZSDT0133-STATUS = 4.
*  ELSEIF WA_ZSDT0135 IS NOT INITIAL.
*    WA_ZSDT0133-STATUS = 4.
  ELSE.
    WA_ZSDT0133-STATUS = 2.
  ENDIF.

  SELECT B~*
    FROM ZSDT0131 AS A
      INNER JOIN ZSDT0132 AS B ON B~NR_ROT EQ A~COD_LOC_EMB
      INTO TABLE @DATA(T_0132)
        FOR ALL ENTRIES IN @IT_ZSDT0129
          WHERE A~NRO_LOTE EQ @IT_ZSDT0129-NRO_LOTE.

  DATA(T_0132_AUX) = T_0132.

  SORT T_0132 BY TRANSPORTADORA.
  DELETE ADJACENT DUPLICATES FROM T_0132 COMPARING TRANSPORTADORA.

  IF LINES( T_0132 ) EQ 1.
    WA_ZSDT0133-COD_TRANSPORTADORA = T_0132[ 1 ]-TRANSPORTADORA.
    IF WA_ZSDT0133-COD_TRANSPORTADORA IS NOT INITIAL.
      WA_ZSDT0133-STATUS = 4.
    ENDIF.
  ENDIF.

  WA_ZSDT0133-USNAM = SY-UNAME.
  WA_ZSDT0133-DATA_ATUAL = SY-DATUM.
  WA_ZSDT0133-HORA_ATUAL = SY-UZEIT.

  INSERT ZSDT0133 FROM WA_ZSDT0133.
  MESSAGE S000(Z_FI) WITH 'Carga' VL_N_CG 'gerada' .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DESBLOQUEIA_MONTAGEM_5121
*&---------------------------------------------------------------------*
FORM DESBLOQUEIA_MONTAGEM_5121 .

  DATA: WA_LOTE_5120 TYPE TY_LOTE_5120.

  LOOP AT IT_LOTE_5120_CHECK INTO WA_LOTE_5120.

    CALL FUNCTION 'ZDENQUEUE_SD_LOTE_INSUMOS'
      EXPORTING
        CHAVE = WA_LOTE_5120-NRO_LOTE.

  ENDLOOP.

ENDFORM.
